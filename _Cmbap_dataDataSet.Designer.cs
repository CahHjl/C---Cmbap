//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

#pragma warning disable 1591

namespace Cmbap {
    
    
    /// <summary>
    ///Represents a strongly typed in-memory cache of data.
    ///</summary>
    [global::System.Serializable()]
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedDataSetSchema")]
    [global::System.Xml.Serialization.XmlRootAttribute("_Cmbap_dataDataSet")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.DataSet")]
    public partial class _Cmbap_dataDataSet : global::System.Data.DataSet {
        
        private AdresgegevensDataTable tableAdresgegevens;
        
        private BankgironrDataTable tableBankgironr;
        
        private BankregelDataTable tableBankregel;
        
        private BestellingDataTable tableBestelling;
        
        private BestelregelDataTable tableBestelregel;
        
        private Component_tekstDataTable tableComponent_tekst;
        
        private DbFilesDataTable tableDbFiles;
        
        private EmailDataTable tableEmail;
        
        private EmailadresDataTable tableEmailadres;
        
        private GebruikerDataTable tableGebruiker;
        
        private HoofdcategorieDataTable tableHoofdcategorie;
        
        private HoofdUitgavesoortDataTable tableHoofdUitgavesoort;
        
        private InstellingenDataTable tableInstellingen;
        
        private JaargegevensDataTable tableJaargegevens;
        
        private JaarsaldoDataTable tableJaarsaldo;
        
        private Klant_BegunstigdeDataTable tableKlant_Begunstigde;
        
        private Licentie_controleDataTable tableLicentie_controle;
        
        private LogDataTable tableLog;
        
        private ProductDataTable tableProduct;
        
        private ProgramerrorDataTable tableProgramerror;
        
        private SaldostandDataTable tableSaldostand;
        
        private StatusDataTable tableStatus;
        
        private SubcategorieDataTable tableSubcategorie;
        
        private SubUitgavesoortDataTable tableSubUitgavesoort;
        
        private TelefoonnrDataTable tableTelefoonnr;
        
        private UitgavenDataTable tableUitgaven;
        
        private VerwerkperiodeDataTable tableVerwerkperiode;
        
        private VoorraadDataTable tableVoorraad;
        
        private global::System.Data.SchemaSerializationMode _schemaSerializationMode = global::System.Data.SchemaSerializationMode.IncludeSchema;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public _Cmbap_dataDataSet() {
            this.BeginInit();
            this.InitClass();
            global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            base.Tables.CollectionChanged += schemaChangedHandler;
            base.Relations.CollectionChanged += schemaChangedHandler;
            this.EndInit();
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected _Cmbap_dataDataSet(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                base(info, context, false) {
            if ((this.IsBinarySerialized(info, context) == true)) {
                this.InitVars(false);
                global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler1 = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
                this.Tables.CollectionChanged += schemaChangedHandler1;
                this.Relations.CollectionChanged += schemaChangedHandler1;
                return;
            }
            string strSchema = ((string)(info.GetValue("XmlSchema", typeof(string))));
            if ((this.DetermineSchemaSerializationMode(info, context) == global::System.Data.SchemaSerializationMode.IncludeSchema)) {
                global::System.Data.DataSet ds = new global::System.Data.DataSet();
                ds.ReadXmlSchema(new global::System.Xml.XmlTextReader(new global::System.IO.StringReader(strSchema)));
                if ((ds.Tables["Adresgegevens"] != null)) {
                    base.Tables.Add(new AdresgegevensDataTable(ds.Tables["Adresgegevens"]));
                }
                if ((ds.Tables["Bankgironr"] != null)) {
                    base.Tables.Add(new BankgironrDataTable(ds.Tables["Bankgironr"]));
                }
                if ((ds.Tables["Bankregel"] != null)) {
                    base.Tables.Add(new BankregelDataTable(ds.Tables["Bankregel"]));
                }
                if ((ds.Tables["Bestelling"] != null)) {
                    base.Tables.Add(new BestellingDataTable(ds.Tables["Bestelling"]));
                }
                if ((ds.Tables["Bestelregel"] != null)) {
                    base.Tables.Add(new BestelregelDataTable(ds.Tables["Bestelregel"]));
                }
                if ((ds.Tables["Component_tekst"] != null)) {
                    base.Tables.Add(new Component_tekstDataTable(ds.Tables["Component_tekst"]));
                }
                if ((ds.Tables["DbFiles"] != null)) {
                    base.Tables.Add(new DbFilesDataTable(ds.Tables["DbFiles"]));
                }
                if ((ds.Tables["Email"] != null)) {
                    base.Tables.Add(new EmailDataTable(ds.Tables["Email"]));
                }
                if ((ds.Tables["Emailadres"] != null)) {
                    base.Tables.Add(new EmailadresDataTable(ds.Tables["Emailadres"]));
                }
                if ((ds.Tables["Gebruiker"] != null)) {
                    base.Tables.Add(new GebruikerDataTable(ds.Tables["Gebruiker"]));
                }
                if ((ds.Tables["Hoofdcategorie"] != null)) {
                    base.Tables.Add(new HoofdcategorieDataTable(ds.Tables["Hoofdcategorie"]));
                }
                if ((ds.Tables["HoofdUitgavesoort"] != null)) {
                    base.Tables.Add(new HoofdUitgavesoortDataTable(ds.Tables["HoofdUitgavesoort"]));
                }
                if ((ds.Tables["Instellingen"] != null)) {
                    base.Tables.Add(new InstellingenDataTable(ds.Tables["Instellingen"]));
                }
                if ((ds.Tables["Jaargegevens"] != null)) {
                    base.Tables.Add(new JaargegevensDataTable(ds.Tables["Jaargegevens"]));
                }
                if ((ds.Tables["Jaarsaldo"] != null)) {
                    base.Tables.Add(new JaarsaldoDataTable(ds.Tables["Jaarsaldo"]));
                }
                if ((ds.Tables["Klant_Begunstigde"] != null)) {
                    base.Tables.Add(new Klant_BegunstigdeDataTable(ds.Tables["Klant_Begunstigde"]));
                }
                if ((ds.Tables["Licentie_controle"] != null)) {
                    base.Tables.Add(new Licentie_controleDataTable(ds.Tables["Licentie_controle"]));
                }
                if ((ds.Tables["Log"] != null)) {
                    base.Tables.Add(new LogDataTable(ds.Tables["Log"]));
                }
                if ((ds.Tables["Product"] != null)) {
                    base.Tables.Add(new ProductDataTable(ds.Tables["Product"]));
                }
                if ((ds.Tables["Programerror"] != null)) {
                    base.Tables.Add(new ProgramerrorDataTable(ds.Tables["Programerror"]));
                }
                if ((ds.Tables["Saldostand"] != null)) {
                    base.Tables.Add(new SaldostandDataTable(ds.Tables["Saldostand"]));
                }
                if ((ds.Tables["Status"] != null)) {
                    base.Tables.Add(new StatusDataTable(ds.Tables["Status"]));
                }
                if ((ds.Tables["Subcategorie"] != null)) {
                    base.Tables.Add(new SubcategorieDataTable(ds.Tables["Subcategorie"]));
                }
                if ((ds.Tables["SubUitgavesoort"] != null)) {
                    base.Tables.Add(new SubUitgavesoortDataTable(ds.Tables["SubUitgavesoort"]));
                }
                if ((ds.Tables["Telefoonnr"] != null)) {
                    base.Tables.Add(new TelefoonnrDataTable(ds.Tables["Telefoonnr"]));
                }
                if ((ds.Tables["Uitgaven"] != null)) {
                    base.Tables.Add(new UitgavenDataTable(ds.Tables["Uitgaven"]));
                }
                if ((ds.Tables["Verwerkperiode"] != null)) {
                    base.Tables.Add(new VerwerkperiodeDataTable(ds.Tables["Verwerkperiode"]));
                }
                if ((ds.Tables["Voorraad"] != null)) {
                    base.Tables.Add(new VoorraadDataTable(ds.Tables["Voorraad"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, global::System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.ReadXmlSchema(new global::System.Xml.XmlTextReader(new global::System.IO.StringReader(strSchema)));
            }
            this.GetSerializationData(info, context);
            global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            base.Tables.CollectionChanged += schemaChangedHandler;
            this.Relations.CollectionChanged += schemaChangedHandler;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public AdresgegevensDataTable Adresgegevens {
            get {
                return this.tableAdresgegevens;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public BankgironrDataTable Bankgironr {
            get {
                return this.tableBankgironr;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public BankregelDataTable Bankregel {
            get {
                return this.tableBankregel;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public BestellingDataTable Bestelling {
            get {
                return this.tableBestelling;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public BestelregelDataTable Bestelregel {
            get {
                return this.tableBestelregel;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public Component_tekstDataTable Component_tekst {
            get {
                return this.tableComponent_tekst;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public DbFilesDataTable DbFiles {
            get {
                return this.tableDbFiles;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public EmailDataTable Email {
            get {
                return this.tableEmail;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public EmailadresDataTable Emailadres {
            get {
                return this.tableEmailadres;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public GebruikerDataTable Gebruiker {
            get {
                return this.tableGebruiker;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public HoofdcategorieDataTable Hoofdcategorie {
            get {
                return this.tableHoofdcategorie;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public HoofdUitgavesoortDataTable HoofdUitgavesoort {
            get {
                return this.tableHoofdUitgavesoort;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public InstellingenDataTable Instellingen {
            get {
                return this.tableInstellingen;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public JaargegevensDataTable Jaargegevens {
            get {
                return this.tableJaargegevens;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public JaarsaldoDataTable Jaarsaldo {
            get {
                return this.tableJaarsaldo;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public Klant_BegunstigdeDataTable Klant_Begunstigde {
            get {
                return this.tableKlant_Begunstigde;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public Licentie_controleDataTable Licentie_controle {
            get {
                return this.tableLicentie_controle;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public LogDataTable Log {
            get {
                return this.tableLog;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public ProductDataTable Product {
            get {
                return this.tableProduct;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public ProgramerrorDataTable Programerror {
            get {
                return this.tableProgramerror;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public SaldostandDataTable Saldostand {
            get {
                return this.tableSaldostand;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public StatusDataTable Status {
            get {
                return this.tableStatus;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public SubcategorieDataTable Subcategorie {
            get {
                return this.tableSubcategorie;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public SubUitgavesoortDataTable SubUitgavesoort {
            get {
                return this.tableSubUitgavesoort;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public TelefoonnrDataTable Telefoonnr {
            get {
                return this.tableTelefoonnr;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public UitgavenDataTable Uitgaven {
            get {
                return this.tableUitgaven;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public VerwerkperiodeDataTable Verwerkperiode {
            get {
                return this.tableVerwerkperiode;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public VoorraadDataTable Voorraad {
            get {
                return this.tableVoorraad;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.BrowsableAttribute(true)]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Visible)]
        public override global::System.Data.SchemaSerializationMode SchemaSerializationMode {
            get {
                return this._schemaSerializationMode;
            }
            set {
                this._schemaSerializationMode = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public new global::System.Data.DataTableCollection Tables {
            get {
                return base.Tables;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public new global::System.Data.DataRelationCollection Relations {
            get {
                return base.Relations;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected override void InitializeDerivedDataSet() {
            this.BeginInit();
            this.InitClass();
            this.EndInit();
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public override global::System.Data.DataSet Clone() {
            _Cmbap_dataDataSet cln = ((_Cmbap_dataDataSet)(base.Clone()));
            cln.InitVars();
            cln.SchemaSerializationMode = this.SchemaSerializationMode;
            return cln;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected override bool ShouldSerializeTables() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected override bool ShouldSerializeRelations() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected override void ReadXmlSerializable(global::System.Xml.XmlReader reader) {
            if ((this.DetermineSchemaSerializationMode(reader) == global::System.Data.SchemaSerializationMode.IncludeSchema)) {
                this.Reset();
                global::System.Data.DataSet ds = new global::System.Data.DataSet();
                ds.ReadXml(reader);
                if ((ds.Tables["Adresgegevens"] != null)) {
                    base.Tables.Add(new AdresgegevensDataTable(ds.Tables["Adresgegevens"]));
                }
                if ((ds.Tables["Bankgironr"] != null)) {
                    base.Tables.Add(new BankgironrDataTable(ds.Tables["Bankgironr"]));
                }
                if ((ds.Tables["Bankregel"] != null)) {
                    base.Tables.Add(new BankregelDataTable(ds.Tables["Bankregel"]));
                }
                if ((ds.Tables["Bestelling"] != null)) {
                    base.Tables.Add(new BestellingDataTable(ds.Tables["Bestelling"]));
                }
                if ((ds.Tables["Bestelregel"] != null)) {
                    base.Tables.Add(new BestelregelDataTable(ds.Tables["Bestelregel"]));
                }
                if ((ds.Tables["Component_tekst"] != null)) {
                    base.Tables.Add(new Component_tekstDataTable(ds.Tables["Component_tekst"]));
                }
                if ((ds.Tables["DbFiles"] != null)) {
                    base.Tables.Add(new DbFilesDataTable(ds.Tables["DbFiles"]));
                }
                if ((ds.Tables["Email"] != null)) {
                    base.Tables.Add(new EmailDataTable(ds.Tables["Email"]));
                }
                if ((ds.Tables["Emailadres"] != null)) {
                    base.Tables.Add(new EmailadresDataTable(ds.Tables["Emailadres"]));
                }
                if ((ds.Tables["Gebruiker"] != null)) {
                    base.Tables.Add(new GebruikerDataTable(ds.Tables["Gebruiker"]));
                }
                if ((ds.Tables["Hoofdcategorie"] != null)) {
                    base.Tables.Add(new HoofdcategorieDataTable(ds.Tables["Hoofdcategorie"]));
                }
                if ((ds.Tables["HoofdUitgavesoort"] != null)) {
                    base.Tables.Add(new HoofdUitgavesoortDataTable(ds.Tables["HoofdUitgavesoort"]));
                }
                if ((ds.Tables["Instellingen"] != null)) {
                    base.Tables.Add(new InstellingenDataTable(ds.Tables["Instellingen"]));
                }
                if ((ds.Tables["Jaargegevens"] != null)) {
                    base.Tables.Add(new JaargegevensDataTable(ds.Tables["Jaargegevens"]));
                }
                if ((ds.Tables["Jaarsaldo"] != null)) {
                    base.Tables.Add(new JaarsaldoDataTable(ds.Tables["Jaarsaldo"]));
                }
                if ((ds.Tables["Klant_Begunstigde"] != null)) {
                    base.Tables.Add(new Klant_BegunstigdeDataTable(ds.Tables["Klant_Begunstigde"]));
                }
                if ((ds.Tables["Licentie_controle"] != null)) {
                    base.Tables.Add(new Licentie_controleDataTable(ds.Tables["Licentie_controle"]));
                }
                if ((ds.Tables["Log"] != null)) {
                    base.Tables.Add(new LogDataTable(ds.Tables["Log"]));
                }
                if ((ds.Tables["Product"] != null)) {
                    base.Tables.Add(new ProductDataTable(ds.Tables["Product"]));
                }
                if ((ds.Tables["Programerror"] != null)) {
                    base.Tables.Add(new ProgramerrorDataTable(ds.Tables["Programerror"]));
                }
                if ((ds.Tables["Saldostand"] != null)) {
                    base.Tables.Add(new SaldostandDataTable(ds.Tables["Saldostand"]));
                }
                if ((ds.Tables["Status"] != null)) {
                    base.Tables.Add(new StatusDataTable(ds.Tables["Status"]));
                }
                if ((ds.Tables["Subcategorie"] != null)) {
                    base.Tables.Add(new SubcategorieDataTable(ds.Tables["Subcategorie"]));
                }
                if ((ds.Tables["SubUitgavesoort"] != null)) {
                    base.Tables.Add(new SubUitgavesoortDataTable(ds.Tables["SubUitgavesoort"]));
                }
                if ((ds.Tables["Telefoonnr"] != null)) {
                    base.Tables.Add(new TelefoonnrDataTable(ds.Tables["Telefoonnr"]));
                }
                if ((ds.Tables["Uitgaven"] != null)) {
                    base.Tables.Add(new UitgavenDataTable(ds.Tables["Uitgaven"]));
                }
                if ((ds.Tables["Verwerkperiode"] != null)) {
                    base.Tables.Add(new VerwerkperiodeDataTable(ds.Tables["Verwerkperiode"]));
                }
                if ((ds.Tables["Voorraad"] != null)) {
                    base.Tables.Add(new VoorraadDataTable(ds.Tables["Voorraad"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, global::System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.ReadXml(reader);
                this.InitVars();
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected override global::System.Xml.Schema.XmlSchema GetSchemaSerializable() {
            global::System.IO.MemoryStream stream = new global::System.IO.MemoryStream();
            this.WriteXmlSchema(new global::System.Xml.XmlTextWriter(stream, null));
            stream.Position = 0;
            return global::System.Xml.Schema.XmlSchema.Read(new global::System.Xml.XmlTextReader(stream), null);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal void InitVars() {
            this.InitVars(true);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal void InitVars(bool initTable) {
            this.tableAdresgegevens = ((AdresgegevensDataTable)(base.Tables["Adresgegevens"]));
            if ((initTable == true)) {
                if ((this.tableAdresgegevens != null)) {
                    this.tableAdresgegevens.InitVars();
                }
            }
            this.tableBankgironr = ((BankgironrDataTable)(base.Tables["Bankgironr"]));
            if ((initTable == true)) {
                if ((this.tableBankgironr != null)) {
                    this.tableBankgironr.InitVars();
                }
            }
            this.tableBankregel = ((BankregelDataTable)(base.Tables["Bankregel"]));
            if ((initTable == true)) {
                if ((this.tableBankregel != null)) {
                    this.tableBankregel.InitVars();
                }
            }
            this.tableBestelling = ((BestellingDataTable)(base.Tables["Bestelling"]));
            if ((initTable == true)) {
                if ((this.tableBestelling != null)) {
                    this.tableBestelling.InitVars();
                }
            }
            this.tableBestelregel = ((BestelregelDataTable)(base.Tables["Bestelregel"]));
            if ((initTable == true)) {
                if ((this.tableBestelregel != null)) {
                    this.tableBestelregel.InitVars();
                }
            }
            this.tableComponent_tekst = ((Component_tekstDataTable)(base.Tables["Component_tekst"]));
            if ((initTable == true)) {
                if ((this.tableComponent_tekst != null)) {
                    this.tableComponent_tekst.InitVars();
                }
            }
            this.tableDbFiles = ((DbFilesDataTable)(base.Tables["DbFiles"]));
            if ((initTable == true)) {
                if ((this.tableDbFiles != null)) {
                    this.tableDbFiles.InitVars();
                }
            }
            this.tableEmail = ((EmailDataTable)(base.Tables["Email"]));
            if ((initTable == true)) {
                if ((this.tableEmail != null)) {
                    this.tableEmail.InitVars();
                }
            }
            this.tableEmailadres = ((EmailadresDataTable)(base.Tables["Emailadres"]));
            if ((initTable == true)) {
                if ((this.tableEmailadres != null)) {
                    this.tableEmailadres.InitVars();
                }
            }
            this.tableGebruiker = ((GebruikerDataTable)(base.Tables["Gebruiker"]));
            if ((initTable == true)) {
                if ((this.tableGebruiker != null)) {
                    this.tableGebruiker.InitVars();
                }
            }
            this.tableHoofdcategorie = ((HoofdcategorieDataTable)(base.Tables["Hoofdcategorie"]));
            if ((initTable == true)) {
                if ((this.tableHoofdcategorie != null)) {
                    this.tableHoofdcategorie.InitVars();
                }
            }
            this.tableHoofdUitgavesoort = ((HoofdUitgavesoortDataTable)(base.Tables["HoofdUitgavesoort"]));
            if ((initTable == true)) {
                if ((this.tableHoofdUitgavesoort != null)) {
                    this.tableHoofdUitgavesoort.InitVars();
                }
            }
            this.tableInstellingen = ((InstellingenDataTable)(base.Tables["Instellingen"]));
            if ((initTable == true)) {
                if ((this.tableInstellingen != null)) {
                    this.tableInstellingen.InitVars();
                }
            }
            this.tableJaargegevens = ((JaargegevensDataTable)(base.Tables["Jaargegevens"]));
            if ((initTable == true)) {
                if ((this.tableJaargegevens != null)) {
                    this.tableJaargegevens.InitVars();
                }
            }
            this.tableJaarsaldo = ((JaarsaldoDataTable)(base.Tables["Jaarsaldo"]));
            if ((initTable == true)) {
                if ((this.tableJaarsaldo != null)) {
                    this.tableJaarsaldo.InitVars();
                }
            }
            this.tableKlant_Begunstigde = ((Klant_BegunstigdeDataTable)(base.Tables["Klant_Begunstigde"]));
            if ((initTable == true)) {
                if ((this.tableKlant_Begunstigde != null)) {
                    this.tableKlant_Begunstigde.InitVars();
                }
            }
            this.tableLicentie_controle = ((Licentie_controleDataTable)(base.Tables["Licentie_controle"]));
            if ((initTable == true)) {
                if ((this.tableLicentie_controle != null)) {
                    this.tableLicentie_controle.InitVars();
                }
            }
            this.tableLog = ((LogDataTable)(base.Tables["Log"]));
            if ((initTable == true)) {
                if ((this.tableLog != null)) {
                    this.tableLog.InitVars();
                }
            }
            this.tableProduct = ((ProductDataTable)(base.Tables["Product"]));
            if ((initTable == true)) {
                if ((this.tableProduct != null)) {
                    this.tableProduct.InitVars();
                }
            }
            this.tableProgramerror = ((ProgramerrorDataTable)(base.Tables["Programerror"]));
            if ((initTable == true)) {
                if ((this.tableProgramerror != null)) {
                    this.tableProgramerror.InitVars();
                }
            }
            this.tableSaldostand = ((SaldostandDataTable)(base.Tables["Saldostand"]));
            if ((initTable == true)) {
                if ((this.tableSaldostand != null)) {
                    this.tableSaldostand.InitVars();
                }
            }
            this.tableStatus = ((StatusDataTable)(base.Tables["Status"]));
            if ((initTable == true)) {
                if ((this.tableStatus != null)) {
                    this.tableStatus.InitVars();
                }
            }
            this.tableSubcategorie = ((SubcategorieDataTable)(base.Tables["Subcategorie"]));
            if ((initTable == true)) {
                if ((this.tableSubcategorie != null)) {
                    this.tableSubcategorie.InitVars();
                }
            }
            this.tableSubUitgavesoort = ((SubUitgavesoortDataTable)(base.Tables["SubUitgavesoort"]));
            if ((initTable == true)) {
                if ((this.tableSubUitgavesoort != null)) {
                    this.tableSubUitgavesoort.InitVars();
                }
            }
            this.tableTelefoonnr = ((TelefoonnrDataTable)(base.Tables["Telefoonnr"]));
            if ((initTable == true)) {
                if ((this.tableTelefoonnr != null)) {
                    this.tableTelefoonnr.InitVars();
                }
            }
            this.tableUitgaven = ((UitgavenDataTable)(base.Tables["Uitgaven"]));
            if ((initTable == true)) {
                if ((this.tableUitgaven != null)) {
                    this.tableUitgaven.InitVars();
                }
            }
            this.tableVerwerkperiode = ((VerwerkperiodeDataTable)(base.Tables["Verwerkperiode"]));
            if ((initTable == true)) {
                if ((this.tableVerwerkperiode != null)) {
                    this.tableVerwerkperiode.InitVars();
                }
            }
            this.tableVoorraad = ((VoorraadDataTable)(base.Tables["Voorraad"]));
            if ((initTable == true)) {
                if ((this.tableVoorraad != null)) {
                    this.tableVoorraad.InitVars();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitClass() {
            this.DataSetName = "_Cmbap_dataDataSet";
            this.Prefix = "";
            this.Namespace = "http://tempuri.org/_Cmbap_dataDataSet.xsd";
            this.EnforceConstraints = true;
            this.SchemaSerializationMode = global::System.Data.SchemaSerializationMode.IncludeSchema;
            this.tableAdresgegevens = new AdresgegevensDataTable();
            base.Tables.Add(this.tableAdresgegevens);
            this.tableBankgironr = new BankgironrDataTable();
            base.Tables.Add(this.tableBankgironr);
            this.tableBankregel = new BankregelDataTable();
            base.Tables.Add(this.tableBankregel);
            this.tableBestelling = new BestellingDataTable();
            base.Tables.Add(this.tableBestelling);
            this.tableBestelregel = new BestelregelDataTable();
            base.Tables.Add(this.tableBestelregel);
            this.tableComponent_tekst = new Component_tekstDataTable();
            base.Tables.Add(this.tableComponent_tekst);
            this.tableDbFiles = new DbFilesDataTable();
            base.Tables.Add(this.tableDbFiles);
            this.tableEmail = new EmailDataTable();
            base.Tables.Add(this.tableEmail);
            this.tableEmailadres = new EmailadresDataTable();
            base.Tables.Add(this.tableEmailadres);
            this.tableGebruiker = new GebruikerDataTable();
            base.Tables.Add(this.tableGebruiker);
            this.tableHoofdcategorie = new HoofdcategorieDataTable();
            base.Tables.Add(this.tableHoofdcategorie);
            this.tableHoofdUitgavesoort = new HoofdUitgavesoortDataTable();
            base.Tables.Add(this.tableHoofdUitgavesoort);
            this.tableInstellingen = new InstellingenDataTable();
            base.Tables.Add(this.tableInstellingen);
            this.tableJaargegevens = new JaargegevensDataTable();
            base.Tables.Add(this.tableJaargegevens);
            this.tableJaarsaldo = new JaarsaldoDataTable();
            base.Tables.Add(this.tableJaarsaldo);
            this.tableKlant_Begunstigde = new Klant_BegunstigdeDataTable();
            base.Tables.Add(this.tableKlant_Begunstigde);
            this.tableLicentie_controle = new Licentie_controleDataTable();
            base.Tables.Add(this.tableLicentie_controle);
            this.tableLog = new LogDataTable();
            base.Tables.Add(this.tableLog);
            this.tableProduct = new ProductDataTable();
            base.Tables.Add(this.tableProduct);
            this.tableProgramerror = new ProgramerrorDataTable();
            base.Tables.Add(this.tableProgramerror);
            this.tableSaldostand = new SaldostandDataTable();
            base.Tables.Add(this.tableSaldostand);
            this.tableStatus = new StatusDataTable();
            base.Tables.Add(this.tableStatus);
            this.tableSubcategorie = new SubcategorieDataTable();
            base.Tables.Add(this.tableSubcategorie);
            this.tableSubUitgavesoort = new SubUitgavesoortDataTable();
            base.Tables.Add(this.tableSubUitgavesoort);
            this.tableTelefoonnr = new TelefoonnrDataTable();
            base.Tables.Add(this.tableTelefoonnr);
            this.tableUitgaven = new UitgavenDataTable();
            base.Tables.Add(this.tableUitgaven);
            this.tableVerwerkperiode = new VerwerkperiodeDataTable();
            base.Tables.Add(this.tableVerwerkperiode);
            this.tableVoorraad = new VoorraadDataTable();
            base.Tables.Add(this.tableVoorraad);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private bool ShouldSerializeAdresgegevens() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private bool ShouldSerializeBankgironr() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private bool ShouldSerializeBankregel() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private bool ShouldSerializeBestelling() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private bool ShouldSerializeBestelregel() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private bool ShouldSerializeComponent_tekst() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private bool ShouldSerializeDbFiles() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private bool ShouldSerializeEmail() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private bool ShouldSerializeEmailadres() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private bool ShouldSerializeGebruiker() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private bool ShouldSerializeHoofdcategorie() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private bool ShouldSerializeHoofdUitgavesoort() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private bool ShouldSerializeInstellingen() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private bool ShouldSerializeJaargegevens() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private bool ShouldSerializeJaarsaldo() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private bool ShouldSerializeKlant_Begunstigde() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private bool ShouldSerializeLicentie_controle() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private bool ShouldSerializeLog() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private bool ShouldSerializeProduct() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private bool ShouldSerializeProgramerror() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private bool ShouldSerializeSaldostand() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private bool ShouldSerializeStatus() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private bool ShouldSerializeSubcategorie() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private bool ShouldSerializeSubUitgavesoort() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private bool ShouldSerializeTelefoonnr() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private bool ShouldSerializeUitgaven() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private bool ShouldSerializeVerwerkperiode() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private bool ShouldSerializeVoorraad() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void SchemaChanged(object sender, global::System.ComponentModel.CollectionChangeEventArgs e) {
            if ((e.Action == global::System.ComponentModel.CollectionChangeAction.Remove)) {
                this.InitVars();
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedDataSetSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
            _Cmbap_dataDataSet ds = new _Cmbap_dataDataSet();
            global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
            global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
            global::System.Xml.Schema.XmlSchemaAny any = new global::System.Xml.Schema.XmlSchemaAny();
            any.Namespace = ds.Namespace;
            sequence.Items.Add(any);
            type.Particle = sequence;
            global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
            if (xs.Contains(dsSchema.TargetNamespace)) {
                global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                try {
                    global::System.Xml.Schema.XmlSchema schema = null;
                    dsSchema.Write(s1);
                    for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                        schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                        s2.SetLength(0);
                        schema.Write(s2);
                        if ((s1.Length == s2.Length)) {
                            s1.Position = 0;
                            s2.Position = 0;
                            for (; ((s1.Position != s1.Length) 
                                        && (s1.ReadByte() == s2.ReadByte())); ) {
                                ;
                            }
                            if ((s1.Position == s1.Length)) {
                                return type;
                            }
                        }
                    }
                }
                finally {
                    if ((s1 != null)) {
                        s1.Close();
                    }
                    if ((s2 != null)) {
                        s2.Close();
                    }
                }
            }
            xs.Add(dsSchema);
            return type;
        }
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public delegate void AdresgegevensRowChangeEventHandler(object sender, AdresgegevensRowChangeEvent e);
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public delegate void BankgironrRowChangeEventHandler(object sender, BankgironrRowChangeEvent e);
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public delegate void BankregelRowChangeEventHandler(object sender, BankregelRowChangeEvent e);
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public delegate void BestellingRowChangeEventHandler(object sender, BestellingRowChangeEvent e);
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public delegate void BestelregelRowChangeEventHandler(object sender, BestelregelRowChangeEvent e);
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public delegate void Component_tekstRowChangeEventHandler(object sender, Component_tekstRowChangeEvent e);
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public delegate void DbFilesRowChangeEventHandler(object sender, DbFilesRowChangeEvent e);
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public delegate void EmailRowChangeEventHandler(object sender, EmailRowChangeEvent e);
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public delegate void EmailadresRowChangeEventHandler(object sender, EmailadresRowChangeEvent e);
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public delegate void GebruikerRowChangeEventHandler(object sender, GebruikerRowChangeEvent e);
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public delegate void HoofdcategorieRowChangeEventHandler(object sender, HoofdcategorieRowChangeEvent e);
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public delegate void HoofdUitgavesoortRowChangeEventHandler(object sender, HoofdUitgavesoortRowChangeEvent e);
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public delegate void InstellingenRowChangeEventHandler(object sender, InstellingenRowChangeEvent e);
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public delegate void JaargegevensRowChangeEventHandler(object sender, JaargegevensRowChangeEvent e);
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public delegate void JaarsaldoRowChangeEventHandler(object sender, JaarsaldoRowChangeEvent e);
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public delegate void Klant_BegunstigdeRowChangeEventHandler(object sender, Klant_BegunstigdeRowChangeEvent e);
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public delegate void Licentie_controleRowChangeEventHandler(object sender, Licentie_controleRowChangeEvent e);
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public delegate void LogRowChangeEventHandler(object sender, LogRowChangeEvent e);
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public delegate void ProductRowChangeEventHandler(object sender, ProductRowChangeEvent e);
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public delegate void ProgramerrorRowChangeEventHandler(object sender, ProgramerrorRowChangeEvent e);
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public delegate void SaldostandRowChangeEventHandler(object sender, SaldostandRowChangeEvent e);
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public delegate void StatusRowChangeEventHandler(object sender, StatusRowChangeEvent e);
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public delegate void SubcategorieRowChangeEventHandler(object sender, SubcategorieRowChangeEvent e);
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public delegate void SubUitgavesoortRowChangeEventHandler(object sender, SubUitgavesoortRowChangeEvent e);
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public delegate void TelefoonnrRowChangeEventHandler(object sender, TelefoonnrRowChangeEvent e);
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public delegate void UitgavenRowChangeEventHandler(object sender, UitgavenRowChangeEvent e);
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public delegate void VerwerkperiodeRowChangeEventHandler(object sender, VerwerkperiodeRowChangeEvent e);
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public delegate void VoorraadRowChangeEventHandler(object sender, VoorraadRowChangeEvent e);
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class AdresgegevensDataTable : global::System.Data.TypedTableBase<AdresgegevensRow> {
            
            private global::System.Data.DataColumn columnAdrsgeg_Id;
            
            private global::System.Data.DataColumn columnAdrsgeg_StatusId;
            
            private global::System.Data.DataColumn columnAdrsgeg_DispStatus;
            
            private global::System.Data.DataColumn columnAdrsgeg_KlBgId;
            
            private global::System.Data.DataColumn columnAdrsgeg_DispKlBg;
            
            private global::System.Data.DataColumn columnAdrsgeg_Straatnaam;
            
            private global::System.Data.DataColumn columnAdrsgeg_Huisnummer;
            
            private global::System.Data.DataColumn columnAdrsgeg_Huisnummertoevoeging;
            
            private global::System.Data.DataColumn columnAdrsgeg_Adres;
            
            private global::System.Data.DataColumn columnAdrsgeg_Postcode;
            
            private global::System.Data.DataColumn columnAdrsgeg_Woonplaats;
            
            private global::System.Data.DataColumn columnAdrsgeg_Mutatiedatum;
            
            private global::System.Data.DataColumn columnAdrsgeg_Opmerking;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public AdresgegevensDataTable() {
                this.TableName = "Adresgegevens";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal AdresgegevensDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected AdresgegevensDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn Adrsgeg_IdColumn {
                get {
                    return this.columnAdrsgeg_Id;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn Adrsgeg_StatusIdColumn {
                get {
                    return this.columnAdrsgeg_StatusId;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn Adrsgeg_DispStatusColumn {
                get {
                    return this.columnAdrsgeg_DispStatus;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn Adrsgeg_KlBgIdColumn {
                get {
                    return this.columnAdrsgeg_KlBgId;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn Adrsgeg_DispKlBgColumn {
                get {
                    return this.columnAdrsgeg_DispKlBg;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn Adrsgeg_StraatnaamColumn {
                get {
                    return this.columnAdrsgeg_Straatnaam;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn Adrsgeg_HuisnummerColumn {
                get {
                    return this.columnAdrsgeg_Huisnummer;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn Adrsgeg_HuisnummertoevoegingColumn {
                get {
                    return this.columnAdrsgeg_Huisnummertoevoeging;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn Adrsgeg_AdresColumn {
                get {
                    return this.columnAdrsgeg_Adres;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn Adrsgeg_PostcodeColumn {
                get {
                    return this.columnAdrsgeg_Postcode;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn Adrsgeg_WoonplaatsColumn {
                get {
                    return this.columnAdrsgeg_Woonplaats;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn Adrsgeg_MutatiedatumColumn {
                get {
                    return this.columnAdrsgeg_Mutatiedatum;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn Adrsgeg_OpmerkingColumn {
                get {
                    return this.columnAdrsgeg_Opmerking;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public AdresgegevensRow this[int index] {
                get {
                    return ((AdresgegevensRow)(this.Rows[index]));
                }
            }
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event AdresgegevensRowChangeEventHandler AdresgegevensRowChanging;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event AdresgegevensRowChangeEventHandler AdresgegevensRowChanged;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event AdresgegevensRowChangeEventHandler AdresgegevensRowDeleting;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event AdresgegevensRowChangeEventHandler AdresgegevensRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void AddAdresgegevensRow(AdresgegevensRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public AdresgegevensRow AddAdresgegevensRow(long Adrsgeg_StatusId, string Adrsgeg_DispStatus, long Adrsgeg_KlBgId, string Adrsgeg_DispKlBg, string Adrsgeg_Straatnaam, string Adrsgeg_Huisnummer, string Adrsgeg_Huisnummertoevoeging, string Adrsgeg_Adres, string Adrsgeg_Postcode, string Adrsgeg_Woonplaats, System.DateTime Adrsgeg_Mutatiedatum, string Adrsgeg_Opmerking) {
                AdresgegevensRow rowAdresgegevensRow = ((AdresgegevensRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        null,
                        Adrsgeg_StatusId,
                        Adrsgeg_DispStatus,
                        Adrsgeg_KlBgId,
                        Adrsgeg_DispKlBg,
                        Adrsgeg_Straatnaam,
                        Adrsgeg_Huisnummer,
                        Adrsgeg_Huisnummertoevoeging,
                        Adrsgeg_Adres,
                        Adrsgeg_Postcode,
                        Adrsgeg_Woonplaats,
                        Adrsgeg_Mutatiedatum,
                        Adrsgeg_Opmerking};
                rowAdresgegevensRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowAdresgegevensRow);
                return rowAdresgegevensRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public AdresgegevensRow FindByAdrsgeg_Id(long Adrsgeg_Id) {
                return ((AdresgegevensRow)(this.Rows.Find(new object[] {
                            Adrsgeg_Id})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public override global::System.Data.DataTable Clone() {
                AdresgegevensDataTable cln = ((AdresgegevensDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataTable CreateInstance() {
                return new AdresgegevensDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal void InitVars() {
                this.columnAdrsgeg_Id = base.Columns["Adrsgeg_Id"];
                this.columnAdrsgeg_StatusId = base.Columns["Adrsgeg_StatusId"];
                this.columnAdrsgeg_DispStatus = base.Columns["Adrsgeg_DispStatus"];
                this.columnAdrsgeg_KlBgId = base.Columns["Adrsgeg_KlBgId"];
                this.columnAdrsgeg_DispKlBg = base.Columns["Adrsgeg_DispKlBg"];
                this.columnAdrsgeg_Straatnaam = base.Columns["Adrsgeg_Straatnaam"];
                this.columnAdrsgeg_Huisnummer = base.Columns["Adrsgeg_Huisnummer"];
                this.columnAdrsgeg_Huisnummertoevoeging = base.Columns["Adrsgeg_Huisnummertoevoeging"];
                this.columnAdrsgeg_Adres = base.Columns["Adrsgeg_Adres"];
                this.columnAdrsgeg_Postcode = base.Columns["Adrsgeg_Postcode"];
                this.columnAdrsgeg_Woonplaats = base.Columns["Adrsgeg_Woonplaats"];
                this.columnAdrsgeg_Mutatiedatum = base.Columns["Adrsgeg_Mutatiedatum"];
                this.columnAdrsgeg_Opmerking = base.Columns["Adrsgeg_Opmerking"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            private void InitClass() {
                this.columnAdrsgeg_Id = new global::System.Data.DataColumn("Adrsgeg_Id", typeof(long), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAdrsgeg_Id);
                this.columnAdrsgeg_StatusId = new global::System.Data.DataColumn("Adrsgeg_StatusId", typeof(long), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAdrsgeg_StatusId);
                this.columnAdrsgeg_DispStatus = new global::System.Data.DataColumn("Adrsgeg_DispStatus", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAdrsgeg_DispStatus);
                this.columnAdrsgeg_KlBgId = new global::System.Data.DataColumn("Adrsgeg_KlBgId", typeof(long), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAdrsgeg_KlBgId);
                this.columnAdrsgeg_DispKlBg = new global::System.Data.DataColumn("Adrsgeg_DispKlBg", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAdrsgeg_DispKlBg);
                this.columnAdrsgeg_Straatnaam = new global::System.Data.DataColumn("Adrsgeg_Straatnaam", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAdrsgeg_Straatnaam);
                this.columnAdrsgeg_Huisnummer = new global::System.Data.DataColumn("Adrsgeg_Huisnummer", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAdrsgeg_Huisnummer);
                this.columnAdrsgeg_Huisnummertoevoeging = new global::System.Data.DataColumn("Adrsgeg_Huisnummertoevoeging", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAdrsgeg_Huisnummertoevoeging);
                this.columnAdrsgeg_Adres = new global::System.Data.DataColumn("Adrsgeg_Adres", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAdrsgeg_Adres);
                this.columnAdrsgeg_Postcode = new global::System.Data.DataColumn("Adrsgeg_Postcode", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAdrsgeg_Postcode);
                this.columnAdrsgeg_Woonplaats = new global::System.Data.DataColumn("Adrsgeg_Woonplaats", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAdrsgeg_Woonplaats);
                this.columnAdrsgeg_Mutatiedatum = new global::System.Data.DataColumn("Adrsgeg_Mutatiedatum", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAdrsgeg_Mutatiedatum);
                this.columnAdrsgeg_Opmerking = new global::System.Data.DataColumn("Adrsgeg_Opmerking", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAdrsgeg_Opmerking);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnAdrsgeg_Id}, true));
                this.columnAdrsgeg_Id.AutoIncrement = true;
                this.columnAdrsgeg_Id.AutoIncrementSeed = -1;
                this.columnAdrsgeg_Id.AutoIncrementStep = -1;
                this.columnAdrsgeg_Id.AllowDBNull = false;
                this.columnAdrsgeg_Id.Unique = true;
                this.columnAdrsgeg_DispStatus.MaxLength = 75;
                this.columnAdrsgeg_KlBgId.AllowDBNull = false;
                this.columnAdrsgeg_DispKlBg.MaxLength = 75;
                this.columnAdrsgeg_Straatnaam.AllowDBNull = false;
                this.columnAdrsgeg_Straatnaam.MaxLength = 50;
                this.columnAdrsgeg_Huisnummer.AllowDBNull = false;
                this.columnAdrsgeg_Huisnummer.MaxLength = 8;
                this.columnAdrsgeg_Huisnummertoevoeging.MaxLength = 10;
                this.columnAdrsgeg_Adres.AllowDBNull = false;
                this.columnAdrsgeg_Adres.MaxLength = 65;
                this.columnAdrsgeg_Postcode.AllowDBNull = false;
                this.columnAdrsgeg_Postcode.MaxLength = 7;
                this.columnAdrsgeg_Woonplaats.AllowDBNull = false;
                this.columnAdrsgeg_Woonplaats.MaxLength = 50;
                this.columnAdrsgeg_Mutatiedatum.AllowDBNull = false;
                this.columnAdrsgeg_Opmerking.MaxLength = 250;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public AdresgegevensRow NewAdresgegevensRow() {
                return ((AdresgegevensRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new AdresgegevensRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Type GetRowType() {
                return typeof(AdresgegevensRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.AdresgegevensRowChanged != null)) {
                    this.AdresgegevensRowChanged(this, new AdresgegevensRowChangeEvent(((AdresgegevensRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.AdresgegevensRowChanging != null)) {
                    this.AdresgegevensRowChanging(this, new AdresgegevensRowChangeEvent(((AdresgegevensRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.AdresgegevensRowDeleted != null)) {
                    this.AdresgegevensRowDeleted(this, new AdresgegevensRowChangeEvent(((AdresgegevensRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.AdresgegevensRowDeleting != null)) {
                    this.AdresgegevensRowDeleting(this, new AdresgegevensRowChangeEvent(((AdresgegevensRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void RemoveAdresgegevensRow(AdresgegevensRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                _Cmbap_dataDataSet ds = new _Cmbap_dataDataSet();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "AdresgegevensDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class BankgironrDataTable : global::System.Data.TypedTableBase<BankgironrRow> {
            
            private global::System.Data.DataColumn columnBgnr_Id;
            
            private global::System.Data.DataColumn columnBgnr_StatusId;
            
            private global::System.Data.DataColumn columnBgnr_DispStatus;
            
            private global::System.Data.DataColumn columnBgnr_SysteemBgnrJN;
            
            private global::System.Data.DataColumn columnBgnr_KLBgId;
            
            private global::System.Data.DataColumn columnBgnr_DispKlBg;
            
            private global::System.Data.DataColumn columnBgnr_Tnv;
            
            private global::System.Data.DataColumn columnBgnr_Kort;
            
            private global::System.Data.DataColumn columnBgnr_Iban;
            
            private global::System.Data.DataColumn columnBgnr_IbanBankGiroKas;
            
            private global::System.Data.DataColumn columnBgnr_Mutatiedatum;
            
            private global::System.Data.DataColumn columnBgnr_Opmerking;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public BankgironrDataTable() {
                this.TableName = "Bankgironr";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal BankgironrDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected BankgironrDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn Bgnr_IdColumn {
                get {
                    return this.columnBgnr_Id;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn Bgnr_StatusIdColumn {
                get {
                    return this.columnBgnr_StatusId;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn Bgnr_DispStatusColumn {
                get {
                    return this.columnBgnr_DispStatus;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn Bgnr_SysteemBgnrJNColumn {
                get {
                    return this.columnBgnr_SysteemBgnrJN;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn Bgnr_KLBgIdColumn {
                get {
                    return this.columnBgnr_KLBgId;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn Bgnr_DispKlBgColumn {
                get {
                    return this.columnBgnr_DispKlBg;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn Bgnr_TnvColumn {
                get {
                    return this.columnBgnr_Tnv;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn Bgnr_KortColumn {
                get {
                    return this.columnBgnr_Kort;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn Bgnr_IbanColumn {
                get {
                    return this.columnBgnr_Iban;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn Bgnr_IbanBankGiroKasColumn {
                get {
                    return this.columnBgnr_IbanBankGiroKas;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn Bgnr_MutatiedatumColumn {
                get {
                    return this.columnBgnr_Mutatiedatum;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn Bgnr_OpmerkingColumn {
                get {
                    return this.columnBgnr_Opmerking;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public BankgironrRow this[int index] {
                get {
                    return ((BankgironrRow)(this.Rows[index]));
                }
            }
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event BankgironrRowChangeEventHandler BankgironrRowChanging;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event BankgironrRowChangeEventHandler BankgironrRowChanged;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event BankgironrRowChangeEventHandler BankgironrRowDeleting;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event BankgironrRowChangeEventHandler BankgironrRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void AddBankgironrRow(BankgironrRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public BankgironrRow AddBankgironrRow(long Bgnr_StatusId, string Bgnr_DispStatus, long Bgnr_SysteemBgnrJN, long Bgnr_KLBgId, string Bgnr_DispKlBg, string Bgnr_Tnv, string Bgnr_Kort, string Bgnr_Iban, string Bgnr_IbanBankGiroKas, System.DateTime Bgnr_Mutatiedatum, string Bgnr_Opmerking) {
                BankgironrRow rowBankgironrRow = ((BankgironrRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        null,
                        Bgnr_StatusId,
                        Bgnr_DispStatus,
                        Bgnr_SysteemBgnrJN,
                        Bgnr_KLBgId,
                        Bgnr_DispKlBg,
                        Bgnr_Tnv,
                        Bgnr_Kort,
                        Bgnr_Iban,
                        Bgnr_IbanBankGiroKas,
                        Bgnr_Mutatiedatum,
                        Bgnr_Opmerking};
                rowBankgironrRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowBankgironrRow);
                return rowBankgironrRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public BankgironrRow FindByBgnr_Id(long Bgnr_Id) {
                return ((BankgironrRow)(this.Rows.Find(new object[] {
                            Bgnr_Id})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public override global::System.Data.DataTable Clone() {
                BankgironrDataTable cln = ((BankgironrDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataTable CreateInstance() {
                return new BankgironrDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal void InitVars() {
                this.columnBgnr_Id = base.Columns["Bgnr_Id"];
                this.columnBgnr_StatusId = base.Columns["Bgnr_StatusId"];
                this.columnBgnr_DispStatus = base.Columns["Bgnr_DispStatus"];
                this.columnBgnr_SysteemBgnrJN = base.Columns["Bgnr_SysteemBgnrJN"];
                this.columnBgnr_KLBgId = base.Columns["Bgnr_KLBgId"];
                this.columnBgnr_DispKlBg = base.Columns["Bgnr_DispKlBg"];
                this.columnBgnr_Tnv = base.Columns["Bgnr_Tnv"];
                this.columnBgnr_Kort = base.Columns["Bgnr_Kort"];
                this.columnBgnr_Iban = base.Columns["Bgnr_Iban"];
                this.columnBgnr_IbanBankGiroKas = base.Columns["Bgnr_IbanBankGiroKas"];
                this.columnBgnr_Mutatiedatum = base.Columns["Bgnr_Mutatiedatum"];
                this.columnBgnr_Opmerking = base.Columns["Bgnr_Opmerking"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            private void InitClass() {
                this.columnBgnr_Id = new global::System.Data.DataColumn("Bgnr_Id", typeof(long), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnBgnr_Id);
                this.columnBgnr_StatusId = new global::System.Data.DataColumn("Bgnr_StatusId", typeof(long), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnBgnr_StatusId);
                this.columnBgnr_DispStatus = new global::System.Data.DataColumn("Bgnr_DispStatus", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnBgnr_DispStatus);
                this.columnBgnr_SysteemBgnrJN = new global::System.Data.DataColumn("Bgnr_SysteemBgnrJN", typeof(long), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnBgnr_SysteemBgnrJN);
                this.columnBgnr_KLBgId = new global::System.Data.DataColumn("Bgnr_KLBgId", typeof(long), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnBgnr_KLBgId);
                this.columnBgnr_DispKlBg = new global::System.Data.DataColumn("Bgnr_DispKlBg", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnBgnr_DispKlBg);
                this.columnBgnr_Tnv = new global::System.Data.DataColumn("Bgnr_Tnv", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnBgnr_Tnv);
                this.columnBgnr_Kort = new global::System.Data.DataColumn("Bgnr_Kort", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnBgnr_Kort);
                this.columnBgnr_Iban = new global::System.Data.DataColumn("Bgnr_Iban", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnBgnr_Iban);
                this.columnBgnr_IbanBankGiroKas = new global::System.Data.DataColumn("Bgnr_IbanBankGiroKas", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnBgnr_IbanBankGiroKas);
                this.columnBgnr_Mutatiedatum = new global::System.Data.DataColumn("Bgnr_Mutatiedatum", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnBgnr_Mutatiedatum);
                this.columnBgnr_Opmerking = new global::System.Data.DataColumn("Bgnr_Opmerking", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnBgnr_Opmerking);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnBgnr_Id}, true));
                this.columnBgnr_Id.AutoIncrement = true;
                this.columnBgnr_Id.AutoIncrementSeed = -1;
                this.columnBgnr_Id.AutoIncrementStep = -1;
                this.columnBgnr_Id.AllowDBNull = false;
                this.columnBgnr_Id.Unique = true;
                this.columnBgnr_DispStatus.MaxLength = 75;
                this.columnBgnr_KLBgId.AllowDBNull = false;
                this.columnBgnr_DispKlBg.MaxLength = 75;
                this.columnBgnr_Tnv.MaxLength = 50;
                this.columnBgnr_Kort.AllowDBNull = false;
                this.columnBgnr_Kort.MaxLength = 9;
                this.columnBgnr_Iban.AllowDBNull = false;
                this.columnBgnr_Iban.MaxLength = 18;
                this.columnBgnr_IbanBankGiroKas.AllowDBNull = false;
                this.columnBgnr_IbanBankGiroKas.MaxLength = 1;
                this.columnBgnr_Opmerking.MaxLength = 250;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public BankgironrRow NewBankgironrRow() {
                return ((BankgironrRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new BankgironrRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Type GetRowType() {
                return typeof(BankgironrRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.BankgironrRowChanged != null)) {
                    this.BankgironrRowChanged(this, new BankgironrRowChangeEvent(((BankgironrRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.BankgironrRowChanging != null)) {
                    this.BankgironrRowChanging(this, new BankgironrRowChangeEvent(((BankgironrRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.BankgironrRowDeleted != null)) {
                    this.BankgironrRowDeleted(this, new BankgironrRowChangeEvent(((BankgironrRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.BankgironrRowDeleting != null)) {
                    this.BankgironrRowDeleting(this, new BankgironrRowChangeEvent(((BankgironrRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void RemoveBankgironrRow(BankgironrRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                _Cmbap_dataDataSet ds = new _Cmbap_dataDataSet();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "BankgironrDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class BankregelDataTable : global::System.Data.TypedTableBase<BankregelRow> {
            
            private global::System.Data.DataColumn columnBnkrgl_Id;
            
            private global::System.Data.DataColumn columnBnkrgl_StatusId;
            
            private global::System.Data.DataColumn columnBnkrgl_DispStatus;
            
            private global::System.Data.DataColumn columnBnkrgl_VerwerkId;
            
            private global::System.Data.DataColumn columnBnkrgl_Bankregel;
            
            private global::System.Data.DataColumn columnBnkrgl_BstlId;
            
            private global::System.Data.DataColumn columnBnkrgl_Mutatiedatum;
            
            private global::System.Data.DataColumn columnBnkrgl_Opmerking;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public BankregelDataTable() {
                this.TableName = "Bankregel";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal BankregelDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected BankregelDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn Bnkrgl_IdColumn {
                get {
                    return this.columnBnkrgl_Id;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn Bnkrgl_StatusIdColumn {
                get {
                    return this.columnBnkrgl_StatusId;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn Bnkrgl_DispStatusColumn {
                get {
                    return this.columnBnkrgl_DispStatus;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn Bnkrgl_VerwerkIdColumn {
                get {
                    return this.columnBnkrgl_VerwerkId;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn Bnkrgl_BankregelColumn {
                get {
                    return this.columnBnkrgl_Bankregel;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn Bnkrgl_BstlIdColumn {
                get {
                    return this.columnBnkrgl_BstlId;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn Bnkrgl_MutatiedatumColumn {
                get {
                    return this.columnBnkrgl_Mutatiedatum;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn Bnkrgl_OpmerkingColumn {
                get {
                    return this.columnBnkrgl_Opmerking;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public BankregelRow this[int index] {
                get {
                    return ((BankregelRow)(this.Rows[index]));
                }
            }
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event BankregelRowChangeEventHandler BankregelRowChanging;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event BankregelRowChangeEventHandler BankregelRowChanged;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event BankregelRowChangeEventHandler BankregelRowDeleting;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event BankregelRowChangeEventHandler BankregelRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void AddBankregelRow(BankregelRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public BankregelRow AddBankregelRow(long Bnkrgl_StatusId, string Bnkrgl_DispStatus, long Bnkrgl_VerwerkId, string Bnkrgl_Bankregel, long Bnkrgl_BstlId, System.DateTime Bnkrgl_Mutatiedatum, string Bnkrgl_Opmerking) {
                BankregelRow rowBankregelRow = ((BankregelRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        null,
                        Bnkrgl_StatusId,
                        Bnkrgl_DispStatus,
                        Bnkrgl_VerwerkId,
                        Bnkrgl_Bankregel,
                        Bnkrgl_BstlId,
                        Bnkrgl_Mutatiedatum,
                        Bnkrgl_Opmerking};
                rowBankregelRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowBankregelRow);
                return rowBankregelRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public BankregelRow FindByBnkrgl_Id(long Bnkrgl_Id) {
                return ((BankregelRow)(this.Rows.Find(new object[] {
                            Bnkrgl_Id})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public override global::System.Data.DataTable Clone() {
                BankregelDataTable cln = ((BankregelDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataTable CreateInstance() {
                return new BankregelDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal void InitVars() {
                this.columnBnkrgl_Id = base.Columns["Bnkrgl_Id"];
                this.columnBnkrgl_StatusId = base.Columns["Bnkrgl_StatusId"];
                this.columnBnkrgl_DispStatus = base.Columns["Bnkrgl_DispStatus"];
                this.columnBnkrgl_VerwerkId = base.Columns["Bnkrgl_VerwerkId"];
                this.columnBnkrgl_Bankregel = base.Columns["Bnkrgl_Bankregel"];
                this.columnBnkrgl_BstlId = base.Columns["Bnkrgl_BstlId"];
                this.columnBnkrgl_Mutatiedatum = base.Columns["Bnkrgl_Mutatiedatum"];
                this.columnBnkrgl_Opmerking = base.Columns["Bnkrgl_Opmerking"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            private void InitClass() {
                this.columnBnkrgl_Id = new global::System.Data.DataColumn("Bnkrgl_Id", typeof(long), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnBnkrgl_Id);
                this.columnBnkrgl_StatusId = new global::System.Data.DataColumn("Bnkrgl_StatusId", typeof(long), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnBnkrgl_StatusId);
                this.columnBnkrgl_DispStatus = new global::System.Data.DataColumn("Bnkrgl_DispStatus", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnBnkrgl_DispStatus);
                this.columnBnkrgl_VerwerkId = new global::System.Data.DataColumn("Bnkrgl_VerwerkId", typeof(long), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnBnkrgl_VerwerkId);
                this.columnBnkrgl_Bankregel = new global::System.Data.DataColumn("Bnkrgl_Bankregel", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnBnkrgl_Bankregel);
                this.columnBnkrgl_BstlId = new global::System.Data.DataColumn("Bnkrgl_BstlId", typeof(long), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnBnkrgl_BstlId);
                this.columnBnkrgl_Mutatiedatum = new global::System.Data.DataColumn("Bnkrgl_Mutatiedatum", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnBnkrgl_Mutatiedatum);
                this.columnBnkrgl_Opmerking = new global::System.Data.DataColumn("Bnkrgl_Opmerking", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnBnkrgl_Opmerking);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnBnkrgl_Id}, true));
                this.columnBnkrgl_Id.AutoIncrement = true;
                this.columnBnkrgl_Id.AutoIncrementSeed = -1;
                this.columnBnkrgl_Id.AutoIncrementStep = -1;
                this.columnBnkrgl_Id.AllowDBNull = false;
                this.columnBnkrgl_Id.Unique = true;
                this.columnBnkrgl_DispStatus.MaxLength = 75;
                this.columnBnkrgl_VerwerkId.AllowDBNull = false;
                this.columnBnkrgl_Bankregel.MaxLength = 2147483647;
                this.columnBnkrgl_BstlId.AllowDBNull = false;
                this.columnBnkrgl_Mutatiedatum.AllowDBNull = false;
                this.columnBnkrgl_Opmerking.MaxLength = 250;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public BankregelRow NewBankregelRow() {
                return ((BankregelRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new BankregelRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Type GetRowType() {
                return typeof(BankregelRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.BankregelRowChanged != null)) {
                    this.BankregelRowChanged(this, new BankregelRowChangeEvent(((BankregelRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.BankregelRowChanging != null)) {
                    this.BankregelRowChanging(this, new BankregelRowChangeEvent(((BankregelRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.BankregelRowDeleted != null)) {
                    this.BankregelRowDeleted(this, new BankregelRowChangeEvent(((BankregelRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.BankregelRowDeleting != null)) {
                    this.BankregelRowDeleting(this, new BankregelRowChangeEvent(((BankregelRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void RemoveBankregelRow(BankregelRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                _Cmbap_dataDataSet ds = new _Cmbap_dataDataSet();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "BankregelDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class BestellingDataTable : global::System.Data.TypedTableBase<BestellingRow> {
            
            private global::System.Data.DataColumn columnBstl_Id;
            
            private global::System.Data.DataColumn columnBstl_StatusId;
            
            private global::System.Data.DataColumn columnBstl_Dispstatus;
            
            private global::System.Data.DataColumn columnBstl_BgnrId;
            
            private global::System.Data.DataColumn columnBstl_DispBgnr;
            
            private global::System.Data.DataColumn columnBstl_KlBgId;
            
            private global::System.Data.DataColumn columnBstl_DispKlBg;
            
            private global::System.Data.DataColumn columnBstl_VerwerkperiodeId;
            
            private global::System.Data.DataColumn columnBstl_Valutadatum;
            
            private global::System.Data.DataColumn columnBstl_Bestelbedrag;
            
            private global::System.Data.DataColumn columnBstl_Diversen;
            
            private global::System.Data.DataColumn columnBstl_DiversenId;
            
            private global::System.Data.DataColumn columnBstl_DispDiversen;
            
            private global::System.Data.DataColumn columnBstl_Verschil;
            
            private global::System.Data.DataColumn columnBstl_VerschilId;
            
            private global::System.Data.DataColumn columnBstl_DispVerschil;
            
            private global::System.Data.DataColumn columnBstl_Vastekostenperbestelling;
            
            private global::System.Data.DataColumn columnBstl_BonnengevraagdJN;
            
            private global::System.Data.DataColumn columnBstl_Mutatiedatum;
            
            private global::System.Data.DataColumn columnBstl_Opmerking;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public BestellingDataTable() {
                this.TableName = "Bestelling";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal BestellingDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected BestellingDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn Bstl_IdColumn {
                get {
                    return this.columnBstl_Id;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn Bstl_StatusIdColumn {
                get {
                    return this.columnBstl_StatusId;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn Bstl_DispstatusColumn {
                get {
                    return this.columnBstl_Dispstatus;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn Bstl_BgnrIdColumn {
                get {
                    return this.columnBstl_BgnrId;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn Bstl_DispBgnrColumn {
                get {
                    return this.columnBstl_DispBgnr;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn Bstl_KlBgIdColumn {
                get {
                    return this.columnBstl_KlBgId;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn Bstl_DispKlBgColumn {
                get {
                    return this.columnBstl_DispKlBg;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn Bstl_VerwerkperiodeIdColumn {
                get {
                    return this.columnBstl_VerwerkperiodeId;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn Bstl_ValutadatumColumn {
                get {
                    return this.columnBstl_Valutadatum;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn Bstl_BestelbedragColumn {
                get {
                    return this.columnBstl_Bestelbedrag;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn Bstl_DiversenColumn {
                get {
                    return this.columnBstl_Diversen;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn Bstl_DiversenIdColumn {
                get {
                    return this.columnBstl_DiversenId;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn Bstl_DispDiversenColumn {
                get {
                    return this.columnBstl_DispDiversen;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn Bstl_VerschilColumn {
                get {
                    return this.columnBstl_Verschil;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn Bstl_VerschilIdColumn {
                get {
                    return this.columnBstl_VerschilId;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn Bstl_DispVerschilColumn {
                get {
                    return this.columnBstl_DispVerschil;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn Bstl_VastekostenperbestellingColumn {
                get {
                    return this.columnBstl_Vastekostenperbestelling;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn Bstl_BonnengevraagdJNColumn {
                get {
                    return this.columnBstl_BonnengevraagdJN;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn Bstl_MutatiedatumColumn {
                get {
                    return this.columnBstl_Mutatiedatum;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn Bstl_OpmerkingColumn {
                get {
                    return this.columnBstl_Opmerking;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public BestellingRow this[int index] {
                get {
                    return ((BestellingRow)(this.Rows[index]));
                }
            }
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event BestellingRowChangeEventHandler BestellingRowChanging;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event BestellingRowChangeEventHandler BestellingRowChanged;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event BestellingRowChangeEventHandler BestellingRowDeleting;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event BestellingRowChangeEventHandler BestellingRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void AddBestellingRow(BestellingRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public BestellingRow AddBestellingRow(
                        long Bstl_StatusId, 
                        string Bstl_Dispstatus, 
                        long Bstl_BgnrId, 
                        string Bstl_DispBgnr, 
                        long Bstl_KlBgId, 
                        string Bstl_DispKlBg, 
                        long Bstl_VerwerkperiodeId, 
                        System.DateTime Bstl_Valutadatum, 
                        decimal Bstl_Bestelbedrag, 
                        decimal Bstl_Diversen, 
                        long Bstl_DiversenId, 
                        string Bstl_DispDiversen, 
                        decimal Bstl_Verschil, 
                        long Bstl_VerschilId, 
                        string Bstl_DispVerschil, 
                        decimal Bstl_Vastekostenperbestelling, 
                        long Bstl_BonnengevraagdJN, 
                        System.DateTime Bstl_Mutatiedatum, 
                        string Bstl_Opmerking) {
                BestellingRow rowBestellingRow = ((BestellingRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        null,
                        Bstl_StatusId,
                        Bstl_Dispstatus,
                        Bstl_BgnrId,
                        Bstl_DispBgnr,
                        Bstl_KlBgId,
                        Bstl_DispKlBg,
                        Bstl_VerwerkperiodeId,
                        Bstl_Valutadatum,
                        Bstl_Bestelbedrag,
                        Bstl_Diversen,
                        Bstl_DiversenId,
                        Bstl_DispDiversen,
                        Bstl_Verschil,
                        Bstl_VerschilId,
                        Bstl_DispVerschil,
                        Bstl_Vastekostenperbestelling,
                        Bstl_BonnengevraagdJN,
                        Bstl_Mutatiedatum,
                        Bstl_Opmerking};
                rowBestellingRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowBestellingRow);
                return rowBestellingRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public BestellingRow FindByBstl_Id(long Bstl_Id) {
                return ((BestellingRow)(this.Rows.Find(new object[] {
                            Bstl_Id})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public override global::System.Data.DataTable Clone() {
                BestellingDataTable cln = ((BestellingDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataTable CreateInstance() {
                return new BestellingDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal void InitVars() {
                this.columnBstl_Id = base.Columns["Bstl_Id"];
                this.columnBstl_StatusId = base.Columns["Bstl_StatusId"];
                this.columnBstl_Dispstatus = base.Columns["Bstl_Dispstatus"];
                this.columnBstl_BgnrId = base.Columns["Bstl_BgnrId"];
                this.columnBstl_DispBgnr = base.Columns["Bstl_DispBgnr"];
                this.columnBstl_KlBgId = base.Columns["Bstl_KlBgId"];
                this.columnBstl_DispKlBg = base.Columns["Bstl_DispKlBg"];
                this.columnBstl_VerwerkperiodeId = base.Columns["Bstl_VerwerkperiodeId"];
                this.columnBstl_Valutadatum = base.Columns["Bstl_Valutadatum"];
                this.columnBstl_Bestelbedrag = base.Columns["Bstl_Bestelbedrag"];
                this.columnBstl_Diversen = base.Columns["Bstl_Diversen"];
                this.columnBstl_DiversenId = base.Columns["Bstl_DiversenId"];
                this.columnBstl_DispDiversen = base.Columns["Bstl_DispDiversen"];
                this.columnBstl_Verschil = base.Columns["Bstl_Verschil"];
                this.columnBstl_VerschilId = base.Columns["Bstl_VerschilId"];
                this.columnBstl_DispVerschil = base.Columns["Bstl_DispVerschil"];
                this.columnBstl_Vastekostenperbestelling = base.Columns["Bstl_Vastekostenperbestelling"];
                this.columnBstl_BonnengevraagdJN = base.Columns["Bstl_BonnengevraagdJN"];
                this.columnBstl_Mutatiedatum = base.Columns["Bstl_Mutatiedatum"];
                this.columnBstl_Opmerking = base.Columns["Bstl_Opmerking"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            private void InitClass() {
                this.columnBstl_Id = new global::System.Data.DataColumn("Bstl_Id", typeof(long), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnBstl_Id);
                this.columnBstl_StatusId = new global::System.Data.DataColumn("Bstl_StatusId", typeof(long), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnBstl_StatusId);
                this.columnBstl_Dispstatus = new global::System.Data.DataColumn("Bstl_Dispstatus", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnBstl_Dispstatus);
                this.columnBstl_BgnrId = new global::System.Data.DataColumn("Bstl_BgnrId", typeof(long), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnBstl_BgnrId);
                this.columnBstl_DispBgnr = new global::System.Data.DataColumn("Bstl_DispBgnr", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnBstl_DispBgnr);
                this.columnBstl_KlBgId = new global::System.Data.DataColumn("Bstl_KlBgId", typeof(long), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnBstl_KlBgId);
                this.columnBstl_DispKlBg = new global::System.Data.DataColumn("Bstl_DispKlBg", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnBstl_DispKlBg);
                this.columnBstl_VerwerkperiodeId = new global::System.Data.DataColumn("Bstl_VerwerkperiodeId", typeof(long), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnBstl_VerwerkperiodeId);
                this.columnBstl_Valutadatum = new global::System.Data.DataColumn("Bstl_Valutadatum", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnBstl_Valutadatum);
                this.columnBstl_Bestelbedrag = new global::System.Data.DataColumn("Bstl_Bestelbedrag", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnBstl_Bestelbedrag);
                this.columnBstl_Diversen = new global::System.Data.DataColumn("Bstl_Diversen", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnBstl_Diversen);
                this.columnBstl_DiversenId = new global::System.Data.DataColumn("Bstl_DiversenId", typeof(long), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnBstl_DiversenId);
                this.columnBstl_DispDiversen = new global::System.Data.DataColumn("Bstl_DispDiversen", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnBstl_DispDiversen);
                this.columnBstl_Verschil = new global::System.Data.DataColumn("Bstl_Verschil", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnBstl_Verschil);
                this.columnBstl_VerschilId = new global::System.Data.DataColumn("Bstl_VerschilId", typeof(long), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnBstl_VerschilId);
                this.columnBstl_DispVerschil = new global::System.Data.DataColumn("Bstl_DispVerschil", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnBstl_DispVerschil);
                this.columnBstl_Vastekostenperbestelling = new global::System.Data.DataColumn("Bstl_Vastekostenperbestelling", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnBstl_Vastekostenperbestelling);
                this.columnBstl_BonnengevraagdJN = new global::System.Data.DataColumn("Bstl_BonnengevraagdJN", typeof(long), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnBstl_BonnengevraagdJN);
                this.columnBstl_Mutatiedatum = new global::System.Data.DataColumn("Bstl_Mutatiedatum", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnBstl_Mutatiedatum);
                this.columnBstl_Opmerking = new global::System.Data.DataColumn("Bstl_Opmerking", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnBstl_Opmerking);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnBstl_Id}, true));
                this.columnBstl_Id.AutoIncrement = true;
                this.columnBstl_Id.AutoIncrementSeed = -1;
                this.columnBstl_Id.AutoIncrementStep = -1;
                this.columnBstl_Id.AllowDBNull = false;
                this.columnBstl_Id.Unique = true;
                this.columnBstl_Dispstatus.MaxLength = 75;
                this.columnBstl_BgnrId.AllowDBNull = false;
                this.columnBstl_DispBgnr.MaxLength = 18;
                this.columnBstl_KlBgId.AllowDBNull = false;
                this.columnBstl_DispKlBg.MaxLength = 70;
                this.columnBstl_Valutadatum.AllowDBNull = false;
                this.columnBstl_Bestelbedrag.AllowDBNull = false;
                this.columnBstl_DispDiversen.MaxLength = 50;
                this.columnBstl_DispVerschil.MaxLength = 50;
                this.columnBstl_BonnengevraagdJN.AllowDBNull = false;
                this.columnBstl_Opmerking.MaxLength = 250;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public BestellingRow NewBestellingRow() {
                return ((BestellingRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new BestellingRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Type GetRowType() {
                return typeof(BestellingRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.BestellingRowChanged != null)) {
                    this.BestellingRowChanged(this, new BestellingRowChangeEvent(((BestellingRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.BestellingRowChanging != null)) {
                    this.BestellingRowChanging(this, new BestellingRowChangeEvent(((BestellingRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.BestellingRowDeleted != null)) {
                    this.BestellingRowDeleted(this, new BestellingRowChangeEvent(((BestellingRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.BestellingRowDeleting != null)) {
                    this.BestellingRowDeleting(this, new BestellingRowChangeEvent(((BestellingRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void RemoveBestellingRow(BestellingRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                _Cmbap_dataDataSet ds = new _Cmbap_dataDataSet();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "BestellingDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class BestelregelDataTable : global::System.Data.TypedTableBase<BestelregelRow> {
            
            private global::System.Data.DataColumn columnBstlr_Id;
            
            private global::System.Data.DataColumn columnBstlr_BstlId;
            
            private global::System.Data.DataColumn columnBstlr_StatusId;
            
            private global::System.Data.DataColumn columnBstlr_Dispstatus;
            
            private global::System.Data.DataColumn columnBstlr_ProdId;
            
            private global::System.Data.DataColumn columnBstlr_DispProduct;
            
            private global::System.Data.DataColumn columnBstlr_Aantal;
            
            private global::System.Data.DataColumn columnBstlr_Beginnr;
            
            private global::System.Data.DataColumn columnBstlr_Eindnr;
            
            private global::System.Data.DataColumn columnBstlr_Voorraad;
            
            private global::System.Data.DataColumn columnBstlr_Extranr1;
            
            private global::System.Data.DataColumn columnBstlr_Extranr2;
            
            private global::System.Data.DataColumn columnBstlr_Extranr3;
            
            private global::System.Data.DataColumn columnBstlr_Mutatiedatum;
            
            private global::System.Data.DataColumn columnBstlr_Opmerking;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public BestelregelDataTable() {
                this.TableName = "Bestelregel";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal BestelregelDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected BestelregelDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn Bstlr_IdColumn {
                get {
                    return this.columnBstlr_Id;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn Bstlr_BstlIdColumn {
                get {
                    return this.columnBstlr_BstlId;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn Bstlr_StatusIdColumn {
                get {
                    return this.columnBstlr_StatusId;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn Bstlr_DispstatusColumn {
                get {
                    return this.columnBstlr_Dispstatus;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn Bstlr_ProdIdColumn {
                get {
                    return this.columnBstlr_ProdId;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn Bstlr_DispProductColumn {
                get {
                    return this.columnBstlr_DispProduct;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn Bstlr_AantalColumn {
                get {
                    return this.columnBstlr_Aantal;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn Bstlr_BeginnrColumn {
                get {
                    return this.columnBstlr_Beginnr;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn Bstlr_EindnrColumn {
                get {
                    return this.columnBstlr_Eindnr;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn Bstlr_VoorraadColumn {
                get {
                    return this.columnBstlr_Voorraad;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn Bstlr_Extranr1Column {
                get {
                    return this.columnBstlr_Extranr1;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn Bstlr_Extranr2Column {
                get {
                    return this.columnBstlr_Extranr2;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn Bstlr_Extranr3Column {
                get {
                    return this.columnBstlr_Extranr3;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn Bstlr_MutatiedatumColumn {
                get {
                    return this.columnBstlr_Mutatiedatum;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn Bstlr_OpmerkingColumn {
                get {
                    return this.columnBstlr_Opmerking;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public BestelregelRow this[int index] {
                get {
                    return ((BestelregelRow)(this.Rows[index]));
                }
            }
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event BestelregelRowChangeEventHandler BestelregelRowChanging;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event BestelregelRowChangeEventHandler BestelregelRowChanged;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event BestelregelRowChangeEventHandler BestelregelRowDeleting;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event BestelregelRowChangeEventHandler BestelregelRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void AddBestelregelRow(BestelregelRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public BestelregelRow AddBestelregelRow(long Bstlr_BstlId, long Bstlr_StatusId, string Bstlr_Dispstatus, long Bstlr_ProdId, string Bstlr_DispProduct, long Bstlr_Aantal, long Bstlr_Beginnr, long Bstlr_Eindnr, long Bstlr_Voorraad, long Bstlr_Extranr1, long Bstlr_Extranr2, long Bstlr_Extranr3, System.DateTime Bstlr_Mutatiedatum, string Bstlr_Opmerking) {
                BestelregelRow rowBestelregelRow = ((BestelregelRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        null,
                        Bstlr_BstlId,
                        Bstlr_StatusId,
                        Bstlr_Dispstatus,
                        Bstlr_ProdId,
                        Bstlr_DispProduct,
                        Bstlr_Aantal,
                        Bstlr_Beginnr,
                        Bstlr_Eindnr,
                        Bstlr_Voorraad,
                        Bstlr_Extranr1,
                        Bstlr_Extranr2,
                        Bstlr_Extranr3,
                        Bstlr_Mutatiedatum,
                        Bstlr_Opmerking};
                rowBestelregelRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowBestelregelRow);
                return rowBestelregelRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public BestelregelRow FindByBstlr_Id(long Bstlr_Id) {
                return ((BestelregelRow)(this.Rows.Find(new object[] {
                            Bstlr_Id})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public override global::System.Data.DataTable Clone() {
                BestelregelDataTable cln = ((BestelregelDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataTable CreateInstance() {
                return new BestelregelDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal void InitVars() {
                this.columnBstlr_Id = base.Columns["Bstlr_Id"];
                this.columnBstlr_BstlId = base.Columns["Bstlr_BstlId"];
                this.columnBstlr_StatusId = base.Columns["Bstlr_StatusId"];
                this.columnBstlr_Dispstatus = base.Columns["Bstlr_Dispstatus"];
                this.columnBstlr_ProdId = base.Columns["Bstlr_ProdId"];
                this.columnBstlr_DispProduct = base.Columns["Bstlr_DispProduct"];
                this.columnBstlr_Aantal = base.Columns["Bstlr_Aantal"];
                this.columnBstlr_Beginnr = base.Columns["Bstlr_Beginnr"];
                this.columnBstlr_Eindnr = base.Columns["Bstlr_Eindnr"];
                this.columnBstlr_Voorraad = base.Columns["Bstlr_Voorraad"];
                this.columnBstlr_Extranr1 = base.Columns["Bstlr_Extranr1"];
                this.columnBstlr_Extranr2 = base.Columns["Bstlr_Extranr2"];
                this.columnBstlr_Extranr3 = base.Columns["Bstlr_Extranr3"];
                this.columnBstlr_Mutatiedatum = base.Columns["Bstlr_Mutatiedatum"];
                this.columnBstlr_Opmerking = base.Columns["Bstlr_Opmerking"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            private void InitClass() {
                this.columnBstlr_Id = new global::System.Data.DataColumn("Bstlr_Id", typeof(long), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnBstlr_Id);
                this.columnBstlr_BstlId = new global::System.Data.DataColumn("Bstlr_BstlId", typeof(long), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnBstlr_BstlId);
                this.columnBstlr_StatusId = new global::System.Data.DataColumn("Bstlr_StatusId", typeof(long), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnBstlr_StatusId);
                this.columnBstlr_Dispstatus = new global::System.Data.DataColumn("Bstlr_Dispstatus", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnBstlr_Dispstatus);
                this.columnBstlr_ProdId = new global::System.Data.DataColumn("Bstlr_ProdId", typeof(long), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnBstlr_ProdId);
                this.columnBstlr_DispProduct = new global::System.Data.DataColumn("Bstlr_DispProduct", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnBstlr_DispProduct);
                this.columnBstlr_Aantal = new global::System.Data.DataColumn("Bstlr_Aantal", typeof(long), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnBstlr_Aantal);
                this.columnBstlr_Beginnr = new global::System.Data.DataColumn("Bstlr_Beginnr", typeof(long), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnBstlr_Beginnr);
                this.columnBstlr_Eindnr = new global::System.Data.DataColumn("Bstlr_Eindnr", typeof(long), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnBstlr_Eindnr);
                this.columnBstlr_Voorraad = new global::System.Data.DataColumn("Bstlr_Voorraad", typeof(long), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnBstlr_Voorraad);
                this.columnBstlr_Extranr1 = new global::System.Data.DataColumn("Bstlr_Extranr1", typeof(long), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnBstlr_Extranr1);
                this.columnBstlr_Extranr2 = new global::System.Data.DataColumn("Bstlr_Extranr2", typeof(long), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnBstlr_Extranr2);
                this.columnBstlr_Extranr3 = new global::System.Data.DataColumn("Bstlr_Extranr3", typeof(long), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnBstlr_Extranr3);
                this.columnBstlr_Mutatiedatum = new global::System.Data.DataColumn("Bstlr_Mutatiedatum", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnBstlr_Mutatiedatum);
                this.columnBstlr_Opmerking = new global::System.Data.DataColumn("Bstlr_Opmerking", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnBstlr_Opmerking);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnBstlr_Id}, true));
                this.columnBstlr_Id.AutoIncrement = true;
                this.columnBstlr_Id.AutoIncrementSeed = -1;
                this.columnBstlr_Id.AutoIncrementStep = -1;
                this.columnBstlr_Id.AllowDBNull = false;
                this.columnBstlr_Id.Unique = true;
                this.columnBstlr_BstlId.AllowDBNull = false;
                this.columnBstlr_Dispstatus.MaxLength = 75;
                this.columnBstlr_ProdId.AllowDBNull = false;
                this.columnBstlr_DispProduct.MaxLength = 35;
                this.columnBstlr_Aantal.AllowDBNull = false;
                this.columnBstlr_Mutatiedatum.AllowDBNull = false;
                this.columnBstlr_Opmerking.MaxLength = 250;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public BestelregelRow NewBestelregelRow() {
                return ((BestelregelRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new BestelregelRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Type GetRowType() {
                return typeof(BestelregelRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.BestelregelRowChanged != null)) {
                    this.BestelregelRowChanged(this, new BestelregelRowChangeEvent(((BestelregelRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.BestelregelRowChanging != null)) {
                    this.BestelregelRowChanging(this, new BestelregelRowChangeEvent(((BestelregelRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.BestelregelRowDeleted != null)) {
                    this.BestelregelRowDeleted(this, new BestelregelRowChangeEvent(((BestelregelRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.BestelregelRowDeleting != null)) {
                    this.BestelregelRowDeleting(this, new BestelregelRowChangeEvent(((BestelregelRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void RemoveBestelregelRow(BestelregelRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                _Cmbap_dataDataSet ds = new _Cmbap_dataDataSet();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "BestelregelDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class Component_tekstDataTable : global::System.Data.TypedTableBase<Component_tekstRow> {
            
            private global::System.Data.DataColumn columnComponenttekstId;
            
            private global::System.Data.DataColumn columnCT_Taal;
            
            private global::System.Data.DataColumn columnCT_Type;
            
            private global::System.Data.DataColumn columnCT_Componentnaam;
            
            private global::System.Data.DataColumn columnCT_Componenttekst;
            
            private global::System.Data.DataColumn columnCT_Mutatiedatum;
            
            private global::System.Data.DataColumn columnCT_Opmerking;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public Component_tekstDataTable() {
                this.TableName = "Component_tekst";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal Component_tekstDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected Component_tekstDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ComponenttekstIdColumn {
                get {
                    return this.columnComponenttekstId;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn CT_TaalColumn {
                get {
                    return this.columnCT_Taal;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn CT_TypeColumn {
                get {
                    return this.columnCT_Type;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn CT_ComponentnaamColumn {
                get {
                    return this.columnCT_Componentnaam;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn CT_ComponenttekstColumn {
                get {
                    return this.columnCT_Componenttekst;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn CT_MutatiedatumColumn {
                get {
                    return this.columnCT_Mutatiedatum;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn CT_OpmerkingColumn {
                get {
                    return this.columnCT_Opmerking;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public Component_tekstRow this[int index] {
                get {
                    return ((Component_tekstRow)(this.Rows[index]));
                }
            }
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event Component_tekstRowChangeEventHandler Component_tekstRowChanging;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event Component_tekstRowChangeEventHandler Component_tekstRowChanged;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event Component_tekstRowChangeEventHandler Component_tekstRowDeleting;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event Component_tekstRowChangeEventHandler Component_tekstRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void AddComponent_tekstRow(Component_tekstRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public Component_tekstRow AddComponent_tekstRow(string CT_Taal, object CT_Type, string CT_Componentnaam, string CT_Componenttekst, System.DateTime CT_Mutatiedatum, string CT_Opmerking) {
                Component_tekstRow rowComponent_tekstRow = ((Component_tekstRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        null,
                        CT_Taal,
                        CT_Type,
                        CT_Componentnaam,
                        CT_Componenttekst,
                        CT_Mutatiedatum,
                        CT_Opmerking};
                rowComponent_tekstRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowComponent_tekstRow);
                return rowComponent_tekstRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public Component_tekstRow FindByComponenttekstId(long ComponenttekstId) {
                return ((Component_tekstRow)(this.Rows.Find(new object[] {
                            ComponenttekstId})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public override global::System.Data.DataTable Clone() {
                Component_tekstDataTable cln = ((Component_tekstDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataTable CreateInstance() {
                return new Component_tekstDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal void InitVars() {
                this.columnComponenttekstId = base.Columns["ComponenttekstId"];
                this.columnCT_Taal = base.Columns["CT_Taal"];
                this.columnCT_Type = base.Columns["CT_Type"];
                this.columnCT_Componentnaam = base.Columns["CT_Componentnaam"];
                this.columnCT_Componenttekst = base.Columns["CT_Componenttekst"];
                this.columnCT_Mutatiedatum = base.Columns["CT_Mutatiedatum"];
                this.columnCT_Opmerking = base.Columns["CT_Opmerking"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            private void InitClass() {
                this.columnComponenttekstId = new global::System.Data.DataColumn("ComponenttekstId", typeof(long), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnComponenttekstId);
                this.columnCT_Taal = new global::System.Data.DataColumn("CT_Taal", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCT_Taal);
                this.columnCT_Type = new global::System.Data.DataColumn("CT_Type", typeof(object), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCT_Type);
                this.columnCT_Componentnaam = new global::System.Data.DataColumn("CT_Componentnaam", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCT_Componentnaam);
                this.columnCT_Componenttekst = new global::System.Data.DataColumn("CT_Componenttekst", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCT_Componenttekst);
                this.columnCT_Mutatiedatum = new global::System.Data.DataColumn("CT_Mutatiedatum", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCT_Mutatiedatum);
                this.columnCT_Opmerking = new global::System.Data.DataColumn("CT_Opmerking", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCT_Opmerking);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnComponenttekstId}, true));
                this.columnComponenttekstId.AutoIncrement = true;
                this.columnComponenttekstId.AutoIncrementSeed = -1;
                this.columnComponenttekstId.AutoIncrementStep = -1;
                this.columnComponenttekstId.AllowDBNull = false;
                this.columnComponenttekstId.Unique = true;
                this.columnCT_Taal.MaxLength = 5;
                this.columnCT_Type.AllowDBNull = false;
                this.columnCT_Componentnaam.AllowDBNull = false;
                this.columnCT_Componentnaam.MaxLength = 20;
                this.columnCT_Componenttekst.AllowDBNull = false;
                this.columnCT_Componenttekst.MaxLength = 20;
                this.columnCT_Mutatiedatum.AllowDBNull = false;
                this.columnCT_Opmerking.MaxLength = 250;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public Component_tekstRow NewComponent_tekstRow() {
                return ((Component_tekstRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new Component_tekstRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Type GetRowType() {
                return typeof(Component_tekstRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.Component_tekstRowChanged != null)) {
                    this.Component_tekstRowChanged(this, new Component_tekstRowChangeEvent(((Component_tekstRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.Component_tekstRowChanging != null)) {
                    this.Component_tekstRowChanging(this, new Component_tekstRowChangeEvent(((Component_tekstRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.Component_tekstRowDeleted != null)) {
                    this.Component_tekstRowDeleted(this, new Component_tekstRowChangeEvent(((Component_tekstRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.Component_tekstRowDeleting != null)) {
                    this.Component_tekstRowDeleting(this, new Component_tekstRowChangeEvent(((Component_tekstRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void RemoveComponent_tekstRow(Component_tekstRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                _Cmbap_dataDataSet ds = new _Cmbap_dataDataSet();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "Component_tekstDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class DbFilesDataTable : global::System.Data.TypedTableBase<DbFilesRow> {
            
            private global::System.Data.DataColumn columnDbFilesId;
            
            private global::System.Data.DataColumn columnDbFiles_Naam;
            
            private global::System.Data.DataColumn columnDbFiles_Omschrijving;
            
            private global::System.Data.DataColumn columnDbFiles_Nr;
            
            private global::System.Data.DataColumn columnDbFiles_Kort;
            
            private global::System.Data.DataColumn columnDbFiles_Mutatiedatum;
            
            private global::System.Data.DataColumn columnDbFiles_Opmerking;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public DbFilesDataTable() {
                this.TableName = "DbFiles";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal DbFilesDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected DbFilesDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn DbFilesIdColumn {
                get {
                    return this.columnDbFilesId;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn DbFiles_NaamColumn {
                get {
                    return this.columnDbFiles_Naam;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn DbFiles_OmschrijvingColumn {
                get {
                    return this.columnDbFiles_Omschrijving;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn DbFiles_NrColumn {
                get {
                    return this.columnDbFiles_Nr;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn DbFiles_KortColumn {
                get {
                    return this.columnDbFiles_Kort;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn DbFiles_MutatiedatumColumn {
                get {
                    return this.columnDbFiles_Mutatiedatum;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn DbFiles_OpmerkingColumn {
                get {
                    return this.columnDbFiles_Opmerking;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public DbFilesRow this[int index] {
                get {
                    return ((DbFilesRow)(this.Rows[index]));
                }
            }
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event DbFilesRowChangeEventHandler DbFilesRowChanging;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event DbFilesRowChangeEventHandler DbFilesRowChanged;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event DbFilesRowChangeEventHandler DbFilesRowDeleting;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event DbFilesRowChangeEventHandler DbFilesRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void AddDbFilesRow(DbFilesRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public DbFilesRow AddDbFilesRow(string DbFiles_Naam, string DbFiles_Omschrijving, long DbFiles_Nr, string DbFiles_Kort, System.DateTime DbFiles_Mutatiedatum, string DbFiles_Opmerking) {
                DbFilesRow rowDbFilesRow = ((DbFilesRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        null,
                        DbFiles_Naam,
                        DbFiles_Omschrijving,
                        DbFiles_Nr,
                        DbFiles_Kort,
                        DbFiles_Mutatiedatum,
                        DbFiles_Opmerking};
                rowDbFilesRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowDbFilesRow);
                return rowDbFilesRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public DbFilesRow FindByDbFilesId(long DbFilesId) {
                return ((DbFilesRow)(this.Rows.Find(new object[] {
                            DbFilesId})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public override global::System.Data.DataTable Clone() {
                DbFilesDataTable cln = ((DbFilesDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataTable CreateInstance() {
                return new DbFilesDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal void InitVars() {
                this.columnDbFilesId = base.Columns["DbFilesId"];
                this.columnDbFiles_Naam = base.Columns["DbFiles_Naam"];
                this.columnDbFiles_Omschrijving = base.Columns["DbFiles_Omschrijving"];
                this.columnDbFiles_Nr = base.Columns["DbFiles_Nr"];
                this.columnDbFiles_Kort = base.Columns["DbFiles_Kort"];
                this.columnDbFiles_Mutatiedatum = base.Columns["DbFiles_Mutatiedatum"];
                this.columnDbFiles_Opmerking = base.Columns["DbFiles_Opmerking"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            private void InitClass() {
                this.columnDbFilesId = new global::System.Data.DataColumn("DbFilesId", typeof(long), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDbFilesId);
                this.columnDbFiles_Naam = new global::System.Data.DataColumn("DbFiles_Naam", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDbFiles_Naam);
                this.columnDbFiles_Omschrijving = new global::System.Data.DataColumn("DbFiles_Omschrijving", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDbFiles_Omschrijving);
                this.columnDbFiles_Nr = new global::System.Data.DataColumn("DbFiles_Nr", typeof(long), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDbFiles_Nr);
                this.columnDbFiles_Kort = new global::System.Data.DataColumn("DbFiles_Kort", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDbFiles_Kort);
                this.columnDbFiles_Mutatiedatum = new global::System.Data.DataColumn("DbFiles_Mutatiedatum", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDbFiles_Mutatiedatum);
                this.columnDbFiles_Opmerking = new global::System.Data.DataColumn("DbFiles_Opmerking", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDbFiles_Opmerking);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnDbFiles_Naam}, false));
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint2", new global::System.Data.DataColumn[] {
                                this.columnDbFiles_Nr}, false));
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint3", new global::System.Data.DataColumn[] {
                                this.columnDbFilesId}, true));
                this.columnDbFilesId.AutoIncrement = true;
                this.columnDbFilesId.AutoIncrementSeed = -1;
                this.columnDbFilesId.AutoIncrementStep = -1;
                this.columnDbFilesId.AllowDBNull = false;
                this.columnDbFilesId.Unique = true;
                this.columnDbFiles_Naam.AllowDBNull = false;
                this.columnDbFiles_Naam.Unique = true;
                this.columnDbFiles_Naam.MaxLength = 30;
                this.columnDbFiles_Omschrijving.MaxLength = 100;
                this.columnDbFiles_Nr.AllowDBNull = false;
                this.columnDbFiles_Nr.Unique = true;
                this.columnDbFiles_Kort.AllowDBNull = false;
                this.columnDbFiles_Kort.MaxLength = 4;
                this.columnDbFiles_Mutatiedatum.AllowDBNull = false;
                this.columnDbFiles_Opmerking.MaxLength = 250;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public DbFilesRow NewDbFilesRow() {
                return ((DbFilesRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new DbFilesRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Type GetRowType() {
                return typeof(DbFilesRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.DbFilesRowChanged != null)) {
                    this.DbFilesRowChanged(this, new DbFilesRowChangeEvent(((DbFilesRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.DbFilesRowChanging != null)) {
                    this.DbFilesRowChanging(this, new DbFilesRowChangeEvent(((DbFilesRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.DbFilesRowDeleted != null)) {
                    this.DbFilesRowDeleted(this, new DbFilesRowChangeEvent(((DbFilesRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.DbFilesRowDeleting != null)) {
                    this.DbFilesRowDeleting(this, new DbFilesRowChangeEvent(((DbFilesRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void RemoveDbFilesRow(DbFilesRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                _Cmbap_dataDataSet ds = new _Cmbap_dataDataSet();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "DbFilesDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class EmailDataTable : global::System.Data.TypedTableBase<EmailRow> {
            
            private global::System.Data.DataColumn columnEm_Id;
            
            private global::System.Data.DataColumn columnEm_StatusId;
            
            private global::System.Data.DataColumn columnEm_DispStatus;
            
            private global::System.Data.DataColumn columnEm_Afzender;
            
            private global::System.Data.DataColumn columnEm_EmailAdresId;
            
            private global::System.Data.DataColumn columnEm_Onderwerp;
            
            private global::System.Data.DataColumn columnEm_Bericht;
            
            private global::System.Data.DataColumn columnEm_BestellingId;
            
            private global::System.Data.DataColumn columnEm_Mutatiedatum;
            
            private global::System.Data.DataColumn columnEm_Opmerking;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public EmailDataTable() {
                this.TableName = "Email";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal EmailDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected EmailDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn Em_IdColumn {
                get {
                    return this.columnEm_Id;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn Em_StatusIdColumn {
                get {
                    return this.columnEm_StatusId;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn Em_DispStatusColumn {
                get {
                    return this.columnEm_DispStatus;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn Em_AfzenderColumn {
                get {
                    return this.columnEm_Afzender;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn Em_EmailAdresIdColumn {
                get {
                    return this.columnEm_EmailAdresId;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn Em_OnderwerpColumn {
                get {
                    return this.columnEm_Onderwerp;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn Em_BerichtColumn {
                get {
                    return this.columnEm_Bericht;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn Em_BestellingIdColumn {
                get {
                    return this.columnEm_BestellingId;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn Em_MutatiedatumColumn {
                get {
                    return this.columnEm_Mutatiedatum;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn Em_OpmerkingColumn {
                get {
                    return this.columnEm_Opmerking;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public EmailRow this[int index] {
                get {
                    return ((EmailRow)(this.Rows[index]));
                }
            }
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event EmailRowChangeEventHandler EmailRowChanging;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event EmailRowChangeEventHandler EmailRowChanged;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event EmailRowChangeEventHandler EmailRowDeleting;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event EmailRowChangeEventHandler EmailRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void AddEmailRow(EmailRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public EmailRow AddEmailRow(long Em_StatusId, string Em_DispStatus, string Em_Afzender, long Em_EmailAdresId, string Em_Onderwerp, byte[] Em_Bericht, long Em_BestellingId, System.DateTime Em_Mutatiedatum, string Em_Opmerking) {
                EmailRow rowEmailRow = ((EmailRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        null,
                        Em_StatusId,
                        Em_DispStatus,
                        Em_Afzender,
                        Em_EmailAdresId,
                        Em_Onderwerp,
                        Em_Bericht,
                        Em_BestellingId,
                        Em_Mutatiedatum,
                        Em_Opmerking};
                rowEmailRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowEmailRow);
                return rowEmailRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public EmailRow FindByEm_Id(long Em_Id) {
                return ((EmailRow)(this.Rows.Find(new object[] {
                            Em_Id})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public override global::System.Data.DataTable Clone() {
                EmailDataTable cln = ((EmailDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataTable CreateInstance() {
                return new EmailDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal void InitVars() {
                this.columnEm_Id = base.Columns["Em_Id"];
                this.columnEm_StatusId = base.Columns["Em_StatusId"];
                this.columnEm_DispStatus = base.Columns["Em_DispStatus"];
                this.columnEm_Afzender = base.Columns["Em_Afzender"];
                this.columnEm_EmailAdresId = base.Columns["Em_EmailAdresId"];
                this.columnEm_Onderwerp = base.Columns["Em_Onderwerp"];
                this.columnEm_Bericht = base.Columns["Em_Bericht"];
                this.columnEm_BestellingId = base.Columns["Em_BestellingId"];
                this.columnEm_Mutatiedatum = base.Columns["Em_Mutatiedatum"];
                this.columnEm_Opmerking = base.Columns["Em_Opmerking"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            private void InitClass() {
                this.columnEm_Id = new global::System.Data.DataColumn("Em_Id", typeof(long), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnEm_Id);
                this.columnEm_StatusId = new global::System.Data.DataColumn("Em_StatusId", typeof(long), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnEm_StatusId);
                this.columnEm_DispStatus = new global::System.Data.DataColumn("Em_DispStatus", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnEm_DispStatus);
                this.columnEm_Afzender = new global::System.Data.DataColumn("Em_Afzender", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnEm_Afzender);
                this.columnEm_EmailAdresId = new global::System.Data.DataColumn("Em_EmailAdresId", typeof(long), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnEm_EmailAdresId);
                this.columnEm_Onderwerp = new global::System.Data.DataColumn("Em_Onderwerp", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnEm_Onderwerp);
                this.columnEm_Bericht = new global::System.Data.DataColumn("Em_Bericht", typeof(byte[]), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnEm_Bericht);
                this.columnEm_BestellingId = new global::System.Data.DataColumn("Em_BestellingId", typeof(long), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnEm_BestellingId);
                this.columnEm_Mutatiedatum = new global::System.Data.DataColumn("Em_Mutatiedatum", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnEm_Mutatiedatum);
                this.columnEm_Opmerking = new global::System.Data.DataColumn("Em_Opmerking", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnEm_Opmerking);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnEm_Id}, true));
                this.columnEm_Id.AutoIncrement = true;
                this.columnEm_Id.AutoIncrementSeed = -1;
                this.columnEm_Id.AutoIncrementStep = -1;
                this.columnEm_Id.AllowDBNull = false;
                this.columnEm_Id.Unique = true;
                this.columnEm_DispStatus.MaxLength = 75;
                this.columnEm_Afzender.AllowDBNull = false;
                this.columnEm_Afzender.MaxLength = 100;
                this.columnEm_EmailAdresId.AllowDBNull = false;
                this.columnEm_Onderwerp.AllowDBNull = false;
                this.columnEm_Onderwerp.MaxLength = 150;
                this.columnEm_Mutatiedatum.AllowDBNull = false;
                this.columnEm_Opmerking.MaxLength = 250;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public EmailRow NewEmailRow() {
                return ((EmailRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new EmailRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Type GetRowType() {
                return typeof(EmailRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.EmailRowChanged != null)) {
                    this.EmailRowChanged(this, new EmailRowChangeEvent(((EmailRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.EmailRowChanging != null)) {
                    this.EmailRowChanging(this, new EmailRowChangeEvent(((EmailRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.EmailRowDeleted != null)) {
                    this.EmailRowDeleted(this, new EmailRowChangeEvent(((EmailRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.EmailRowDeleting != null)) {
                    this.EmailRowDeleting(this, new EmailRowChangeEvent(((EmailRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void RemoveEmailRow(EmailRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                _Cmbap_dataDataSet ds = new _Cmbap_dataDataSet();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "EmailDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class EmailadresDataTable : global::System.Data.TypedTableBase<EmailadresRow> {
            
            private global::System.Data.DataColumn columnEmladrs_Id;
            
            private global::System.Data.DataColumn columnEmladrs_StatusId;
            
            private global::System.Data.DataColumn columnEmladrs_DispStatus;
            
            private global::System.Data.DataColumn columnEmladrs_KlBgId;
            
            private global::System.Data.DataColumn columnEmladrs_DispKlBg;
            
            private global::System.Data.DataColumn columnEmladrs_Emailadres;
            
            private global::System.Data.DataColumn columnEmladrs_Mutatiedatum;
            
            private global::System.Data.DataColumn columnEmladrs_Opmerking;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public EmailadresDataTable() {
                this.TableName = "Emailadres";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal EmailadresDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected EmailadresDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn Emladrs_IdColumn {
                get {
                    return this.columnEmladrs_Id;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn Emladrs_StatusIdColumn {
                get {
                    return this.columnEmladrs_StatusId;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn Emladrs_DispStatusColumn {
                get {
                    return this.columnEmladrs_DispStatus;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn Emladrs_KlBgIdColumn {
                get {
                    return this.columnEmladrs_KlBgId;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn Emladrs_DispKlBgColumn {
                get {
                    return this.columnEmladrs_DispKlBg;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn Emladrs_EmailadresColumn {
                get {
                    return this.columnEmladrs_Emailadres;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn Emladrs_MutatiedatumColumn {
                get {
                    return this.columnEmladrs_Mutatiedatum;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn Emladrs_OpmerkingColumn {
                get {
                    return this.columnEmladrs_Opmerking;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public EmailadresRow this[int index] {
                get {
                    return ((EmailadresRow)(this.Rows[index]));
                }
            }
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event EmailadresRowChangeEventHandler EmailadresRowChanging;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event EmailadresRowChangeEventHandler EmailadresRowChanged;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event EmailadresRowChangeEventHandler EmailadresRowDeleting;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event EmailadresRowChangeEventHandler EmailadresRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void AddEmailadresRow(EmailadresRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public EmailadresRow AddEmailadresRow(long Emladrs_StatusId, string Emladrs_DispStatus, long Emladrs_KlBgId, string Emladrs_DispKlBg, string Emladrs_Emailadres, System.DateTime Emladrs_Mutatiedatum, string Emladrs_Opmerking) {
                EmailadresRow rowEmailadresRow = ((EmailadresRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        null,
                        Emladrs_StatusId,
                        Emladrs_DispStatus,
                        Emladrs_KlBgId,
                        Emladrs_DispKlBg,
                        Emladrs_Emailadres,
                        Emladrs_Mutatiedatum,
                        Emladrs_Opmerking};
                rowEmailadresRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowEmailadresRow);
                return rowEmailadresRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public EmailadresRow FindByEmladrs_Id(long Emladrs_Id) {
                return ((EmailadresRow)(this.Rows.Find(new object[] {
                            Emladrs_Id})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public override global::System.Data.DataTable Clone() {
                EmailadresDataTable cln = ((EmailadresDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataTable CreateInstance() {
                return new EmailadresDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal void InitVars() {
                this.columnEmladrs_Id = base.Columns["Emladrs_Id"];
                this.columnEmladrs_StatusId = base.Columns["Emladrs_StatusId"];
                this.columnEmladrs_DispStatus = base.Columns["Emladrs_DispStatus"];
                this.columnEmladrs_KlBgId = base.Columns["Emladrs_KlBgId"];
                this.columnEmladrs_DispKlBg = base.Columns["Emladrs_DispKlBg"];
                this.columnEmladrs_Emailadres = base.Columns["Emladrs_Emailadres"];
                this.columnEmladrs_Mutatiedatum = base.Columns["Emladrs_Mutatiedatum"];
                this.columnEmladrs_Opmerking = base.Columns["Emladrs_Opmerking"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            private void InitClass() {
                this.columnEmladrs_Id = new global::System.Data.DataColumn("Emladrs_Id", typeof(long), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnEmladrs_Id);
                this.columnEmladrs_StatusId = new global::System.Data.DataColumn("Emladrs_StatusId", typeof(long), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnEmladrs_StatusId);
                this.columnEmladrs_DispStatus = new global::System.Data.DataColumn("Emladrs_DispStatus", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnEmladrs_DispStatus);
                this.columnEmladrs_KlBgId = new global::System.Data.DataColumn("Emladrs_KlBgId", typeof(long), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnEmladrs_KlBgId);
                this.columnEmladrs_DispKlBg = new global::System.Data.DataColumn("Emladrs_DispKlBg", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnEmladrs_DispKlBg);
                this.columnEmladrs_Emailadres = new global::System.Data.DataColumn("Emladrs_Emailadres", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnEmladrs_Emailadres);
                this.columnEmladrs_Mutatiedatum = new global::System.Data.DataColumn("Emladrs_Mutatiedatum", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnEmladrs_Mutatiedatum);
                this.columnEmladrs_Opmerking = new global::System.Data.DataColumn("Emladrs_Opmerking", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnEmladrs_Opmerking);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnEmladrs_Id}, true));
                this.columnEmladrs_Id.AutoIncrement = true;
                this.columnEmladrs_Id.AutoIncrementSeed = -1;
                this.columnEmladrs_Id.AutoIncrementStep = -1;
                this.columnEmladrs_Id.AllowDBNull = false;
                this.columnEmladrs_Id.Unique = true;
                this.columnEmladrs_DispStatus.MaxLength = 75;
                this.columnEmladrs_KlBgId.AllowDBNull = false;
                this.columnEmladrs_DispKlBg.MaxLength = 75;
                this.columnEmladrs_Emailadres.AllowDBNull = false;
                this.columnEmladrs_Emailadres.MaxLength = 70;
                this.columnEmladrs_Mutatiedatum.AllowDBNull = false;
                this.columnEmladrs_Opmerking.MaxLength = 250;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public EmailadresRow NewEmailadresRow() {
                return ((EmailadresRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new EmailadresRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Type GetRowType() {
                return typeof(EmailadresRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.EmailadresRowChanged != null)) {
                    this.EmailadresRowChanged(this, new EmailadresRowChangeEvent(((EmailadresRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.EmailadresRowChanging != null)) {
                    this.EmailadresRowChanging(this, new EmailadresRowChangeEvent(((EmailadresRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.EmailadresRowDeleted != null)) {
                    this.EmailadresRowDeleted(this, new EmailadresRowChangeEvent(((EmailadresRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.EmailadresRowDeleting != null)) {
                    this.EmailadresRowDeleting(this, new EmailadresRowChangeEvent(((EmailadresRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void RemoveEmailadresRow(EmailadresRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                _Cmbap_dataDataSet ds = new _Cmbap_dataDataSet();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "EmailadresDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class GebruikerDataTable : global::System.Data.TypedTableBase<GebruikerRow> {
            
            private global::System.Data.DataColumn columnGebr_Id;
            
            private global::System.Data.DataColumn columnGebr_StatusId;
            
            private global::System.Data.DataColumn columnGebr_DispStatus;
            
            private global::System.Data.DataColumn columnGebr_Kort;
            
            private global::System.Data.DataColumn columnGebr_Lang;
            
            private global::System.Data.DataColumn columnGebr_Wachtwoord;
            
            private global::System.Data.DataColumn columnGebr_Mutatiedatum;
            
            private global::System.Data.DataColumn columnGebr_Opmerking;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public GebruikerDataTable() {
                this.TableName = "Gebruiker";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal GebruikerDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected GebruikerDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn Gebr_IdColumn {
                get {
                    return this.columnGebr_Id;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn Gebr_StatusIdColumn {
                get {
                    return this.columnGebr_StatusId;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn Gebr_DispStatusColumn {
                get {
                    return this.columnGebr_DispStatus;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn Gebr_KortColumn {
                get {
                    return this.columnGebr_Kort;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn Gebr_LangColumn {
                get {
                    return this.columnGebr_Lang;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn Gebr_WachtwoordColumn {
                get {
                    return this.columnGebr_Wachtwoord;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn Gebr_MutatiedatumColumn {
                get {
                    return this.columnGebr_Mutatiedatum;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn Gebr_OpmerkingColumn {
                get {
                    return this.columnGebr_Opmerking;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public GebruikerRow this[int index] {
                get {
                    return ((GebruikerRow)(this.Rows[index]));
                }
            }
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event GebruikerRowChangeEventHandler GebruikerRowChanging;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event GebruikerRowChangeEventHandler GebruikerRowChanged;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event GebruikerRowChangeEventHandler GebruikerRowDeleting;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event GebruikerRowChangeEventHandler GebruikerRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void AddGebruikerRow(GebruikerRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public GebruikerRow AddGebruikerRow(long Gebr_StatusId, string Gebr_DispStatus, string Gebr_Kort, string Gebr_Lang, string Gebr_Wachtwoord, System.DateTime Gebr_Mutatiedatum, string Gebr_Opmerking) {
                GebruikerRow rowGebruikerRow = ((GebruikerRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        null,
                        Gebr_StatusId,
                        Gebr_DispStatus,
                        Gebr_Kort,
                        Gebr_Lang,
                        Gebr_Wachtwoord,
                        Gebr_Mutatiedatum,
                        Gebr_Opmerking};
                rowGebruikerRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowGebruikerRow);
                return rowGebruikerRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public GebruikerRow FindByGebr_Id(long Gebr_Id) {
                return ((GebruikerRow)(this.Rows.Find(new object[] {
                            Gebr_Id})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public override global::System.Data.DataTable Clone() {
                GebruikerDataTable cln = ((GebruikerDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataTable CreateInstance() {
                return new GebruikerDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal void InitVars() {
                this.columnGebr_Id = base.Columns["Gebr_Id"];
                this.columnGebr_StatusId = base.Columns["Gebr_StatusId"];
                this.columnGebr_DispStatus = base.Columns["Gebr_DispStatus"];
                this.columnGebr_Kort = base.Columns["Gebr_Kort"];
                this.columnGebr_Lang = base.Columns["Gebr_Lang"];
                this.columnGebr_Wachtwoord = base.Columns["Gebr_Wachtwoord"];
                this.columnGebr_Mutatiedatum = base.Columns["Gebr_Mutatiedatum"];
                this.columnGebr_Opmerking = base.Columns["Gebr_Opmerking"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            private void InitClass() {
                this.columnGebr_Id = new global::System.Data.DataColumn("Gebr_Id", typeof(long), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnGebr_Id);
                this.columnGebr_StatusId = new global::System.Data.DataColumn("Gebr_StatusId", typeof(long), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnGebr_StatusId);
                this.columnGebr_DispStatus = new global::System.Data.DataColumn("Gebr_DispStatus", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnGebr_DispStatus);
                this.columnGebr_Kort = new global::System.Data.DataColumn("Gebr_Kort", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnGebr_Kort);
                this.columnGebr_Lang = new global::System.Data.DataColumn("Gebr_Lang", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnGebr_Lang);
                this.columnGebr_Wachtwoord = new global::System.Data.DataColumn("Gebr_Wachtwoord", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnGebr_Wachtwoord);
                this.columnGebr_Mutatiedatum = new global::System.Data.DataColumn("Gebr_Mutatiedatum", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnGebr_Mutatiedatum);
                this.columnGebr_Opmerking = new global::System.Data.DataColumn("Gebr_Opmerking", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnGebr_Opmerking);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnGebr_Kort}, false));
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint2", new global::System.Data.DataColumn[] {
                                this.columnGebr_Lang}, false));
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint3", new global::System.Data.DataColumn[] {
                                this.columnGebr_Id}, true));
                this.columnGebr_Id.AutoIncrement = true;
                this.columnGebr_Id.AutoIncrementSeed = -1;
                this.columnGebr_Id.AutoIncrementStep = -1;
                this.columnGebr_Id.AllowDBNull = false;
                this.columnGebr_Id.Unique = true;
                this.columnGebr_StatusId.AllowDBNull = false;
                this.columnGebr_DispStatus.MaxLength = 75;
                this.columnGebr_Kort.AllowDBNull = false;
                this.columnGebr_Kort.Unique = true;
                this.columnGebr_Kort.MaxLength = 6;
                this.columnGebr_Lang.AllowDBNull = false;
                this.columnGebr_Lang.Unique = true;
                this.columnGebr_Lang.MaxLength = 50;
                this.columnGebr_Wachtwoord.MaxLength = 10;
                this.columnGebr_Mutatiedatum.AllowDBNull = false;
                this.columnGebr_Opmerking.MaxLength = 250;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public GebruikerRow NewGebruikerRow() {
                return ((GebruikerRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new GebruikerRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Type GetRowType() {
                return typeof(GebruikerRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.GebruikerRowChanged != null)) {
                    this.GebruikerRowChanged(this, new GebruikerRowChangeEvent(((GebruikerRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.GebruikerRowChanging != null)) {
                    this.GebruikerRowChanging(this, new GebruikerRowChangeEvent(((GebruikerRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.GebruikerRowDeleted != null)) {
                    this.GebruikerRowDeleted(this, new GebruikerRowChangeEvent(((GebruikerRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.GebruikerRowDeleting != null)) {
                    this.GebruikerRowDeleting(this, new GebruikerRowChangeEvent(((GebruikerRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void RemoveGebruikerRow(GebruikerRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                _Cmbap_dataDataSet ds = new _Cmbap_dataDataSet();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "GebruikerDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class HoofdcategorieDataTable : global::System.Data.TypedTableBase<HoofdcategorieRow> {
            
            private global::System.Data.DataColumn columnHcat_Id;
            
            private global::System.Data.DataColumn columnHcat_StatusId;
            
            private global::System.Data.DataColumn columnHcat_DispStatus;
            
            private global::System.Data.DataColumn columnHcat_Prefix;
            
            private global::System.Data.DataColumn columnHcat_Kort;
            
            private global::System.Data.DataColumn columnHcat_Lang;
            
            private global::System.Data.DataColumn columnHcat_WijzigentoegestaanJN;
            
            private global::System.Data.DataColumn columnHcat_Mutatiedatum;
            
            private global::System.Data.DataColumn columnHcat_Opmerking;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public HoofdcategorieDataTable() {
                this.TableName = "Hoofdcategorie";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal HoofdcategorieDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected HoofdcategorieDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn Hcat_IdColumn {
                get {
                    return this.columnHcat_Id;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn Hcat_StatusIdColumn {
                get {
                    return this.columnHcat_StatusId;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn Hcat_DispStatusColumn {
                get {
                    return this.columnHcat_DispStatus;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn Hcat_PrefixColumn {
                get {
                    return this.columnHcat_Prefix;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn Hcat_KortColumn {
                get {
                    return this.columnHcat_Kort;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn Hcat_LangColumn {
                get {
                    return this.columnHcat_Lang;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn Hcat_WijzigentoegestaanJNColumn {
                get {
                    return this.columnHcat_WijzigentoegestaanJN;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn Hcat_MutatiedatumColumn {
                get {
                    return this.columnHcat_Mutatiedatum;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn Hcat_OpmerkingColumn {
                get {
                    return this.columnHcat_Opmerking;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public HoofdcategorieRow this[int index] {
                get {
                    return ((HoofdcategorieRow)(this.Rows[index]));
                }
            }
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event HoofdcategorieRowChangeEventHandler HoofdcategorieRowChanging;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event HoofdcategorieRowChangeEventHandler HoofdcategorieRowChanged;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event HoofdcategorieRowChangeEventHandler HoofdcategorieRowDeleting;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event HoofdcategorieRowChangeEventHandler HoofdcategorieRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void AddHoofdcategorieRow(HoofdcategorieRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public HoofdcategorieRow AddHoofdcategorieRow(long Hcat_StatusId, string Hcat_DispStatus, string Hcat_Prefix, string Hcat_Kort, string Hcat_Lang, long Hcat_WijzigentoegestaanJN, System.DateTime Hcat_Mutatiedatum, string Hcat_Opmerking) {
                HoofdcategorieRow rowHoofdcategorieRow = ((HoofdcategorieRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        null,
                        Hcat_StatusId,
                        Hcat_DispStatus,
                        Hcat_Prefix,
                        Hcat_Kort,
                        Hcat_Lang,
                        Hcat_WijzigentoegestaanJN,
                        Hcat_Mutatiedatum,
                        Hcat_Opmerking};
                rowHoofdcategorieRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowHoofdcategorieRow);
                return rowHoofdcategorieRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public HoofdcategorieRow FindByHcat_Id(long Hcat_Id) {
                return ((HoofdcategorieRow)(this.Rows.Find(new object[] {
                            Hcat_Id})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public override global::System.Data.DataTable Clone() {
                HoofdcategorieDataTable cln = ((HoofdcategorieDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataTable CreateInstance() {
                return new HoofdcategorieDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal void InitVars() {
                this.columnHcat_Id = base.Columns["Hcat_Id"];
                this.columnHcat_StatusId = base.Columns["Hcat_StatusId"];
                this.columnHcat_DispStatus = base.Columns["Hcat_DispStatus"];
                this.columnHcat_Prefix = base.Columns["Hcat_Prefix"];
                this.columnHcat_Kort = base.Columns["Hcat_Kort"];
                this.columnHcat_Lang = base.Columns["Hcat_Lang"];
                this.columnHcat_WijzigentoegestaanJN = base.Columns["Hcat_WijzigentoegestaanJN"];
                this.columnHcat_Mutatiedatum = base.Columns["Hcat_Mutatiedatum"];
                this.columnHcat_Opmerking = base.Columns["Hcat_Opmerking"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            private void InitClass() {
                this.columnHcat_Id = new global::System.Data.DataColumn("Hcat_Id", typeof(long), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnHcat_Id);
                this.columnHcat_StatusId = new global::System.Data.DataColumn("Hcat_StatusId", typeof(long), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnHcat_StatusId);
                this.columnHcat_DispStatus = new global::System.Data.DataColumn("Hcat_DispStatus", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnHcat_DispStatus);
                this.columnHcat_Prefix = new global::System.Data.DataColumn("Hcat_Prefix", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnHcat_Prefix);
                this.columnHcat_Kort = new global::System.Data.DataColumn("Hcat_Kort", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnHcat_Kort);
                this.columnHcat_Lang = new global::System.Data.DataColumn("Hcat_Lang", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnHcat_Lang);
                this.columnHcat_WijzigentoegestaanJN = new global::System.Data.DataColumn("Hcat_WijzigentoegestaanJN", typeof(long), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnHcat_WijzigentoegestaanJN);
                this.columnHcat_Mutatiedatum = new global::System.Data.DataColumn("Hcat_Mutatiedatum", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnHcat_Mutatiedatum);
                this.columnHcat_Opmerking = new global::System.Data.DataColumn("Hcat_Opmerking", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnHcat_Opmerking);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnHcat_Kort}, false));
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint2", new global::System.Data.DataColumn[] {
                                this.columnHcat_Id}, true));
                this.columnHcat_Id.AutoIncrement = true;
                this.columnHcat_Id.AutoIncrementSeed = -1;
                this.columnHcat_Id.AutoIncrementStep = -1;
                this.columnHcat_Id.AllowDBNull = false;
                this.columnHcat_Id.Unique = true;
                this.columnHcat_DispStatus.MaxLength = 75;
                this.columnHcat_Prefix.MaxLength = 3;
                this.columnHcat_Kort.AllowDBNull = false;
                this.columnHcat_Kort.Unique = true;
                this.columnHcat_Kort.MaxLength = 10;
                this.columnHcat_Lang.AllowDBNull = false;
                this.columnHcat_Lang.MaxLength = 50;
                this.columnHcat_WijzigentoegestaanJN.AllowDBNull = false;
                this.columnHcat_Mutatiedatum.AllowDBNull = false;
                this.columnHcat_Opmerking.MaxLength = 250;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public HoofdcategorieRow NewHoofdcategorieRow() {
                return ((HoofdcategorieRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new HoofdcategorieRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Type GetRowType() {
                return typeof(HoofdcategorieRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.HoofdcategorieRowChanged != null)) {
                    this.HoofdcategorieRowChanged(this, new HoofdcategorieRowChangeEvent(((HoofdcategorieRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.HoofdcategorieRowChanging != null)) {
                    this.HoofdcategorieRowChanging(this, new HoofdcategorieRowChangeEvent(((HoofdcategorieRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.HoofdcategorieRowDeleted != null)) {
                    this.HoofdcategorieRowDeleted(this, new HoofdcategorieRowChangeEvent(((HoofdcategorieRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.HoofdcategorieRowDeleting != null)) {
                    this.HoofdcategorieRowDeleting(this, new HoofdcategorieRowChangeEvent(((HoofdcategorieRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void RemoveHoofdcategorieRow(HoofdcategorieRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                _Cmbap_dataDataSet ds = new _Cmbap_dataDataSet();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "HoofdcategorieDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class HoofdUitgavesoortDataTable : global::System.Data.TypedTableBase<HoofdUitgavesoortRow> {
            
            private global::System.Data.DataColumn columnHus_Id;
            
            private global::System.Data.DataColumn columnHus_StatusId;
            
            private global::System.Data.DataColumn columnHus_DispStatus;
            
            private global::System.Data.DataColumn columnHus_Kort;
            
            private global::System.Data.DataColumn columnHus_Lang;
            
            private global::System.Data.DataColumn columnHus_WijzigentoegestaanJN;
            
            private global::System.Data.DataColumn columnHus_Mutatiedatum;
            
            private global::System.Data.DataColumn columnHus_Opmerking;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public HoofdUitgavesoortDataTable() {
                this.TableName = "HoofdUitgavesoort";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal HoofdUitgavesoortDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected HoofdUitgavesoortDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn Hus_IdColumn {
                get {
                    return this.columnHus_Id;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn Hus_StatusIdColumn {
                get {
                    return this.columnHus_StatusId;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn Hus_DispStatusColumn {
                get {
                    return this.columnHus_DispStatus;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn Hus_KortColumn {
                get {
                    return this.columnHus_Kort;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn Hus_LangColumn {
                get {
                    return this.columnHus_Lang;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn Hus_WijzigentoegestaanJNColumn {
                get {
                    return this.columnHus_WijzigentoegestaanJN;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn Hus_MutatiedatumColumn {
                get {
                    return this.columnHus_Mutatiedatum;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn Hus_OpmerkingColumn {
                get {
                    return this.columnHus_Opmerking;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public HoofdUitgavesoortRow this[int index] {
                get {
                    return ((HoofdUitgavesoortRow)(this.Rows[index]));
                }
            }
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event HoofdUitgavesoortRowChangeEventHandler HoofdUitgavesoortRowChanging;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event HoofdUitgavesoortRowChangeEventHandler HoofdUitgavesoortRowChanged;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event HoofdUitgavesoortRowChangeEventHandler HoofdUitgavesoortRowDeleting;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event HoofdUitgavesoortRowChangeEventHandler HoofdUitgavesoortRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void AddHoofdUitgavesoortRow(HoofdUitgavesoortRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public HoofdUitgavesoortRow AddHoofdUitgavesoortRow(long Hus_StatusId, string Hus_DispStatus, string Hus_Kort, string Hus_Lang, long Hus_WijzigentoegestaanJN, System.DateTime Hus_Mutatiedatum, string Hus_Opmerking) {
                HoofdUitgavesoortRow rowHoofdUitgavesoortRow = ((HoofdUitgavesoortRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        null,
                        Hus_StatusId,
                        Hus_DispStatus,
                        Hus_Kort,
                        Hus_Lang,
                        Hus_WijzigentoegestaanJN,
                        Hus_Mutatiedatum,
                        Hus_Opmerking};
                rowHoofdUitgavesoortRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowHoofdUitgavesoortRow);
                return rowHoofdUitgavesoortRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public HoofdUitgavesoortRow FindByHus_Id(long Hus_Id) {
                return ((HoofdUitgavesoortRow)(this.Rows.Find(new object[] {
                            Hus_Id})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public override global::System.Data.DataTable Clone() {
                HoofdUitgavesoortDataTable cln = ((HoofdUitgavesoortDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataTable CreateInstance() {
                return new HoofdUitgavesoortDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal void InitVars() {
                this.columnHus_Id = base.Columns["Hus_Id"];
                this.columnHus_StatusId = base.Columns["Hus_StatusId"];
                this.columnHus_DispStatus = base.Columns["Hus_DispStatus"];
                this.columnHus_Kort = base.Columns["Hus_Kort"];
                this.columnHus_Lang = base.Columns["Hus_Lang"];
                this.columnHus_WijzigentoegestaanJN = base.Columns["Hus_WijzigentoegestaanJN"];
                this.columnHus_Mutatiedatum = base.Columns["Hus_Mutatiedatum"];
                this.columnHus_Opmerking = base.Columns["Hus_Opmerking"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            private void InitClass() {
                this.columnHus_Id = new global::System.Data.DataColumn("Hus_Id", typeof(long), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnHus_Id);
                this.columnHus_StatusId = new global::System.Data.DataColumn("Hus_StatusId", typeof(long), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnHus_StatusId);
                this.columnHus_DispStatus = new global::System.Data.DataColumn("Hus_DispStatus", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnHus_DispStatus);
                this.columnHus_Kort = new global::System.Data.DataColumn("Hus_Kort", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnHus_Kort);
                this.columnHus_Lang = new global::System.Data.DataColumn("Hus_Lang", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnHus_Lang);
                this.columnHus_WijzigentoegestaanJN = new global::System.Data.DataColumn("Hus_WijzigentoegestaanJN", typeof(long), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnHus_WijzigentoegestaanJN);
                this.columnHus_Mutatiedatum = new global::System.Data.DataColumn("Hus_Mutatiedatum", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnHus_Mutatiedatum);
                this.columnHus_Opmerking = new global::System.Data.DataColumn("Hus_Opmerking", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnHus_Opmerking);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnHus_Kort}, false));
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint2", new global::System.Data.DataColumn[] {
                                this.columnHus_Id}, true));
                this.columnHus_Id.AutoIncrement = true;
                this.columnHus_Id.AutoIncrementSeed = -1;
                this.columnHus_Id.AutoIncrementStep = -1;
                this.columnHus_Id.AllowDBNull = false;
                this.columnHus_Id.Unique = true;
                this.columnHus_DispStatus.MaxLength = 75;
                this.columnHus_Kort.AllowDBNull = false;
                this.columnHus_Kort.Unique = true;
                this.columnHus_Kort.MaxLength = 10;
                this.columnHus_Lang.AllowDBNull = false;
                this.columnHus_Lang.MaxLength = 50;
                this.columnHus_Mutatiedatum.AllowDBNull = false;
                this.columnHus_Opmerking.MaxLength = 250;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public HoofdUitgavesoortRow NewHoofdUitgavesoortRow() {
                return ((HoofdUitgavesoortRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new HoofdUitgavesoortRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Type GetRowType() {
                return typeof(HoofdUitgavesoortRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.HoofdUitgavesoortRowChanged != null)) {
                    this.HoofdUitgavesoortRowChanged(this, new HoofdUitgavesoortRowChangeEvent(((HoofdUitgavesoortRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.HoofdUitgavesoortRowChanging != null)) {
                    this.HoofdUitgavesoortRowChanging(this, new HoofdUitgavesoortRowChangeEvent(((HoofdUitgavesoortRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.HoofdUitgavesoortRowDeleted != null)) {
                    this.HoofdUitgavesoortRowDeleted(this, new HoofdUitgavesoortRowChangeEvent(((HoofdUitgavesoortRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.HoofdUitgavesoortRowDeleting != null)) {
                    this.HoofdUitgavesoortRowDeleting(this, new HoofdUitgavesoortRowChangeEvent(((HoofdUitgavesoortRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void RemoveHoofdUitgavesoortRow(HoofdUitgavesoortRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                _Cmbap_dataDataSet ds = new _Cmbap_dataDataSet();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "HoofdUitgavesoortDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class InstellingenDataTable : global::System.Data.TypedTableBase<InstellingenRow> {
            
            private global::System.Data.DataColumn columnInstl_Id;
            
            private global::System.Data.DataColumn columnInstl_Systemsetting;
            
            private global::System.Data.DataColumn columnInstl_StatusId;
            
            private global::System.Data.DataColumn columnInstl_DispStatus;
            
            private global::System.Data.DataColumn columnInstl_Naam;
            
            private global::System.Data.DataColumn columnInstl_Gegtype;
            
            private global::System.Data.DataColumn columnInstl_Actief;
            
            private global::System.Data.DataColumn columnInstl_String;
            
            private global::System.Data.DataColumn columnInstl_JN;
            
            private global::System.Data.DataColumn columnInstl_Integer;
            
            private global::System.Data.DataColumn columnInstl_Real;
            
            private global::System.Data.DataColumn columnInstl_Memo;
            
            private global::System.Data.DataColumn columnInstl_Datum;
            
            private global::System.Data.DataColumn columnInstl_Tijd;
            
            private global::System.Data.DataColumn columnInstl_Mutatiedatum;
            
            private global::System.Data.DataColumn columnInstl_Opmerking;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public InstellingenDataTable() {
                this.TableName = "Instellingen";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal InstellingenDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected InstellingenDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn Instl_IdColumn {
                get {
                    return this.columnInstl_Id;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn Instl_SystemsettingColumn {
                get {
                    return this.columnInstl_Systemsetting;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn Instl_StatusIdColumn {
                get {
                    return this.columnInstl_StatusId;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn Instl_DispStatusColumn {
                get {
                    return this.columnInstl_DispStatus;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn Instl_NaamColumn {
                get {
                    return this.columnInstl_Naam;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn Instl_GegtypeColumn {
                get {
                    return this.columnInstl_Gegtype;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn Instl_ActiefColumn {
                get {
                    return this.columnInstl_Actief;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn Instl_StringColumn {
                get {
                    return this.columnInstl_String;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn Instl_JNColumn {
                get {
                    return this.columnInstl_JN;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn Instl_IntegerColumn {
                get {
                    return this.columnInstl_Integer;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn Instl_RealColumn {
                get {
                    return this.columnInstl_Real;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn Instl_MemoColumn {
                get {
                    return this.columnInstl_Memo;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn Instl_DatumColumn {
                get {
                    return this.columnInstl_Datum;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn Instl_TijdColumn {
                get {
                    return this.columnInstl_Tijd;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn Instl_MutatiedatumColumn {
                get {
                    return this.columnInstl_Mutatiedatum;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn Instl_OpmerkingColumn {
                get {
                    return this.columnInstl_Opmerking;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public InstellingenRow this[int index] {
                get {
                    return ((InstellingenRow)(this.Rows[index]));
                }
            }
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event InstellingenRowChangeEventHandler InstellingenRowChanging;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event InstellingenRowChangeEventHandler InstellingenRowChanged;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event InstellingenRowChangeEventHandler InstellingenRowDeleting;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event InstellingenRowChangeEventHandler InstellingenRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void AddInstellingenRow(InstellingenRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public InstellingenRow AddInstellingenRow(long Instl_Systemsetting, long Instl_StatusId, string Instl_DispStatus, string Instl_Naam, short Instl_Gegtype, long Instl_Actief, string Instl_String, long Instl_JN, long Instl_Integer, double Instl_Real, string Instl_Memo, System.DateTime Instl_Datum, System.DateTime Instl_Tijd, System.DateTime Instl_Mutatiedatum, string Instl_Opmerking) {
                InstellingenRow rowInstellingenRow = ((InstellingenRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        null,
                        Instl_Systemsetting,
                        Instl_StatusId,
                        Instl_DispStatus,
                        Instl_Naam,
                        Instl_Gegtype,
                        Instl_Actief,
                        Instl_String,
                        Instl_JN,
                        Instl_Integer,
                        Instl_Real,
                        Instl_Memo,
                        Instl_Datum,
                        Instl_Tijd,
                        Instl_Mutatiedatum,
                        Instl_Opmerking};
                rowInstellingenRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowInstellingenRow);
                return rowInstellingenRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public InstellingenRow FindByInstl_Id(long Instl_Id) {
                return ((InstellingenRow)(this.Rows.Find(new object[] {
                            Instl_Id})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public override global::System.Data.DataTable Clone() {
                InstellingenDataTable cln = ((InstellingenDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataTable CreateInstance() {
                return new InstellingenDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal void InitVars() {
                this.columnInstl_Id = base.Columns["Instl_Id"];
                this.columnInstl_Systemsetting = base.Columns["Instl_Systemsetting"];
                this.columnInstl_StatusId = base.Columns["Instl_StatusId"];
                this.columnInstl_DispStatus = base.Columns["Instl_DispStatus"];
                this.columnInstl_Naam = base.Columns["Instl_Naam"];
                this.columnInstl_Gegtype = base.Columns["Instl_Gegtype"];
                this.columnInstl_Actief = base.Columns["Instl_Actief"];
                this.columnInstl_String = base.Columns["Instl_String"];
                this.columnInstl_JN = base.Columns["Instl_JN"];
                this.columnInstl_Integer = base.Columns["Instl_Integer"];
                this.columnInstl_Real = base.Columns["Instl_Real"];
                this.columnInstl_Memo = base.Columns["Instl_Memo"];
                this.columnInstl_Datum = base.Columns["Instl_Datum"];
                this.columnInstl_Tijd = base.Columns["Instl_Tijd"];
                this.columnInstl_Mutatiedatum = base.Columns["Instl_Mutatiedatum"];
                this.columnInstl_Opmerking = base.Columns["Instl_Opmerking"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            private void InitClass() {
                this.columnInstl_Id = new global::System.Data.DataColumn("Instl_Id", typeof(long), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnInstl_Id);
                this.columnInstl_Systemsetting = new global::System.Data.DataColumn("Instl_Systemsetting", typeof(long), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnInstl_Systemsetting);
                this.columnInstl_StatusId = new global::System.Data.DataColumn("Instl_StatusId", typeof(long), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnInstl_StatusId);
                this.columnInstl_DispStatus = new global::System.Data.DataColumn("Instl_DispStatus", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnInstl_DispStatus);
                this.columnInstl_Naam = new global::System.Data.DataColumn("Instl_Naam", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnInstl_Naam);
                this.columnInstl_Gegtype = new global::System.Data.DataColumn("Instl_Gegtype", typeof(short), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnInstl_Gegtype);
                this.columnInstl_Actief = new global::System.Data.DataColumn("Instl_Actief", typeof(long), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnInstl_Actief);
                this.columnInstl_String = new global::System.Data.DataColumn("Instl_String", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnInstl_String);
                this.columnInstl_JN = new global::System.Data.DataColumn("Instl_JN", typeof(long), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnInstl_JN);
                this.columnInstl_Integer = new global::System.Data.DataColumn("Instl_Integer", typeof(long), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnInstl_Integer);
                this.columnInstl_Real = new global::System.Data.DataColumn("Instl_Real", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnInstl_Real);
                this.columnInstl_Memo = new global::System.Data.DataColumn("Instl_Memo", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnInstl_Memo);
                this.columnInstl_Datum = new global::System.Data.DataColumn("Instl_Datum", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnInstl_Datum);
                this.columnInstl_Tijd = new global::System.Data.DataColumn("Instl_Tijd", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnInstl_Tijd);
                this.columnInstl_Mutatiedatum = new global::System.Data.DataColumn("Instl_Mutatiedatum", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnInstl_Mutatiedatum);
                this.columnInstl_Opmerking = new global::System.Data.DataColumn("Instl_Opmerking", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnInstl_Opmerking);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnInstl_Id}, true));
                this.columnInstl_Id.AutoIncrement = true;
                this.columnInstl_Id.AutoIncrementSeed = -1;
                this.columnInstl_Id.AutoIncrementStep = -1;
                this.columnInstl_Id.AllowDBNull = false;
                this.columnInstl_Id.Unique = true;
                this.columnInstl_StatusId.AllowDBNull = false;
                this.columnInstl_DispStatus.MaxLength = 75;
                this.columnInstl_Naam.MaxLength = 25;
                this.columnInstl_String.MaxLength = 400;
                this.columnInstl_Memo.MaxLength = 400;
                this.columnInstl_Mutatiedatum.AllowDBNull = false;
                this.columnInstl_Opmerking.MaxLength = 250;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public InstellingenRow NewInstellingenRow() {
                return ((InstellingenRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new InstellingenRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Type GetRowType() {
                return typeof(InstellingenRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.InstellingenRowChanged != null)) {
                    this.InstellingenRowChanged(this, new InstellingenRowChangeEvent(((InstellingenRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.InstellingenRowChanging != null)) {
                    this.InstellingenRowChanging(this, new InstellingenRowChangeEvent(((InstellingenRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.InstellingenRowDeleted != null)) {
                    this.InstellingenRowDeleted(this, new InstellingenRowChangeEvent(((InstellingenRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.InstellingenRowDeleting != null)) {
                    this.InstellingenRowDeleting(this, new InstellingenRowChangeEvent(((InstellingenRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void RemoveInstellingenRow(InstellingenRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                _Cmbap_dataDataSet ds = new _Cmbap_dataDataSet();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "InstellingenDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class JaargegevensDataTable : global::System.Data.TypedTableBase<JaargegevensRow> {
            
            private global::System.Data.DataColumn columnJgeg_Id;
            
            private global::System.Data.DataColumn columnJgeg_StatusId;
            
            private global::System.Data.DataColumn columnJgeg_DispStatus;
            
            private global::System.Data.DataColumn columnJgeg_Omschrijving;
            
            private global::System.Data.DataColumn columnJgeg_Begindatum;
            
            private global::System.Data.DataColumn columnJgeg_Einddatum;
            
            private global::System.Data.DataColumn columnJgeg_Mutatiedatum;
            
            private global::System.Data.DataColumn columnJgeg_Opmerking;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public JaargegevensDataTable() {
                this.TableName = "Jaargegevens";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal JaargegevensDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected JaargegevensDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn Jgeg_IdColumn {
                get {
                    return this.columnJgeg_Id;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn Jgeg_StatusIdColumn {
                get {
                    return this.columnJgeg_StatusId;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn Jgeg_DispStatusColumn {
                get {
                    return this.columnJgeg_DispStatus;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn Jgeg_OmschrijvingColumn {
                get {
                    return this.columnJgeg_Omschrijving;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn Jgeg_BegindatumColumn {
                get {
                    return this.columnJgeg_Begindatum;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn Jgeg_EinddatumColumn {
                get {
                    return this.columnJgeg_Einddatum;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn Jgeg_MutatiedatumColumn {
                get {
                    return this.columnJgeg_Mutatiedatum;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn Jgeg_OpmerkingColumn {
                get {
                    return this.columnJgeg_Opmerking;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public JaargegevensRow this[int index] {
                get {
                    return ((JaargegevensRow)(this.Rows[index]));
                }
            }
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event JaargegevensRowChangeEventHandler JaargegevensRowChanging;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event JaargegevensRowChangeEventHandler JaargegevensRowChanged;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event JaargegevensRowChangeEventHandler JaargegevensRowDeleting;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event JaargegevensRowChangeEventHandler JaargegevensRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void AddJaargegevensRow(JaargegevensRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public JaargegevensRow AddJaargegevensRow(long Jgeg_StatusId, string Jgeg_DispStatus, string Jgeg_Omschrijving, System.DateTime Jgeg_Begindatum, System.DateTime Jgeg_Einddatum, System.DateTime Jgeg_Mutatiedatum, string Jgeg_Opmerking) {
                JaargegevensRow rowJaargegevensRow = ((JaargegevensRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        null,
                        Jgeg_StatusId,
                        Jgeg_DispStatus,
                        Jgeg_Omschrijving,
                        Jgeg_Begindatum,
                        Jgeg_Einddatum,
                        Jgeg_Mutatiedatum,
                        Jgeg_Opmerking};
                rowJaargegevensRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowJaargegevensRow);
                return rowJaargegevensRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public JaargegevensRow FindByJgeg_Id(long Jgeg_Id) {
                return ((JaargegevensRow)(this.Rows.Find(new object[] {
                            Jgeg_Id})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public override global::System.Data.DataTable Clone() {
                JaargegevensDataTable cln = ((JaargegevensDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataTable CreateInstance() {
                return new JaargegevensDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal void InitVars() {
                this.columnJgeg_Id = base.Columns["Jgeg_Id"];
                this.columnJgeg_StatusId = base.Columns["Jgeg_StatusId"];
                this.columnJgeg_DispStatus = base.Columns["Jgeg_DispStatus"];
                this.columnJgeg_Omschrijving = base.Columns["Jgeg_Omschrijving"];
                this.columnJgeg_Begindatum = base.Columns["Jgeg_Begindatum"];
                this.columnJgeg_Einddatum = base.Columns["Jgeg_Einddatum"];
                this.columnJgeg_Mutatiedatum = base.Columns["Jgeg_Mutatiedatum"];
                this.columnJgeg_Opmerking = base.Columns["Jgeg_Opmerking"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            private void InitClass() {
                this.columnJgeg_Id = new global::System.Data.DataColumn("Jgeg_Id", typeof(long), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnJgeg_Id);
                this.columnJgeg_StatusId = new global::System.Data.DataColumn("Jgeg_StatusId", typeof(long), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnJgeg_StatusId);
                this.columnJgeg_DispStatus = new global::System.Data.DataColumn("Jgeg_DispStatus", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnJgeg_DispStatus);
                this.columnJgeg_Omschrijving = new global::System.Data.DataColumn("Jgeg_Omschrijving", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnJgeg_Omschrijving);
                this.columnJgeg_Begindatum = new global::System.Data.DataColumn("Jgeg_Begindatum", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnJgeg_Begindatum);
                this.columnJgeg_Einddatum = new global::System.Data.DataColumn("Jgeg_Einddatum", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnJgeg_Einddatum);
                this.columnJgeg_Mutatiedatum = new global::System.Data.DataColumn("Jgeg_Mutatiedatum", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnJgeg_Mutatiedatum);
                this.columnJgeg_Opmerking = new global::System.Data.DataColumn("Jgeg_Opmerking", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnJgeg_Opmerking);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnJgeg_Omschrijving}, false));
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint2", new global::System.Data.DataColumn[] {
                                this.columnJgeg_Id}, true));
                this.columnJgeg_Id.AutoIncrement = true;
                this.columnJgeg_Id.AutoIncrementSeed = -1;
                this.columnJgeg_Id.AutoIncrementStep = -1;
                this.columnJgeg_Id.AllowDBNull = false;
                this.columnJgeg_Id.Unique = true;
                this.columnJgeg_DispStatus.MaxLength = 75;
                this.columnJgeg_Omschrijving.AllowDBNull = false;
                this.columnJgeg_Omschrijving.Unique = true;
                this.columnJgeg_Omschrijving.MaxLength = 25;
                this.columnJgeg_Begindatum.AllowDBNull = false;
                this.columnJgeg_Einddatum.AllowDBNull = false;
                this.columnJgeg_Mutatiedatum.AllowDBNull = false;
                this.columnJgeg_Opmerking.MaxLength = 250;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public JaargegevensRow NewJaargegevensRow() {
                return ((JaargegevensRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new JaargegevensRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Type GetRowType() {
                return typeof(JaargegevensRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.JaargegevensRowChanged != null)) {
                    this.JaargegevensRowChanged(this, new JaargegevensRowChangeEvent(((JaargegevensRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.JaargegevensRowChanging != null)) {
                    this.JaargegevensRowChanging(this, new JaargegevensRowChangeEvent(((JaargegevensRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.JaargegevensRowDeleted != null)) {
                    this.JaargegevensRowDeleted(this, new JaargegevensRowChangeEvent(((JaargegevensRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.JaargegevensRowDeleting != null)) {
                    this.JaargegevensRowDeleting(this, new JaargegevensRowChangeEvent(((JaargegevensRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void RemoveJaargegevensRow(JaargegevensRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                _Cmbap_dataDataSet ds = new _Cmbap_dataDataSet();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "JaargegevensDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class JaarsaldoDataTable : global::System.Data.TypedTableBase<JaarsaldoRow> {
            
            private global::System.Data.DataColumn columnJsal_Id;
            
            private global::System.Data.DataColumn columnJsal_StatusId;
            
            private global::System.Data.DataColumn columnJsal_DispStatus;
            
            private global::System.Data.DataColumn columnJsal_JgegId;
            
            private global::System.Data.DataColumn columnJsal_BgnrId;
            
            private global::System.Data.DataColumn columnJsal_Beginsaldo;
            
            private global::System.Data.DataColumn columnJsal_Eindsaldo;
            
            private global::System.Data.DataColumn columnJsal_Mutatiedatum;
            
            private global::System.Data.DataColumn columnJsal_Opmerking;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public JaarsaldoDataTable() {
                this.TableName = "Jaarsaldo";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal JaarsaldoDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected JaarsaldoDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn Jsal_IdColumn {
                get {
                    return this.columnJsal_Id;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn Jsal_StatusIdColumn {
                get {
                    return this.columnJsal_StatusId;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn Jsal_DispStatusColumn {
                get {
                    return this.columnJsal_DispStatus;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn Jsal_JgegIdColumn {
                get {
                    return this.columnJsal_JgegId;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn Jsal_BgnrIdColumn {
                get {
                    return this.columnJsal_BgnrId;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn Jsal_BeginsaldoColumn {
                get {
                    return this.columnJsal_Beginsaldo;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn Jsal_EindsaldoColumn {
                get {
                    return this.columnJsal_Eindsaldo;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn Jsal_MutatiedatumColumn {
                get {
                    return this.columnJsal_Mutatiedatum;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn Jsal_OpmerkingColumn {
                get {
                    return this.columnJsal_Opmerking;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public JaarsaldoRow this[int index] {
                get {
                    return ((JaarsaldoRow)(this.Rows[index]));
                }
            }
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event JaarsaldoRowChangeEventHandler JaarsaldoRowChanging;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event JaarsaldoRowChangeEventHandler JaarsaldoRowChanged;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event JaarsaldoRowChangeEventHandler JaarsaldoRowDeleting;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event JaarsaldoRowChangeEventHandler JaarsaldoRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void AddJaarsaldoRow(JaarsaldoRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public JaarsaldoRow AddJaarsaldoRow(long Jsal_StatusId, string Jsal_DispStatus, long Jsal_JgegId, long Jsal_BgnrId, decimal Jsal_Beginsaldo, decimal Jsal_Eindsaldo, System.DateTime Jsal_Mutatiedatum, string Jsal_Opmerking) {
                JaarsaldoRow rowJaarsaldoRow = ((JaarsaldoRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        null,
                        Jsal_StatusId,
                        Jsal_DispStatus,
                        Jsal_JgegId,
                        Jsal_BgnrId,
                        Jsal_Beginsaldo,
                        Jsal_Eindsaldo,
                        Jsal_Mutatiedatum,
                        Jsal_Opmerking};
                rowJaarsaldoRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowJaarsaldoRow);
                return rowJaarsaldoRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public JaarsaldoRow FindByJsal_Id(long Jsal_Id) {
                return ((JaarsaldoRow)(this.Rows.Find(new object[] {
                            Jsal_Id})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public override global::System.Data.DataTable Clone() {
                JaarsaldoDataTable cln = ((JaarsaldoDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataTable CreateInstance() {
                return new JaarsaldoDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal void InitVars() {
                this.columnJsal_Id = base.Columns["Jsal_Id"];
                this.columnJsal_StatusId = base.Columns["Jsal_StatusId"];
                this.columnJsal_DispStatus = base.Columns["Jsal_DispStatus"];
                this.columnJsal_JgegId = base.Columns["Jsal_JgegId"];
                this.columnJsal_BgnrId = base.Columns["Jsal_BgnrId"];
                this.columnJsal_Beginsaldo = base.Columns["Jsal_Beginsaldo"];
                this.columnJsal_Eindsaldo = base.Columns["Jsal_Eindsaldo"];
                this.columnJsal_Mutatiedatum = base.Columns["Jsal_Mutatiedatum"];
                this.columnJsal_Opmerking = base.Columns["Jsal_Opmerking"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            private void InitClass() {
                this.columnJsal_Id = new global::System.Data.DataColumn("Jsal_Id", typeof(long), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnJsal_Id);
                this.columnJsal_StatusId = new global::System.Data.DataColumn("Jsal_StatusId", typeof(long), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnJsal_StatusId);
                this.columnJsal_DispStatus = new global::System.Data.DataColumn("Jsal_DispStatus", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnJsal_DispStatus);
                this.columnJsal_JgegId = new global::System.Data.DataColumn("Jsal_JgegId", typeof(long), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnJsal_JgegId);
                this.columnJsal_BgnrId = new global::System.Data.DataColumn("Jsal_BgnrId", typeof(long), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnJsal_BgnrId);
                this.columnJsal_Beginsaldo = new global::System.Data.DataColumn("Jsal_Beginsaldo", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnJsal_Beginsaldo);
                this.columnJsal_Eindsaldo = new global::System.Data.DataColumn("Jsal_Eindsaldo", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnJsal_Eindsaldo);
                this.columnJsal_Mutatiedatum = new global::System.Data.DataColumn("Jsal_Mutatiedatum", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnJsal_Mutatiedatum);
                this.columnJsal_Opmerking = new global::System.Data.DataColumn("Jsal_Opmerking", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnJsal_Opmerking);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnJsal_Id}, true));
                this.columnJsal_Id.AutoIncrement = true;
                this.columnJsal_Id.AutoIncrementSeed = -1;
                this.columnJsal_Id.AutoIncrementStep = -1;
                this.columnJsal_Id.AllowDBNull = false;
                this.columnJsal_Id.Unique = true;
                this.columnJsal_StatusId.AllowDBNull = false;
                this.columnJsal_DispStatus.AllowDBNull = false;
                this.columnJsal_DispStatus.MaxLength = 75;
                this.columnJsal_JgegId.AllowDBNull = false;
                this.columnJsal_BgnrId.AllowDBNull = false;
                this.columnJsal_Beginsaldo.AllowDBNull = false;
                this.columnJsal_Eindsaldo.AllowDBNull = false;
                this.columnJsal_Mutatiedatum.AllowDBNull = false;
                this.columnJsal_Opmerking.MaxLength = 250;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public JaarsaldoRow NewJaarsaldoRow() {
                return ((JaarsaldoRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new JaarsaldoRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Type GetRowType() {
                return typeof(JaarsaldoRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.JaarsaldoRowChanged != null)) {
                    this.JaarsaldoRowChanged(this, new JaarsaldoRowChangeEvent(((JaarsaldoRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.JaarsaldoRowChanging != null)) {
                    this.JaarsaldoRowChanging(this, new JaarsaldoRowChangeEvent(((JaarsaldoRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.JaarsaldoRowDeleted != null)) {
                    this.JaarsaldoRowDeleted(this, new JaarsaldoRowChangeEvent(((JaarsaldoRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.JaarsaldoRowDeleting != null)) {
                    this.JaarsaldoRowDeleting(this, new JaarsaldoRowChangeEvent(((JaarsaldoRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void RemoveJaarsaldoRow(JaarsaldoRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                _Cmbap_dataDataSet ds = new _Cmbap_dataDataSet();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "JaarsaldoDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class Klant_BegunstigdeDataTable : global::System.Data.TypedTableBase<Klant_BegunstigdeRow> {
            
            private global::System.Data.DataColumn columnKlBg_Id;
            
            private global::System.Data.DataColumn columnKlBg_StatusId;
            
            private global::System.Data.DataColumn columnKlBg_DispStatus;
            
            private global::System.Data.DataColumn columnKlBg_KlantJN;
            
            private global::System.Data.DataColumn columnKlBg_BegunstigdeJN;
            
            private global::System.Data.DataColumn columnKlBg_SysteemKlBgJN;
            
            private global::System.Data.DataColumn columnKlBg_Scipio_Lokaalnr;
            
            private global::System.Data.DataColumn columnKlBg_DebNr;
            
            private global::System.Data.DataColumn columnKlBg_CredNr;
            
            private global::System.Data.DataColumn columnKlBg_Voorvoegsel;
            
            private global::System.Data.DataColumn columnKlBg_Voorletters;
            
            private global::System.Data.DataColumn columnKlBg_Tussenvoegsel;
            
            private global::System.Data.DataColumn columnKlBg_Achternaam;
            
            private global::System.Data.DataColumn columnKlBg_VVTA;
            
            private global::System.Data.DataColumn columnKlBg_AVVT;
            
            private global::System.Data.DataColumn columnKlBg_Straatnaam;
            
            private global::System.Data.DataColumn columnKlBg_Huisnummer;
            
            private global::System.Data.DataColumn columnKlBg_Huisnummertoevoeging;
            
            private global::System.Data.DataColumn columnKlBg_Adres;
            
            private global::System.Data.DataColumn columnKlBg_Postcode;
            
            private global::System.Data.DataColumn columnKlBg_Woonplaats;
            
            private global::System.Data.DataColumn columnKlBg_Telefoonnummer;
            
            private global::System.Data.DataColumn columnKlBg_Emailadres;
            
            private global::System.Data.DataColumn columnKlBg_Extra_informatie;
            
            private global::System.Data.DataColumn columnKlBg_SysteemKlBgDispJN;
            
            private global::System.Data.DataColumn columnKlBg_KlDispJN;
            
            private global::System.Data.DataColumn columnKlBg_BgDispJN;
            
            private global::System.Data.DataColumn columnKlBg_Mutatiedatum;
            
            private global::System.Data.DataColumn columnKlBg_Opmerking;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public Klant_BegunstigdeDataTable() {
                this.TableName = "Klant_Begunstigde";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal Klant_BegunstigdeDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected Klant_BegunstigdeDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn KlBg_IdColumn {
                get {
                    return this.columnKlBg_Id;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn KlBg_StatusIdColumn {
                get {
                    return this.columnKlBg_StatusId;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn KlBg_DispStatusColumn {
                get {
                    return this.columnKlBg_DispStatus;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn KlBg_KlantJNColumn {
                get {
                    return this.columnKlBg_KlantJN;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn KlBg_BegunstigdeJNColumn {
                get {
                    return this.columnKlBg_BegunstigdeJN;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn KlBg_SysteemKlBgJNColumn {
                get {
                    return this.columnKlBg_SysteemKlBgJN;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn KlBg_Scipio_LokaalnrColumn {
                get {
                    return this.columnKlBg_Scipio_Lokaalnr;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn KlBg_DebNrColumn {
                get {
                    return this.columnKlBg_DebNr;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn KlBg_CredNrColumn {
                get {
                    return this.columnKlBg_CredNr;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn KlBg_VoorvoegselColumn {
                get {
                    return this.columnKlBg_Voorvoegsel;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn KlBg_VoorlettersColumn {
                get {
                    return this.columnKlBg_Voorletters;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn KlBg_TussenvoegselColumn {
                get {
                    return this.columnKlBg_Tussenvoegsel;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn KlBg_AchternaamColumn {
                get {
                    return this.columnKlBg_Achternaam;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn KlBg_VVTAColumn {
                get {
                    return this.columnKlBg_VVTA;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn KlBg_AVVTColumn {
                get {
                    return this.columnKlBg_AVVT;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn KlBg_StraatnaamColumn {
                get {
                    return this.columnKlBg_Straatnaam;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn KlBg_HuisnummerColumn {
                get {
                    return this.columnKlBg_Huisnummer;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn KlBg_HuisnummertoevoegingColumn {
                get {
                    return this.columnKlBg_Huisnummertoevoeging;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn KlBg_AdresColumn {
                get {
                    return this.columnKlBg_Adres;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn KlBg_PostcodeColumn {
                get {
                    return this.columnKlBg_Postcode;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn KlBg_WoonplaatsColumn {
                get {
                    return this.columnKlBg_Woonplaats;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn KlBg_TelefoonnummerColumn {
                get {
                    return this.columnKlBg_Telefoonnummer;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn KlBg_EmailadresColumn {
                get {
                    return this.columnKlBg_Emailadres;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn KlBg_Extra_informatieColumn {
                get {
                    return this.columnKlBg_Extra_informatie;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn KlBg_SysteemKlBgDispJNColumn {
                get {
                    return this.columnKlBg_SysteemKlBgDispJN;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn KlBg_KlDispJNColumn {
                get {
                    return this.columnKlBg_KlDispJN;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn KlBg_BgDispJNColumn {
                get {
                    return this.columnKlBg_BgDispJN;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn KlBg_MutatiedatumColumn {
                get {
                    return this.columnKlBg_Mutatiedatum;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn KlBg_OpmerkingColumn {
                get {
                    return this.columnKlBg_Opmerking;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public Klant_BegunstigdeRow this[int index] {
                get {
                    return ((Klant_BegunstigdeRow)(this.Rows[index]));
                }
            }
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event Klant_BegunstigdeRowChangeEventHandler Klant_BegunstigdeRowChanging;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event Klant_BegunstigdeRowChangeEventHandler Klant_BegunstigdeRowChanged;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event Klant_BegunstigdeRowChangeEventHandler Klant_BegunstigdeRowDeleting;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event Klant_BegunstigdeRowChangeEventHandler Klant_BegunstigdeRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void AddKlant_BegunstigdeRow(Klant_BegunstigdeRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public Klant_BegunstigdeRow AddKlant_BegunstigdeRow(
                        long KlBg_StatusId, 
                        string KlBg_DispStatus, 
                        long KlBg_KlantJN, 
                        long KlBg_BegunstigdeJN, 
                        long KlBg_SysteemKlBgJN, 
                        long KlBg_Scipio_Lokaalnr, 
                        string KlBg_DebNr, 
                        string KlBg_CredNr, 
                        string KlBg_Voorvoegsel, 
                        string KlBg_Voorletters, 
                        string KlBg_Tussenvoegsel, 
                        string KlBg_Achternaam, 
                        string KlBg_VVTA, 
                        string KlBg_AVVT, 
                        string KlBg_Straatnaam, 
                        string KlBg_Huisnummer, 
                        string KlBg_Huisnummertoevoeging, 
                        string KlBg_Adres, 
                        string KlBg_Postcode, 
                        string KlBg_Woonplaats, 
                        string KlBg_Telefoonnummer, 
                        string KlBg_Emailadres, 
                        string KlBg_Extra_informatie, 
                        string KlBg_SysteemKlBgDispJN, 
                        string KlBg_KlDispJN, 
                        string KlBg_BgDispJN, 
                        System.DateTime KlBg_Mutatiedatum, 
                        string KlBg_Opmerking) {
                Klant_BegunstigdeRow rowKlant_BegunstigdeRow = ((Klant_BegunstigdeRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        null,
                        KlBg_StatusId,
                        KlBg_DispStatus,
                        KlBg_KlantJN,
                        KlBg_BegunstigdeJN,
                        KlBg_SysteemKlBgJN,
                        KlBg_Scipio_Lokaalnr,
                        KlBg_DebNr,
                        KlBg_CredNr,
                        KlBg_Voorvoegsel,
                        KlBg_Voorletters,
                        KlBg_Tussenvoegsel,
                        KlBg_Achternaam,
                        KlBg_VVTA,
                        KlBg_AVVT,
                        KlBg_Straatnaam,
                        KlBg_Huisnummer,
                        KlBg_Huisnummertoevoeging,
                        KlBg_Adres,
                        KlBg_Postcode,
                        KlBg_Woonplaats,
                        KlBg_Telefoonnummer,
                        KlBg_Emailadres,
                        KlBg_Extra_informatie,
                        KlBg_SysteemKlBgDispJN,
                        KlBg_KlDispJN,
                        KlBg_BgDispJN,
                        KlBg_Mutatiedatum,
                        KlBg_Opmerking};
                rowKlant_BegunstigdeRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowKlant_BegunstigdeRow);
                return rowKlant_BegunstigdeRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public Klant_BegunstigdeRow FindByKlBg_Id(long KlBg_Id) {
                return ((Klant_BegunstigdeRow)(this.Rows.Find(new object[] {
                            KlBg_Id})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public override global::System.Data.DataTable Clone() {
                Klant_BegunstigdeDataTable cln = ((Klant_BegunstigdeDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataTable CreateInstance() {
                return new Klant_BegunstigdeDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal void InitVars() {
                this.columnKlBg_Id = base.Columns["KlBg_Id"];
                this.columnKlBg_StatusId = base.Columns["KlBg_StatusId"];
                this.columnKlBg_DispStatus = base.Columns["KlBg_DispStatus"];
                this.columnKlBg_KlantJN = base.Columns["KlBg_KlantJN"];
                this.columnKlBg_BegunstigdeJN = base.Columns["KlBg_BegunstigdeJN"];
                this.columnKlBg_SysteemKlBgJN = base.Columns["KlBg_SysteemKlBgJN"];
                this.columnKlBg_Scipio_Lokaalnr = base.Columns["KlBg_Scipio_Lokaalnr"];
                this.columnKlBg_DebNr = base.Columns["KlBg_DebNr"];
                this.columnKlBg_CredNr = base.Columns["KlBg_CredNr"];
                this.columnKlBg_Voorvoegsel = base.Columns["KlBg_Voorvoegsel"];
                this.columnKlBg_Voorletters = base.Columns["KlBg_Voorletters"];
                this.columnKlBg_Tussenvoegsel = base.Columns["KlBg_Tussenvoegsel"];
                this.columnKlBg_Achternaam = base.Columns["KlBg_Achternaam"];
                this.columnKlBg_VVTA = base.Columns["KlBg_VVTA"];
                this.columnKlBg_AVVT = base.Columns["KlBg_AVVT"];
                this.columnKlBg_Straatnaam = base.Columns["KlBg_Straatnaam"];
                this.columnKlBg_Huisnummer = base.Columns["KlBg_Huisnummer"];
                this.columnKlBg_Huisnummertoevoeging = base.Columns["KlBg_Huisnummertoevoeging"];
                this.columnKlBg_Adres = base.Columns["KlBg_Adres"];
                this.columnKlBg_Postcode = base.Columns["KlBg_Postcode"];
                this.columnKlBg_Woonplaats = base.Columns["KlBg_Woonplaats"];
                this.columnKlBg_Telefoonnummer = base.Columns["KlBg_Telefoonnummer"];
                this.columnKlBg_Emailadres = base.Columns["KlBg_Emailadres"];
                this.columnKlBg_Extra_informatie = base.Columns["KlBg_Extra_informatie"];
                this.columnKlBg_SysteemKlBgDispJN = base.Columns["KlBg_SysteemKlBgDispJN"];
                this.columnKlBg_KlDispJN = base.Columns["KlBg_KlDispJN"];
                this.columnKlBg_BgDispJN = base.Columns["KlBg_BgDispJN"];
                this.columnKlBg_Mutatiedatum = base.Columns["KlBg_Mutatiedatum"];
                this.columnKlBg_Opmerking = base.Columns["KlBg_Opmerking"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            private void InitClass() {
                this.columnKlBg_Id = new global::System.Data.DataColumn("KlBg_Id", typeof(long), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnKlBg_Id);
                this.columnKlBg_StatusId = new global::System.Data.DataColumn("KlBg_StatusId", typeof(long), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnKlBg_StatusId);
                this.columnKlBg_DispStatus = new global::System.Data.DataColumn("KlBg_DispStatus", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnKlBg_DispStatus);
                this.columnKlBg_KlantJN = new global::System.Data.DataColumn("KlBg_KlantJN", typeof(long), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnKlBg_KlantJN);
                this.columnKlBg_BegunstigdeJN = new global::System.Data.DataColumn("KlBg_BegunstigdeJN", typeof(long), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnKlBg_BegunstigdeJN);
                this.columnKlBg_SysteemKlBgJN = new global::System.Data.DataColumn("KlBg_SysteemKlBgJN", typeof(long), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnKlBg_SysteemKlBgJN);
                this.columnKlBg_Scipio_Lokaalnr = new global::System.Data.DataColumn("KlBg_Scipio_Lokaalnr", typeof(long), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnKlBg_Scipio_Lokaalnr);
                this.columnKlBg_DebNr = new global::System.Data.DataColumn("KlBg_DebNr", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnKlBg_DebNr);
                this.columnKlBg_CredNr = new global::System.Data.DataColumn("KlBg_CredNr", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnKlBg_CredNr);
                this.columnKlBg_Voorvoegsel = new global::System.Data.DataColumn("KlBg_Voorvoegsel", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnKlBg_Voorvoegsel);
                this.columnKlBg_Voorletters = new global::System.Data.DataColumn("KlBg_Voorletters", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnKlBg_Voorletters);
                this.columnKlBg_Tussenvoegsel = new global::System.Data.DataColumn("KlBg_Tussenvoegsel", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnKlBg_Tussenvoegsel);
                this.columnKlBg_Achternaam = new global::System.Data.DataColumn("KlBg_Achternaam", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnKlBg_Achternaam);
                this.columnKlBg_VVTA = new global::System.Data.DataColumn("KlBg_VVTA", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnKlBg_VVTA);
                this.columnKlBg_AVVT = new global::System.Data.DataColumn("KlBg_AVVT", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnKlBg_AVVT);
                this.columnKlBg_Straatnaam = new global::System.Data.DataColumn("KlBg_Straatnaam", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnKlBg_Straatnaam);
                this.columnKlBg_Huisnummer = new global::System.Data.DataColumn("KlBg_Huisnummer", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnKlBg_Huisnummer);
                this.columnKlBg_Huisnummertoevoeging = new global::System.Data.DataColumn("KlBg_Huisnummertoevoeging", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnKlBg_Huisnummertoevoeging);
                this.columnKlBg_Adres = new global::System.Data.DataColumn("KlBg_Adres", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnKlBg_Adres);
                this.columnKlBg_Postcode = new global::System.Data.DataColumn("KlBg_Postcode", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnKlBg_Postcode);
                this.columnKlBg_Woonplaats = new global::System.Data.DataColumn("KlBg_Woonplaats", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnKlBg_Woonplaats);
                this.columnKlBg_Telefoonnummer = new global::System.Data.DataColumn("KlBg_Telefoonnummer", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnKlBg_Telefoonnummer);
                this.columnKlBg_Emailadres = new global::System.Data.DataColumn("KlBg_Emailadres", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnKlBg_Emailadres);
                this.columnKlBg_Extra_informatie = new global::System.Data.DataColumn("KlBg_Extra_informatie", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnKlBg_Extra_informatie);
                this.columnKlBg_SysteemKlBgDispJN = new global::System.Data.DataColumn("KlBg_SysteemKlBgDispJN", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnKlBg_SysteemKlBgDispJN);
                this.columnKlBg_KlDispJN = new global::System.Data.DataColumn("KlBg_KlDispJN", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnKlBg_KlDispJN);
                this.columnKlBg_BgDispJN = new global::System.Data.DataColumn("KlBg_BgDispJN", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnKlBg_BgDispJN);
                this.columnKlBg_Mutatiedatum = new global::System.Data.DataColumn("KlBg_Mutatiedatum", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnKlBg_Mutatiedatum);
                this.columnKlBg_Opmerking = new global::System.Data.DataColumn("KlBg_Opmerking", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnKlBg_Opmerking);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnKlBg_Id}, true));
                this.columnKlBg_Id.AutoIncrement = true;
                this.columnKlBg_Id.AutoIncrementSeed = -1;
                this.columnKlBg_Id.AutoIncrementStep = -1;
                this.columnKlBg_Id.AllowDBNull = false;
                this.columnKlBg_Id.Unique = true;
                this.columnKlBg_StatusId.AllowDBNull = false;
                this.columnKlBg_DispStatus.MaxLength = 75;
                this.columnKlBg_KlantJN.AllowDBNull = false;
                this.columnKlBg_BegunstigdeJN.AllowDBNull = false;
                this.columnKlBg_DebNr.MaxLength = 20;
                this.columnKlBg_CredNr.MaxLength = 20;
                this.columnKlBg_Voorvoegsel.MaxLength = 10;
                this.columnKlBg_Voorletters.MaxLength = 10;
                this.columnKlBg_Tussenvoegsel.MaxLength = 10;
                this.columnKlBg_Achternaam.MaxLength = 50;
                this.columnKlBg_VVTA.AllowDBNull = false;
                this.columnKlBg_VVTA.MaxLength = 75;
                this.columnKlBg_AVVT.AllowDBNull = false;
                this.columnKlBg_AVVT.MaxLength = 75;
                this.columnKlBg_Straatnaam.MaxLength = 25;
                this.columnKlBg_Huisnummer.MaxLength = 8;
                this.columnKlBg_Huisnummertoevoeging.MaxLength = 10;
                this.columnKlBg_Adres.MaxLength = 30;
                this.columnKlBg_Postcode.MaxLength = 7;
                this.columnKlBg_Woonplaats.MaxLength = 30;
                this.columnKlBg_Telefoonnummer.MaxLength = 25;
                this.columnKlBg_Emailadres.MaxLength = 45;
                this.columnKlBg_Extra_informatie.MaxLength = 250;
                this.columnKlBg_SysteemKlBgDispJN.AllowDBNull = false;
                this.columnKlBg_SysteemKlBgDispJN.MaxLength = 1;
                this.columnKlBg_KlDispJN.AllowDBNull = false;
                this.columnKlBg_KlDispJN.MaxLength = 1;
                this.columnKlBg_BgDispJN.AllowDBNull = false;
                this.columnKlBg_BgDispJN.MaxLength = 1;
                this.columnKlBg_Opmerking.MaxLength = 250;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public Klant_BegunstigdeRow NewKlant_BegunstigdeRow() {
                return ((Klant_BegunstigdeRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new Klant_BegunstigdeRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Type GetRowType() {
                return typeof(Klant_BegunstigdeRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.Klant_BegunstigdeRowChanged != null)) {
                    this.Klant_BegunstigdeRowChanged(this, new Klant_BegunstigdeRowChangeEvent(((Klant_BegunstigdeRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.Klant_BegunstigdeRowChanging != null)) {
                    this.Klant_BegunstigdeRowChanging(this, new Klant_BegunstigdeRowChangeEvent(((Klant_BegunstigdeRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.Klant_BegunstigdeRowDeleted != null)) {
                    this.Klant_BegunstigdeRowDeleted(this, new Klant_BegunstigdeRowChangeEvent(((Klant_BegunstigdeRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.Klant_BegunstigdeRowDeleting != null)) {
                    this.Klant_BegunstigdeRowDeleting(this, new Klant_BegunstigdeRowChangeEvent(((Klant_BegunstigdeRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void RemoveKlant_BegunstigdeRow(Klant_BegunstigdeRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                _Cmbap_dataDataSet ds = new _Cmbap_dataDataSet();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "Klant_BegunstigdeDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class Licentie_controleDataTable : global::System.Data.TypedTableBase<Licentie_controleRow> {
            
            private global::System.Data.DataColumn columnLicctrl_Id;
            
            private global::System.Data.DataColumn columnLicctrl_StatusId;
            
            private global::System.Data.DataColumn columnLicctrl_DispStatus;
            
            private global::System.Data.DataColumn columnLicctrl_Programma;
            
            private global::System.Data.DataColumn columnLicctrl_Nr;
            
            private global::System.Data.DataColumn columnLicctrl_Code;
            
            private global::System.Data.DataColumn columnLicctrl_Type;
            
            private global::System.Data.DataColumn columnLicctrl_Usermode;
            
            private global::System.Data.DataColumn columnLicctrl_ControleCode;
            
            private global::System.Data.DataColumn columnLicctrl_Mutatiedatum;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public Licentie_controleDataTable() {
                this.TableName = "Licentie_controle";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal Licentie_controleDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected Licentie_controleDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn Licctrl_IdColumn {
                get {
                    return this.columnLicctrl_Id;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn Licctrl_StatusIdColumn {
                get {
                    return this.columnLicctrl_StatusId;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn Licctrl_DispStatusColumn {
                get {
                    return this.columnLicctrl_DispStatus;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn Licctrl_ProgrammaColumn {
                get {
                    return this.columnLicctrl_Programma;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn Licctrl_NrColumn {
                get {
                    return this.columnLicctrl_Nr;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn Licctrl_CodeColumn {
                get {
                    return this.columnLicctrl_Code;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn Licctrl_TypeColumn {
                get {
                    return this.columnLicctrl_Type;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn Licctrl_UsermodeColumn {
                get {
                    return this.columnLicctrl_Usermode;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn Licctrl_ControleCodeColumn {
                get {
                    return this.columnLicctrl_ControleCode;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn Licctrl_MutatiedatumColumn {
                get {
                    return this.columnLicctrl_Mutatiedatum;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public Licentie_controleRow this[int index] {
                get {
                    return ((Licentie_controleRow)(this.Rows[index]));
                }
            }
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event Licentie_controleRowChangeEventHandler Licentie_controleRowChanging;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event Licentie_controleRowChangeEventHandler Licentie_controleRowChanged;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event Licentie_controleRowChangeEventHandler Licentie_controleRowDeleting;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event Licentie_controleRowChangeEventHandler Licentie_controleRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void AddLicentie_controleRow(Licentie_controleRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public Licentie_controleRow AddLicentie_controleRow(long Licctrl_StatusId, string Licctrl_DispStatus, string Licctrl_Programma, long Licctrl_Nr, string Licctrl_Code, object Licctrl_Type, long Licctrl_Usermode, string Licctrl_ControleCode, System.DateTime Licctrl_Mutatiedatum) {
                Licentie_controleRow rowLicentie_controleRow = ((Licentie_controleRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        null,
                        Licctrl_StatusId,
                        Licctrl_DispStatus,
                        Licctrl_Programma,
                        Licctrl_Nr,
                        Licctrl_Code,
                        Licctrl_Type,
                        Licctrl_Usermode,
                        Licctrl_ControleCode,
                        Licctrl_Mutatiedatum};
                rowLicentie_controleRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowLicentie_controleRow);
                return rowLicentie_controleRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public Licentie_controleRow FindByLicctrl_Id(long Licctrl_Id) {
                return ((Licentie_controleRow)(this.Rows.Find(new object[] {
                            Licctrl_Id})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public override global::System.Data.DataTable Clone() {
                Licentie_controleDataTable cln = ((Licentie_controleDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataTable CreateInstance() {
                return new Licentie_controleDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal void InitVars() {
                this.columnLicctrl_Id = base.Columns["Licctrl_Id"];
                this.columnLicctrl_StatusId = base.Columns["Licctrl_StatusId"];
                this.columnLicctrl_DispStatus = base.Columns["Licctrl_DispStatus"];
                this.columnLicctrl_Programma = base.Columns["Licctrl_Programma"];
                this.columnLicctrl_Nr = base.Columns["Licctrl_Nr"];
                this.columnLicctrl_Code = base.Columns["Licctrl_Code"];
                this.columnLicctrl_Type = base.Columns["Licctrl_Type"];
                this.columnLicctrl_Usermode = base.Columns["Licctrl_Usermode"];
                this.columnLicctrl_ControleCode = base.Columns["Licctrl_ControleCode"];
                this.columnLicctrl_Mutatiedatum = base.Columns["Licctrl_Mutatiedatum"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            private void InitClass() {
                this.columnLicctrl_Id = new global::System.Data.DataColumn("Licctrl_Id", typeof(long), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnLicctrl_Id);
                this.columnLicctrl_StatusId = new global::System.Data.DataColumn("Licctrl_StatusId", typeof(long), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnLicctrl_StatusId);
                this.columnLicctrl_DispStatus = new global::System.Data.DataColumn("Licctrl_DispStatus", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnLicctrl_DispStatus);
                this.columnLicctrl_Programma = new global::System.Data.DataColumn("Licctrl_Programma", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnLicctrl_Programma);
                this.columnLicctrl_Nr = new global::System.Data.DataColumn("Licctrl_Nr", typeof(long), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnLicctrl_Nr);
                this.columnLicctrl_Code = new global::System.Data.DataColumn("Licctrl_Code", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnLicctrl_Code);
                this.columnLicctrl_Type = new global::System.Data.DataColumn("Licctrl_Type", typeof(object), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnLicctrl_Type);
                this.columnLicctrl_Usermode = new global::System.Data.DataColumn("Licctrl_Usermode", typeof(long), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnLicctrl_Usermode);
                this.columnLicctrl_ControleCode = new global::System.Data.DataColumn("Licctrl_ControleCode", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnLicctrl_ControleCode);
                this.columnLicctrl_Mutatiedatum = new global::System.Data.DataColumn("Licctrl_Mutatiedatum", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnLicctrl_Mutatiedatum);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnLicctrl_Nr}, false));
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint2", new global::System.Data.DataColumn[] {
                                this.columnLicctrl_Id}, true));
                this.columnLicctrl_Id.AutoIncrement = true;
                this.columnLicctrl_Id.AutoIncrementSeed = -1;
                this.columnLicctrl_Id.AutoIncrementStep = -1;
                this.columnLicctrl_Id.AllowDBNull = false;
                this.columnLicctrl_Id.Unique = true;
                this.columnLicctrl_DispStatus.MaxLength = 75;
                this.columnLicctrl_Programma.AllowDBNull = false;
                this.columnLicctrl_Programma.MaxLength = 10;
                this.columnLicctrl_Nr.AllowDBNull = false;
                this.columnLicctrl_Nr.Unique = true;
                this.columnLicctrl_Code.MaxLength = 30;
                this.columnLicctrl_Type.AllowDBNull = false;
                this.columnLicctrl_Usermode.AllowDBNull = false;
                this.columnLicctrl_ControleCode.MaxLength = 30;
                this.columnLicctrl_Mutatiedatum.AllowDBNull = false;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public Licentie_controleRow NewLicentie_controleRow() {
                return ((Licentie_controleRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new Licentie_controleRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Type GetRowType() {
                return typeof(Licentie_controleRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.Licentie_controleRowChanged != null)) {
                    this.Licentie_controleRowChanged(this, new Licentie_controleRowChangeEvent(((Licentie_controleRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.Licentie_controleRowChanging != null)) {
                    this.Licentie_controleRowChanging(this, new Licentie_controleRowChangeEvent(((Licentie_controleRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.Licentie_controleRowDeleted != null)) {
                    this.Licentie_controleRowDeleted(this, new Licentie_controleRowChangeEvent(((Licentie_controleRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.Licentie_controleRowDeleting != null)) {
                    this.Licentie_controleRowDeleting(this, new Licentie_controleRowChangeEvent(((Licentie_controleRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void RemoveLicentie_controleRow(Licentie_controleRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                _Cmbap_dataDataSet ds = new _Cmbap_dataDataSet();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "Licentie_controleDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class LogDataTable : global::System.Data.TypedTableBase<LogRow> {
            
            private global::System.Data.DataColumn columnLog_Id;
            
            private global::System.Data.DataColumn columnLog_StatusId;
            
            private global::System.Data.DataColumn columnLog_DispStatus;
            
            private global::System.Data.DataColumn columnLog_Datum;
            
            private global::System.Data.DataColumn columnLog_Bestand;
            
            private global::System.Data.DataColumn columnLog_Bestandsnr;
            
            private global::System.Data.DataColumn columnLog_RecordId;
            
            private global::System.Data.DataColumn columnLog_Veldnaam;
            
            private global::System.Data.DataColumn columnLog_Volgnr;
            
            private global::System.Data.DataColumn columnLog_Oude_tekst;
            
            private global::System.Data.DataColumn columnLog_Nieuwe_tekst;
            
            private global::System.Data.DataColumn columnLog_Oude_numeriek;
            
            private global::System.Data.DataColumn columnLog_Nieuwe_numeriek;
            
            private global::System.Data.DataColumn columnLog_Oude_real;
            
            private global::System.Data.DataColumn columnLog_Nieuwe_real;
            
            private global::System.Data.DataColumn columnLog_Oude_currency;
            
            private global::System.Data.DataColumn columnLog_Nieuwe_currency;
            
            private global::System.Data.DataColumn columnLog_Oude_datum;
            
            private global::System.Data.DataColumn columnLog_Nieuwe_datum;
            
            private global::System.Data.DataColumn columnLog_Oude_JN;
            
            private global::System.Data.DataColumn columnLog_Nieuwe_JN;
            
            private global::System.Data.DataColumn columnLog_Oude_memo;
            
            private global::System.Data.DataColumn columnLog_Nieuwe_memo;
            
            private global::System.Data.DataColumn columnLog_Oude_record_datum;
            
            private global::System.Data.DataColumn columnLog_Nieuwe_recorddatum;
            
            private global::System.Data.DataColumn columnLog_Oude_user;
            
            private global::System.Data.DataColumn columnLog_Nieuwe_user;
            
            private global::System.Data.DataColumn columnLog_DbFilesId;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public LogDataTable() {
                this.TableName = "Log";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal LogDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected LogDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn Log_IdColumn {
                get {
                    return this.columnLog_Id;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn Log_StatusIdColumn {
                get {
                    return this.columnLog_StatusId;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn Log_DispStatusColumn {
                get {
                    return this.columnLog_DispStatus;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn Log_DatumColumn {
                get {
                    return this.columnLog_Datum;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn Log_BestandColumn {
                get {
                    return this.columnLog_Bestand;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn Log_BestandsnrColumn {
                get {
                    return this.columnLog_Bestandsnr;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn Log_RecordIdColumn {
                get {
                    return this.columnLog_RecordId;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn Log_VeldnaamColumn {
                get {
                    return this.columnLog_Veldnaam;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn Log_VolgnrColumn {
                get {
                    return this.columnLog_Volgnr;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn Log_Oude_tekstColumn {
                get {
                    return this.columnLog_Oude_tekst;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn Log_Nieuwe_tekstColumn {
                get {
                    return this.columnLog_Nieuwe_tekst;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn Log_Oude_numeriekColumn {
                get {
                    return this.columnLog_Oude_numeriek;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn Log_Nieuwe_numeriekColumn {
                get {
                    return this.columnLog_Nieuwe_numeriek;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn Log_Oude_realColumn {
                get {
                    return this.columnLog_Oude_real;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn Log_Nieuwe_realColumn {
                get {
                    return this.columnLog_Nieuwe_real;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn Log_Oude_currencyColumn {
                get {
                    return this.columnLog_Oude_currency;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn Log_Nieuwe_currencyColumn {
                get {
                    return this.columnLog_Nieuwe_currency;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn Log_Oude_datumColumn {
                get {
                    return this.columnLog_Oude_datum;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn Log_Nieuwe_datumColumn {
                get {
                    return this.columnLog_Nieuwe_datum;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn Log_Oude_JNColumn {
                get {
                    return this.columnLog_Oude_JN;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn Log_Nieuwe_JNColumn {
                get {
                    return this.columnLog_Nieuwe_JN;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn Log_Oude_memoColumn {
                get {
                    return this.columnLog_Oude_memo;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn Log_Nieuwe_memoColumn {
                get {
                    return this.columnLog_Nieuwe_memo;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn Log_Oude_record_datumColumn {
                get {
                    return this.columnLog_Oude_record_datum;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn Log_Nieuwe_recorddatumColumn {
                get {
                    return this.columnLog_Nieuwe_recorddatum;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn Log_Oude_userColumn {
                get {
                    return this.columnLog_Oude_user;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn Log_Nieuwe_userColumn {
                get {
                    return this.columnLog_Nieuwe_user;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn Log_DbFilesIdColumn {
                get {
                    return this.columnLog_DbFilesId;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public LogRow this[int index] {
                get {
                    return ((LogRow)(this.Rows[index]));
                }
            }
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event LogRowChangeEventHandler LogRowChanging;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event LogRowChangeEventHandler LogRowChanged;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event LogRowChangeEventHandler LogRowDeleting;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event LogRowChangeEventHandler LogRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void AddLogRow(LogRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public LogRow AddLogRow(
                        long Log_StatusId, 
                        string Log_DispStatus, 
                        System.DateTime Log_Datum, 
                        string Log_Bestand, 
                        long Log_Bestandsnr, 
                        long Log_RecordId, 
                        string Log_Veldnaam, 
                        long Log_Volgnr, 
                        string Log_Oude_tekst, 
                        string Log_Nieuwe_tekst, 
                        long Log_Oude_numeriek, 
                        long Log_Nieuwe_numeriek, 
                        decimal Log_Oude_real, 
                        decimal Log_Nieuwe_real, 
                        decimal Log_Oude_currency, 
                        decimal Log_Nieuwe_currency, 
                        System.DateTime Log_Oude_datum, 
                        System.DateTime Log_Nieuwe_datum, 
                        long Log_Oude_JN, 
                        long Log_Nieuwe_JN, 
                        string Log_Oude_memo, 
                        string Log_Nieuwe_memo, 
                        System.DateTime Log_Oude_record_datum, 
                        System.DateTime Log_Nieuwe_recorddatum, 
                        long Log_Oude_user, 
                        long Log_Nieuwe_user, 
                        long Log_DbFilesId) {
                LogRow rowLogRow = ((LogRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        null,
                        Log_StatusId,
                        Log_DispStatus,
                        Log_Datum,
                        Log_Bestand,
                        Log_Bestandsnr,
                        Log_RecordId,
                        Log_Veldnaam,
                        Log_Volgnr,
                        Log_Oude_tekst,
                        Log_Nieuwe_tekst,
                        Log_Oude_numeriek,
                        Log_Nieuwe_numeriek,
                        Log_Oude_real,
                        Log_Nieuwe_real,
                        Log_Oude_currency,
                        Log_Nieuwe_currency,
                        Log_Oude_datum,
                        Log_Nieuwe_datum,
                        Log_Oude_JN,
                        Log_Nieuwe_JN,
                        Log_Oude_memo,
                        Log_Nieuwe_memo,
                        Log_Oude_record_datum,
                        Log_Nieuwe_recorddatum,
                        Log_Oude_user,
                        Log_Nieuwe_user,
                        Log_DbFilesId};
                rowLogRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowLogRow);
                return rowLogRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public LogRow FindByLog_Id(long Log_Id) {
                return ((LogRow)(this.Rows.Find(new object[] {
                            Log_Id})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public override global::System.Data.DataTable Clone() {
                LogDataTable cln = ((LogDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataTable CreateInstance() {
                return new LogDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal void InitVars() {
                this.columnLog_Id = base.Columns["Log_Id"];
                this.columnLog_StatusId = base.Columns["Log_StatusId"];
                this.columnLog_DispStatus = base.Columns["Log_DispStatus"];
                this.columnLog_Datum = base.Columns["Log_Datum"];
                this.columnLog_Bestand = base.Columns["Log_Bestand"];
                this.columnLog_Bestandsnr = base.Columns["Log_Bestandsnr"];
                this.columnLog_RecordId = base.Columns["Log_RecordId"];
                this.columnLog_Veldnaam = base.Columns["Log_Veldnaam"];
                this.columnLog_Volgnr = base.Columns["Log_Volgnr"];
                this.columnLog_Oude_tekst = base.Columns["Log_Oude_tekst"];
                this.columnLog_Nieuwe_tekst = base.Columns["Log_Nieuwe_tekst"];
                this.columnLog_Oude_numeriek = base.Columns["Log_Oude_numeriek"];
                this.columnLog_Nieuwe_numeriek = base.Columns["Log_Nieuwe_numeriek"];
                this.columnLog_Oude_real = base.Columns["Log_Oude_real"];
                this.columnLog_Nieuwe_real = base.Columns["Log_Nieuwe_real"];
                this.columnLog_Oude_currency = base.Columns["Log_Oude_currency"];
                this.columnLog_Nieuwe_currency = base.Columns["Log_Nieuwe_currency"];
                this.columnLog_Oude_datum = base.Columns["Log_Oude_datum"];
                this.columnLog_Nieuwe_datum = base.Columns["Log_Nieuwe_datum"];
                this.columnLog_Oude_JN = base.Columns["Log_Oude_JN"];
                this.columnLog_Nieuwe_JN = base.Columns["Log_Nieuwe_JN"];
                this.columnLog_Oude_memo = base.Columns["Log_Oude_memo"];
                this.columnLog_Nieuwe_memo = base.Columns["Log_Nieuwe_memo"];
                this.columnLog_Oude_record_datum = base.Columns["Log_Oude_record_datum"];
                this.columnLog_Nieuwe_recorddatum = base.Columns["Log_Nieuwe_recorddatum"];
                this.columnLog_Oude_user = base.Columns["Log_Oude_user"];
                this.columnLog_Nieuwe_user = base.Columns["Log_Nieuwe_user"];
                this.columnLog_DbFilesId = base.Columns["Log_DbFilesId"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            private void InitClass() {
                this.columnLog_Id = new global::System.Data.DataColumn("Log_Id", typeof(long), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnLog_Id);
                this.columnLog_StatusId = new global::System.Data.DataColumn("Log_StatusId", typeof(long), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnLog_StatusId);
                this.columnLog_DispStatus = new global::System.Data.DataColumn("Log_DispStatus", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnLog_DispStatus);
                this.columnLog_Datum = new global::System.Data.DataColumn("Log_Datum", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnLog_Datum);
                this.columnLog_Bestand = new global::System.Data.DataColumn("Log_Bestand", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnLog_Bestand);
                this.columnLog_Bestandsnr = new global::System.Data.DataColumn("Log_Bestandsnr", typeof(long), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnLog_Bestandsnr);
                this.columnLog_RecordId = new global::System.Data.DataColumn("Log_RecordId", typeof(long), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnLog_RecordId);
                this.columnLog_Veldnaam = new global::System.Data.DataColumn("Log_Veldnaam", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnLog_Veldnaam);
                this.columnLog_Volgnr = new global::System.Data.DataColumn("Log_Volgnr", typeof(long), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnLog_Volgnr);
                this.columnLog_Oude_tekst = new global::System.Data.DataColumn("Log_Oude_tekst", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnLog_Oude_tekst);
                this.columnLog_Nieuwe_tekst = new global::System.Data.DataColumn("Log_Nieuwe_tekst", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnLog_Nieuwe_tekst);
                this.columnLog_Oude_numeriek = new global::System.Data.DataColumn("Log_Oude_numeriek", typeof(long), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnLog_Oude_numeriek);
                this.columnLog_Nieuwe_numeriek = new global::System.Data.DataColumn("Log_Nieuwe_numeriek", typeof(long), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnLog_Nieuwe_numeriek);
                this.columnLog_Oude_real = new global::System.Data.DataColumn("Log_Oude_real", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnLog_Oude_real);
                this.columnLog_Nieuwe_real = new global::System.Data.DataColumn("Log_Nieuwe_real", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnLog_Nieuwe_real);
                this.columnLog_Oude_currency = new global::System.Data.DataColumn("Log_Oude_currency", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnLog_Oude_currency);
                this.columnLog_Nieuwe_currency = new global::System.Data.DataColumn("Log_Nieuwe_currency", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnLog_Nieuwe_currency);
                this.columnLog_Oude_datum = new global::System.Data.DataColumn("Log_Oude_datum", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnLog_Oude_datum);
                this.columnLog_Nieuwe_datum = new global::System.Data.DataColumn("Log_Nieuwe_datum", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnLog_Nieuwe_datum);
                this.columnLog_Oude_JN = new global::System.Data.DataColumn("Log_Oude_JN", typeof(long), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnLog_Oude_JN);
                this.columnLog_Nieuwe_JN = new global::System.Data.DataColumn("Log_Nieuwe_JN", typeof(long), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnLog_Nieuwe_JN);
                this.columnLog_Oude_memo = new global::System.Data.DataColumn("Log_Oude_memo", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnLog_Oude_memo);
                this.columnLog_Nieuwe_memo = new global::System.Data.DataColumn("Log_Nieuwe_memo", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnLog_Nieuwe_memo);
                this.columnLog_Oude_record_datum = new global::System.Data.DataColumn("Log_Oude_record_datum", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnLog_Oude_record_datum);
                this.columnLog_Nieuwe_recorddatum = new global::System.Data.DataColumn("Log_Nieuwe_recorddatum", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnLog_Nieuwe_recorddatum);
                this.columnLog_Oude_user = new global::System.Data.DataColumn("Log_Oude_user", typeof(long), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnLog_Oude_user);
                this.columnLog_Nieuwe_user = new global::System.Data.DataColumn("Log_Nieuwe_user", typeof(long), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnLog_Nieuwe_user);
                this.columnLog_DbFilesId = new global::System.Data.DataColumn("Log_DbFilesId", typeof(long), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnLog_DbFilesId);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnLog_Id}, true));
                this.columnLog_Id.AutoIncrement = true;
                this.columnLog_Id.AutoIncrementSeed = -1;
                this.columnLog_Id.AutoIncrementStep = -1;
                this.columnLog_Id.AllowDBNull = false;
                this.columnLog_Id.Unique = true;
                this.columnLog_DispStatus.MaxLength = 75;
                this.columnLog_Datum.AllowDBNull = false;
                this.columnLog_Bestand.AllowDBNull = false;
                this.columnLog_Bestand.MaxLength = 25;
                this.columnLog_Bestandsnr.AllowDBNull = false;
                this.columnLog_RecordId.AllowDBNull = false;
                this.columnLog_Veldnaam.AllowDBNull = false;
                this.columnLog_Veldnaam.MaxLength = 25;
                this.columnLog_Volgnr.AllowDBNull = false;
                this.columnLog_Oude_tekst.MaxLength = 250;
                this.columnLog_Nieuwe_tekst.MaxLength = 250;
                this.columnLog_Oude_memo.MaxLength = 2147483647;
                this.columnLog_Nieuwe_memo.MaxLength = 2147483647;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public LogRow NewLogRow() {
                return ((LogRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new LogRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Type GetRowType() {
                return typeof(LogRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.LogRowChanged != null)) {
                    this.LogRowChanged(this, new LogRowChangeEvent(((LogRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.LogRowChanging != null)) {
                    this.LogRowChanging(this, new LogRowChangeEvent(((LogRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.LogRowDeleted != null)) {
                    this.LogRowDeleted(this, new LogRowChangeEvent(((LogRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.LogRowDeleting != null)) {
                    this.LogRowDeleting(this, new LogRowChangeEvent(((LogRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void RemoveLogRow(LogRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                _Cmbap_dataDataSet ds = new _Cmbap_dataDataSet();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "LogDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class ProductDataTable : global::System.Data.TypedTableBase<ProductRow> {
            
            private global::System.Data.DataColumn columnProd_Id;
            
            private global::System.Data.DataColumn columnProd_StatusId;
            
            private global::System.Data.DataColumn columnProd_DispStatus;
            
            private global::System.Data.DataColumn columnProd_Naamkort;
            
            private global::System.Data.DataColumn columnProd_Naamlang;
            
            private global::System.Data.DataColumn columnProd_Kleur;
            
            private global::System.Data.DataColumn columnProd_Code;
            
            private global::System.Data.DataColumn columnProd_Soort;
            
            private global::System.Data.DataColumn columnProd_ActiefJN;
            
            private global::System.Data.DataColumn columnProd_DispActief;
            
            private global::System.Data.DataColumn columnProd_Waarde;
            
            private global::System.Data.DataColumn columnProd_Aantaleenhedenperproduct;
            
            private global::System.Data.DataColumn columnProd_Verzamelnaam;
            
            private global::System.Data.DataColumn columnProd_WaardePerEenheid;
            
            private global::System.Data.DataColumn columnProd_Mutatiedatum;
            
            private global::System.Data.DataColumn columnProd_Opmerking;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public ProductDataTable() {
                this.TableName = "Product";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal ProductDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected ProductDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn Prod_IdColumn {
                get {
                    return this.columnProd_Id;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn Prod_StatusIdColumn {
                get {
                    return this.columnProd_StatusId;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn Prod_DispStatusColumn {
                get {
                    return this.columnProd_DispStatus;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn Prod_NaamkortColumn {
                get {
                    return this.columnProd_Naamkort;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn Prod_NaamlangColumn {
                get {
                    return this.columnProd_Naamlang;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn Prod_KleurColumn {
                get {
                    return this.columnProd_Kleur;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn Prod_CodeColumn {
                get {
                    return this.columnProd_Code;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn Prod_SoortColumn {
                get {
                    return this.columnProd_Soort;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn Prod_ActiefJNColumn {
                get {
                    return this.columnProd_ActiefJN;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn Prod_DispActiefColumn {
                get {
                    return this.columnProd_DispActief;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn Prod_WaardeColumn {
                get {
                    return this.columnProd_Waarde;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn Prod_AantaleenhedenperproductColumn {
                get {
                    return this.columnProd_Aantaleenhedenperproduct;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn Prod_VerzamelnaamColumn {
                get {
                    return this.columnProd_Verzamelnaam;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn Prod_WaardePerEenheidColumn {
                get {
                    return this.columnProd_WaardePerEenheid;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn Prod_MutatiedatumColumn {
                get {
                    return this.columnProd_Mutatiedatum;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn Prod_OpmerkingColumn {
                get {
                    return this.columnProd_Opmerking;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public ProductRow this[int index] {
                get {
                    return ((ProductRow)(this.Rows[index]));
                }
            }
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event ProductRowChangeEventHandler ProductRowChanging;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event ProductRowChangeEventHandler ProductRowChanged;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event ProductRowChangeEventHandler ProductRowDeleting;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event ProductRowChangeEventHandler ProductRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void AddProductRow(ProductRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public ProductRow AddProductRow(long Prod_StatusId, string Prod_DispStatus, string Prod_Naamkort, string Prod_Naamlang, string Prod_Kleur, string Prod_Code, string Prod_Soort, long Prod_ActiefJN, string Prod_DispActief, decimal Prod_Waarde, byte Prod_Aantaleenhedenperproduct, string Prod_Verzamelnaam, decimal Prod_WaardePerEenheid, System.DateTime Prod_Mutatiedatum, string Prod_Opmerking) {
                ProductRow rowProductRow = ((ProductRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        null,
                        Prod_StatusId,
                        Prod_DispStatus,
                        Prod_Naamkort,
                        Prod_Naamlang,
                        Prod_Kleur,
                        Prod_Code,
                        Prod_Soort,
                        Prod_ActiefJN,
                        Prod_DispActief,
                        Prod_Waarde,
                        Prod_Aantaleenhedenperproduct,
                        Prod_Verzamelnaam,
                        Prod_WaardePerEenheid,
                        Prod_Mutatiedatum,
                        Prod_Opmerking};
                rowProductRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowProductRow);
                return rowProductRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public ProductRow FindByProd_Id(long Prod_Id) {
                return ((ProductRow)(this.Rows.Find(new object[] {
                            Prod_Id})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public override global::System.Data.DataTable Clone() {
                ProductDataTable cln = ((ProductDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataTable CreateInstance() {
                return new ProductDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal void InitVars() {
                this.columnProd_Id = base.Columns["Prod_Id"];
                this.columnProd_StatusId = base.Columns["Prod_StatusId"];
                this.columnProd_DispStatus = base.Columns["Prod_DispStatus"];
                this.columnProd_Naamkort = base.Columns["Prod_Naamkort"];
                this.columnProd_Naamlang = base.Columns["Prod_Naamlang"];
                this.columnProd_Kleur = base.Columns["Prod_Kleur"];
                this.columnProd_Code = base.Columns["Prod_Code"];
                this.columnProd_Soort = base.Columns["Prod_Soort"];
                this.columnProd_ActiefJN = base.Columns["Prod_ActiefJN"];
                this.columnProd_DispActief = base.Columns["Prod_DispActief"];
                this.columnProd_Waarde = base.Columns["Prod_Waarde"];
                this.columnProd_Aantaleenhedenperproduct = base.Columns["Prod_Aantaleenhedenperproduct"];
                this.columnProd_Verzamelnaam = base.Columns["Prod_Verzamelnaam"];
                this.columnProd_WaardePerEenheid = base.Columns["Prod_WaardePerEenheid"];
                this.columnProd_Mutatiedatum = base.Columns["Prod_Mutatiedatum"];
                this.columnProd_Opmerking = base.Columns["Prod_Opmerking"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            private void InitClass() {
                this.columnProd_Id = new global::System.Data.DataColumn("Prod_Id", typeof(long), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnProd_Id);
                this.columnProd_StatusId = new global::System.Data.DataColumn("Prod_StatusId", typeof(long), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnProd_StatusId);
                this.columnProd_DispStatus = new global::System.Data.DataColumn("Prod_DispStatus", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnProd_DispStatus);
                this.columnProd_Naamkort = new global::System.Data.DataColumn("Prod_Naamkort", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnProd_Naamkort);
                this.columnProd_Naamlang = new global::System.Data.DataColumn("Prod_Naamlang", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnProd_Naamlang);
                this.columnProd_Kleur = new global::System.Data.DataColumn("Prod_Kleur", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnProd_Kleur);
                this.columnProd_Code = new global::System.Data.DataColumn("Prod_Code", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnProd_Code);
                this.columnProd_Soort = new global::System.Data.DataColumn("Prod_Soort", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnProd_Soort);
                this.columnProd_ActiefJN = new global::System.Data.DataColumn("Prod_ActiefJN", typeof(long), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnProd_ActiefJN);
                this.columnProd_DispActief = new global::System.Data.DataColumn("Prod_DispActief", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnProd_DispActief);
                this.columnProd_Waarde = new global::System.Data.DataColumn("Prod_Waarde", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnProd_Waarde);
                this.columnProd_Aantaleenhedenperproduct = new global::System.Data.DataColumn("Prod_Aantaleenhedenperproduct", typeof(byte), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnProd_Aantaleenhedenperproduct);
                this.columnProd_Verzamelnaam = new global::System.Data.DataColumn("Prod_Verzamelnaam", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnProd_Verzamelnaam);
                this.columnProd_WaardePerEenheid = new global::System.Data.DataColumn("Prod_WaardePerEenheid", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnProd_WaardePerEenheid);
                this.columnProd_Mutatiedatum = new global::System.Data.DataColumn("Prod_Mutatiedatum", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnProd_Mutatiedatum);
                this.columnProd_Opmerking = new global::System.Data.DataColumn("Prod_Opmerking", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnProd_Opmerking);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnProd_Id}, true));
                this.columnProd_Id.AutoIncrement = true;
                this.columnProd_Id.AutoIncrementSeed = -1;
                this.columnProd_Id.AutoIncrementStep = -1;
                this.columnProd_Id.AllowDBNull = false;
                this.columnProd_Id.Unique = true;
                this.columnProd_StatusId.AllowDBNull = false;
                this.columnProd_DispStatus.MaxLength = 75;
                this.columnProd_Naamkort.AllowDBNull = false;
                this.columnProd_Naamkort.MaxLength = 10;
                this.columnProd_Naamlang.AllowDBNull = false;
                this.columnProd_Naamlang.MaxLength = 35;
                this.columnProd_Kleur.MaxLength = 10;
                this.columnProd_Code.MaxLength = 10;
                this.columnProd_Soort.AllowDBNull = false;
                this.columnProd_Soort.MaxLength = 1;
                this.columnProd_ActiefJN.AllowDBNull = false;
                this.columnProd_DispActief.AllowDBNull = false;
                this.columnProd_DispActief.MaxLength = 3;
                this.columnProd_Waarde.AllowDBNull = false;
                this.columnProd_Aantaleenhedenperproduct.AllowDBNull = false;
                this.columnProd_Verzamelnaam.AllowDBNull = false;
                this.columnProd_Verzamelnaam.MaxLength = 10;
                this.columnProd_WaardePerEenheid.AllowDBNull = false;
                this.columnProd_Mutatiedatum.AllowDBNull = false;
                this.columnProd_Opmerking.MaxLength = 250;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public ProductRow NewProductRow() {
                return ((ProductRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new ProductRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Type GetRowType() {
                return typeof(ProductRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.ProductRowChanged != null)) {
                    this.ProductRowChanged(this, new ProductRowChangeEvent(((ProductRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.ProductRowChanging != null)) {
                    this.ProductRowChanging(this, new ProductRowChangeEvent(((ProductRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.ProductRowDeleted != null)) {
                    this.ProductRowDeleted(this, new ProductRowChangeEvent(((ProductRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.ProductRowDeleting != null)) {
                    this.ProductRowDeleting(this, new ProductRowChangeEvent(((ProductRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void RemoveProductRow(ProductRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                _Cmbap_dataDataSet ds = new _Cmbap_dataDataSet();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "ProductDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class ProgramerrorDataTable : global::System.Data.TypedTableBase<ProgramerrorRow> {
            
            private global::System.Data.DataColumn columnPE_Id;
            
            private global::System.Data.DataColumn columnPE_ProgrammaId;
            
            private global::System.Data.DataColumn columnPE_ErrorcodeId;
            
            private global::System.Data.DataColumn columnPE_PrgErrNr;
            
            private global::System.Data.DataColumn columnPE_Omschrijving;
            
            private global::System.Data.DataColumn columnPE_Oplossing;
            
            private global::System.Data.DataColumn columnPE_Afhandeling;
            
            private global::System.Data.DataColumn columnPE_Mutatiedatum;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public ProgramerrorDataTable() {
                this.TableName = "Programerror";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal ProgramerrorDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected ProgramerrorDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn PE_IdColumn {
                get {
                    return this.columnPE_Id;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn PE_ProgrammaIdColumn {
                get {
                    return this.columnPE_ProgrammaId;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn PE_ErrorcodeIdColumn {
                get {
                    return this.columnPE_ErrorcodeId;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn PE_PrgErrNrColumn {
                get {
                    return this.columnPE_PrgErrNr;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn PE_OmschrijvingColumn {
                get {
                    return this.columnPE_Omschrijving;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn PE_OplossingColumn {
                get {
                    return this.columnPE_Oplossing;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn PE_AfhandelingColumn {
                get {
                    return this.columnPE_Afhandeling;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn PE_MutatiedatumColumn {
                get {
                    return this.columnPE_Mutatiedatum;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public ProgramerrorRow this[int index] {
                get {
                    return ((ProgramerrorRow)(this.Rows[index]));
                }
            }
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event ProgramerrorRowChangeEventHandler ProgramerrorRowChanging;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event ProgramerrorRowChangeEventHandler ProgramerrorRowChanged;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event ProgramerrorRowChangeEventHandler ProgramerrorRowDeleting;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event ProgramerrorRowChangeEventHandler ProgramerrorRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void AddProgramerrorRow(ProgramerrorRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public ProgramerrorRow AddProgramerrorRow(long PE_ProgrammaId, long PE_ErrorcodeId, string PE_PrgErrNr, string PE_Omschrijving, string PE_Oplossing, long PE_Afhandeling, System.DateTime PE_Mutatiedatum) {
                ProgramerrorRow rowProgramerrorRow = ((ProgramerrorRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        null,
                        PE_ProgrammaId,
                        PE_ErrorcodeId,
                        PE_PrgErrNr,
                        PE_Omschrijving,
                        PE_Oplossing,
                        PE_Afhandeling,
                        PE_Mutatiedatum};
                rowProgramerrorRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowProgramerrorRow);
                return rowProgramerrorRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public ProgramerrorRow FindByPE_Id(long PE_Id) {
                return ((ProgramerrorRow)(this.Rows.Find(new object[] {
                            PE_Id})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public override global::System.Data.DataTable Clone() {
                ProgramerrorDataTable cln = ((ProgramerrorDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataTable CreateInstance() {
                return new ProgramerrorDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal void InitVars() {
                this.columnPE_Id = base.Columns["PE_Id"];
                this.columnPE_ProgrammaId = base.Columns["PE_ProgrammaId"];
                this.columnPE_ErrorcodeId = base.Columns["PE_ErrorcodeId"];
                this.columnPE_PrgErrNr = base.Columns["PE_PrgErrNr"];
                this.columnPE_Omschrijving = base.Columns["PE_Omschrijving"];
                this.columnPE_Oplossing = base.Columns["PE_Oplossing"];
                this.columnPE_Afhandeling = base.Columns["PE_Afhandeling"];
                this.columnPE_Mutatiedatum = base.Columns["PE_Mutatiedatum"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            private void InitClass() {
                this.columnPE_Id = new global::System.Data.DataColumn("PE_Id", typeof(long), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPE_Id);
                this.columnPE_ProgrammaId = new global::System.Data.DataColumn("PE_ProgrammaId", typeof(long), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPE_ProgrammaId);
                this.columnPE_ErrorcodeId = new global::System.Data.DataColumn("PE_ErrorcodeId", typeof(long), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPE_ErrorcodeId);
                this.columnPE_PrgErrNr = new global::System.Data.DataColumn("PE_PrgErrNr", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPE_PrgErrNr);
                this.columnPE_Omschrijving = new global::System.Data.DataColumn("PE_Omschrijving", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPE_Omschrijving);
                this.columnPE_Oplossing = new global::System.Data.DataColumn("PE_Oplossing", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPE_Oplossing);
                this.columnPE_Afhandeling = new global::System.Data.DataColumn("PE_Afhandeling", typeof(long), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPE_Afhandeling);
                this.columnPE_Mutatiedatum = new global::System.Data.DataColumn("PE_Mutatiedatum", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPE_Mutatiedatum);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnPE_Id}, true));
                this.columnPE_Id.AutoIncrement = true;
                this.columnPE_Id.AutoIncrementSeed = -1;
                this.columnPE_Id.AutoIncrementStep = -1;
                this.columnPE_Id.AllowDBNull = false;
                this.columnPE_Id.Unique = true;
                this.columnPE_ProgrammaId.AllowDBNull = false;
                this.columnPE_ErrorcodeId.AllowDBNull = false;
                this.columnPE_PrgErrNr.AllowDBNull = false;
                this.columnPE_PrgErrNr.MaxLength = 11;
                this.columnPE_Omschrijving.AllowDBNull = false;
                this.columnPE_Omschrijving.MaxLength = 250;
                this.columnPE_Oplossing.AllowDBNull = false;
                this.columnPE_Oplossing.MaxLength = 50;
                this.columnPE_Mutatiedatum.AllowDBNull = false;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public ProgramerrorRow NewProgramerrorRow() {
                return ((ProgramerrorRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new ProgramerrorRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Type GetRowType() {
                return typeof(ProgramerrorRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.ProgramerrorRowChanged != null)) {
                    this.ProgramerrorRowChanged(this, new ProgramerrorRowChangeEvent(((ProgramerrorRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.ProgramerrorRowChanging != null)) {
                    this.ProgramerrorRowChanging(this, new ProgramerrorRowChangeEvent(((ProgramerrorRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.ProgramerrorRowDeleted != null)) {
                    this.ProgramerrorRowDeleted(this, new ProgramerrorRowChangeEvent(((ProgramerrorRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.ProgramerrorRowDeleting != null)) {
                    this.ProgramerrorRowDeleting(this, new ProgramerrorRowChangeEvent(((ProgramerrorRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void RemoveProgramerrorRow(ProgramerrorRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                _Cmbap_dataDataSet ds = new _Cmbap_dataDataSet();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "ProgramerrorDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class SaldostandDataTable : global::System.Data.TypedTableBase<SaldostandRow> {
            
            private global::System.Data.DataColumn columnSaldostand_Id;
            
            private global::System.Data.DataColumn columnSaldostand_StatusId;
            
            private global::System.Data.DataColumn columnSaldostand_DispStatus;
            
            private global::System.Data.DataColumn columnSaldostand_JgegId;
            
            private global::System.Data.DataColumn columnSaldostand_BgnrId;
            
            private global::System.Data.DataColumn columnSaldostand_Datum;
            
            private global::System.Data.DataColumn columnSaldostand_Saldo;
            
            private global::System.Data.DataColumn columnSaldostand_Mutatiedatum;
            
            private global::System.Data.DataColumn columnSaldostand_Opmerking;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public SaldostandDataTable() {
                this.TableName = "Saldostand";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal SaldostandDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected SaldostandDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn Saldostand_IdColumn {
                get {
                    return this.columnSaldostand_Id;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn Saldostand_StatusIdColumn {
                get {
                    return this.columnSaldostand_StatusId;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn Saldostand_DispStatusColumn {
                get {
                    return this.columnSaldostand_DispStatus;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn Saldostand_JgegIdColumn {
                get {
                    return this.columnSaldostand_JgegId;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn Saldostand_BgnrIdColumn {
                get {
                    return this.columnSaldostand_BgnrId;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn Saldostand_DatumColumn {
                get {
                    return this.columnSaldostand_Datum;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn Saldostand_SaldoColumn {
                get {
                    return this.columnSaldostand_Saldo;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn Saldostand_MutatiedatumColumn {
                get {
                    return this.columnSaldostand_Mutatiedatum;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn Saldostand_OpmerkingColumn {
                get {
                    return this.columnSaldostand_Opmerking;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public SaldostandRow this[int index] {
                get {
                    return ((SaldostandRow)(this.Rows[index]));
                }
            }
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event SaldostandRowChangeEventHandler SaldostandRowChanging;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event SaldostandRowChangeEventHandler SaldostandRowChanged;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event SaldostandRowChangeEventHandler SaldostandRowDeleting;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event SaldostandRowChangeEventHandler SaldostandRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void AddSaldostandRow(SaldostandRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public SaldostandRow AddSaldostandRow(long Saldostand_StatusId, string Saldostand_DispStatus, long Saldostand_JgegId, long Saldostand_BgnrId, System.DateTime Saldostand_Datum, decimal Saldostand_Saldo, System.DateTime Saldostand_Mutatiedatum, string Saldostand_Opmerking) {
                SaldostandRow rowSaldostandRow = ((SaldostandRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        null,
                        Saldostand_StatusId,
                        Saldostand_DispStatus,
                        Saldostand_JgegId,
                        Saldostand_BgnrId,
                        Saldostand_Datum,
                        Saldostand_Saldo,
                        Saldostand_Mutatiedatum,
                        Saldostand_Opmerking};
                rowSaldostandRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowSaldostandRow);
                return rowSaldostandRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public SaldostandRow FindBySaldostand_Id(long Saldostand_Id) {
                return ((SaldostandRow)(this.Rows.Find(new object[] {
                            Saldostand_Id})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public override global::System.Data.DataTable Clone() {
                SaldostandDataTable cln = ((SaldostandDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataTable CreateInstance() {
                return new SaldostandDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal void InitVars() {
                this.columnSaldostand_Id = base.Columns["Saldostand_Id"];
                this.columnSaldostand_StatusId = base.Columns["Saldostand_StatusId"];
                this.columnSaldostand_DispStatus = base.Columns["Saldostand_DispStatus"];
                this.columnSaldostand_JgegId = base.Columns["Saldostand_JgegId"];
                this.columnSaldostand_BgnrId = base.Columns["Saldostand_BgnrId"];
                this.columnSaldostand_Datum = base.Columns["Saldostand_Datum"];
                this.columnSaldostand_Saldo = base.Columns["Saldostand_Saldo"];
                this.columnSaldostand_Mutatiedatum = base.Columns["Saldostand_Mutatiedatum"];
                this.columnSaldostand_Opmerking = base.Columns["Saldostand_Opmerking"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            private void InitClass() {
                this.columnSaldostand_Id = new global::System.Data.DataColumn("Saldostand_Id", typeof(long), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSaldostand_Id);
                this.columnSaldostand_StatusId = new global::System.Data.DataColumn("Saldostand_StatusId", typeof(long), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSaldostand_StatusId);
                this.columnSaldostand_DispStatus = new global::System.Data.DataColumn("Saldostand_DispStatus", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSaldostand_DispStatus);
                this.columnSaldostand_JgegId = new global::System.Data.DataColumn("Saldostand_JgegId", typeof(long), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSaldostand_JgegId);
                this.columnSaldostand_BgnrId = new global::System.Data.DataColumn("Saldostand_BgnrId", typeof(long), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSaldostand_BgnrId);
                this.columnSaldostand_Datum = new global::System.Data.DataColumn("Saldostand_Datum", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSaldostand_Datum);
                this.columnSaldostand_Saldo = new global::System.Data.DataColumn("Saldostand_Saldo", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSaldostand_Saldo);
                this.columnSaldostand_Mutatiedatum = new global::System.Data.DataColumn("Saldostand_Mutatiedatum", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSaldostand_Mutatiedatum);
                this.columnSaldostand_Opmerking = new global::System.Data.DataColumn("Saldostand_Opmerking", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSaldostand_Opmerking);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnSaldostand_Id}, true));
                this.columnSaldostand_Id.AutoIncrement = true;
                this.columnSaldostand_Id.AutoIncrementSeed = -1;
                this.columnSaldostand_Id.AutoIncrementStep = -1;
                this.columnSaldostand_Id.AllowDBNull = false;
                this.columnSaldostand_Id.Unique = true;
                this.columnSaldostand_StatusId.AllowDBNull = false;
                this.columnSaldostand_DispStatus.MaxLength = 75;
                this.columnSaldostand_JgegId.AllowDBNull = false;
                this.columnSaldostand_BgnrId.AllowDBNull = false;
                this.columnSaldostand_Datum.AllowDBNull = false;
                this.columnSaldostand_Mutatiedatum.AllowDBNull = false;
                this.columnSaldostand_Opmerking.MaxLength = 250;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public SaldostandRow NewSaldostandRow() {
                return ((SaldostandRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new SaldostandRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Type GetRowType() {
                return typeof(SaldostandRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.SaldostandRowChanged != null)) {
                    this.SaldostandRowChanged(this, new SaldostandRowChangeEvent(((SaldostandRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.SaldostandRowChanging != null)) {
                    this.SaldostandRowChanging(this, new SaldostandRowChangeEvent(((SaldostandRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.SaldostandRowDeleted != null)) {
                    this.SaldostandRowDeleted(this, new SaldostandRowChangeEvent(((SaldostandRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.SaldostandRowDeleting != null)) {
                    this.SaldostandRowDeleting(this, new SaldostandRowChangeEvent(((SaldostandRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void RemoveSaldostandRow(SaldostandRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                _Cmbap_dataDataSet ds = new _Cmbap_dataDataSet();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "SaldostandDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class StatusDataTable : global::System.Data.TypedTableBase<StatusRow> {
            
            private global::System.Data.DataColumn columnStatusId;
            
            private global::System.Data.DataColumn columnStatus_HoofdgroepitemJN;
            
            private global::System.Data.DataColumn columnStatus_Groep;
            
            private global::System.Data.DataColumn columnStatus_Nr;
            
            private global::System.Data.DataColumn columnStatus_Code;
            
            private global::System.Data.DataColumn columnStatus_Kort;
            
            private global::System.Data.DataColumn columnStatus_Lang;
            
            private global::System.Data.DataColumn columnStatus_Mutatiedatum;
            
            private global::System.Data.DataColumn columnStatus_Opmerking;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public StatusDataTable() {
                this.TableName = "Status";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal StatusDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected StatusDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn StatusIdColumn {
                get {
                    return this.columnStatusId;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn Status_HoofdgroepitemJNColumn {
                get {
                    return this.columnStatus_HoofdgroepitemJN;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn Status_GroepColumn {
                get {
                    return this.columnStatus_Groep;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn Status_NrColumn {
                get {
                    return this.columnStatus_Nr;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn Status_CodeColumn {
                get {
                    return this.columnStatus_Code;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn Status_KortColumn {
                get {
                    return this.columnStatus_Kort;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn Status_LangColumn {
                get {
                    return this.columnStatus_Lang;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn Status_MutatiedatumColumn {
                get {
                    return this.columnStatus_Mutatiedatum;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn Status_OpmerkingColumn {
                get {
                    return this.columnStatus_Opmerking;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public StatusRow this[int index] {
                get {
                    return ((StatusRow)(this.Rows[index]));
                }
            }
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event StatusRowChangeEventHandler StatusRowChanging;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event StatusRowChangeEventHandler StatusRowChanged;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event StatusRowChangeEventHandler StatusRowDeleting;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event StatusRowChangeEventHandler StatusRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void AddStatusRow(StatusRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public StatusRow AddStatusRow(long StatusId, long Status_HoofdgroepitemJN, long Status_Groep, long Status_Nr, long Status_Code, string Status_Kort, string Status_Lang, System.DateTime Status_Mutatiedatum, string Status_Opmerking) {
                StatusRow rowStatusRow = ((StatusRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        StatusId,
                        Status_HoofdgroepitemJN,
                        Status_Groep,
                        Status_Nr,
                        Status_Code,
                        Status_Kort,
                        Status_Lang,
                        Status_Mutatiedatum,
                        Status_Opmerking};
                rowStatusRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowStatusRow);
                return rowStatusRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public override global::System.Data.DataTable Clone() {
                StatusDataTable cln = ((StatusDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataTable CreateInstance() {
                return new StatusDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal void InitVars() {
                this.columnStatusId = base.Columns["StatusId"];
                this.columnStatus_HoofdgroepitemJN = base.Columns["Status_HoofdgroepitemJN"];
                this.columnStatus_Groep = base.Columns["Status_Groep"];
                this.columnStatus_Nr = base.Columns["Status_Nr"];
                this.columnStatus_Code = base.Columns["Status_Code"];
                this.columnStatus_Kort = base.Columns["Status_Kort"];
                this.columnStatus_Lang = base.Columns["Status_Lang"];
                this.columnStatus_Mutatiedatum = base.Columns["Status_Mutatiedatum"];
                this.columnStatus_Opmerking = base.Columns["Status_Opmerking"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            private void InitClass() {
                this.columnStatusId = new global::System.Data.DataColumn("StatusId", typeof(long), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnStatusId);
                this.columnStatus_HoofdgroepitemJN = new global::System.Data.DataColumn("Status_HoofdgroepitemJN", typeof(long), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnStatus_HoofdgroepitemJN);
                this.columnStatus_Groep = new global::System.Data.DataColumn("Status_Groep", typeof(long), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnStatus_Groep);
                this.columnStatus_Nr = new global::System.Data.DataColumn("Status_Nr", typeof(long), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnStatus_Nr);
                this.columnStatus_Code = new global::System.Data.DataColumn("Status_Code", typeof(long), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnStatus_Code);
                this.columnStatus_Kort = new global::System.Data.DataColumn("Status_Kort", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnStatus_Kort);
                this.columnStatus_Lang = new global::System.Data.DataColumn("Status_Lang", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnStatus_Lang);
                this.columnStatus_Mutatiedatum = new global::System.Data.DataColumn("Status_Mutatiedatum", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnStatus_Mutatiedatum);
                this.columnStatus_Opmerking = new global::System.Data.DataColumn("Status_Opmerking", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnStatus_Opmerking);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnStatusId}, false));
                this.columnStatusId.AllowDBNull = false;
                this.columnStatusId.Unique = true;
                this.columnStatus_HoofdgroepitemJN.AllowDBNull = false;
                this.columnStatus_Groep.AllowDBNull = false;
                this.columnStatus_Nr.AllowDBNull = false;
                this.columnStatus_Code.AllowDBNull = false;
                this.columnStatus_Kort.AllowDBNull = false;
                this.columnStatus_Kort.MaxLength = 20;
                this.columnStatus_Lang.AllowDBNull = false;
                this.columnStatus_Lang.MaxLength = 75;
                this.columnStatus_Opmerking.MaxLength = 250;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public StatusRow NewStatusRow() {
                return ((StatusRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new StatusRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Type GetRowType() {
                return typeof(StatusRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.StatusRowChanged != null)) {
                    this.StatusRowChanged(this, new StatusRowChangeEvent(((StatusRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.StatusRowChanging != null)) {
                    this.StatusRowChanging(this, new StatusRowChangeEvent(((StatusRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.StatusRowDeleted != null)) {
                    this.StatusRowDeleted(this, new StatusRowChangeEvent(((StatusRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.StatusRowDeleting != null)) {
                    this.StatusRowDeleting(this, new StatusRowChangeEvent(((StatusRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void RemoveStatusRow(StatusRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                _Cmbap_dataDataSet ds = new _Cmbap_dataDataSet();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "StatusDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class SubcategorieDataTable : global::System.Data.TypedTableBase<SubcategorieRow> {
            
            private global::System.Data.DataColumn columnScat_Id;
            
            private global::System.Data.DataColumn columnScat_StatusId;
            
            private global::System.Data.DataColumn columnScat_DispStatus;
            
            private global::System.Data.DataColumn columnScat_kort;
            
            private global::System.Data.DataColumn columnScat_lang;
            
            private global::System.Data.DataColumn columnScat_HcatId;
            
            private global::System.Data.DataColumn columnScat_DispHcat;
            
            private global::System.Data.DataColumn columnScat_Code;
            
            private global::System.Data.DataColumn columnScat_WijzigentoegestaanJN;
            
            private global::System.Data.DataColumn columnScat_Mutatiedatum;
            
            private global::System.Data.DataColumn columnScat_Opmerking;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public SubcategorieDataTable() {
                this.TableName = "Subcategorie";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal SubcategorieDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected SubcategorieDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn Scat_IdColumn {
                get {
                    return this.columnScat_Id;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn Scat_StatusIdColumn {
                get {
                    return this.columnScat_StatusId;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn Scat_DispStatusColumn {
                get {
                    return this.columnScat_DispStatus;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn Scat_kortColumn {
                get {
                    return this.columnScat_kort;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn Scat_langColumn {
                get {
                    return this.columnScat_lang;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn Scat_HcatIdColumn {
                get {
                    return this.columnScat_HcatId;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn Scat_DispHcatColumn {
                get {
                    return this.columnScat_DispHcat;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn Scat_CodeColumn {
                get {
                    return this.columnScat_Code;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn Scat_WijzigentoegestaanJNColumn {
                get {
                    return this.columnScat_WijzigentoegestaanJN;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn Scat_MutatiedatumColumn {
                get {
                    return this.columnScat_Mutatiedatum;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn Scat_OpmerkingColumn {
                get {
                    return this.columnScat_Opmerking;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public SubcategorieRow this[int index] {
                get {
                    return ((SubcategorieRow)(this.Rows[index]));
                }
            }
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event SubcategorieRowChangeEventHandler SubcategorieRowChanging;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event SubcategorieRowChangeEventHandler SubcategorieRowChanged;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event SubcategorieRowChangeEventHandler SubcategorieRowDeleting;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event SubcategorieRowChangeEventHandler SubcategorieRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void AddSubcategorieRow(SubcategorieRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public SubcategorieRow AddSubcategorieRow(long Scat_StatusId, string Scat_DispStatus, string Scat_kort, string Scat_lang, long Scat_HcatId, string Scat_DispHcat, string Scat_Code, long Scat_WijzigentoegestaanJN, System.DateTime Scat_Mutatiedatum, string Scat_Opmerking) {
                SubcategorieRow rowSubcategorieRow = ((SubcategorieRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        null,
                        Scat_StatusId,
                        Scat_DispStatus,
                        Scat_kort,
                        Scat_lang,
                        Scat_HcatId,
                        Scat_DispHcat,
                        Scat_Code,
                        Scat_WijzigentoegestaanJN,
                        Scat_Mutatiedatum,
                        Scat_Opmerking};
                rowSubcategorieRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowSubcategorieRow);
                return rowSubcategorieRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public SubcategorieRow FindByScat_Id(long Scat_Id) {
                return ((SubcategorieRow)(this.Rows.Find(new object[] {
                            Scat_Id})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public override global::System.Data.DataTable Clone() {
                SubcategorieDataTable cln = ((SubcategorieDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataTable CreateInstance() {
                return new SubcategorieDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal void InitVars() {
                this.columnScat_Id = base.Columns["Scat_Id"];
                this.columnScat_StatusId = base.Columns["Scat_StatusId"];
                this.columnScat_DispStatus = base.Columns["Scat_DispStatus"];
                this.columnScat_kort = base.Columns["Scat_kort"];
                this.columnScat_lang = base.Columns["Scat_lang"];
                this.columnScat_HcatId = base.Columns["Scat_HcatId"];
                this.columnScat_DispHcat = base.Columns["Scat_DispHcat"];
                this.columnScat_Code = base.Columns["Scat_Code"];
                this.columnScat_WijzigentoegestaanJN = base.Columns["Scat_WijzigentoegestaanJN"];
                this.columnScat_Mutatiedatum = base.Columns["Scat_Mutatiedatum"];
                this.columnScat_Opmerking = base.Columns["Scat_Opmerking"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            private void InitClass() {
                this.columnScat_Id = new global::System.Data.DataColumn("Scat_Id", typeof(long), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnScat_Id);
                this.columnScat_StatusId = new global::System.Data.DataColumn("Scat_StatusId", typeof(long), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnScat_StatusId);
                this.columnScat_DispStatus = new global::System.Data.DataColumn("Scat_DispStatus", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnScat_DispStatus);
                this.columnScat_kort = new global::System.Data.DataColumn("Scat_kort", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnScat_kort);
                this.columnScat_lang = new global::System.Data.DataColumn("Scat_lang", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnScat_lang);
                this.columnScat_HcatId = new global::System.Data.DataColumn("Scat_HcatId", typeof(long), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnScat_HcatId);
                this.columnScat_DispHcat = new global::System.Data.DataColumn("Scat_DispHcat", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnScat_DispHcat);
                this.columnScat_Code = new global::System.Data.DataColumn("Scat_Code", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnScat_Code);
                this.columnScat_WijzigentoegestaanJN = new global::System.Data.DataColumn("Scat_WijzigentoegestaanJN", typeof(long), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnScat_WijzigentoegestaanJN);
                this.columnScat_Mutatiedatum = new global::System.Data.DataColumn("Scat_Mutatiedatum", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnScat_Mutatiedatum);
                this.columnScat_Opmerking = new global::System.Data.DataColumn("Scat_Opmerking", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnScat_Opmerking);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnScat_kort}, false));
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint2", new global::System.Data.DataColumn[] {
                                this.columnScat_Id}, true));
                this.columnScat_Id.AutoIncrement = true;
                this.columnScat_Id.AutoIncrementSeed = -1;
                this.columnScat_Id.AutoIncrementStep = -1;
                this.columnScat_Id.AllowDBNull = false;
                this.columnScat_Id.Unique = true;
                this.columnScat_DispStatus.MaxLength = 75;
                this.columnScat_kort.AllowDBNull = false;
                this.columnScat_kort.Unique = true;
                this.columnScat_kort.MaxLength = 10;
                this.columnScat_lang.AllowDBNull = false;
                this.columnScat_lang.MaxLength = 50;
                this.columnScat_HcatId.AllowDBNull = false;
                this.columnScat_DispHcat.MaxLength = 50;
                this.columnScat_Code.MaxLength = 14;
                this.columnScat_WijzigentoegestaanJN.AllowDBNull = false;
                this.columnScat_Mutatiedatum.AllowDBNull = false;
                this.columnScat_Opmerking.MaxLength = 250;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public SubcategorieRow NewSubcategorieRow() {
                return ((SubcategorieRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new SubcategorieRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Type GetRowType() {
                return typeof(SubcategorieRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.SubcategorieRowChanged != null)) {
                    this.SubcategorieRowChanged(this, new SubcategorieRowChangeEvent(((SubcategorieRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.SubcategorieRowChanging != null)) {
                    this.SubcategorieRowChanging(this, new SubcategorieRowChangeEvent(((SubcategorieRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.SubcategorieRowDeleted != null)) {
                    this.SubcategorieRowDeleted(this, new SubcategorieRowChangeEvent(((SubcategorieRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.SubcategorieRowDeleting != null)) {
                    this.SubcategorieRowDeleting(this, new SubcategorieRowChangeEvent(((SubcategorieRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void RemoveSubcategorieRow(SubcategorieRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                _Cmbap_dataDataSet ds = new _Cmbap_dataDataSet();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "SubcategorieDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class SubUitgavesoortDataTable : global::System.Data.TypedTableBase<SubUitgavesoortRow> {
            
            private global::System.Data.DataColumn columnSus_Id;
            
            private global::System.Data.DataColumn columnSus_StatusId;
            
            private global::System.Data.DataColumn columnSus_DispStatus;
            
            private global::System.Data.DataColumn columnSus_Kort;
            
            private global::System.Data.DataColumn columnSus_Lang;
            
            private global::System.Data.DataColumn columnSus_WijzigentoegestaanJN;
            
            private global::System.Data.DataColumn columnSus_HusId;
            
            private global::System.Data.DataColumn columnSus_DispHus;
            
            private global::System.Data.DataColumn columnSus_Mutatiedatum;
            
            private global::System.Data.DataColumn columnSus_Opmerking;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public SubUitgavesoortDataTable() {
                this.TableName = "SubUitgavesoort";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal SubUitgavesoortDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected SubUitgavesoortDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn Sus_IdColumn {
                get {
                    return this.columnSus_Id;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn Sus_StatusIdColumn {
                get {
                    return this.columnSus_StatusId;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn Sus_DispStatusColumn {
                get {
                    return this.columnSus_DispStatus;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn Sus_KortColumn {
                get {
                    return this.columnSus_Kort;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn Sus_LangColumn {
                get {
                    return this.columnSus_Lang;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn Sus_WijzigentoegestaanJNColumn {
                get {
                    return this.columnSus_WijzigentoegestaanJN;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn Sus_HusIdColumn {
                get {
                    return this.columnSus_HusId;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn Sus_DispHusColumn {
                get {
                    return this.columnSus_DispHus;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn Sus_MutatiedatumColumn {
                get {
                    return this.columnSus_Mutatiedatum;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn Sus_OpmerkingColumn {
                get {
                    return this.columnSus_Opmerking;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public SubUitgavesoortRow this[int index] {
                get {
                    return ((SubUitgavesoortRow)(this.Rows[index]));
                }
            }
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event SubUitgavesoortRowChangeEventHandler SubUitgavesoortRowChanging;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event SubUitgavesoortRowChangeEventHandler SubUitgavesoortRowChanged;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event SubUitgavesoortRowChangeEventHandler SubUitgavesoortRowDeleting;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event SubUitgavesoortRowChangeEventHandler SubUitgavesoortRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void AddSubUitgavesoortRow(SubUitgavesoortRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public SubUitgavesoortRow AddSubUitgavesoortRow(long Sus_StatusId, string Sus_DispStatus, string Sus_Kort, string Sus_Lang, long Sus_WijzigentoegestaanJN, long Sus_HusId, string Sus_DispHus, System.DateTime Sus_Mutatiedatum, string Sus_Opmerking) {
                SubUitgavesoortRow rowSubUitgavesoortRow = ((SubUitgavesoortRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        null,
                        Sus_StatusId,
                        Sus_DispStatus,
                        Sus_Kort,
                        Sus_Lang,
                        Sus_WijzigentoegestaanJN,
                        Sus_HusId,
                        Sus_DispHus,
                        Sus_Mutatiedatum,
                        Sus_Opmerking};
                rowSubUitgavesoortRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowSubUitgavesoortRow);
                return rowSubUitgavesoortRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public SubUitgavesoortRow FindBySus_Id(long Sus_Id) {
                return ((SubUitgavesoortRow)(this.Rows.Find(new object[] {
                            Sus_Id})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public override global::System.Data.DataTable Clone() {
                SubUitgavesoortDataTable cln = ((SubUitgavesoortDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataTable CreateInstance() {
                return new SubUitgavesoortDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal void InitVars() {
                this.columnSus_Id = base.Columns["Sus_Id"];
                this.columnSus_StatusId = base.Columns["Sus_StatusId"];
                this.columnSus_DispStatus = base.Columns["Sus_DispStatus"];
                this.columnSus_Kort = base.Columns["Sus_Kort"];
                this.columnSus_Lang = base.Columns["Sus_Lang"];
                this.columnSus_WijzigentoegestaanJN = base.Columns["Sus_WijzigentoegestaanJN"];
                this.columnSus_HusId = base.Columns["Sus_HusId"];
                this.columnSus_DispHus = base.Columns["Sus_DispHus"];
                this.columnSus_Mutatiedatum = base.Columns["Sus_Mutatiedatum"];
                this.columnSus_Opmerking = base.Columns["Sus_Opmerking"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            private void InitClass() {
                this.columnSus_Id = new global::System.Data.DataColumn("Sus_Id", typeof(long), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSus_Id);
                this.columnSus_StatusId = new global::System.Data.DataColumn("Sus_StatusId", typeof(long), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSus_StatusId);
                this.columnSus_DispStatus = new global::System.Data.DataColumn("Sus_DispStatus", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSus_DispStatus);
                this.columnSus_Kort = new global::System.Data.DataColumn("Sus_Kort", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSus_Kort);
                this.columnSus_Lang = new global::System.Data.DataColumn("Sus_Lang", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSus_Lang);
                this.columnSus_WijzigentoegestaanJN = new global::System.Data.DataColumn("Sus_WijzigentoegestaanJN", typeof(long), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSus_WijzigentoegestaanJN);
                this.columnSus_HusId = new global::System.Data.DataColumn("Sus_HusId", typeof(long), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSus_HusId);
                this.columnSus_DispHus = new global::System.Data.DataColumn("Sus_DispHus", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSus_DispHus);
                this.columnSus_Mutatiedatum = new global::System.Data.DataColumn("Sus_Mutatiedatum", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSus_Mutatiedatum);
                this.columnSus_Opmerking = new global::System.Data.DataColumn("Sus_Opmerking", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSus_Opmerking);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnSus_Kort}, false));
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint2", new global::System.Data.DataColumn[] {
                                this.columnSus_Id}, true));
                this.columnSus_Id.AutoIncrement = true;
                this.columnSus_Id.AutoIncrementSeed = -1;
                this.columnSus_Id.AutoIncrementStep = -1;
                this.columnSus_Id.AllowDBNull = false;
                this.columnSus_Id.Unique = true;
                this.columnSus_DispStatus.MaxLength = 75;
                this.columnSus_Kort.AllowDBNull = false;
                this.columnSus_Kort.Unique = true;
                this.columnSus_Kort.MaxLength = 10;
                this.columnSus_Lang.AllowDBNull = false;
                this.columnSus_Lang.MaxLength = 50;
                this.columnSus_HusId.AllowDBNull = false;
                this.columnSus_DispHus.MaxLength = 50;
                this.columnSus_Mutatiedatum.AllowDBNull = false;
                this.columnSus_Opmerking.MaxLength = 250;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public SubUitgavesoortRow NewSubUitgavesoortRow() {
                return ((SubUitgavesoortRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new SubUitgavesoortRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Type GetRowType() {
                return typeof(SubUitgavesoortRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.SubUitgavesoortRowChanged != null)) {
                    this.SubUitgavesoortRowChanged(this, new SubUitgavesoortRowChangeEvent(((SubUitgavesoortRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.SubUitgavesoortRowChanging != null)) {
                    this.SubUitgavesoortRowChanging(this, new SubUitgavesoortRowChangeEvent(((SubUitgavesoortRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.SubUitgavesoortRowDeleted != null)) {
                    this.SubUitgavesoortRowDeleted(this, new SubUitgavesoortRowChangeEvent(((SubUitgavesoortRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.SubUitgavesoortRowDeleting != null)) {
                    this.SubUitgavesoortRowDeleting(this, new SubUitgavesoortRowChangeEvent(((SubUitgavesoortRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void RemoveSubUitgavesoortRow(SubUitgavesoortRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                _Cmbap_dataDataSet ds = new _Cmbap_dataDataSet();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "SubUitgavesoortDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class TelefoonnrDataTable : global::System.Data.TypedTableBase<TelefoonnrRow> {
            
            private global::System.Data.DataColumn columnTlf_Id;
            
            private global::System.Data.DataColumn columnTlf_StatusId;
            
            private global::System.Data.DataColumn columnTlf_DispStatus;
            
            private global::System.Data.DataColumn columnTlf_KlBgId;
            
            private global::System.Data.DataColumn columnTlf_DispKlBg;
            
            private global::System.Data.DataColumn columnTlf_Telefoonnr;
            
            private global::System.Data.DataColumn columnTlf_Mutatiedatum;
            
            private global::System.Data.DataColumn columnTlf_Opmerking;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public TelefoonnrDataTable() {
                this.TableName = "Telefoonnr";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal TelefoonnrDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected TelefoonnrDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn Tlf_IdColumn {
                get {
                    return this.columnTlf_Id;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn Tlf_StatusIdColumn {
                get {
                    return this.columnTlf_StatusId;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn Tlf_DispStatusColumn {
                get {
                    return this.columnTlf_DispStatus;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn Tlf_KlBgIdColumn {
                get {
                    return this.columnTlf_KlBgId;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn Tlf_DispKlBgColumn {
                get {
                    return this.columnTlf_DispKlBg;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn Tlf_TelefoonnrColumn {
                get {
                    return this.columnTlf_Telefoonnr;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn Tlf_MutatiedatumColumn {
                get {
                    return this.columnTlf_Mutatiedatum;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn Tlf_OpmerkingColumn {
                get {
                    return this.columnTlf_Opmerking;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public TelefoonnrRow this[int index] {
                get {
                    return ((TelefoonnrRow)(this.Rows[index]));
                }
            }
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event TelefoonnrRowChangeEventHandler TelefoonnrRowChanging;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event TelefoonnrRowChangeEventHandler TelefoonnrRowChanged;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event TelefoonnrRowChangeEventHandler TelefoonnrRowDeleting;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event TelefoonnrRowChangeEventHandler TelefoonnrRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void AddTelefoonnrRow(TelefoonnrRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public TelefoonnrRow AddTelefoonnrRow(long Tlf_StatusId, string Tlf_DispStatus, long Tlf_KlBgId, string Tlf_DispKlBg, string Tlf_Telefoonnr, System.DateTime Tlf_Mutatiedatum, string Tlf_Opmerking) {
                TelefoonnrRow rowTelefoonnrRow = ((TelefoonnrRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        null,
                        Tlf_StatusId,
                        Tlf_DispStatus,
                        Tlf_KlBgId,
                        Tlf_DispKlBg,
                        Tlf_Telefoonnr,
                        Tlf_Mutatiedatum,
                        Tlf_Opmerking};
                rowTelefoonnrRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowTelefoonnrRow);
                return rowTelefoonnrRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public TelefoonnrRow FindByTlf_Id(long Tlf_Id) {
                return ((TelefoonnrRow)(this.Rows.Find(new object[] {
                            Tlf_Id})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public override global::System.Data.DataTable Clone() {
                TelefoonnrDataTable cln = ((TelefoonnrDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataTable CreateInstance() {
                return new TelefoonnrDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal void InitVars() {
                this.columnTlf_Id = base.Columns["Tlf_Id"];
                this.columnTlf_StatusId = base.Columns["Tlf_StatusId"];
                this.columnTlf_DispStatus = base.Columns["Tlf_DispStatus"];
                this.columnTlf_KlBgId = base.Columns["Tlf_KlBgId"];
                this.columnTlf_DispKlBg = base.Columns["Tlf_DispKlBg"];
                this.columnTlf_Telefoonnr = base.Columns["Tlf_Telefoonnr"];
                this.columnTlf_Mutatiedatum = base.Columns["Tlf_Mutatiedatum"];
                this.columnTlf_Opmerking = base.Columns["Tlf_Opmerking"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            private void InitClass() {
                this.columnTlf_Id = new global::System.Data.DataColumn("Tlf_Id", typeof(long), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTlf_Id);
                this.columnTlf_StatusId = new global::System.Data.DataColumn("Tlf_StatusId", typeof(long), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTlf_StatusId);
                this.columnTlf_DispStatus = new global::System.Data.DataColumn("Tlf_DispStatus", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTlf_DispStatus);
                this.columnTlf_KlBgId = new global::System.Data.DataColumn("Tlf_KlBgId", typeof(long), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTlf_KlBgId);
                this.columnTlf_DispKlBg = new global::System.Data.DataColumn("Tlf_DispKlBg", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTlf_DispKlBg);
                this.columnTlf_Telefoonnr = new global::System.Data.DataColumn("Tlf_Telefoonnr", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTlf_Telefoonnr);
                this.columnTlf_Mutatiedatum = new global::System.Data.DataColumn("Tlf_Mutatiedatum", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTlf_Mutatiedatum);
                this.columnTlf_Opmerking = new global::System.Data.DataColumn("Tlf_Opmerking", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTlf_Opmerking);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnTlf_Id}, true));
                this.columnTlf_Id.AutoIncrement = true;
                this.columnTlf_Id.AutoIncrementSeed = -1;
                this.columnTlf_Id.AutoIncrementStep = -1;
                this.columnTlf_Id.AllowDBNull = false;
                this.columnTlf_Id.Unique = true;
                this.columnTlf_DispStatus.MaxLength = 75;
                this.columnTlf_KlBgId.AllowDBNull = false;
                this.columnTlf_DispKlBg.MaxLength = 75;
                this.columnTlf_Telefoonnr.MaxLength = 16;
                this.columnTlf_Mutatiedatum.AllowDBNull = false;
                this.columnTlf_Opmerking.MaxLength = 250;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public TelefoonnrRow NewTelefoonnrRow() {
                return ((TelefoonnrRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new TelefoonnrRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Type GetRowType() {
                return typeof(TelefoonnrRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.TelefoonnrRowChanged != null)) {
                    this.TelefoonnrRowChanged(this, new TelefoonnrRowChangeEvent(((TelefoonnrRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.TelefoonnrRowChanging != null)) {
                    this.TelefoonnrRowChanging(this, new TelefoonnrRowChangeEvent(((TelefoonnrRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.TelefoonnrRowDeleted != null)) {
                    this.TelefoonnrRowDeleted(this, new TelefoonnrRowChangeEvent(((TelefoonnrRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.TelefoonnrRowDeleting != null)) {
                    this.TelefoonnrRowDeleting(this, new TelefoonnrRowChangeEvent(((TelefoonnrRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void RemoveTelefoonnrRow(TelefoonnrRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                _Cmbap_dataDataSet ds = new _Cmbap_dataDataSet();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "TelefoonnrDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class UitgavenDataTable : global::System.Data.TypedTableBase<UitgavenRow> {
            
            private global::System.Data.DataColumn columnUgv_Id;
            
            private global::System.Data.DataColumn columnUgv_Datum;
            
            private global::System.Data.DataColumn columnUgv_StatusId;
            
            private global::System.Data.DataColumn columnUgv_DispStatus;
            
            private global::System.Data.DataColumn columnUgv_KlBgId;
            
            private global::System.Data.DataColumn columnUgv_DispKlBg;
            
            private global::System.Data.DataColumn columnUgv_HusId;
            
            private global::System.Data.DataColumn columnUgv_DispHus;
            
            private global::System.Data.DataColumn columnUgv_SusId;
            
            private global::System.Data.DataColumn columnUgv_DispSus;
            
            private global::System.Data.DataColumn columnUgv_Kasbewijsnr;
            
            private global::System.Data.DataColumn columnUgv_Bedrag;
            
            private global::System.Data.DataColumn columnUgv_Mutatiedatum;
            
            private global::System.Data.DataColumn columnUgv_Opmerking;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public UitgavenDataTable() {
                this.TableName = "Uitgaven";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal UitgavenDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected UitgavenDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn Ugv_IdColumn {
                get {
                    return this.columnUgv_Id;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn Ugv_DatumColumn {
                get {
                    return this.columnUgv_Datum;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn Ugv_StatusIdColumn {
                get {
                    return this.columnUgv_StatusId;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn Ugv_DispStatusColumn {
                get {
                    return this.columnUgv_DispStatus;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn Ugv_KlBgIdColumn {
                get {
                    return this.columnUgv_KlBgId;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn Ugv_DispKlBgColumn {
                get {
                    return this.columnUgv_DispKlBg;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn Ugv_HusIdColumn {
                get {
                    return this.columnUgv_HusId;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn Ugv_DispHusColumn {
                get {
                    return this.columnUgv_DispHus;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn Ugv_SusIdColumn {
                get {
                    return this.columnUgv_SusId;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn Ugv_DispSusColumn {
                get {
                    return this.columnUgv_DispSus;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn Ugv_KasbewijsnrColumn {
                get {
                    return this.columnUgv_Kasbewijsnr;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn Ugv_BedragColumn {
                get {
                    return this.columnUgv_Bedrag;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn Ugv_MutatiedatumColumn {
                get {
                    return this.columnUgv_Mutatiedatum;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn Ugv_OpmerkingColumn {
                get {
                    return this.columnUgv_Opmerking;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public UitgavenRow this[int index] {
                get {
                    return ((UitgavenRow)(this.Rows[index]));
                }
            }
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event UitgavenRowChangeEventHandler UitgavenRowChanging;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event UitgavenRowChangeEventHandler UitgavenRowChanged;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event UitgavenRowChangeEventHandler UitgavenRowDeleting;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event UitgavenRowChangeEventHandler UitgavenRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void AddUitgavenRow(UitgavenRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public UitgavenRow AddUitgavenRow(System.DateTime Ugv_Datum, long Ugv_StatusId, string Ugv_DispStatus, long Ugv_KlBgId, string Ugv_DispKlBg, long Ugv_HusId, string Ugv_DispHus, long Ugv_SusId, string Ugv_DispSus, string Ugv_Kasbewijsnr, decimal Ugv_Bedrag, System.DateTime Ugv_Mutatiedatum, string Ugv_Opmerking) {
                UitgavenRow rowUitgavenRow = ((UitgavenRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        null,
                        Ugv_Datum,
                        Ugv_StatusId,
                        Ugv_DispStatus,
                        Ugv_KlBgId,
                        Ugv_DispKlBg,
                        Ugv_HusId,
                        Ugv_DispHus,
                        Ugv_SusId,
                        Ugv_DispSus,
                        Ugv_Kasbewijsnr,
                        Ugv_Bedrag,
                        Ugv_Mutatiedatum,
                        Ugv_Opmerking};
                rowUitgavenRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowUitgavenRow);
                return rowUitgavenRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public UitgavenRow FindByUgv_Id(long Ugv_Id) {
                return ((UitgavenRow)(this.Rows.Find(new object[] {
                            Ugv_Id})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public override global::System.Data.DataTable Clone() {
                UitgavenDataTable cln = ((UitgavenDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataTable CreateInstance() {
                return new UitgavenDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal void InitVars() {
                this.columnUgv_Id = base.Columns["Ugv_Id"];
                this.columnUgv_Datum = base.Columns["Ugv_Datum"];
                this.columnUgv_StatusId = base.Columns["Ugv_StatusId"];
                this.columnUgv_DispStatus = base.Columns["Ugv_DispStatus"];
                this.columnUgv_KlBgId = base.Columns["Ugv_KlBgId"];
                this.columnUgv_DispKlBg = base.Columns["Ugv_DispKlBg"];
                this.columnUgv_HusId = base.Columns["Ugv_HusId"];
                this.columnUgv_DispHus = base.Columns["Ugv_DispHus"];
                this.columnUgv_SusId = base.Columns["Ugv_SusId"];
                this.columnUgv_DispSus = base.Columns["Ugv_DispSus"];
                this.columnUgv_Kasbewijsnr = base.Columns["Ugv_Kasbewijsnr"];
                this.columnUgv_Bedrag = base.Columns["Ugv_Bedrag"];
                this.columnUgv_Mutatiedatum = base.Columns["Ugv_Mutatiedatum"];
                this.columnUgv_Opmerking = base.Columns["Ugv_Opmerking"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            private void InitClass() {
                this.columnUgv_Id = new global::System.Data.DataColumn("Ugv_Id", typeof(long), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnUgv_Id);
                this.columnUgv_Datum = new global::System.Data.DataColumn("Ugv_Datum", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnUgv_Datum);
                this.columnUgv_StatusId = new global::System.Data.DataColumn("Ugv_StatusId", typeof(long), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnUgv_StatusId);
                this.columnUgv_DispStatus = new global::System.Data.DataColumn("Ugv_DispStatus", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnUgv_DispStatus);
                this.columnUgv_KlBgId = new global::System.Data.DataColumn("Ugv_KlBgId", typeof(long), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnUgv_KlBgId);
                this.columnUgv_DispKlBg = new global::System.Data.DataColumn("Ugv_DispKlBg", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnUgv_DispKlBg);
                this.columnUgv_HusId = new global::System.Data.DataColumn("Ugv_HusId", typeof(long), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnUgv_HusId);
                this.columnUgv_DispHus = new global::System.Data.DataColumn("Ugv_DispHus", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnUgv_DispHus);
                this.columnUgv_SusId = new global::System.Data.DataColumn("Ugv_SusId", typeof(long), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnUgv_SusId);
                this.columnUgv_DispSus = new global::System.Data.DataColumn("Ugv_DispSus", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnUgv_DispSus);
                this.columnUgv_Kasbewijsnr = new global::System.Data.DataColumn("Ugv_Kasbewijsnr", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnUgv_Kasbewijsnr);
                this.columnUgv_Bedrag = new global::System.Data.DataColumn("Ugv_Bedrag", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnUgv_Bedrag);
                this.columnUgv_Mutatiedatum = new global::System.Data.DataColumn("Ugv_Mutatiedatum", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnUgv_Mutatiedatum);
                this.columnUgv_Opmerking = new global::System.Data.DataColumn("Ugv_Opmerking", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnUgv_Opmerking);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnUgv_Kasbewijsnr}, false));
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint2", new global::System.Data.DataColumn[] {
                                this.columnUgv_Id}, true));
                this.columnUgv_Id.AutoIncrement = true;
                this.columnUgv_Id.AutoIncrementSeed = -1;
                this.columnUgv_Id.AutoIncrementStep = -1;
                this.columnUgv_Id.AllowDBNull = false;
                this.columnUgv_Id.Unique = true;
                this.columnUgv_Datum.AllowDBNull = false;
                this.columnUgv_StatusId.AllowDBNull = false;
                this.columnUgv_DispStatus.MaxLength = 75;
                this.columnUgv_KlBgId.AllowDBNull = false;
                this.columnUgv_DispKlBg.MaxLength = 75;
                this.columnUgv_HusId.AllowDBNull = false;
                this.columnUgv_DispHus.MaxLength = 50;
                this.columnUgv_SusId.AllowDBNull = false;
                this.columnUgv_DispSus.MaxLength = 50;
                this.columnUgv_Kasbewijsnr.AllowDBNull = false;
                this.columnUgv_Kasbewijsnr.Unique = true;
                this.columnUgv_Kasbewijsnr.MaxLength = 10;
                this.columnUgv_Mutatiedatum.AllowDBNull = false;
                this.columnUgv_Opmerking.MaxLength = 250;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public UitgavenRow NewUitgavenRow() {
                return ((UitgavenRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new UitgavenRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Type GetRowType() {
                return typeof(UitgavenRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.UitgavenRowChanged != null)) {
                    this.UitgavenRowChanged(this, new UitgavenRowChangeEvent(((UitgavenRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.UitgavenRowChanging != null)) {
                    this.UitgavenRowChanging(this, new UitgavenRowChangeEvent(((UitgavenRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.UitgavenRowDeleted != null)) {
                    this.UitgavenRowDeleted(this, new UitgavenRowChangeEvent(((UitgavenRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.UitgavenRowDeleting != null)) {
                    this.UitgavenRowDeleting(this, new UitgavenRowChangeEvent(((UitgavenRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void RemoveUitgavenRow(UitgavenRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                _Cmbap_dataDataSet ds = new _Cmbap_dataDataSet();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "UitgavenDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class VerwerkperiodeDataTable : global::System.Data.TypedTableBase<VerwerkperiodeRow> {
            
            private global::System.Data.DataColumn columnVwp_Id;
            
            private global::System.Data.DataColumn columnVwp_StatusId;
            
            private global::System.Data.DataColumn columnVwp_Dispstatus;
            
            private global::System.Data.DataColumn columnVwp_Begindatum;
            
            private global::System.Data.DataColumn columnVwp_Einddatum;
            
            private global::System.Data.DataColumn columnVwp_Beginsaldo;
            
            private global::System.Data.DataColumn columnVwp_Eindsaldo;
            
            private global::System.Data.DataColumn columnVwp_Mutatiedatum;
            
            private global::System.Data.DataColumn columnVwp_Opmerking;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public VerwerkperiodeDataTable() {
                this.TableName = "Verwerkperiode";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal VerwerkperiodeDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected VerwerkperiodeDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn Vwp_IdColumn {
                get {
                    return this.columnVwp_Id;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn Vwp_StatusIdColumn {
                get {
                    return this.columnVwp_StatusId;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn Vwp_DispstatusColumn {
                get {
                    return this.columnVwp_Dispstatus;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn Vwp_BegindatumColumn {
                get {
                    return this.columnVwp_Begindatum;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn Vwp_EinddatumColumn {
                get {
                    return this.columnVwp_Einddatum;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn Vwp_BeginsaldoColumn {
                get {
                    return this.columnVwp_Beginsaldo;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn Vwp_EindsaldoColumn {
                get {
                    return this.columnVwp_Eindsaldo;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn Vwp_MutatiedatumColumn {
                get {
                    return this.columnVwp_Mutatiedatum;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn Vwp_OpmerkingColumn {
                get {
                    return this.columnVwp_Opmerking;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public VerwerkperiodeRow this[int index] {
                get {
                    return ((VerwerkperiodeRow)(this.Rows[index]));
                }
            }
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event VerwerkperiodeRowChangeEventHandler VerwerkperiodeRowChanging;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event VerwerkperiodeRowChangeEventHandler VerwerkperiodeRowChanged;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event VerwerkperiodeRowChangeEventHandler VerwerkperiodeRowDeleting;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event VerwerkperiodeRowChangeEventHandler VerwerkperiodeRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void AddVerwerkperiodeRow(VerwerkperiodeRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public VerwerkperiodeRow AddVerwerkperiodeRow(long Vwp_StatusId, string Vwp_Dispstatus, System.DateTime Vwp_Begindatum, System.DateTime Vwp_Einddatum, decimal Vwp_Beginsaldo, decimal Vwp_Eindsaldo, System.DateTime Vwp_Mutatiedatum, string Vwp_Opmerking) {
                VerwerkperiodeRow rowVerwerkperiodeRow = ((VerwerkperiodeRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        null,
                        Vwp_StatusId,
                        Vwp_Dispstatus,
                        Vwp_Begindatum,
                        Vwp_Einddatum,
                        Vwp_Beginsaldo,
                        Vwp_Eindsaldo,
                        Vwp_Mutatiedatum,
                        Vwp_Opmerking};
                rowVerwerkperiodeRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowVerwerkperiodeRow);
                return rowVerwerkperiodeRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public VerwerkperiodeRow FindByVwp_Id(long Vwp_Id) {
                return ((VerwerkperiodeRow)(this.Rows.Find(new object[] {
                            Vwp_Id})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public override global::System.Data.DataTable Clone() {
                VerwerkperiodeDataTable cln = ((VerwerkperiodeDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataTable CreateInstance() {
                return new VerwerkperiodeDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal void InitVars() {
                this.columnVwp_Id = base.Columns["Vwp_Id"];
                this.columnVwp_StatusId = base.Columns["Vwp_StatusId"];
                this.columnVwp_Dispstatus = base.Columns["Vwp_Dispstatus"];
                this.columnVwp_Begindatum = base.Columns["Vwp_Begindatum"];
                this.columnVwp_Einddatum = base.Columns["Vwp_Einddatum"];
                this.columnVwp_Beginsaldo = base.Columns["Vwp_Beginsaldo"];
                this.columnVwp_Eindsaldo = base.Columns["Vwp_Eindsaldo"];
                this.columnVwp_Mutatiedatum = base.Columns["Vwp_Mutatiedatum"];
                this.columnVwp_Opmerking = base.Columns["Vwp_Opmerking"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            private void InitClass() {
                this.columnVwp_Id = new global::System.Data.DataColumn("Vwp_Id", typeof(long), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnVwp_Id);
                this.columnVwp_StatusId = new global::System.Data.DataColumn("Vwp_StatusId", typeof(long), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnVwp_StatusId);
                this.columnVwp_Dispstatus = new global::System.Data.DataColumn("Vwp_Dispstatus", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnVwp_Dispstatus);
                this.columnVwp_Begindatum = new global::System.Data.DataColumn("Vwp_Begindatum", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnVwp_Begindatum);
                this.columnVwp_Einddatum = new global::System.Data.DataColumn("Vwp_Einddatum", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnVwp_Einddatum);
                this.columnVwp_Beginsaldo = new global::System.Data.DataColumn("Vwp_Beginsaldo", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnVwp_Beginsaldo);
                this.columnVwp_Eindsaldo = new global::System.Data.DataColumn("Vwp_Eindsaldo", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnVwp_Eindsaldo);
                this.columnVwp_Mutatiedatum = new global::System.Data.DataColumn("Vwp_Mutatiedatum", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnVwp_Mutatiedatum);
                this.columnVwp_Opmerking = new global::System.Data.DataColumn("Vwp_Opmerking", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnVwp_Opmerking);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnVwp_Id}, true));
                this.columnVwp_Id.AutoIncrement = true;
                this.columnVwp_Id.AutoIncrementSeed = -1;
                this.columnVwp_Id.AutoIncrementStep = -1;
                this.columnVwp_Id.AllowDBNull = false;
                this.columnVwp_Id.Unique = true;
                this.columnVwp_Dispstatus.MaxLength = 75;
                this.columnVwp_Begindatum.AllowDBNull = false;
                this.columnVwp_Einddatum.AllowDBNull = false;
                this.columnVwp_Mutatiedatum.AllowDBNull = false;
                this.columnVwp_Opmerking.MaxLength = 250;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public VerwerkperiodeRow NewVerwerkperiodeRow() {
                return ((VerwerkperiodeRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new VerwerkperiodeRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Type GetRowType() {
                return typeof(VerwerkperiodeRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.VerwerkperiodeRowChanged != null)) {
                    this.VerwerkperiodeRowChanged(this, new VerwerkperiodeRowChangeEvent(((VerwerkperiodeRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.VerwerkperiodeRowChanging != null)) {
                    this.VerwerkperiodeRowChanging(this, new VerwerkperiodeRowChangeEvent(((VerwerkperiodeRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.VerwerkperiodeRowDeleted != null)) {
                    this.VerwerkperiodeRowDeleted(this, new VerwerkperiodeRowChangeEvent(((VerwerkperiodeRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.VerwerkperiodeRowDeleting != null)) {
                    this.VerwerkperiodeRowDeleting(this, new VerwerkperiodeRowChangeEvent(((VerwerkperiodeRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void RemoveVerwerkperiodeRow(VerwerkperiodeRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                _Cmbap_dataDataSet ds = new _Cmbap_dataDataSet();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "VerwerkperiodeDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class VoorraadDataTable : global::System.Data.TypedTableBase<VoorraadRow> {
            
            private global::System.Data.DataColumn columnVrrd_Id;
            
            private global::System.Data.DataColumn columnVrrd_JgegId;
            
            private global::System.Data.DataColumn columnVrrd_DispJgeg;
            
            private global::System.Data.DataColumn columnVrrd_StatusId;
            
            private global::System.Data.DataColumn columnVrrd_Dispstatus;
            
            private global::System.Data.DataColumn columnVrrd_ProdId;
            
            private global::System.Data.DataColumn columnVrrd_DispProduct;
            
            private global::System.Data.DataColumn columnVrrd_Inventarisatiedatum;
            
            private global::System.Data.DataColumn columnVrrd_Aantal;
            
            private global::System.Data.DataColumn columnVrrd_Laagste_productnr;
            
            private global::System.Data.DataColumn columnVrrd_Hoogste_productnr;
            
            private global::System.Data.DataColumn columnVrrd_Mutatiedatum;
            
            private global::System.Data.DataColumn columnVrrd_Opmerking;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public VoorraadDataTable() {
                this.TableName = "Voorraad";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal VoorraadDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected VoorraadDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn Vrrd_IdColumn {
                get {
                    return this.columnVrrd_Id;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn Vrrd_JgegIdColumn {
                get {
                    return this.columnVrrd_JgegId;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn Vrrd_DispJgegColumn {
                get {
                    return this.columnVrrd_DispJgeg;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn Vrrd_StatusIdColumn {
                get {
                    return this.columnVrrd_StatusId;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn Vrrd_DispstatusColumn {
                get {
                    return this.columnVrrd_Dispstatus;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn Vrrd_ProdIdColumn {
                get {
                    return this.columnVrrd_ProdId;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn Vrrd_DispProductColumn {
                get {
                    return this.columnVrrd_DispProduct;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn Vrrd_InventarisatiedatumColumn {
                get {
                    return this.columnVrrd_Inventarisatiedatum;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn Vrrd_AantalColumn {
                get {
                    return this.columnVrrd_Aantal;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn Vrrd_Laagste_productnrColumn {
                get {
                    return this.columnVrrd_Laagste_productnr;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn Vrrd_Hoogste_productnrColumn {
                get {
                    return this.columnVrrd_Hoogste_productnr;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn Vrrd_MutatiedatumColumn {
                get {
                    return this.columnVrrd_Mutatiedatum;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn Vrrd_OpmerkingColumn {
                get {
                    return this.columnVrrd_Opmerking;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public VoorraadRow this[int index] {
                get {
                    return ((VoorraadRow)(this.Rows[index]));
                }
            }
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event VoorraadRowChangeEventHandler VoorraadRowChanging;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event VoorraadRowChangeEventHandler VoorraadRowChanged;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event VoorraadRowChangeEventHandler VoorraadRowDeleting;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event VoorraadRowChangeEventHandler VoorraadRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void AddVoorraadRow(VoorraadRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public VoorraadRow AddVoorraadRow(long Vrrd_JgegId, string Vrrd_DispJgeg, long Vrrd_StatusId, string Vrrd_Dispstatus, long Vrrd_ProdId, string Vrrd_DispProduct, System.DateTime Vrrd_Inventarisatiedatum, long Vrrd_Aantal, long Vrrd_Laagste_productnr, long Vrrd_Hoogste_productnr, System.DateTime Vrrd_Mutatiedatum, string Vrrd_Opmerking) {
                VoorraadRow rowVoorraadRow = ((VoorraadRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        null,
                        Vrrd_JgegId,
                        Vrrd_DispJgeg,
                        Vrrd_StatusId,
                        Vrrd_Dispstatus,
                        Vrrd_ProdId,
                        Vrrd_DispProduct,
                        Vrrd_Inventarisatiedatum,
                        Vrrd_Aantal,
                        Vrrd_Laagste_productnr,
                        Vrrd_Hoogste_productnr,
                        Vrrd_Mutatiedatum,
                        Vrrd_Opmerking};
                rowVoorraadRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowVoorraadRow);
                return rowVoorraadRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public VoorraadRow FindByVrrd_Id(long Vrrd_Id) {
                return ((VoorraadRow)(this.Rows.Find(new object[] {
                            Vrrd_Id})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public override global::System.Data.DataTable Clone() {
                VoorraadDataTable cln = ((VoorraadDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataTable CreateInstance() {
                return new VoorraadDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal void InitVars() {
                this.columnVrrd_Id = base.Columns["Vrrd_Id"];
                this.columnVrrd_JgegId = base.Columns["Vrrd_JgegId"];
                this.columnVrrd_DispJgeg = base.Columns["Vrrd_DispJgeg"];
                this.columnVrrd_StatusId = base.Columns["Vrrd_StatusId"];
                this.columnVrrd_Dispstatus = base.Columns["Vrrd_Dispstatus"];
                this.columnVrrd_ProdId = base.Columns["Vrrd_ProdId"];
                this.columnVrrd_DispProduct = base.Columns["Vrrd_DispProduct"];
                this.columnVrrd_Inventarisatiedatum = base.Columns["Vrrd_Inventarisatiedatum"];
                this.columnVrrd_Aantal = base.Columns["Vrrd_Aantal"];
                this.columnVrrd_Laagste_productnr = base.Columns["Vrrd_Laagste_productnr"];
                this.columnVrrd_Hoogste_productnr = base.Columns["Vrrd_Hoogste_productnr"];
                this.columnVrrd_Mutatiedatum = base.Columns["Vrrd_Mutatiedatum"];
                this.columnVrrd_Opmerking = base.Columns["Vrrd_Opmerking"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            private void InitClass() {
                this.columnVrrd_Id = new global::System.Data.DataColumn("Vrrd_Id", typeof(long), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnVrrd_Id);
                this.columnVrrd_JgegId = new global::System.Data.DataColumn("Vrrd_JgegId", typeof(long), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnVrrd_JgegId);
                this.columnVrrd_DispJgeg = new global::System.Data.DataColumn("Vrrd_DispJgeg", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnVrrd_DispJgeg);
                this.columnVrrd_StatusId = new global::System.Data.DataColumn("Vrrd_StatusId", typeof(long), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnVrrd_StatusId);
                this.columnVrrd_Dispstatus = new global::System.Data.DataColumn("Vrrd_Dispstatus", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnVrrd_Dispstatus);
                this.columnVrrd_ProdId = new global::System.Data.DataColumn("Vrrd_ProdId", typeof(long), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnVrrd_ProdId);
                this.columnVrrd_DispProduct = new global::System.Data.DataColumn("Vrrd_DispProduct", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnVrrd_DispProduct);
                this.columnVrrd_Inventarisatiedatum = new global::System.Data.DataColumn("Vrrd_Inventarisatiedatum", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnVrrd_Inventarisatiedatum);
                this.columnVrrd_Aantal = new global::System.Data.DataColumn("Vrrd_Aantal", typeof(long), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnVrrd_Aantal);
                this.columnVrrd_Laagste_productnr = new global::System.Data.DataColumn("Vrrd_Laagste_productnr", typeof(long), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnVrrd_Laagste_productnr);
                this.columnVrrd_Hoogste_productnr = new global::System.Data.DataColumn("Vrrd_Hoogste_productnr", typeof(long), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnVrrd_Hoogste_productnr);
                this.columnVrrd_Mutatiedatum = new global::System.Data.DataColumn("Vrrd_Mutatiedatum", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnVrrd_Mutatiedatum);
                this.columnVrrd_Opmerking = new global::System.Data.DataColumn("Vrrd_Opmerking", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnVrrd_Opmerking);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnVrrd_Id}, true));
                this.columnVrrd_Id.AutoIncrement = true;
                this.columnVrrd_Id.AutoIncrementSeed = -1;
                this.columnVrrd_Id.AutoIncrementStep = -1;
                this.columnVrrd_Id.AllowDBNull = false;
                this.columnVrrd_Id.Unique = true;
                this.columnVrrd_DispJgeg.MaxLength = 15;
                this.columnVrrd_Dispstatus.MaxLength = 75;
                this.columnVrrd_DispProduct.MaxLength = 35;
                this.columnVrrd_Mutatiedatum.AllowDBNull = false;
                this.columnVrrd_Opmerking.MaxLength = 250;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public VoorraadRow NewVoorraadRow() {
                return ((VoorraadRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new VoorraadRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Type GetRowType() {
                return typeof(VoorraadRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.VoorraadRowChanged != null)) {
                    this.VoorraadRowChanged(this, new VoorraadRowChangeEvent(((VoorraadRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.VoorraadRowChanging != null)) {
                    this.VoorraadRowChanging(this, new VoorraadRowChangeEvent(((VoorraadRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.VoorraadRowDeleted != null)) {
                    this.VoorraadRowDeleted(this, new VoorraadRowChangeEvent(((VoorraadRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.VoorraadRowDeleting != null)) {
                    this.VoorraadRowDeleting(this, new VoorraadRowChangeEvent(((VoorraadRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void RemoveVoorraadRow(VoorraadRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                _Cmbap_dataDataSet ds = new _Cmbap_dataDataSet();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "VoorraadDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        public partial class AdresgegevensRow : global::System.Data.DataRow {
            
            private AdresgegevensDataTable tableAdresgegevens;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal AdresgegevensRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableAdresgegevens = ((AdresgegevensDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public long Adrsgeg_Id {
                get {
                    return ((long)(this[this.tableAdresgegevens.Adrsgeg_IdColumn]));
                }
                set {
                    this[this.tableAdresgegevens.Adrsgeg_IdColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public long Adrsgeg_StatusId {
                get {
                    try {
                        return ((long)(this[this.tableAdresgegevens.Adrsgeg_StatusIdColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Adrsgeg_StatusId\' in table \'Adresgegevens\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableAdresgegevens.Adrsgeg_StatusIdColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string Adrsgeg_DispStatus {
                get {
                    try {
                        return ((string)(this[this.tableAdresgegevens.Adrsgeg_DispStatusColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Adrsgeg_DispStatus\' in table \'Adresgegevens\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableAdresgegevens.Adrsgeg_DispStatusColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public long Adrsgeg_KlBgId {
                get {
                    return ((long)(this[this.tableAdresgegevens.Adrsgeg_KlBgIdColumn]));
                }
                set {
                    this[this.tableAdresgegevens.Adrsgeg_KlBgIdColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string Adrsgeg_DispKlBg {
                get {
                    try {
                        return ((string)(this[this.tableAdresgegevens.Adrsgeg_DispKlBgColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Adrsgeg_DispKlBg\' in table \'Adresgegevens\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableAdresgegevens.Adrsgeg_DispKlBgColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string Adrsgeg_Straatnaam {
                get {
                    return ((string)(this[this.tableAdresgegevens.Adrsgeg_StraatnaamColumn]));
                }
                set {
                    this[this.tableAdresgegevens.Adrsgeg_StraatnaamColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string Adrsgeg_Huisnummer {
                get {
                    return ((string)(this[this.tableAdresgegevens.Adrsgeg_HuisnummerColumn]));
                }
                set {
                    this[this.tableAdresgegevens.Adrsgeg_HuisnummerColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string Adrsgeg_Huisnummertoevoeging {
                get {
                    try {
                        return ((string)(this[this.tableAdresgegevens.Adrsgeg_HuisnummertoevoegingColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Adrsgeg_Huisnummertoevoeging\' in table \'Adresgegevens\' is D" +
                                "BNull.", e);
                    }
                }
                set {
                    this[this.tableAdresgegevens.Adrsgeg_HuisnummertoevoegingColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string Adrsgeg_Adres {
                get {
                    return ((string)(this[this.tableAdresgegevens.Adrsgeg_AdresColumn]));
                }
                set {
                    this[this.tableAdresgegevens.Adrsgeg_AdresColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string Adrsgeg_Postcode {
                get {
                    return ((string)(this[this.tableAdresgegevens.Adrsgeg_PostcodeColumn]));
                }
                set {
                    this[this.tableAdresgegevens.Adrsgeg_PostcodeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string Adrsgeg_Woonplaats {
                get {
                    return ((string)(this[this.tableAdresgegevens.Adrsgeg_WoonplaatsColumn]));
                }
                set {
                    this[this.tableAdresgegevens.Adrsgeg_WoonplaatsColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public System.DateTime Adrsgeg_Mutatiedatum {
                get {
                    return ((global::System.DateTime)(this[this.tableAdresgegevens.Adrsgeg_MutatiedatumColumn]));
                }
                set {
                    this[this.tableAdresgegevens.Adrsgeg_MutatiedatumColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string Adrsgeg_Opmerking {
                get {
                    try {
                        return ((string)(this[this.tableAdresgegevens.Adrsgeg_OpmerkingColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Adrsgeg_Opmerking\' in table \'Adresgegevens\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableAdresgegevens.Adrsgeg_OpmerkingColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsAdrsgeg_StatusIdNull() {
                return this.IsNull(this.tableAdresgegevens.Adrsgeg_StatusIdColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetAdrsgeg_StatusIdNull() {
                this[this.tableAdresgegevens.Adrsgeg_StatusIdColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsAdrsgeg_DispStatusNull() {
                return this.IsNull(this.tableAdresgegevens.Adrsgeg_DispStatusColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetAdrsgeg_DispStatusNull() {
                this[this.tableAdresgegevens.Adrsgeg_DispStatusColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsAdrsgeg_DispKlBgNull() {
                return this.IsNull(this.tableAdresgegevens.Adrsgeg_DispKlBgColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetAdrsgeg_DispKlBgNull() {
                this[this.tableAdresgegevens.Adrsgeg_DispKlBgColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsAdrsgeg_HuisnummertoevoegingNull() {
                return this.IsNull(this.tableAdresgegevens.Adrsgeg_HuisnummertoevoegingColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetAdrsgeg_HuisnummertoevoegingNull() {
                this[this.tableAdresgegevens.Adrsgeg_HuisnummertoevoegingColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsAdrsgeg_OpmerkingNull() {
                return this.IsNull(this.tableAdresgegevens.Adrsgeg_OpmerkingColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetAdrsgeg_OpmerkingNull() {
                this[this.tableAdresgegevens.Adrsgeg_OpmerkingColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        public partial class BankgironrRow : global::System.Data.DataRow {
            
            private BankgironrDataTable tableBankgironr;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal BankgironrRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableBankgironr = ((BankgironrDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public long Bgnr_Id {
                get {
                    return ((long)(this[this.tableBankgironr.Bgnr_IdColumn]));
                }
                set {
                    this[this.tableBankgironr.Bgnr_IdColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public long Bgnr_StatusId {
                get {
                    try {
                        return ((long)(this[this.tableBankgironr.Bgnr_StatusIdColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Bgnr_StatusId\' in table \'Bankgironr\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableBankgironr.Bgnr_StatusIdColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string Bgnr_DispStatus {
                get {
                    try {
                        return ((string)(this[this.tableBankgironr.Bgnr_DispStatusColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Bgnr_DispStatus\' in table \'Bankgironr\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableBankgironr.Bgnr_DispStatusColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public long Bgnr_SysteemBgnrJN {
                get {
                    try {
                        return ((long)(this[this.tableBankgironr.Bgnr_SysteemBgnrJNColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Bgnr_SysteemBgnrJN\' in table \'Bankgironr\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableBankgironr.Bgnr_SysteemBgnrJNColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public long Bgnr_KLBgId {
                get {
                    return ((long)(this[this.tableBankgironr.Bgnr_KLBgIdColumn]));
                }
                set {
                    this[this.tableBankgironr.Bgnr_KLBgIdColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string Bgnr_DispKlBg {
                get {
                    try {
                        return ((string)(this[this.tableBankgironr.Bgnr_DispKlBgColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Bgnr_DispKlBg\' in table \'Bankgironr\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableBankgironr.Bgnr_DispKlBgColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string Bgnr_Tnv {
                get {
                    try {
                        return ((string)(this[this.tableBankgironr.Bgnr_TnvColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Bgnr_Tnv\' in table \'Bankgironr\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableBankgironr.Bgnr_TnvColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string Bgnr_Kort {
                get {
                    return ((string)(this[this.tableBankgironr.Bgnr_KortColumn]));
                }
                set {
                    this[this.tableBankgironr.Bgnr_KortColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string Bgnr_Iban {
                get {
                    return ((string)(this[this.tableBankgironr.Bgnr_IbanColumn]));
                }
                set {
                    this[this.tableBankgironr.Bgnr_IbanColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string Bgnr_IbanBankGiroKas {
                get {
                    return ((string)(this[this.tableBankgironr.Bgnr_IbanBankGiroKasColumn]));
                }
                set {
                    this[this.tableBankgironr.Bgnr_IbanBankGiroKasColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public System.DateTime Bgnr_Mutatiedatum {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableBankgironr.Bgnr_MutatiedatumColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Bgnr_Mutatiedatum\' in table \'Bankgironr\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableBankgironr.Bgnr_MutatiedatumColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string Bgnr_Opmerking {
                get {
                    try {
                        return ((string)(this[this.tableBankgironr.Bgnr_OpmerkingColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Bgnr_Opmerking\' in table \'Bankgironr\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableBankgironr.Bgnr_OpmerkingColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsBgnr_StatusIdNull() {
                return this.IsNull(this.tableBankgironr.Bgnr_StatusIdColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetBgnr_StatusIdNull() {
                this[this.tableBankgironr.Bgnr_StatusIdColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsBgnr_DispStatusNull() {
                return this.IsNull(this.tableBankgironr.Bgnr_DispStatusColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetBgnr_DispStatusNull() {
                this[this.tableBankgironr.Bgnr_DispStatusColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsBgnr_SysteemBgnrJNNull() {
                return this.IsNull(this.tableBankgironr.Bgnr_SysteemBgnrJNColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetBgnr_SysteemBgnrJNNull() {
                this[this.tableBankgironr.Bgnr_SysteemBgnrJNColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsBgnr_DispKlBgNull() {
                return this.IsNull(this.tableBankgironr.Bgnr_DispKlBgColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetBgnr_DispKlBgNull() {
                this[this.tableBankgironr.Bgnr_DispKlBgColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsBgnr_TnvNull() {
                return this.IsNull(this.tableBankgironr.Bgnr_TnvColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetBgnr_TnvNull() {
                this[this.tableBankgironr.Bgnr_TnvColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsBgnr_MutatiedatumNull() {
                return this.IsNull(this.tableBankgironr.Bgnr_MutatiedatumColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetBgnr_MutatiedatumNull() {
                this[this.tableBankgironr.Bgnr_MutatiedatumColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsBgnr_OpmerkingNull() {
                return this.IsNull(this.tableBankgironr.Bgnr_OpmerkingColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetBgnr_OpmerkingNull() {
                this[this.tableBankgironr.Bgnr_OpmerkingColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        public partial class BankregelRow : global::System.Data.DataRow {
            
            private BankregelDataTable tableBankregel;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal BankregelRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableBankregel = ((BankregelDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public long Bnkrgl_Id {
                get {
                    return ((long)(this[this.tableBankregel.Bnkrgl_IdColumn]));
                }
                set {
                    this[this.tableBankregel.Bnkrgl_IdColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public long Bnkrgl_StatusId {
                get {
                    try {
                        return ((long)(this[this.tableBankregel.Bnkrgl_StatusIdColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Bnkrgl_StatusId\' in table \'Bankregel\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableBankregel.Bnkrgl_StatusIdColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string Bnkrgl_DispStatus {
                get {
                    try {
                        return ((string)(this[this.tableBankregel.Bnkrgl_DispStatusColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Bnkrgl_DispStatus\' in table \'Bankregel\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableBankregel.Bnkrgl_DispStatusColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public long Bnkrgl_VerwerkId {
                get {
                    return ((long)(this[this.tableBankregel.Bnkrgl_VerwerkIdColumn]));
                }
                set {
                    this[this.tableBankregel.Bnkrgl_VerwerkIdColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string Bnkrgl_Bankregel {
                get {
                    try {
                        return ((string)(this[this.tableBankregel.Bnkrgl_BankregelColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Bnkrgl_Bankregel\' in table \'Bankregel\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableBankregel.Bnkrgl_BankregelColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public long Bnkrgl_BstlId {
                get {
                    return ((long)(this[this.tableBankregel.Bnkrgl_BstlIdColumn]));
                }
                set {
                    this[this.tableBankregel.Bnkrgl_BstlIdColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public System.DateTime Bnkrgl_Mutatiedatum {
                get {
                    return ((global::System.DateTime)(this[this.tableBankregel.Bnkrgl_MutatiedatumColumn]));
                }
                set {
                    this[this.tableBankregel.Bnkrgl_MutatiedatumColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string Bnkrgl_Opmerking {
                get {
                    try {
                        return ((string)(this[this.tableBankregel.Bnkrgl_OpmerkingColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Bnkrgl_Opmerking\' in table \'Bankregel\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableBankregel.Bnkrgl_OpmerkingColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsBnkrgl_StatusIdNull() {
                return this.IsNull(this.tableBankregel.Bnkrgl_StatusIdColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetBnkrgl_StatusIdNull() {
                this[this.tableBankregel.Bnkrgl_StatusIdColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsBnkrgl_DispStatusNull() {
                return this.IsNull(this.tableBankregel.Bnkrgl_DispStatusColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetBnkrgl_DispStatusNull() {
                this[this.tableBankregel.Bnkrgl_DispStatusColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsBnkrgl_BankregelNull() {
                return this.IsNull(this.tableBankregel.Bnkrgl_BankregelColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetBnkrgl_BankregelNull() {
                this[this.tableBankregel.Bnkrgl_BankregelColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsBnkrgl_OpmerkingNull() {
                return this.IsNull(this.tableBankregel.Bnkrgl_OpmerkingColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetBnkrgl_OpmerkingNull() {
                this[this.tableBankregel.Bnkrgl_OpmerkingColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        public partial class BestellingRow : global::System.Data.DataRow {
            
            private BestellingDataTable tableBestelling;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal BestellingRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableBestelling = ((BestellingDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public long Bstl_Id {
                get {
                    return ((long)(this[this.tableBestelling.Bstl_IdColumn]));
                }
                set {
                    this[this.tableBestelling.Bstl_IdColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public long Bstl_StatusId {
                get {
                    try {
                        return ((long)(this[this.tableBestelling.Bstl_StatusIdColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Bstl_StatusId\' in table \'Bestelling\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableBestelling.Bstl_StatusIdColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string Bstl_Dispstatus {
                get {
                    try {
                        return ((string)(this[this.tableBestelling.Bstl_DispstatusColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Bstl_Dispstatus\' in table \'Bestelling\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableBestelling.Bstl_DispstatusColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public long Bstl_BgnrId {
                get {
                    return ((long)(this[this.tableBestelling.Bstl_BgnrIdColumn]));
                }
                set {
                    this[this.tableBestelling.Bstl_BgnrIdColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string Bstl_DispBgnr {
                get {
                    try {
                        return ((string)(this[this.tableBestelling.Bstl_DispBgnrColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Bstl_DispBgnr\' in table \'Bestelling\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableBestelling.Bstl_DispBgnrColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public long Bstl_KlBgId {
                get {
                    return ((long)(this[this.tableBestelling.Bstl_KlBgIdColumn]));
                }
                set {
                    this[this.tableBestelling.Bstl_KlBgIdColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string Bstl_DispKlBg {
                get {
                    try {
                        return ((string)(this[this.tableBestelling.Bstl_DispKlBgColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Bstl_DispKlBg\' in table \'Bestelling\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableBestelling.Bstl_DispKlBgColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public long Bstl_VerwerkperiodeId {
                get {
                    try {
                        return ((long)(this[this.tableBestelling.Bstl_VerwerkperiodeIdColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Bstl_VerwerkperiodeId\' in table \'Bestelling\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableBestelling.Bstl_VerwerkperiodeIdColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public System.DateTime Bstl_Valutadatum {
                get {
                    return ((global::System.DateTime)(this[this.tableBestelling.Bstl_ValutadatumColumn]));
                }
                set {
                    this[this.tableBestelling.Bstl_ValutadatumColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal Bstl_Bestelbedrag {
                get {
                    return ((decimal)(this[this.tableBestelling.Bstl_BestelbedragColumn]));
                }
                set {
                    this[this.tableBestelling.Bstl_BestelbedragColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal Bstl_Diversen {
                get {
                    try {
                        return ((decimal)(this[this.tableBestelling.Bstl_DiversenColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Bstl_Diversen\' in table \'Bestelling\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableBestelling.Bstl_DiversenColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public long Bstl_DiversenId {
                get {
                    try {
                        return ((long)(this[this.tableBestelling.Bstl_DiversenIdColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Bstl_DiversenId\' in table \'Bestelling\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableBestelling.Bstl_DiversenIdColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string Bstl_DispDiversen {
                get {
                    try {
                        return ((string)(this[this.tableBestelling.Bstl_DispDiversenColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Bstl_DispDiversen\' in table \'Bestelling\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableBestelling.Bstl_DispDiversenColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal Bstl_Verschil {
                get {
                    try {
                        return ((decimal)(this[this.tableBestelling.Bstl_VerschilColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Bstl_Verschil\' in table \'Bestelling\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableBestelling.Bstl_VerschilColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public long Bstl_VerschilId {
                get {
                    try {
                        return ((long)(this[this.tableBestelling.Bstl_VerschilIdColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Bstl_VerschilId\' in table \'Bestelling\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableBestelling.Bstl_VerschilIdColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string Bstl_DispVerschil {
                get {
                    try {
                        return ((string)(this[this.tableBestelling.Bstl_DispVerschilColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Bstl_DispVerschil\' in table \'Bestelling\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableBestelling.Bstl_DispVerschilColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal Bstl_Vastekostenperbestelling {
                get {
                    try {
                        return ((decimal)(this[this.tableBestelling.Bstl_VastekostenperbestellingColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Bstl_Vastekostenperbestelling\' in table \'Bestelling\' is DBN" +
                                "ull.", e);
                    }
                }
                set {
                    this[this.tableBestelling.Bstl_VastekostenperbestellingColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public long Bstl_BonnengevraagdJN {
                get {
                    return ((long)(this[this.tableBestelling.Bstl_BonnengevraagdJNColumn]));
                }
                set {
                    this[this.tableBestelling.Bstl_BonnengevraagdJNColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public System.DateTime Bstl_Mutatiedatum {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableBestelling.Bstl_MutatiedatumColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Bstl_Mutatiedatum\' in table \'Bestelling\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableBestelling.Bstl_MutatiedatumColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string Bstl_Opmerking {
                get {
                    try {
                        return ((string)(this[this.tableBestelling.Bstl_OpmerkingColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Bstl_Opmerking\' in table \'Bestelling\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableBestelling.Bstl_OpmerkingColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsBstl_StatusIdNull() {
                return this.IsNull(this.tableBestelling.Bstl_StatusIdColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetBstl_StatusIdNull() {
                this[this.tableBestelling.Bstl_StatusIdColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsBstl_DispstatusNull() {
                return this.IsNull(this.tableBestelling.Bstl_DispstatusColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetBstl_DispstatusNull() {
                this[this.tableBestelling.Bstl_DispstatusColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsBstl_DispBgnrNull() {
                return this.IsNull(this.tableBestelling.Bstl_DispBgnrColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetBstl_DispBgnrNull() {
                this[this.tableBestelling.Bstl_DispBgnrColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsBstl_DispKlBgNull() {
                return this.IsNull(this.tableBestelling.Bstl_DispKlBgColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetBstl_DispKlBgNull() {
                this[this.tableBestelling.Bstl_DispKlBgColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsBstl_VerwerkperiodeIdNull() {
                return this.IsNull(this.tableBestelling.Bstl_VerwerkperiodeIdColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetBstl_VerwerkperiodeIdNull() {
                this[this.tableBestelling.Bstl_VerwerkperiodeIdColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsBstl_DiversenNull() {
                return this.IsNull(this.tableBestelling.Bstl_DiversenColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetBstl_DiversenNull() {
                this[this.tableBestelling.Bstl_DiversenColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsBstl_DiversenIdNull() {
                return this.IsNull(this.tableBestelling.Bstl_DiversenIdColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetBstl_DiversenIdNull() {
                this[this.tableBestelling.Bstl_DiversenIdColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsBstl_DispDiversenNull() {
                return this.IsNull(this.tableBestelling.Bstl_DispDiversenColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetBstl_DispDiversenNull() {
                this[this.tableBestelling.Bstl_DispDiversenColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsBstl_VerschilNull() {
                return this.IsNull(this.tableBestelling.Bstl_VerschilColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetBstl_VerschilNull() {
                this[this.tableBestelling.Bstl_VerschilColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsBstl_VerschilIdNull() {
                return this.IsNull(this.tableBestelling.Bstl_VerschilIdColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetBstl_VerschilIdNull() {
                this[this.tableBestelling.Bstl_VerschilIdColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsBstl_DispVerschilNull() {
                return this.IsNull(this.tableBestelling.Bstl_DispVerschilColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetBstl_DispVerschilNull() {
                this[this.tableBestelling.Bstl_DispVerschilColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsBstl_VastekostenperbestellingNull() {
                return this.IsNull(this.tableBestelling.Bstl_VastekostenperbestellingColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetBstl_VastekostenperbestellingNull() {
                this[this.tableBestelling.Bstl_VastekostenperbestellingColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsBstl_MutatiedatumNull() {
                return this.IsNull(this.tableBestelling.Bstl_MutatiedatumColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetBstl_MutatiedatumNull() {
                this[this.tableBestelling.Bstl_MutatiedatumColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsBstl_OpmerkingNull() {
                return this.IsNull(this.tableBestelling.Bstl_OpmerkingColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetBstl_OpmerkingNull() {
                this[this.tableBestelling.Bstl_OpmerkingColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        public partial class BestelregelRow : global::System.Data.DataRow {
            
            private BestelregelDataTable tableBestelregel;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal BestelregelRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableBestelregel = ((BestelregelDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public long Bstlr_Id {
                get {
                    return ((long)(this[this.tableBestelregel.Bstlr_IdColumn]));
                }
                set {
                    this[this.tableBestelregel.Bstlr_IdColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public long Bstlr_BstlId {
                get {
                    return ((long)(this[this.tableBestelregel.Bstlr_BstlIdColumn]));
                }
                set {
                    this[this.tableBestelregel.Bstlr_BstlIdColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public long Bstlr_StatusId {
                get {
                    try {
                        return ((long)(this[this.tableBestelregel.Bstlr_StatusIdColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Bstlr_StatusId\' in table \'Bestelregel\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableBestelregel.Bstlr_StatusIdColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string Bstlr_Dispstatus {
                get {
                    try {
                        return ((string)(this[this.tableBestelregel.Bstlr_DispstatusColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Bstlr_Dispstatus\' in table \'Bestelregel\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableBestelregel.Bstlr_DispstatusColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public long Bstlr_ProdId {
                get {
                    return ((long)(this[this.tableBestelregel.Bstlr_ProdIdColumn]));
                }
                set {
                    this[this.tableBestelregel.Bstlr_ProdIdColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string Bstlr_DispProduct {
                get {
                    try {
                        return ((string)(this[this.tableBestelregel.Bstlr_DispProductColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Bstlr_DispProduct\' in table \'Bestelregel\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableBestelregel.Bstlr_DispProductColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public long Bstlr_Aantal {
                get {
                    return ((long)(this[this.tableBestelregel.Bstlr_AantalColumn]));
                }
                set {
                    this[this.tableBestelregel.Bstlr_AantalColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public long Bstlr_Beginnr {
                get {
                    try {
                        return ((long)(this[this.tableBestelregel.Bstlr_BeginnrColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Bstlr_Beginnr\' in table \'Bestelregel\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableBestelregel.Bstlr_BeginnrColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public long Bstlr_Eindnr {
                get {
                    try {
                        return ((long)(this[this.tableBestelregel.Bstlr_EindnrColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Bstlr_Eindnr\' in table \'Bestelregel\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableBestelregel.Bstlr_EindnrColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public long Bstlr_Voorraad {
                get {
                    try {
                        return ((long)(this[this.tableBestelregel.Bstlr_VoorraadColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Bstlr_Voorraad\' in table \'Bestelregel\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableBestelregel.Bstlr_VoorraadColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public long Bstlr_Extranr1 {
                get {
                    try {
                        return ((long)(this[this.tableBestelregel.Bstlr_Extranr1Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Bstlr_Extranr1\' in table \'Bestelregel\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableBestelregel.Bstlr_Extranr1Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public long Bstlr_Extranr2 {
                get {
                    try {
                        return ((long)(this[this.tableBestelregel.Bstlr_Extranr2Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Bstlr_Extranr2\' in table \'Bestelregel\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableBestelregel.Bstlr_Extranr2Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public long Bstlr_Extranr3 {
                get {
                    try {
                        return ((long)(this[this.tableBestelregel.Bstlr_Extranr3Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Bstlr_Extranr3\' in table \'Bestelregel\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableBestelregel.Bstlr_Extranr3Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public System.DateTime Bstlr_Mutatiedatum {
                get {
                    return ((global::System.DateTime)(this[this.tableBestelregel.Bstlr_MutatiedatumColumn]));
                }
                set {
                    this[this.tableBestelregel.Bstlr_MutatiedatumColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string Bstlr_Opmerking {
                get {
                    try {
                        return ((string)(this[this.tableBestelregel.Bstlr_OpmerkingColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Bstlr_Opmerking\' in table \'Bestelregel\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableBestelregel.Bstlr_OpmerkingColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsBstlr_StatusIdNull() {
                return this.IsNull(this.tableBestelregel.Bstlr_StatusIdColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetBstlr_StatusIdNull() {
                this[this.tableBestelregel.Bstlr_StatusIdColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsBstlr_DispstatusNull() {
                return this.IsNull(this.tableBestelregel.Bstlr_DispstatusColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetBstlr_DispstatusNull() {
                this[this.tableBestelregel.Bstlr_DispstatusColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsBstlr_DispProductNull() {
                return this.IsNull(this.tableBestelregel.Bstlr_DispProductColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetBstlr_DispProductNull() {
                this[this.tableBestelregel.Bstlr_DispProductColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsBstlr_BeginnrNull() {
                return this.IsNull(this.tableBestelregel.Bstlr_BeginnrColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetBstlr_BeginnrNull() {
                this[this.tableBestelregel.Bstlr_BeginnrColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsBstlr_EindnrNull() {
                return this.IsNull(this.tableBestelregel.Bstlr_EindnrColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetBstlr_EindnrNull() {
                this[this.tableBestelregel.Bstlr_EindnrColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsBstlr_VoorraadNull() {
                return this.IsNull(this.tableBestelregel.Bstlr_VoorraadColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetBstlr_VoorraadNull() {
                this[this.tableBestelregel.Bstlr_VoorraadColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsBstlr_Extranr1Null() {
                return this.IsNull(this.tableBestelregel.Bstlr_Extranr1Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetBstlr_Extranr1Null() {
                this[this.tableBestelregel.Bstlr_Extranr1Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsBstlr_Extranr2Null() {
                return this.IsNull(this.tableBestelregel.Bstlr_Extranr2Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetBstlr_Extranr2Null() {
                this[this.tableBestelregel.Bstlr_Extranr2Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsBstlr_Extranr3Null() {
                return this.IsNull(this.tableBestelregel.Bstlr_Extranr3Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetBstlr_Extranr3Null() {
                this[this.tableBestelregel.Bstlr_Extranr3Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsBstlr_OpmerkingNull() {
                return this.IsNull(this.tableBestelregel.Bstlr_OpmerkingColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetBstlr_OpmerkingNull() {
                this[this.tableBestelregel.Bstlr_OpmerkingColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        public partial class Component_tekstRow : global::System.Data.DataRow {
            
            private Component_tekstDataTable tableComponent_tekst;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal Component_tekstRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableComponent_tekst = ((Component_tekstDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public long ComponenttekstId {
                get {
                    return ((long)(this[this.tableComponent_tekst.ComponenttekstIdColumn]));
                }
                set {
                    this[this.tableComponent_tekst.ComponenttekstIdColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string CT_Taal {
                get {
                    try {
                        return ((string)(this[this.tableComponent_tekst.CT_TaalColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'CT_Taal\' in table \'Component_tekst\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableComponent_tekst.CT_TaalColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public object CT_Type {
                get {
                    return ((object)(this[this.tableComponent_tekst.CT_TypeColumn]));
                }
                set {
                    this[this.tableComponent_tekst.CT_TypeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string CT_Componentnaam {
                get {
                    return ((string)(this[this.tableComponent_tekst.CT_ComponentnaamColumn]));
                }
                set {
                    this[this.tableComponent_tekst.CT_ComponentnaamColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string CT_Componenttekst {
                get {
                    return ((string)(this[this.tableComponent_tekst.CT_ComponenttekstColumn]));
                }
                set {
                    this[this.tableComponent_tekst.CT_ComponenttekstColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public System.DateTime CT_Mutatiedatum {
                get {
                    return ((global::System.DateTime)(this[this.tableComponent_tekst.CT_MutatiedatumColumn]));
                }
                set {
                    this[this.tableComponent_tekst.CT_MutatiedatumColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string CT_Opmerking {
                get {
                    try {
                        return ((string)(this[this.tableComponent_tekst.CT_OpmerkingColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'CT_Opmerking\' in table \'Component_tekst\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableComponent_tekst.CT_OpmerkingColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsCT_TaalNull() {
                return this.IsNull(this.tableComponent_tekst.CT_TaalColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetCT_TaalNull() {
                this[this.tableComponent_tekst.CT_TaalColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsCT_OpmerkingNull() {
                return this.IsNull(this.tableComponent_tekst.CT_OpmerkingColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetCT_OpmerkingNull() {
                this[this.tableComponent_tekst.CT_OpmerkingColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        public partial class DbFilesRow : global::System.Data.DataRow {
            
            private DbFilesDataTable tableDbFiles;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal DbFilesRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableDbFiles = ((DbFilesDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public long DbFilesId {
                get {
                    return ((long)(this[this.tableDbFiles.DbFilesIdColumn]));
                }
                set {
                    this[this.tableDbFiles.DbFilesIdColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string DbFiles_Naam {
                get {
                    return ((string)(this[this.tableDbFiles.DbFiles_NaamColumn]));
                }
                set {
                    this[this.tableDbFiles.DbFiles_NaamColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string DbFiles_Omschrijving {
                get {
                    try {
                        return ((string)(this[this.tableDbFiles.DbFiles_OmschrijvingColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'DbFiles_Omschrijving\' in table \'DbFiles\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableDbFiles.DbFiles_OmschrijvingColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public long DbFiles_Nr {
                get {
                    return ((long)(this[this.tableDbFiles.DbFiles_NrColumn]));
                }
                set {
                    this[this.tableDbFiles.DbFiles_NrColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string DbFiles_Kort {
                get {
                    return ((string)(this[this.tableDbFiles.DbFiles_KortColumn]));
                }
                set {
                    this[this.tableDbFiles.DbFiles_KortColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public System.DateTime DbFiles_Mutatiedatum {
                get {
                    return ((global::System.DateTime)(this[this.tableDbFiles.DbFiles_MutatiedatumColumn]));
                }
                set {
                    this[this.tableDbFiles.DbFiles_MutatiedatumColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string DbFiles_Opmerking {
                get {
                    try {
                        return ((string)(this[this.tableDbFiles.DbFiles_OpmerkingColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'DbFiles_Opmerking\' in table \'DbFiles\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableDbFiles.DbFiles_OpmerkingColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsDbFiles_OmschrijvingNull() {
                return this.IsNull(this.tableDbFiles.DbFiles_OmschrijvingColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetDbFiles_OmschrijvingNull() {
                this[this.tableDbFiles.DbFiles_OmschrijvingColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsDbFiles_OpmerkingNull() {
                return this.IsNull(this.tableDbFiles.DbFiles_OpmerkingColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetDbFiles_OpmerkingNull() {
                this[this.tableDbFiles.DbFiles_OpmerkingColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        public partial class EmailRow : global::System.Data.DataRow {
            
            private EmailDataTable tableEmail;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal EmailRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableEmail = ((EmailDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public long Em_Id {
                get {
                    return ((long)(this[this.tableEmail.Em_IdColumn]));
                }
                set {
                    this[this.tableEmail.Em_IdColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public long Em_StatusId {
                get {
                    try {
                        return ((long)(this[this.tableEmail.Em_StatusIdColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Em_StatusId\' in table \'Email\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableEmail.Em_StatusIdColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string Em_DispStatus {
                get {
                    try {
                        return ((string)(this[this.tableEmail.Em_DispStatusColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Em_DispStatus\' in table \'Email\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableEmail.Em_DispStatusColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string Em_Afzender {
                get {
                    return ((string)(this[this.tableEmail.Em_AfzenderColumn]));
                }
                set {
                    this[this.tableEmail.Em_AfzenderColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public long Em_EmailAdresId {
                get {
                    return ((long)(this[this.tableEmail.Em_EmailAdresIdColumn]));
                }
                set {
                    this[this.tableEmail.Em_EmailAdresIdColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string Em_Onderwerp {
                get {
                    return ((string)(this[this.tableEmail.Em_OnderwerpColumn]));
                }
                set {
                    this[this.tableEmail.Em_OnderwerpColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public byte[] Em_Bericht {
                get {
                    try {
                        return ((byte[])(this[this.tableEmail.Em_BerichtColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Em_Bericht\' in table \'Email\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableEmail.Em_BerichtColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public long Em_BestellingId {
                get {
                    try {
                        return ((long)(this[this.tableEmail.Em_BestellingIdColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Em_BestellingId\' in table \'Email\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableEmail.Em_BestellingIdColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public System.DateTime Em_Mutatiedatum {
                get {
                    return ((global::System.DateTime)(this[this.tableEmail.Em_MutatiedatumColumn]));
                }
                set {
                    this[this.tableEmail.Em_MutatiedatumColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string Em_Opmerking {
                get {
                    try {
                        return ((string)(this[this.tableEmail.Em_OpmerkingColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Em_Opmerking\' in table \'Email\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableEmail.Em_OpmerkingColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsEm_StatusIdNull() {
                return this.IsNull(this.tableEmail.Em_StatusIdColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetEm_StatusIdNull() {
                this[this.tableEmail.Em_StatusIdColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsEm_DispStatusNull() {
                return this.IsNull(this.tableEmail.Em_DispStatusColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetEm_DispStatusNull() {
                this[this.tableEmail.Em_DispStatusColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsEm_BerichtNull() {
                return this.IsNull(this.tableEmail.Em_BerichtColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetEm_BerichtNull() {
                this[this.tableEmail.Em_BerichtColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsEm_BestellingIdNull() {
                return this.IsNull(this.tableEmail.Em_BestellingIdColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetEm_BestellingIdNull() {
                this[this.tableEmail.Em_BestellingIdColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsEm_OpmerkingNull() {
                return this.IsNull(this.tableEmail.Em_OpmerkingColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetEm_OpmerkingNull() {
                this[this.tableEmail.Em_OpmerkingColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        public partial class EmailadresRow : global::System.Data.DataRow {
            
            private EmailadresDataTable tableEmailadres;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal EmailadresRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableEmailadres = ((EmailadresDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public long Emladrs_Id {
                get {
                    return ((long)(this[this.tableEmailadres.Emladrs_IdColumn]));
                }
                set {
                    this[this.tableEmailadres.Emladrs_IdColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public long Emladrs_StatusId {
                get {
                    try {
                        return ((long)(this[this.tableEmailadres.Emladrs_StatusIdColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Emladrs_StatusId\' in table \'Emailadres\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableEmailadres.Emladrs_StatusIdColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string Emladrs_DispStatus {
                get {
                    try {
                        return ((string)(this[this.tableEmailadres.Emladrs_DispStatusColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Emladrs_DispStatus\' in table \'Emailadres\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableEmailadres.Emladrs_DispStatusColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public long Emladrs_KlBgId {
                get {
                    return ((long)(this[this.tableEmailadres.Emladrs_KlBgIdColumn]));
                }
                set {
                    this[this.tableEmailadres.Emladrs_KlBgIdColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string Emladrs_DispKlBg {
                get {
                    try {
                        return ((string)(this[this.tableEmailadres.Emladrs_DispKlBgColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Emladrs_DispKlBg\' in table \'Emailadres\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableEmailadres.Emladrs_DispKlBgColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string Emladrs_Emailadres {
                get {
                    return ((string)(this[this.tableEmailadres.Emladrs_EmailadresColumn]));
                }
                set {
                    this[this.tableEmailadres.Emladrs_EmailadresColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public System.DateTime Emladrs_Mutatiedatum {
                get {
                    return ((global::System.DateTime)(this[this.tableEmailadres.Emladrs_MutatiedatumColumn]));
                }
                set {
                    this[this.tableEmailadres.Emladrs_MutatiedatumColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string Emladrs_Opmerking {
                get {
                    try {
                        return ((string)(this[this.tableEmailadres.Emladrs_OpmerkingColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Emladrs_Opmerking\' in table \'Emailadres\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableEmailadres.Emladrs_OpmerkingColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsEmladrs_StatusIdNull() {
                return this.IsNull(this.tableEmailadres.Emladrs_StatusIdColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetEmladrs_StatusIdNull() {
                this[this.tableEmailadres.Emladrs_StatusIdColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsEmladrs_DispStatusNull() {
                return this.IsNull(this.tableEmailadres.Emladrs_DispStatusColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetEmladrs_DispStatusNull() {
                this[this.tableEmailadres.Emladrs_DispStatusColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsEmladrs_DispKlBgNull() {
                return this.IsNull(this.tableEmailadres.Emladrs_DispKlBgColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetEmladrs_DispKlBgNull() {
                this[this.tableEmailadres.Emladrs_DispKlBgColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsEmladrs_OpmerkingNull() {
                return this.IsNull(this.tableEmailadres.Emladrs_OpmerkingColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetEmladrs_OpmerkingNull() {
                this[this.tableEmailadres.Emladrs_OpmerkingColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        public partial class GebruikerRow : global::System.Data.DataRow {
            
            private GebruikerDataTable tableGebruiker;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal GebruikerRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableGebruiker = ((GebruikerDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public long Gebr_Id {
                get {
                    return ((long)(this[this.tableGebruiker.Gebr_IdColumn]));
                }
                set {
                    this[this.tableGebruiker.Gebr_IdColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public long Gebr_StatusId {
                get {
                    return ((long)(this[this.tableGebruiker.Gebr_StatusIdColumn]));
                }
                set {
                    this[this.tableGebruiker.Gebr_StatusIdColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string Gebr_DispStatus {
                get {
                    try {
                        return ((string)(this[this.tableGebruiker.Gebr_DispStatusColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Gebr_DispStatus\' in table \'Gebruiker\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGebruiker.Gebr_DispStatusColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string Gebr_Kort {
                get {
                    return ((string)(this[this.tableGebruiker.Gebr_KortColumn]));
                }
                set {
                    this[this.tableGebruiker.Gebr_KortColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string Gebr_Lang {
                get {
                    return ((string)(this[this.tableGebruiker.Gebr_LangColumn]));
                }
                set {
                    this[this.tableGebruiker.Gebr_LangColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string Gebr_Wachtwoord {
                get {
                    try {
                        return ((string)(this[this.tableGebruiker.Gebr_WachtwoordColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Gebr_Wachtwoord\' in table \'Gebruiker\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGebruiker.Gebr_WachtwoordColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public System.DateTime Gebr_Mutatiedatum {
                get {
                    return ((global::System.DateTime)(this[this.tableGebruiker.Gebr_MutatiedatumColumn]));
                }
                set {
                    this[this.tableGebruiker.Gebr_MutatiedatumColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string Gebr_Opmerking {
                get {
                    try {
                        return ((string)(this[this.tableGebruiker.Gebr_OpmerkingColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Gebr_Opmerking\' in table \'Gebruiker\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGebruiker.Gebr_OpmerkingColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsGebr_DispStatusNull() {
                return this.IsNull(this.tableGebruiker.Gebr_DispStatusColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetGebr_DispStatusNull() {
                this[this.tableGebruiker.Gebr_DispStatusColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsGebr_WachtwoordNull() {
                return this.IsNull(this.tableGebruiker.Gebr_WachtwoordColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetGebr_WachtwoordNull() {
                this[this.tableGebruiker.Gebr_WachtwoordColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsGebr_OpmerkingNull() {
                return this.IsNull(this.tableGebruiker.Gebr_OpmerkingColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetGebr_OpmerkingNull() {
                this[this.tableGebruiker.Gebr_OpmerkingColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        public partial class HoofdcategorieRow : global::System.Data.DataRow {
            
            private HoofdcategorieDataTable tableHoofdcategorie;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal HoofdcategorieRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableHoofdcategorie = ((HoofdcategorieDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public long Hcat_Id {
                get {
                    return ((long)(this[this.tableHoofdcategorie.Hcat_IdColumn]));
                }
                set {
                    this[this.tableHoofdcategorie.Hcat_IdColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public long Hcat_StatusId {
                get {
                    try {
                        return ((long)(this[this.tableHoofdcategorie.Hcat_StatusIdColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Hcat_StatusId\' in table \'Hoofdcategorie\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableHoofdcategorie.Hcat_StatusIdColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string Hcat_DispStatus {
                get {
                    try {
                        return ((string)(this[this.tableHoofdcategorie.Hcat_DispStatusColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Hcat_DispStatus\' in table \'Hoofdcategorie\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableHoofdcategorie.Hcat_DispStatusColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string Hcat_Prefix {
                get {
                    try {
                        return ((string)(this[this.tableHoofdcategorie.Hcat_PrefixColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Hcat_Prefix\' in table \'Hoofdcategorie\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableHoofdcategorie.Hcat_PrefixColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string Hcat_Kort {
                get {
                    return ((string)(this[this.tableHoofdcategorie.Hcat_KortColumn]));
                }
                set {
                    this[this.tableHoofdcategorie.Hcat_KortColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string Hcat_Lang {
                get {
                    return ((string)(this[this.tableHoofdcategorie.Hcat_LangColumn]));
                }
                set {
                    this[this.tableHoofdcategorie.Hcat_LangColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public long Hcat_WijzigentoegestaanJN {
                get {
                    return ((long)(this[this.tableHoofdcategorie.Hcat_WijzigentoegestaanJNColumn]));
                }
                set {
                    this[this.tableHoofdcategorie.Hcat_WijzigentoegestaanJNColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public System.DateTime Hcat_Mutatiedatum {
                get {
                    return ((global::System.DateTime)(this[this.tableHoofdcategorie.Hcat_MutatiedatumColumn]));
                }
                set {
                    this[this.tableHoofdcategorie.Hcat_MutatiedatumColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string Hcat_Opmerking {
                get {
                    try {
                        return ((string)(this[this.tableHoofdcategorie.Hcat_OpmerkingColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Hcat_Opmerking\' in table \'Hoofdcategorie\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableHoofdcategorie.Hcat_OpmerkingColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsHcat_StatusIdNull() {
                return this.IsNull(this.tableHoofdcategorie.Hcat_StatusIdColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetHcat_StatusIdNull() {
                this[this.tableHoofdcategorie.Hcat_StatusIdColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsHcat_DispStatusNull() {
                return this.IsNull(this.tableHoofdcategorie.Hcat_DispStatusColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetHcat_DispStatusNull() {
                this[this.tableHoofdcategorie.Hcat_DispStatusColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsHcat_PrefixNull() {
                return this.IsNull(this.tableHoofdcategorie.Hcat_PrefixColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetHcat_PrefixNull() {
                this[this.tableHoofdcategorie.Hcat_PrefixColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsHcat_OpmerkingNull() {
                return this.IsNull(this.tableHoofdcategorie.Hcat_OpmerkingColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetHcat_OpmerkingNull() {
                this[this.tableHoofdcategorie.Hcat_OpmerkingColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        public partial class HoofdUitgavesoortRow : global::System.Data.DataRow {
            
            private HoofdUitgavesoortDataTable tableHoofdUitgavesoort;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal HoofdUitgavesoortRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableHoofdUitgavesoort = ((HoofdUitgavesoortDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public long Hus_Id {
                get {
                    return ((long)(this[this.tableHoofdUitgavesoort.Hus_IdColumn]));
                }
                set {
                    this[this.tableHoofdUitgavesoort.Hus_IdColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public long Hus_StatusId {
                get {
                    try {
                        return ((long)(this[this.tableHoofdUitgavesoort.Hus_StatusIdColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Hus_StatusId\' in table \'HoofdUitgavesoort\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableHoofdUitgavesoort.Hus_StatusIdColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string Hus_DispStatus {
                get {
                    try {
                        return ((string)(this[this.tableHoofdUitgavesoort.Hus_DispStatusColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Hus_DispStatus\' in table \'HoofdUitgavesoort\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableHoofdUitgavesoort.Hus_DispStatusColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string Hus_Kort {
                get {
                    return ((string)(this[this.tableHoofdUitgavesoort.Hus_KortColumn]));
                }
                set {
                    this[this.tableHoofdUitgavesoort.Hus_KortColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string Hus_Lang {
                get {
                    return ((string)(this[this.tableHoofdUitgavesoort.Hus_LangColumn]));
                }
                set {
                    this[this.tableHoofdUitgavesoort.Hus_LangColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public long Hus_WijzigentoegestaanJN {
                get {
                    try {
                        return ((long)(this[this.tableHoofdUitgavesoort.Hus_WijzigentoegestaanJNColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Hus_WijzigentoegestaanJN\' in table \'HoofdUitgavesoort\' is D" +
                                "BNull.", e);
                    }
                }
                set {
                    this[this.tableHoofdUitgavesoort.Hus_WijzigentoegestaanJNColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public System.DateTime Hus_Mutatiedatum {
                get {
                    return ((global::System.DateTime)(this[this.tableHoofdUitgavesoort.Hus_MutatiedatumColumn]));
                }
                set {
                    this[this.tableHoofdUitgavesoort.Hus_MutatiedatumColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string Hus_Opmerking {
                get {
                    try {
                        return ((string)(this[this.tableHoofdUitgavesoort.Hus_OpmerkingColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Hus_Opmerking\' in table \'HoofdUitgavesoort\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableHoofdUitgavesoort.Hus_OpmerkingColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsHus_StatusIdNull() {
                return this.IsNull(this.tableHoofdUitgavesoort.Hus_StatusIdColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetHus_StatusIdNull() {
                this[this.tableHoofdUitgavesoort.Hus_StatusIdColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsHus_DispStatusNull() {
                return this.IsNull(this.tableHoofdUitgavesoort.Hus_DispStatusColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetHus_DispStatusNull() {
                this[this.tableHoofdUitgavesoort.Hus_DispStatusColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsHus_WijzigentoegestaanJNNull() {
                return this.IsNull(this.tableHoofdUitgavesoort.Hus_WijzigentoegestaanJNColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetHus_WijzigentoegestaanJNNull() {
                this[this.tableHoofdUitgavesoort.Hus_WijzigentoegestaanJNColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsHus_OpmerkingNull() {
                return this.IsNull(this.tableHoofdUitgavesoort.Hus_OpmerkingColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetHus_OpmerkingNull() {
                this[this.tableHoofdUitgavesoort.Hus_OpmerkingColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        public partial class InstellingenRow : global::System.Data.DataRow {
            
            private InstellingenDataTable tableInstellingen;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal InstellingenRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableInstellingen = ((InstellingenDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public long Instl_Id {
                get {
                    return ((long)(this[this.tableInstellingen.Instl_IdColumn]));
                }
                set {
                    this[this.tableInstellingen.Instl_IdColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public long Instl_Systemsetting {
                get {
                    try {
                        return ((long)(this[this.tableInstellingen.Instl_SystemsettingColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Instl_Systemsetting\' in table \'Instellingen\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableInstellingen.Instl_SystemsettingColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public long Instl_StatusId {
                get {
                    return ((long)(this[this.tableInstellingen.Instl_StatusIdColumn]));
                }
                set {
                    this[this.tableInstellingen.Instl_StatusIdColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string Instl_DispStatus {
                get {
                    try {
                        return ((string)(this[this.tableInstellingen.Instl_DispStatusColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Instl_DispStatus\' in table \'Instellingen\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableInstellingen.Instl_DispStatusColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string Instl_Naam {
                get {
                    try {
                        return ((string)(this[this.tableInstellingen.Instl_NaamColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Instl_Naam\' in table \'Instellingen\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableInstellingen.Instl_NaamColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public short Instl_Gegtype {
                get {
                    try {
                        return ((short)(this[this.tableInstellingen.Instl_GegtypeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Instl_Gegtype\' in table \'Instellingen\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableInstellingen.Instl_GegtypeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public long Instl_Actief {
                get {
                    try {
                        return ((long)(this[this.tableInstellingen.Instl_ActiefColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Instl_Actief\' in table \'Instellingen\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableInstellingen.Instl_ActiefColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string Instl_String {
                get {
                    try {
                        return ((string)(this[this.tableInstellingen.Instl_StringColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Instl_String\' in table \'Instellingen\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableInstellingen.Instl_StringColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public long Instl_JN {
                get {
                    try {
                        return ((long)(this[this.tableInstellingen.Instl_JNColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Instl_JN\' in table \'Instellingen\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableInstellingen.Instl_JNColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public long Instl_Integer {
                get {
                    try {
                        return ((long)(this[this.tableInstellingen.Instl_IntegerColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Instl_Integer\' in table \'Instellingen\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableInstellingen.Instl_IntegerColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public double Instl_Real {
                get {
                    try {
                        return ((double)(this[this.tableInstellingen.Instl_RealColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Instl_Real\' in table \'Instellingen\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableInstellingen.Instl_RealColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string Instl_Memo {
                get {
                    try {
                        return ((string)(this[this.tableInstellingen.Instl_MemoColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Instl_Memo\' in table \'Instellingen\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableInstellingen.Instl_MemoColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public System.DateTime Instl_Datum {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableInstellingen.Instl_DatumColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Instl_Datum\' in table \'Instellingen\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableInstellingen.Instl_DatumColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public System.DateTime Instl_Tijd {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableInstellingen.Instl_TijdColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Instl_Tijd\' in table \'Instellingen\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableInstellingen.Instl_TijdColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public System.DateTime Instl_Mutatiedatum {
                get {
                    return ((global::System.DateTime)(this[this.tableInstellingen.Instl_MutatiedatumColumn]));
                }
                set {
                    this[this.tableInstellingen.Instl_MutatiedatumColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string Instl_Opmerking {
                get {
                    try {
                        return ((string)(this[this.tableInstellingen.Instl_OpmerkingColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Instl_Opmerking\' in table \'Instellingen\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableInstellingen.Instl_OpmerkingColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsInstl_SystemsettingNull() {
                return this.IsNull(this.tableInstellingen.Instl_SystemsettingColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetInstl_SystemsettingNull() {
                this[this.tableInstellingen.Instl_SystemsettingColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsInstl_DispStatusNull() {
                return this.IsNull(this.tableInstellingen.Instl_DispStatusColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetInstl_DispStatusNull() {
                this[this.tableInstellingen.Instl_DispStatusColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsInstl_NaamNull() {
                return this.IsNull(this.tableInstellingen.Instl_NaamColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetInstl_NaamNull() {
                this[this.tableInstellingen.Instl_NaamColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsInstl_GegtypeNull() {
                return this.IsNull(this.tableInstellingen.Instl_GegtypeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetInstl_GegtypeNull() {
                this[this.tableInstellingen.Instl_GegtypeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsInstl_ActiefNull() {
                return this.IsNull(this.tableInstellingen.Instl_ActiefColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetInstl_ActiefNull() {
                this[this.tableInstellingen.Instl_ActiefColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsInstl_StringNull() {
                return this.IsNull(this.tableInstellingen.Instl_StringColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetInstl_StringNull() {
                this[this.tableInstellingen.Instl_StringColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsInstl_JNNull() {
                return this.IsNull(this.tableInstellingen.Instl_JNColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetInstl_JNNull() {
                this[this.tableInstellingen.Instl_JNColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsInstl_IntegerNull() {
                return this.IsNull(this.tableInstellingen.Instl_IntegerColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetInstl_IntegerNull() {
                this[this.tableInstellingen.Instl_IntegerColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsInstl_RealNull() {
                return this.IsNull(this.tableInstellingen.Instl_RealColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetInstl_RealNull() {
                this[this.tableInstellingen.Instl_RealColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsInstl_MemoNull() {
                return this.IsNull(this.tableInstellingen.Instl_MemoColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetInstl_MemoNull() {
                this[this.tableInstellingen.Instl_MemoColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsInstl_DatumNull() {
                return this.IsNull(this.tableInstellingen.Instl_DatumColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetInstl_DatumNull() {
                this[this.tableInstellingen.Instl_DatumColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsInstl_TijdNull() {
                return this.IsNull(this.tableInstellingen.Instl_TijdColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetInstl_TijdNull() {
                this[this.tableInstellingen.Instl_TijdColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsInstl_OpmerkingNull() {
                return this.IsNull(this.tableInstellingen.Instl_OpmerkingColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetInstl_OpmerkingNull() {
                this[this.tableInstellingen.Instl_OpmerkingColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        public partial class JaargegevensRow : global::System.Data.DataRow {
            
            private JaargegevensDataTable tableJaargegevens;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal JaargegevensRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableJaargegevens = ((JaargegevensDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public long Jgeg_Id {
                get {
                    return ((long)(this[this.tableJaargegevens.Jgeg_IdColumn]));
                }
                set {
                    this[this.tableJaargegevens.Jgeg_IdColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public long Jgeg_StatusId {
                get {
                    try {
                        return ((long)(this[this.tableJaargegevens.Jgeg_StatusIdColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Jgeg_StatusId\' in table \'Jaargegevens\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableJaargegevens.Jgeg_StatusIdColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string Jgeg_DispStatus {
                get {
                    try {
                        return ((string)(this[this.tableJaargegevens.Jgeg_DispStatusColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Jgeg_DispStatus\' in table \'Jaargegevens\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableJaargegevens.Jgeg_DispStatusColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string Jgeg_Omschrijving {
                get {
                    return ((string)(this[this.tableJaargegevens.Jgeg_OmschrijvingColumn]));
                }
                set {
                    this[this.tableJaargegevens.Jgeg_OmschrijvingColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public System.DateTime Jgeg_Begindatum {
                get {
                    return ((global::System.DateTime)(this[this.tableJaargegevens.Jgeg_BegindatumColumn]));
                }
                set {
                    this[this.tableJaargegevens.Jgeg_BegindatumColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public System.DateTime Jgeg_Einddatum {
                get {
                    return ((global::System.DateTime)(this[this.tableJaargegevens.Jgeg_EinddatumColumn]));
                }
                set {
                    this[this.tableJaargegevens.Jgeg_EinddatumColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public System.DateTime Jgeg_Mutatiedatum {
                get {
                    return ((global::System.DateTime)(this[this.tableJaargegevens.Jgeg_MutatiedatumColumn]));
                }
                set {
                    this[this.tableJaargegevens.Jgeg_MutatiedatumColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string Jgeg_Opmerking {
                get {
                    try {
                        return ((string)(this[this.tableJaargegevens.Jgeg_OpmerkingColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Jgeg_Opmerking\' in table \'Jaargegevens\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableJaargegevens.Jgeg_OpmerkingColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsJgeg_StatusIdNull() {
                return this.IsNull(this.tableJaargegevens.Jgeg_StatusIdColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetJgeg_StatusIdNull() {
                this[this.tableJaargegevens.Jgeg_StatusIdColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsJgeg_DispStatusNull() {
                return this.IsNull(this.tableJaargegevens.Jgeg_DispStatusColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetJgeg_DispStatusNull() {
                this[this.tableJaargegevens.Jgeg_DispStatusColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsJgeg_OpmerkingNull() {
                return this.IsNull(this.tableJaargegevens.Jgeg_OpmerkingColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetJgeg_OpmerkingNull() {
                this[this.tableJaargegevens.Jgeg_OpmerkingColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        public partial class JaarsaldoRow : global::System.Data.DataRow {
            
            private JaarsaldoDataTable tableJaarsaldo;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal JaarsaldoRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableJaarsaldo = ((JaarsaldoDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public long Jsal_Id {
                get {
                    return ((long)(this[this.tableJaarsaldo.Jsal_IdColumn]));
                }
                set {
                    this[this.tableJaarsaldo.Jsal_IdColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public long Jsal_StatusId {
                get {
                    return ((long)(this[this.tableJaarsaldo.Jsal_StatusIdColumn]));
                }
                set {
                    this[this.tableJaarsaldo.Jsal_StatusIdColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string Jsal_DispStatus {
                get {
                    return ((string)(this[this.tableJaarsaldo.Jsal_DispStatusColumn]));
                }
                set {
                    this[this.tableJaarsaldo.Jsal_DispStatusColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public long Jsal_JgegId {
                get {
                    return ((long)(this[this.tableJaarsaldo.Jsal_JgegIdColumn]));
                }
                set {
                    this[this.tableJaarsaldo.Jsal_JgegIdColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public long Jsal_BgnrId {
                get {
                    return ((long)(this[this.tableJaarsaldo.Jsal_BgnrIdColumn]));
                }
                set {
                    this[this.tableJaarsaldo.Jsal_BgnrIdColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal Jsal_Beginsaldo {
                get {
                    return ((decimal)(this[this.tableJaarsaldo.Jsal_BeginsaldoColumn]));
                }
                set {
                    this[this.tableJaarsaldo.Jsal_BeginsaldoColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal Jsal_Eindsaldo {
                get {
                    return ((decimal)(this[this.tableJaarsaldo.Jsal_EindsaldoColumn]));
                }
                set {
                    this[this.tableJaarsaldo.Jsal_EindsaldoColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public System.DateTime Jsal_Mutatiedatum {
                get {
                    return ((global::System.DateTime)(this[this.tableJaarsaldo.Jsal_MutatiedatumColumn]));
                }
                set {
                    this[this.tableJaarsaldo.Jsal_MutatiedatumColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string Jsal_Opmerking {
                get {
                    try {
                        return ((string)(this[this.tableJaarsaldo.Jsal_OpmerkingColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Jsal_Opmerking\' in table \'Jaarsaldo\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableJaarsaldo.Jsal_OpmerkingColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsJsal_OpmerkingNull() {
                return this.IsNull(this.tableJaarsaldo.Jsal_OpmerkingColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetJsal_OpmerkingNull() {
                this[this.tableJaarsaldo.Jsal_OpmerkingColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        public partial class Klant_BegunstigdeRow : global::System.Data.DataRow {
            
            private Klant_BegunstigdeDataTable tableKlant_Begunstigde;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal Klant_BegunstigdeRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableKlant_Begunstigde = ((Klant_BegunstigdeDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public long KlBg_Id {
                get {
                    return ((long)(this[this.tableKlant_Begunstigde.KlBg_IdColumn]));
                }
                set {
                    this[this.tableKlant_Begunstigde.KlBg_IdColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public long KlBg_StatusId {
                get {
                    return ((long)(this[this.tableKlant_Begunstigde.KlBg_StatusIdColumn]));
                }
                set {
                    this[this.tableKlant_Begunstigde.KlBg_StatusIdColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string KlBg_DispStatus {
                get {
                    try {
                        return ((string)(this[this.tableKlant_Begunstigde.KlBg_DispStatusColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'KlBg_DispStatus\' in table \'Klant_Begunstigde\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableKlant_Begunstigde.KlBg_DispStatusColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public long KlBg_KlantJN {
                get {
                    return ((long)(this[this.tableKlant_Begunstigde.KlBg_KlantJNColumn]));
                }
                set {
                    this[this.tableKlant_Begunstigde.KlBg_KlantJNColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public long KlBg_BegunstigdeJN {
                get {
                    return ((long)(this[this.tableKlant_Begunstigde.KlBg_BegunstigdeJNColumn]));
                }
                set {
                    this[this.tableKlant_Begunstigde.KlBg_BegunstigdeJNColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public long KlBg_SysteemKlBgJN {
                get {
                    try {
                        return ((long)(this[this.tableKlant_Begunstigde.KlBg_SysteemKlBgJNColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'KlBg_SysteemKlBgJN\' in table \'Klant_Begunstigde\' is DBNull." +
                                "", e);
                    }
                }
                set {
                    this[this.tableKlant_Begunstigde.KlBg_SysteemKlBgJNColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public long KlBg_Scipio_Lokaalnr {
                get {
                    try {
                        return ((long)(this[this.tableKlant_Begunstigde.KlBg_Scipio_LokaalnrColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'KlBg_Scipio_Lokaalnr\' in table \'Klant_Begunstigde\' is DBNul" +
                                "l.", e);
                    }
                }
                set {
                    this[this.tableKlant_Begunstigde.KlBg_Scipio_LokaalnrColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string KlBg_DebNr {
                get {
                    try {
                        return ((string)(this[this.tableKlant_Begunstigde.KlBg_DebNrColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'KlBg_DebNr\' in table \'Klant_Begunstigde\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableKlant_Begunstigde.KlBg_DebNrColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string KlBg_CredNr {
                get {
                    try {
                        return ((string)(this[this.tableKlant_Begunstigde.KlBg_CredNrColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'KlBg_CredNr\' in table \'Klant_Begunstigde\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableKlant_Begunstigde.KlBg_CredNrColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string KlBg_Voorvoegsel {
                get {
                    try {
                        return ((string)(this[this.tableKlant_Begunstigde.KlBg_VoorvoegselColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'KlBg_Voorvoegsel\' in table \'Klant_Begunstigde\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableKlant_Begunstigde.KlBg_VoorvoegselColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string KlBg_Voorletters {
                get {
                    try {
                        return ((string)(this[this.tableKlant_Begunstigde.KlBg_VoorlettersColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'KlBg_Voorletters\' in table \'Klant_Begunstigde\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableKlant_Begunstigde.KlBg_VoorlettersColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string KlBg_Tussenvoegsel {
                get {
                    try {
                        return ((string)(this[this.tableKlant_Begunstigde.KlBg_TussenvoegselColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'KlBg_Tussenvoegsel\' in table \'Klant_Begunstigde\' is DBNull." +
                                "", e);
                    }
                }
                set {
                    this[this.tableKlant_Begunstigde.KlBg_TussenvoegselColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string KlBg_Achternaam {
                get {
                    try {
                        return ((string)(this[this.tableKlant_Begunstigde.KlBg_AchternaamColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'KlBg_Achternaam\' in table \'Klant_Begunstigde\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableKlant_Begunstigde.KlBg_AchternaamColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string KlBg_VVTA {
                get {
                    return ((string)(this[this.tableKlant_Begunstigde.KlBg_VVTAColumn]));
                }
                set {
                    this[this.tableKlant_Begunstigde.KlBg_VVTAColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string KlBg_AVVT {
                get {
                    return ((string)(this[this.tableKlant_Begunstigde.KlBg_AVVTColumn]));
                }
                set {
                    this[this.tableKlant_Begunstigde.KlBg_AVVTColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string KlBg_Straatnaam {
                get {
                    try {
                        return ((string)(this[this.tableKlant_Begunstigde.KlBg_StraatnaamColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'KlBg_Straatnaam\' in table \'Klant_Begunstigde\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableKlant_Begunstigde.KlBg_StraatnaamColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string KlBg_Huisnummer {
                get {
                    try {
                        return ((string)(this[this.tableKlant_Begunstigde.KlBg_HuisnummerColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'KlBg_Huisnummer\' in table \'Klant_Begunstigde\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableKlant_Begunstigde.KlBg_HuisnummerColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string KlBg_Huisnummertoevoeging {
                get {
                    try {
                        return ((string)(this[this.tableKlant_Begunstigde.KlBg_HuisnummertoevoegingColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'KlBg_Huisnummertoevoeging\' in table \'Klant_Begunstigde\' is " +
                                "DBNull.", e);
                    }
                }
                set {
                    this[this.tableKlant_Begunstigde.KlBg_HuisnummertoevoegingColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string KlBg_Adres {
                get {
                    try {
                        return ((string)(this[this.tableKlant_Begunstigde.KlBg_AdresColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'KlBg_Adres\' in table \'Klant_Begunstigde\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableKlant_Begunstigde.KlBg_AdresColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string KlBg_Postcode {
                get {
                    try {
                        return ((string)(this[this.tableKlant_Begunstigde.KlBg_PostcodeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'KlBg_Postcode\' in table \'Klant_Begunstigde\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableKlant_Begunstigde.KlBg_PostcodeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string KlBg_Woonplaats {
                get {
                    try {
                        return ((string)(this[this.tableKlant_Begunstigde.KlBg_WoonplaatsColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'KlBg_Woonplaats\' in table \'Klant_Begunstigde\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableKlant_Begunstigde.KlBg_WoonplaatsColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string KlBg_Telefoonnummer {
                get {
                    try {
                        return ((string)(this[this.tableKlant_Begunstigde.KlBg_TelefoonnummerColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'KlBg_Telefoonnummer\' in table \'Klant_Begunstigde\' is DBNull" +
                                ".", e);
                    }
                }
                set {
                    this[this.tableKlant_Begunstigde.KlBg_TelefoonnummerColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string KlBg_Emailadres {
                get {
                    try {
                        return ((string)(this[this.tableKlant_Begunstigde.KlBg_EmailadresColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'KlBg_Emailadres\' in table \'Klant_Begunstigde\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableKlant_Begunstigde.KlBg_EmailadresColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string KlBg_Extra_informatie {
                get {
                    try {
                        return ((string)(this[this.tableKlant_Begunstigde.KlBg_Extra_informatieColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'KlBg_Extra_informatie\' in table \'Klant_Begunstigde\' is DBNu" +
                                "ll.", e);
                    }
                }
                set {
                    this[this.tableKlant_Begunstigde.KlBg_Extra_informatieColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string KlBg_SysteemKlBgDispJN {
                get {
                    return ((string)(this[this.tableKlant_Begunstigde.KlBg_SysteemKlBgDispJNColumn]));
                }
                set {
                    this[this.tableKlant_Begunstigde.KlBg_SysteemKlBgDispJNColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string KlBg_KlDispJN {
                get {
                    return ((string)(this[this.tableKlant_Begunstigde.KlBg_KlDispJNColumn]));
                }
                set {
                    this[this.tableKlant_Begunstigde.KlBg_KlDispJNColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string KlBg_BgDispJN {
                get {
                    return ((string)(this[this.tableKlant_Begunstigde.KlBg_BgDispJNColumn]));
                }
                set {
                    this[this.tableKlant_Begunstigde.KlBg_BgDispJNColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public System.DateTime KlBg_Mutatiedatum {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableKlant_Begunstigde.KlBg_MutatiedatumColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'KlBg_Mutatiedatum\' in table \'Klant_Begunstigde\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableKlant_Begunstigde.KlBg_MutatiedatumColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string KlBg_Opmerking {
                get {
                    try {
                        return ((string)(this[this.tableKlant_Begunstigde.KlBg_OpmerkingColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'KlBg_Opmerking\' in table \'Klant_Begunstigde\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableKlant_Begunstigde.KlBg_OpmerkingColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsKlBg_DispStatusNull() {
                return this.IsNull(this.tableKlant_Begunstigde.KlBg_DispStatusColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetKlBg_DispStatusNull() {
                this[this.tableKlant_Begunstigde.KlBg_DispStatusColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsKlBg_SysteemKlBgJNNull() {
                return this.IsNull(this.tableKlant_Begunstigde.KlBg_SysteemKlBgJNColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetKlBg_SysteemKlBgJNNull() {
                this[this.tableKlant_Begunstigde.KlBg_SysteemKlBgJNColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsKlBg_Scipio_LokaalnrNull() {
                return this.IsNull(this.tableKlant_Begunstigde.KlBg_Scipio_LokaalnrColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetKlBg_Scipio_LokaalnrNull() {
                this[this.tableKlant_Begunstigde.KlBg_Scipio_LokaalnrColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsKlBg_DebNrNull() {
                return this.IsNull(this.tableKlant_Begunstigde.KlBg_DebNrColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetKlBg_DebNrNull() {
                this[this.tableKlant_Begunstigde.KlBg_DebNrColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsKlBg_CredNrNull() {
                return this.IsNull(this.tableKlant_Begunstigde.KlBg_CredNrColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetKlBg_CredNrNull() {
                this[this.tableKlant_Begunstigde.KlBg_CredNrColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsKlBg_VoorvoegselNull() {
                return this.IsNull(this.tableKlant_Begunstigde.KlBg_VoorvoegselColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetKlBg_VoorvoegselNull() {
                this[this.tableKlant_Begunstigde.KlBg_VoorvoegselColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsKlBg_VoorlettersNull() {
                return this.IsNull(this.tableKlant_Begunstigde.KlBg_VoorlettersColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetKlBg_VoorlettersNull() {
                this[this.tableKlant_Begunstigde.KlBg_VoorlettersColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsKlBg_TussenvoegselNull() {
                return this.IsNull(this.tableKlant_Begunstigde.KlBg_TussenvoegselColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetKlBg_TussenvoegselNull() {
                this[this.tableKlant_Begunstigde.KlBg_TussenvoegselColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsKlBg_AchternaamNull() {
                return this.IsNull(this.tableKlant_Begunstigde.KlBg_AchternaamColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetKlBg_AchternaamNull() {
                this[this.tableKlant_Begunstigde.KlBg_AchternaamColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsKlBg_StraatnaamNull() {
                return this.IsNull(this.tableKlant_Begunstigde.KlBg_StraatnaamColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetKlBg_StraatnaamNull() {
                this[this.tableKlant_Begunstigde.KlBg_StraatnaamColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsKlBg_HuisnummerNull() {
                return this.IsNull(this.tableKlant_Begunstigde.KlBg_HuisnummerColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetKlBg_HuisnummerNull() {
                this[this.tableKlant_Begunstigde.KlBg_HuisnummerColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsKlBg_HuisnummertoevoegingNull() {
                return this.IsNull(this.tableKlant_Begunstigde.KlBg_HuisnummertoevoegingColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetKlBg_HuisnummertoevoegingNull() {
                this[this.tableKlant_Begunstigde.KlBg_HuisnummertoevoegingColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsKlBg_AdresNull() {
                return this.IsNull(this.tableKlant_Begunstigde.KlBg_AdresColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetKlBg_AdresNull() {
                this[this.tableKlant_Begunstigde.KlBg_AdresColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsKlBg_PostcodeNull() {
                return this.IsNull(this.tableKlant_Begunstigde.KlBg_PostcodeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetKlBg_PostcodeNull() {
                this[this.tableKlant_Begunstigde.KlBg_PostcodeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsKlBg_WoonplaatsNull() {
                return this.IsNull(this.tableKlant_Begunstigde.KlBg_WoonplaatsColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetKlBg_WoonplaatsNull() {
                this[this.tableKlant_Begunstigde.KlBg_WoonplaatsColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsKlBg_TelefoonnummerNull() {
                return this.IsNull(this.tableKlant_Begunstigde.KlBg_TelefoonnummerColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetKlBg_TelefoonnummerNull() {
                this[this.tableKlant_Begunstigde.KlBg_TelefoonnummerColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsKlBg_EmailadresNull() {
                return this.IsNull(this.tableKlant_Begunstigde.KlBg_EmailadresColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetKlBg_EmailadresNull() {
                this[this.tableKlant_Begunstigde.KlBg_EmailadresColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsKlBg_Extra_informatieNull() {
                return this.IsNull(this.tableKlant_Begunstigde.KlBg_Extra_informatieColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetKlBg_Extra_informatieNull() {
                this[this.tableKlant_Begunstigde.KlBg_Extra_informatieColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsKlBg_MutatiedatumNull() {
                return this.IsNull(this.tableKlant_Begunstigde.KlBg_MutatiedatumColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetKlBg_MutatiedatumNull() {
                this[this.tableKlant_Begunstigde.KlBg_MutatiedatumColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsKlBg_OpmerkingNull() {
                return this.IsNull(this.tableKlant_Begunstigde.KlBg_OpmerkingColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetKlBg_OpmerkingNull() {
                this[this.tableKlant_Begunstigde.KlBg_OpmerkingColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        public partial class Licentie_controleRow : global::System.Data.DataRow {
            
            private Licentie_controleDataTable tableLicentie_controle;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal Licentie_controleRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableLicentie_controle = ((Licentie_controleDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public long Licctrl_Id {
                get {
                    return ((long)(this[this.tableLicentie_controle.Licctrl_IdColumn]));
                }
                set {
                    this[this.tableLicentie_controle.Licctrl_IdColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public long Licctrl_StatusId {
                get {
                    try {
                        return ((long)(this[this.tableLicentie_controle.Licctrl_StatusIdColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Licctrl_StatusId\' in table \'Licentie_controle\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableLicentie_controle.Licctrl_StatusIdColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string Licctrl_DispStatus {
                get {
                    try {
                        return ((string)(this[this.tableLicentie_controle.Licctrl_DispStatusColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Licctrl_DispStatus\' in table \'Licentie_controle\' is DBNull." +
                                "", e);
                    }
                }
                set {
                    this[this.tableLicentie_controle.Licctrl_DispStatusColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string Licctrl_Programma {
                get {
                    return ((string)(this[this.tableLicentie_controle.Licctrl_ProgrammaColumn]));
                }
                set {
                    this[this.tableLicentie_controle.Licctrl_ProgrammaColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public long Licctrl_Nr {
                get {
                    return ((long)(this[this.tableLicentie_controle.Licctrl_NrColumn]));
                }
                set {
                    this[this.tableLicentie_controle.Licctrl_NrColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string Licctrl_Code {
                get {
                    try {
                        return ((string)(this[this.tableLicentie_controle.Licctrl_CodeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Licctrl_Code\' in table \'Licentie_controle\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableLicentie_controle.Licctrl_CodeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public object Licctrl_Type {
                get {
                    return ((object)(this[this.tableLicentie_controle.Licctrl_TypeColumn]));
                }
                set {
                    this[this.tableLicentie_controle.Licctrl_TypeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public long Licctrl_Usermode {
                get {
                    return ((long)(this[this.tableLicentie_controle.Licctrl_UsermodeColumn]));
                }
                set {
                    this[this.tableLicentie_controle.Licctrl_UsermodeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string Licctrl_ControleCode {
                get {
                    try {
                        return ((string)(this[this.tableLicentie_controle.Licctrl_ControleCodeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Licctrl_ControleCode\' in table \'Licentie_controle\' is DBNul" +
                                "l.", e);
                    }
                }
                set {
                    this[this.tableLicentie_controle.Licctrl_ControleCodeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public System.DateTime Licctrl_Mutatiedatum {
                get {
                    return ((global::System.DateTime)(this[this.tableLicentie_controle.Licctrl_MutatiedatumColumn]));
                }
                set {
                    this[this.tableLicentie_controle.Licctrl_MutatiedatumColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsLicctrl_StatusIdNull() {
                return this.IsNull(this.tableLicentie_controle.Licctrl_StatusIdColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetLicctrl_StatusIdNull() {
                this[this.tableLicentie_controle.Licctrl_StatusIdColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsLicctrl_DispStatusNull() {
                return this.IsNull(this.tableLicentie_controle.Licctrl_DispStatusColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetLicctrl_DispStatusNull() {
                this[this.tableLicentie_controle.Licctrl_DispStatusColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsLicctrl_CodeNull() {
                return this.IsNull(this.tableLicentie_controle.Licctrl_CodeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetLicctrl_CodeNull() {
                this[this.tableLicentie_controle.Licctrl_CodeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsLicctrl_ControleCodeNull() {
                return this.IsNull(this.tableLicentie_controle.Licctrl_ControleCodeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetLicctrl_ControleCodeNull() {
                this[this.tableLicentie_controle.Licctrl_ControleCodeColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        public partial class LogRow : global::System.Data.DataRow {
            
            private LogDataTable tableLog;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal LogRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableLog = ((LogDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public long Log_Id {
                get {
                    return ((long)(this[this.tableLog.Log_IdColumn]));
                }
                set {
                    this[this.tableLog.Log_IdColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public long Log_StatusId {
                get {
                    try {
                        return ((long)(this[this.tableLog.Log_StatusIdColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Log_StatusId\' in table \'Log\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableLog.Log_StatusIdColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string Log_DispStatus {
                get {
                    try {
                        return ((string)(this[this.tableLog.Log_DispStatusColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Log_DispStatus\' in table \'Log\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableLog.Log_DispStatusColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public System.DateTime Log_Datum {
                get {
                    return ((global::System.DateTime)(this[this.tableLog.Log_DatumColumn]));
                }
                set {
                    this[this.tableLog.Log_DatumColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string Log_Bestand {
                get {
                    return ((string)(this[this.tableLog.Log_BestandColumn]));
                }
                set {
                    this[this.tableLog.Log_BestandColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public long Log_Bestandsnr {
                get {
                    return ((long)(this[this.tableLog.Log_BestandsnrColumn]));
                }
                set {
                    this[this.tableLog.Log_BestandsnrColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public long Log_RecordId {
                get {
                    return ((long)(this[this.tableLog.Log_RecordIdColumn]));
                }
                set {
                    this[this.tableLog.Log_RecordIdColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string Log_Veldnaam {
                get {
                    return ((string)(this[this.tableLog.Log_VeldnaamColumn]));
                }
                set {
                    this[this.tableLog.Log_VeldnaamColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public long Log_Volgnr {
                get {
                    return ((long)(this[this.tableLog.Log_VolgnrColumn]));
                }
                set {
                    this[this.tableLog.Log_VolgnrColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string Log_Oude_tekst {
                get {
                    try {
                        return ((string)(this[this.tableLog.Log_Oude_tekstColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Log_Oude_tekst\' in table \'Log\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableLog.Log_Oude_tekstColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string Log_Nieuwe_tekst {
                get {
                    try {
                        return ((string)(this[this.tableLog.Log_Nieuwe_tekstColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Log_Nieuwe_tekst\' in table \'Log\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableLog.Log_Nieuwe_tekstColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public long Log_Oude_numeriek {
                get {
                    try {
                        return ((long)(this[this.tableLog.Log_Oude_numeriekColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Log_Oude_numeriek\' in table \'Log\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableLog.Log_Oude_numeriekColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public long Log_Nieuwe_numeriek {
                get {
                    try {
                        return ((long)(this[this.tableLog.Log_Nieuwe_numeriekColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Log_Nieuwe_numeriek\' in table \'Log\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableLog.Log_Nieuwe_numeriekColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal Log_Oude_real {
                get {
                    try {
                        return ((decimal)(this[this.tableLog.Log_Oude_realColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Log_Oude_real\' in table \'Log\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableLog.Log_Oude_realColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal Log_Nieuwe_real {
                get {
                    try {
                        return ((decimal)(this[this.tableLog.Log_Nieuwe_realColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Log_Nieuwe_real\' in table \'Log\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableLog.Log_Nieuwe_realColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal Log_Oude_currency {
                get {
                    try {
                        return ((decimal)(this[this.tableLog.Log_Oude_currencyColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Log_Oude_currency\' in table \'Log\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableLog.Log_Oude_currencyColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal Log_Nieuwe_currency {
                get {
                    try {
                        return ((decimal)(this[this.tableLog.Log_Nieuwe_currencyColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Log_Nieuwe_currency\' in table \'Log\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableLog.Log_Nieuwe_currencyColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public System.DateTime Log_Oude_datum {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableLog.Log_Oude_datumColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Log_Oude_datum\' in table \'Log\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableLog.Log_Oude_datumColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public System.DateTime Log_Nieuwe_datum {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableLog.Log_Nieuwe_datumColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Log_Nieuwe_datum\' in table \'Log\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableLog.Log_Nieuwe_datumColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public long Log_Oude_JN {
                get {
                    try {
                        return ((long)(this[this.tableLog.Log_Oude_JNColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Log_Oude_JN\' in table \'Log\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableLog.Log_Oude_JNColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public long Log_Nieuwe_JN {
                get {
                    try {
                        return ((long)(this[this.tableLog.Log_Nieuwe_JNColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Log_Nieuwe_JN\' in table \'Log\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableLog.Log_Nieuwe_JNColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string Log_Oude_memo {
                get {
                    try {
                        return ((string)(this[this.tableLog.Log_Oude_memoColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Log_Oude_memo\' in table \'Log\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableLog.Log_Oude_memoColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string Log_Nieuwe_memo {
                get {
                    try {
                        return ((string)(this[this.tableLog.Log_Nieuwe_memoColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Log_Nieuwe_memo\' in table \'Log\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableLog.Log_Nieuwe_memoColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public System.DateTime Log_Oude_record_datum {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableLog.Log_Oude_record_datumColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Log_Oude_record_datum\' in table \'Log\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableLog.Log_Oude_record_datumColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public System.DateTime Log_Nieuwe_recorddatum {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableLog.Log_Nieuwe_recorddatumColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Log_Nieuwe_recorddatum\' in table \'Log\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableLog.Log_Nieuwe_recorddatumColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public long Log_Oude_user {
                get {
                    try {
                        return ((long)(this[this.tableLog.Log_Oude_userColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Log_Oude_user\' in table \'Log\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableLog.Log_Oude_userColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public long Log_Nieuwe_user {
                get {
                    try {
                        return ((long)(this[this.tableLog.Log_Nieuwe_userColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Log_Nieuwe_user\' in table \'Log\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableLog.Log_Nieuwe_userColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public long Log_DbFilesId {
                get {
                    try {
                        return ((long)(this[this.tableLog.Log_DbFilesIdColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Log_DbFilesId\' in table \'Log\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableLog.Log_DbFilesIdColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsLog_StatusIdNull() {
                return this.IsNull(this.tableLog.Log_StatusIdColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetLog_StatusIdNull() {
                this[this.tableLog.Log_StatusIdColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsLog_DispStatusNull() {
                return this.IsNull(this.tableLog.Log_DispStatusColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetLog_DispStatusNull() {
                this[this.tableLog.Log_DispStatusColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsLog_Oude_tekstNull() {
                return this.IsNull(this.tableLog.Log_Oude_tekstColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetLog_Oude_tekstNull() {
                this[this.tableLog.Log_Oude_tekstColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsLog_Nieuwe_tekstNull() {
                return this.IsNull(this.tableLog.Log_Nieuwe_tekstColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetLog_Nieuwe_tekstNull() {
                this[this.tableLog.Log_Nieuwe_tekstColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsLog_Oude_numeriekNull() {
                return this.IsNull(this.tableLog.Log_Oude_numeriekColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetLog_Oude_numeriekNull() {
                this[this.tableLog.Log_Oude_numeriekColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsLog_Nieuwe_numeriekNull() {
                return this.IsNull(this.tableLog.Log_Nieuwe_numeriekColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetLog_Nieuwe_numeriekNull() {
                this[this.tableLog.Log_Nieuwe_numeriekColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsLog_Oude_realNull() {
                return this.IsNull(this.tableLog.Log_Oude_realColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetLog_Oude_realNull() {
                this[this.tableLog.Log_Oude_realColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsLog_Nieuwe_realNull() {
                return this.IsNull(this.tableLog.Log_Nieuwe_realColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetLog_Nieuwe_realNull() {
                this[this.tableLog.Log_Nieuwe_realColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsLog_Oude_currencyNull() {
                return this.IsNull(this.tableLog.Log_Oude_currencyColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetLog_Oude_currencyNull() {
                this[this.tableLog.Log_Oude_currencyColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsLog_Nieuwe_currencyNull() {
                return this.IsNull(this.tableLog.Log_Nieuwe_currencyColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetLog_Nieuwe_currencyNull() {
                this[this.tableLog.Log_Nieuwe_currencyColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsLog_Oude_datumNull() {
                return this.IsNull(this.tableLog.Log_Oude_datumColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetLog_Oude_datumNull() {
                this[this.tableLog.Log_Oude_datumColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsLog_Nieuwe_datumNull() {
                return this.IsNull(this.tableLog.Log_Nieuwe_datumColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetLog_Nieuwe_datumNull() {
                this[this.tableLog.Log_Nieuwe_datumColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsLog_Oude_JNNull() {
                return this.IsNull(this.tableLog.Log_Oude_JNColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetLog_Oude_JNNull() {
                this[this.tableLog.Log_Oude_JNColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsLog_Nieuwe_JNNull() {
                return this.IsNull(this.tableLog.Log_Nieuwe_JNColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetLog_Nieuwe_JNNull() {
                this[this.tableLog.Log_Nieuwe_JNColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsLog_Oude_memoNull() {
                return this.IsNull(this.tableLog.Log_Oude_memoColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetLog_Oude_memoNull() {
                this[this.tableLog.Log_Oude_memoColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsLog_Nieuwe_memoNull() {
                return this.IsNull(this.tableLog.Log_Nieuwe_memoColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetLog_Nieuwe_memoNull() {
                this[this.tableLog.Log_Nieuwe_memoColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsLog_Oude_record_datumNull() {
                return this.IsNull(this.tableLog.Log_Oude_record_datumColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetLog_Oude_record_datumNull() {
                this[this.tableLog.Log_Oude_record_datumColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsLog_Nieuwe_recorddatumNull() {
                return this.IsNull(this.tableLog.Log_Nieuwe_recorddatumColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetLog_Nieuwe_recorddatumNull() {
                this[this.tableLog.Log_Nieuwe_recorddatumColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsLog_Oude_userNull() {
                return this.IsNull(this.tableLog.Log_Oude_userColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetLog_Oude_userNull() {
                this[this.tableLog.Log_Oude_userColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsLog_Nieuwe_userNull() {
                return this.IsNull(this.tableLog.Log_Nieuwe_userColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetLog_Nieuwe_userNull() {
                this[this.tableLog.Log_Nieuwe_userColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsLog_DbFilesIdNull() {
                return this.IsNull(this.tableLog.Log_DbFilesIdColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetLog_DbFilesIdNull() {
                this[this.tableLog.Log_DbFilesIdColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        public partial class ProductRow : global::System.Data.DataRow {
            
            private ProductDataTable tableProduct;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal ProductRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableProduct = ((ProductDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public long Prod_Id {
                get {
                    return ((long)(this[this.tableProduct.Prod_IdColumn]));
                }
                set {
                    this[this.tableProduct.Prod_IdColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public long Prod_StatusId {
                get {
                    return ((long)(this[this.tableProduct.Prod_StatusIdColumn]));
                }
                set {
                    this[this.tableProduct.Prod_StatusIdColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string Prod_DispStatus {
                get {
                    try {
                        return ((string)(this[this.tableProduct.Prod_DispStatusColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Prod_DispStatus\' in table \'Product\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableProduct.Prod_DispStatusColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string Prod_Naamkort {
                get {
                    return ((string)(this[this.tableProduct.Prod_NaamkortColumn]));
                }
                set {
                    this[this.tableProduct.Prod_NaamkortColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string Prod_Naamlang {
                get {
                    return ((string)(this[this.tableProduct.Prod_NaamlangColumn]));
                }
                set {
                    this[this.tableProduct.Prod_NaamlangColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string Prod_Kleur {
                get {
                    try {
                        return ((string)(this[this.tableProduct.Prod_KleurColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Prod_Kleur\' in table \'Product\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableProduct.Prod_KleurColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string Prod_Code {
                get {
                    try {
                        return ((string)(this[this.tableProduct.Prod_CodeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Prod_Code\' in table \'Product\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableProduct.Prod_CodeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string Prod_Soort {
                get {
                    return ((string)(this[this.tableProduct.Prod_SoortColumn]));
                }
                set {
                    this[this.tableProduct.Prod_SoortColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public long Prod_ActiefJN {
                get {
                    return ((long)(this[this.tableProduct.Prod_ActiefJNColumn]));
                }
                set {
                    this[this.tableProduct.Prod_ActiefJNColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string Prod_DispActief {
                get {
                    return ((string)(this[this.tableProduct.Prod_DispActiefColumn]));
                }
                set {
                    this[this.tableProduct.Prod_DispActiefColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal Prod_Waarde {
                get {
                    return ((decimal)(this[this.tableProduct.Prod_WaardeColumn]));
                }
                set {
                    this[this.tableProduct.Prod_WaardeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public byte Prod_Aantaleenhedenperproduct {
                get {
                    return ((byte)(this[this.tableProduct.Prod_AantaleenhedenperproductColumn]));
                }
                set {
                    this[this.tableProduct.Prod_AantaleenhedenperproductColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string Prod_Verzamelnaam {
                get {
                    return ((string)(this[this.tableProduct.Prod_VerzamelnaamColumn]));
                }
                set {
                    this[this.tableProduct.Prod_VerzamelnaamColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal Prod_WaardePerEenheid {
                get {
                    return ((decimal)(this[this.tableProduct.Prod_WaardePerEenheidColumn]));
                }
                set {
                    this[this.tableProduct.Prod_WaardePerEenheidColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public System.DateTime Prod_Mutatiedatum {
                get {
                    return ((global::System.DateTime)(this[this.tableProduct.Prod_MutatiedatumColumn]));
                }
                set {
                    this[this.tableProduct.Prod_MutatiedatumColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string Prod_Opmerking {
                get {
                    try {
                        return ((string)(this[this.tableProduct.Prod_OpmerkingColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Prod_Opmerking\' in table \'Product\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableProduct.Prod_OpmerkingColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsProd_DispStatusNull() {
                return this.IsNull(this.tableProduct.Prod_DispStatusColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetProd_DispStatusNull() {
                this[this.tableProduct.Prod_DispStatusColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsProd_KleurNull() {
                return this.IsNull(this.tableProduct.Prod_KleurColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetProd_KleurNull() {
                this[this.tableProduct.Prod_KleurColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsProd_CodeNull() {
                return this.IsNull(this.tableProduct.Prod_CodeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetProd_CodeNull() {
                this[this.tableProduct.Prod_CodeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsProd_OpmerkingNull() {
                return this.IsNull(this.tableProduct.Prod_OpmerkingColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetProd_OpmerkingNull() {
                this[this.tableProduct.Prod_OpmerkingColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        public partial class ProgramerrorRow : global::System.Data.DataRow {
            
            private ProgramerrorDataTable tableProgramerror;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal ProgramerrorRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableProgramerror = ((ProgramerrorDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public long PE_Id {
                get {
                    return ((long)(this[this.tableProgramerror.PE_IdColumn]));
                }
                set {
                    this[this.tableProgramerror.PE_IdColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public long PE_ProgrammaId {
                get {
                    return ((long)(this[this.tableProgramerror.PE_ProgrammaIdColumn]));
                }
                set {
                    this[this.tableProgramerror.PE_ProgrammaIdColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public long PE_ErrorcodeId {
                get {
                    return ((long)(this[this.tableProgramerror.PE_ErrorcodeIdColumn]));
                }
                set {
                    this[this.tableProgramerror.PE_ErrorcodeIdColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string PE_PrgErrNr {
                get {
                    return ((string)(this[this.tableProgramerror.PE_PrgErrNrColumn]));
                }
                set {
                    this[this.tableProgramerror.PE_PrgErrNrColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string PE_Omschrijving {
                get {
                    return ((string)(this[this.tableProgramerror.PE_OmschrijvingColumn]));
                }
                set {
                    this[this.tableProgramerror.PE_OmschrijvingColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string PE_Oplossing {
                get {
                    return ((string)(this[this.tableProgramerror.PE_OplossingColumn]));
                }
                set {
                    this[this.tableProgramerror.PE_OplossingColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public long PE_Afhandeling {
                get {
                    try {
                        return ((long)(this[this.tableProgramerror.PE_AfhandelingColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'PE_Afhandeling\' in table \'Programerror\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableProgramerror.PE_AfhandelingColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public System.DateTime PE_Mutatiedatum {
                get {
                    return ((global::System.DateTime)(this[this.tableProgramerror.PE_MutatiedatumColumn]));
                }
                set {
                    this[this.tableProgramerror.PE_MutatiedatumColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsPE_AfhandelingNull() {
                return this.IsNull(this.tableProgramerror.PE_AfhandelingColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetPE_AfhandelingNull() {
                this[this.tableProgramerror.PE_AfhandelingColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        public partial class SaldostandRow : global::System.Data.DataRow {
            
            private SaldostandDataTable tableSaldostand;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal SaldostandRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableSaldostand = ((SaldostandDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public long Saldostand_Id {
                get {
                    return ((long)(this[this.tableSaldostand.Saldostand_IdColumn]));
                }
                set {
                    this[this.tableSaldostand.Saldostand_IdColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public long Saldostand_StatusId {
                get {
                    return ((long)(this[this.tableSaldostand.Saldostand_StatusIdColumn]));
                }
                set {
                    this[this.tableSaldostand.Saldostand_StatusIdColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string Saldostand_DispStatus {
                get {
                    try {
                        return ((string)(this[this.tableSaldostand.Saldostand_DispStatusColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Saldostand_DispStatus\' in table \'Saldostand\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableSaldostand.Saldostand_DispStatusColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public long Saldostand_JgegId {
                get {
                    return ((long)(this[this.tableSaldostand.Saldostand_JgegIdColumn]));
                }
                set {
                    this[this.tableSaldostand.Saldostand_JgegIdColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public long Saldostand_BgnrId {
                get {
                    return ((long)(this[this.tableSaldostand.Saldostand_BgnrIdColumn]));
                }
                set {
                    this[this.tableSaldostand.Saldostand_BgnrIdColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public System.DateTime Saldostand_Datum {
                get {
                    return ((global::System.DateTime)(this[this.tableSaldostand.Saldostand_DatumColumn]));
                }
                set {
                    this[this.tableSaldostand.Saldostand_DatumColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal Saldostand_Saldo {
                get {
                    try {
                        return ((decimal)(this[this.tableSaldostand.Saldostand_SaldoColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Saldostand_Saldo\' in table \'Saldostand\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableSaldostand.Saldostand_SaldoColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public System.DateTime Saldostand_Mutatiedatum {
                get {
                    return ((global::System.DateTime)(this[this.tableSaldostand.Saldostand_MutatiedatumColumn]));
                }
                set {
                    this[this.tableSaldostand.Saldostand_MutatiedatumColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string Saldostand_Opmerking {
                get {
                    try {
                        return ((string)(this[this.tableSaldostand.Saldostand_OpmerkingColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Saldostand_Opmerking\' in table \'Saldostand\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableSaldostand.Saldostand_OpmerkingColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsSaldostand_DispStatusNull() {
                return this.IsNull(this.tableSaldostand.Saldostand_DispStatusColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetSaldostand_DispStatusNull() {
                this[this.tableSaldostand.Saldostand_DispStatusColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsSaldostand_SaldoNull() {
                return this.IsNull(this.tableSaldostand.Saldostand_SaldoColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetSaldostand_SaldoNull() {
                this[this.tableSaldostand.Saldostand_SaldoColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsSaldostand_OpmerkingNull() {
                return this.IsNull(this.tableSaldostand.Saldostand_OpmerkingColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetSaldostand_OpmerkingNull() {
                this[this.tableSaldostand.Saldostand_OpmerkingColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        public partial class StatusRow : global::System.Data.DataRow {
            
            private StatusDataTable tableStatus;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal StatusRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableStatus = ((StatusDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public long StatusId {
                get {
                    return ((long)(this[this.tableStatus.StatusIdColumn]));
                }
                set {
                    this[this.tableStatus.StatusIdColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public long Status_HoofdgroepitemJN {
                get {
                    return ((long)(this[this.tableStatus.Status_HoofdgroepitemJNColumn]));
                }
                set {
                    this[this.tableStatus.Status_HoofdgroepitemJNColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public long Status_Groep {
                get {
                    return ((long)(this[this.tableStatus.Status_GroepColumn]));
                }
                set {
                    this[this.tableStatus.Status_GroepColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public long Status_Nr {
                get {
                    return ((long)(this[this.tableStatus.Status_NrColumn]));
                }
                set {
                    this[this.tableStatus.Status_NrColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public long Status_Code {
                get {
                    return ((long)(this[this.tableStatus.Status_CodeColumn]));
                }
                set {
                    this[this.tableStatus.Status_CodeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string Status_Kort {
                get {
                    return ((string)(this[this.tableStatus.Status_KortColumn]));
                }
                set {
                    this[this.tableStatus.Status_KortColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string Status_Lang {
                get {
                    return ((string)(this[this.tableStatus.Status_LangColumn]));
                }
                set {
                    this[this.tableStatus.Status_LangColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public System.DateTime Status_Mutatiedatum {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableStatus.Status_MutatiedatumColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Status_Mutatiedatum\' in table \'Status\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableStatus.Status_MutatiedatumColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string Status_Opmerking {
                get {
                    try {
                        return ((string)(this[this.tableStatus.Status_OpmerkingColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Status_Opmerking\' in table \'Status\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableStatus.Status_OpmerkingColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsStatus_MutatiedatumNull() {
                return this.IsNull(this.tableStatus.Status_MutatiedatumColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetStatus_MutatiedatumNull() {
                this[this.tableStatus.Status_MutatiedatumColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsStatus_OpmerkingNull() {
                return this.IsNull(this.tableStatus.Status_OpmerkingColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetStatus_OpmerkingNull() {
                this[this.tableStatus.Status_OpmerkingColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        public partial class SubcategorieRow : global::System.Data.DataRow {
            
            private SubcategorieDataTable tableSubcategorie;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal SubcategorieRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableSubcategorie = ((SubcategorieDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public long Scat_Id {
                get {
                    return ((long)(this[this.tableSubcategorie.Scat_IdColumn]));
                }
                set {
                    this[this.tableSubcategorie.Scat_IdColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public long Scat_StatusId {
                get {
                    try {
                        return ((long)(this[this.tableSubcategorie.Scat_StatusIdColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Scat_StatusId\' in table \'Subcategorie\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableSubcategorie.Scat_StatusIdColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string Scat_DispStatus {
                get {
                    try {
                        return ((string)(this[this.tableSubcategorie.Scat_DispStatusColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Scat_DispStatus\' in table \'Subcategorie\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableSubcategorie.Scat_DispStatusColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string Scat_kort {
                get {
                    return ((string)(this[this.tableSubcategorie.Scat_kortColumn]));
                }
                set {
                    this[this.tableSubcategorie.Scat_kortColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string Scat_lang {
                get {
                    return ((string)(this[this.tableSubcategorie.Scat_langColumn]));
                }
                set {
                    this[this.tableSubcategorie.Scat_langColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public long Scat_HcatId {
                get {
                    return ((long)(this[this.tableSubcategorie.Scat_HcatIdColumn]));
                }
                set {
                    this[this.tableSubcategorie.Scat_HcatIdColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string Scat_DispHcat {
                get {
                    try {
                        return ((string)(this[this.tableSubcategorie.Scat_DispHcatColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Scat_DispHcat\' in table \'Subcategorie\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableSubcategorie.Scat_DispHcatColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string Scat_Code {
                get {
                    try {
                        return ((string)(this[this.tableSubcategorie.Scat_CodeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Scat_Code\' in table \'Subcategorie\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableSubcategorie.Scat_CodeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public long Scat_WijzigentoegestaanJN {
                get {
                    return ((long)(this[this.tableSubcategorie.Scat_WijzigentoegestaanJNColumn]));
                }
                set {
                    this[this.tableSubcategorie.Scat_WijzigentoegestaanJNColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public System.DateTime Scat_Mutatiedatum {
                get {
                    return ((global::System.DateTime)(this[this.tableSubcategorie.Scat_MutatiedatumColumn]));
                }
                set {
                    this[this.tableSubcategorie.Scat_MutatiedatumColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string Scat_Opmerking {
                get {
                    try {
                        return ((string)(this[this.tableSubcategorie.Scat_OpmerkingColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Scat_Opmerking\' in table \'Subcategorie\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableSubcategorie.Scat_OpmerkingColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsScat_StatusIdNull() {
                return this.IsNull(this.tableSubcategorie.Scat_StatusIdColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetScat_StatusIdNull() {
                this[this.tableSubcategorie.Scat_StatusIdColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsScat_DispStatusNull() {
                return this.IsNull(this.tableSubcategorie.Scat_DispStatusColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetScat_DispStatusNull() {
                this[this.tableSubcategorie.Scat_DispStatusColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsScat_DispHcatNull() {
                return this.IsNull(this.tableSubcategorie.Scat_DispHcatColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetScat_DispHcatNull() {
                this[this.tableSubcategorie.Scat_DispHcatColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsScat_CodeNull() {
                return this.IsNull(this.tableSubcategorie.Scat_CodeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetScat_CodeNull() {
                this[this.tableSubcategorie.Scat_CodeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsScat_OpmerkingNull() {
                return this.IsNull(this.tableSubcategorie.Scat_OpmerkingColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetScat_OpmerkingNull() {
                this[this.tableSubcategorie.Scat_OpmerkingColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        public partial class SubUitgavesoortRow : global::System.Data.DataRow {
            
            private SubUitgavesoortDataTable tableSubUitgavesoort;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal SubUitgavesoortRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableSubUitgavesoort = ((SubUitgavesoortDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public long Sus_Id {
                get {
                    return ((long)(this[this.tableSubUitgavesoort.Sus_IdColumn]));
                }
                set {
                    this[this.tableSubUitgavesoort.Sus_IdColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public long Sus_StatusId {
                get {
                    try {
                        return ((long)(this[this.tableSubUitgavesoort.Sus_StatusIdColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Sus_StatusId\' in table \'SubUitgavesoort\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableSubUitgavesoort.Sus_StatusIdColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string Sus_DispStatus {
                get {
                    try {
                        return ((string)(this[this.tableSubUitgavesoort.Sus_DispStatusColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Sus_DispStatus\' in table \'SubUitgavesoort\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableSubUitgavesoort.Sus_DispStatusColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string Sus_Kort {
                get {
                    return ((string)(this[this.tableSubUitgavesoort.Sus_KortColumn]));
                }
                set {
                    this[this.tableSubUitgavesoort.Sus_KortColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string Sus_Lang {
                get {
                    return ((string)(this[this.tableSubUitgavesoort.Sus_LangColumn]));
                }
                set {
                    this[this.tableSubUitgavesoort.Sus_LangColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public long Sus_WijzigentoegestaanJN {
                get {
                    try {
                        return ((long)(this[this.tableSubUitgavesoort.Sus_WijzigentoegestaanJNColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Sus_WijzigentoegestaanJN\' in table \'SubUitgavesoort\' is DBN" +
                                "ull.", e);
                    }
                }
                set {
                    this[this.tableSubUitgavesoort.Sus_WijzigentoegestaanJNColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public long Sus_HusId {
                get {
                    return ((long)(this[this.tableSubUitgavesoort.Sus_HusIdColumn]));
                }
                set {
                    this[this.tableSubUitgavesoort.Sus_HusIdColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string Sus_DispHus {
                get {
                    try {
                        return ((string)(this[this.tableSubUitgavesoort.Sus_DispHusColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Sus_DispHus\' in table \'SubUitgavesoort\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableSubUitgavesoort.Sus_DispHusColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public System.DateTime Sus_Mutatiedatum {
                get {
                    return ((global::System.DateTime)(this[this.tableSubUitgavesoort.Sus_MutatiedatumColumn]));
                }
                set {
                    this[this.tableSubUitgavesoort.Sus_MutatiedatumColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string Sus_Opmerking {
                get {
                    try {
                        return ((string)(this[this.tableSubUitgavesoort.Sus_OpmerkingColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Sus_Opmerking\' in table \'SubUitgavesoort\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableSubUitgavesoort.Sus_OpmerkingColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsSus_StatusIdNull() {
                return this.IsNull(this.tableSubUitgavesoort.Sus_StatusIdColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetSus_StatusIdNull() {
                this[this.tableSubUitgavesoort.Sus_StatusIdColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsSus_DispStatusNull() {
                return this.IsNull(this.tableSubUitgavesoort.Sus_DispStatusColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetSus_DispStatusNull() {
                this[this.tableSubUitgavesoort.Sus_DispStatusColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsSus_WijzigentoegestaanJNNull() {
                return this.IsNull(this.tableSubUitgavesoort.Sus_WijzigentoegestaanJNColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetSus_WijzigentoegestaanJNNull() {
                this[this.tableSubUitgavesoort.Sus_WijzigentoegestaanJNColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsSus_DispHusNull() {
                return this.IsNull(this.tableSubUitgavesoort.Sus_DispHusColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetSus_DispHusNull() {
                this[this.tableSubUitgavesoort.Sus_DispHusColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsSus_OpmerkingNull() {
                return this.IsNull(this.tableSubUitgavesoort.Sus_OpmerkingColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetSus_OpmerkingNull() {
                this[this.tableSubUitgavesoort.Sus_OpmerkingColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        public partial class TelefoonnrRow : global::System.Data.DataRow {
            
            private TelefoonnrDataTable tableTelefoonnr;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal TelefoonnrRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableTelefoonnr = ((TelefoonnrDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public long Tlf_Id {
                get {
                    return ((long)(this[this.tableTelefoonnr.Tlf_IdColumn]));
                }
                set {
                    this[this.tableTelefoonnr.Tlf_IdColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public long Tlf_StatusId {
                get {
                    try {
                        return ((long)(this[this.tableTelefoonnr.Tlf_StatusIdColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Tlf_StatusId\' in table \'Telefoonnr\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableTelefoonnr.Tlf_StatusIdColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string Tlf_DispStatus {
                get {
                    try {
                        return ((string)(this[this.tableTelefoonnr.Tlf_DispStatusColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Tlf_DispStatus\' in table \'Telefoonnr\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableTelefoonnr.Tlf_DispStatusColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public long Tlf_KlBgId {
                get {
                    return ((long)(this[this.tableTelefoonnr.Tlf_KlBgIdColumn]));
                }
                set {
                    this[this.tableTelefoonnr.Tlf_KlBgIdColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string Tlf_DispKlBg {
                get {
                    try {
                        return ((string)(this[this.tableTelefoonnr.Tlf_DispKlBgColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Tlf_DispKlBg\' in table \'Telefoonnr\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableTelefoonnr.Tlf_DispKlBgColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string Tlf_Telefoonnr {
                get {
                    try {
                        return ((string)(this[this.tableTelefoonnr.Tlf_TelefoonnrColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Tlf_Telefoonnr\' in table \'Telefoonnr\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableTelefoonnr.Tlf_TelefoonnrColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public System.DateTime Tlf_Mutatiedatum {
                get {
                    return ((global::System.DateTime)(this[this.tableTelefoonnr.Tlf_MutatiedatumColumn]));
                }
                set {
                    this[this.tableTelefoonnr.Tlf_MutatiedatumColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string Tlf_Opmerking {
                get {
                    try {
                        return ((string)(this[this.tableTelefoonnr.Tlf_OpmerkingColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Tlf_Opmerking\' in table \'Telefoonnr\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableTelefoonnr.Tlf_OpmerkingColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsTlf_StatusIdNull() {
                return this.IsNull(this.tableTelefoonnr.Tlf_StatusIdColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetTlf_StatusIdNull() {
                this[this.tableTelefoonnr.Tlf_StatusIdColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsTlf_DispStatusNull() {
                return this.IsNull(this.tableTelefoonnr.Tlf_DispStatusColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetTlf_DispStatusNull() {
                this[this.tableTelefoonnr.Tlf_DispStatusColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsTlf_DispKlBgNull() {
                return this.IsNull(this.tableTelefoonnr.Tlf_DispKlBgColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetTlf_DispKlBgNull() {
                this[this.tableTelefoonnr.Tlf_DispKlBgColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsTlf_TelefoonnrNull() {
                return this.IsNull(this.tableTelefoonnr.Tlf_TelefoonnrColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetTlf_TelefoonnrNull() {
                this[this.tableTelefoonnr.Tlf_TelefoonnrColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsTlf_OpmerkingNull() {
                return this.IsNull(this.tableTelefoonnr.Tlf_OpmerkingColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetTlf_OpmerkingNull() {
                this[this.tableTelefoonnr.Tlf_OpmerkingColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        public partial class UitgavenRow : global::System.Data.DataRow {
            
            private UitgavenDataTable tableUitgaven;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal UitgavenRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableUitgaven = ((UitgavenDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public long Ugv_Id {
                get {
                    return ((long)(this[this.tableUitgaven.Ugv_IdColumn]));
                }
                set {
                    this[this.tableUitgaven.Ugv_IdColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public System.DateTime Ugv_Datum {
                get {
                    return ((global::System.DateTime)(this[this.tableUitgaven.Ugv_DatumColumn]));
                }
                set {
                    this[this.tableUitgaven.Ugv_DatumColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public long Ugv_StatusId {
                get {
                    return ((long)(this[this.tableUitgaven.Ugv_StatusIdColumn]));
                }
                set {
                    this[this.tableUitgaven.Ugv_StatusIdColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string Ugv_DispStatus {
                get {
                    try {
                        return ((string)(this[this.tableUitgaven.Ugv_DispStatusColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Ugv_DispStatus\' in table \'Uitgaven\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableUitgaven.Ugv_DispStatusColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public long Ugv_KlBgId {
                get {
                    return ((long)(this[this.tableUitgaven.Ugv_KlBgIdColumn]));
                }
                set {
                    this[this.tableUitgaven.Ugv_KlBgIdColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string Ugv_DispKlBg {
                get {
                    try {
                        return ((string)(this[this.tableUitgaven.Ugv_DispKlBgColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Ugv_DispKlBg\' in table \'Uitgaven\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableUitgaven.Ugv_DispKlBgColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public long Ugv_HusId {
                get {
                    return ((long)(this[this.tableUitgaven.Ugv_HusIdColumn]));
                }
                set {
                    this[this.tableUitgaven.Ugv_HusIdColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string Ugv_DispHus {
                get {
                    try {
                        return ((string)(this[this.tableUitgaven.Ugv_DispHusColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Ugv_DispHus\' in table \'Uitgaven\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableUitgaven.Ugv_DispHusColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public long Ugv_SusId {
                get {
                    return ((long)(this[this.tableUitgaven.Ugv_SusIdColumn]));
                }
                set {
                    this[this.tableUitgaven.Ugv_SusIdColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string Ugv_DispSus {
                get {
                    try {
                        return ((string)(this[this.tableUitgaven.Ugv_DispSusColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Ugv_DispSus\' in table \'Uitgaven\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableUitgaven.Ugv_DispSusColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string Ugv_Kasbewijsnr {
                get {
                    return ((string)(this[this.tableUitgaven.Ugv_KasbewijsnrColumn]));
                }
                set {
                    this[this.tableUitgaven.Ugv_KasbewijsnrColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal Ugv_Bedrag {
                get {
                    try {
                        return ((decimal)(this[this.tableUitgaven.Ugv_BedragColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Ugv_Bedrag\' in table \'Uitgaven\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableUitgaven.Ugv_BedragColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public System.DateTime Ugv_Mutatiedatum {
                get {
                    return ((global::System.DateTime)(this[this.tableUitgaven.Ugv_MutatiedatumColumn]));
                }
                set {
                    this[this.tableUitgaven.Ugv_MutatiedatumColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string Ugv_Opmerking {
                get {
                    try {
                        return ((string)(this[this.tableUitgaven.Ugv_OpmerkingColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Ugv_Opmerking\' in table \'Uitgaven\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableUitgaven.Ugv_OpmerkingColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsUgv_DispStatusNull() {
                return this.IsNull(this.tableUitgaven.Ugv_DispStatusColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetUgv_DispStatusNull() {
                this[this.tableUitgaven.Ugv_DispStatusColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsUgv_DispKlBgNull() {
                return this.IsNull(this.tableUitgaven.Ugv_DispKlBgColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetUgv_DispKlBgNull() {
                this[this.tableUitgaven.Ugv_DispKlBgColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsUgv_DispHusNull() {
                return this.IsNull(this.tableUitgaven.Ugv_DispHusColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetUgv_DispHusNull() {
                this[this.tableUitgaven.Ugv_DispHusColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsUgv_DispSusNull() {
                return this.IsNull(this.tableUitgaven.Ugv_DispSusColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetUgv_DispSusNull() {
                this[this.tableUitgaven.Ugv_DispSusColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsUgv_BedragNull() {
                return this.IsNull(this.tableUitgaven.Ugv_BedragColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetUgv_BedragNull() {
                this[this.tableUitgaven.Ugv_BedragColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsUgv_OpmerkingNull() {
                return this.IsNull(this.tableUitgaven.Ugv_OpmerkingColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetUgv_OpmerkingNull() {
                this[this.tableUitgaven.Ugv_OpmerkingColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        public partial class VerwerkperiodeRow : global::System.Data.DataRow {
            
            private VerwerkperiodeDataTable tableVerwerkperiode;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal VerwerkperiodeRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableVerwerkperiode = ((VerwerkperiodeDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public long Vwp_Id {
                get {
                    return ((long)(this[this.tableVerwerkperiode.Vwp_IdColumn]));
                }
                set {
                    this[this.tableVerwerkperiode.Vwp_IdColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public long Vwp_StatusId {
                get {
                    try {
                        return ((long)(this[this.tableVerwerkperiode.Vwp_StatusIdColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Vwp_StatusId\' in table \'Verwerkperiode\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableVerwerkperiode.Vwp_StatusIdColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string Vwp_Dispstatus {
                get {
                    try {
                        return ((string)(this[this.tableVerwerkperiode.Vwp_DispstatusColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Vwp_Dispstatus\' in table \'Verwerkperiode\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableVerwerkperiode.Vwp_DispstatusColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public System.DateTime Vwp_Begindatum {
                get {
                    return ((global::System.DateTime)(this[this.tableVerwerkperiode.Vwp_BegindatumColumn]));
                }
                set {
                    this[this.tableVerwerkperiode.Vwp_BegindatumColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public System.DateTime Vwp_Einddatum {
                get {
                    return ((global::System.DateTime)(this[this.tableVerwerkperiode.Vwp_EinddatumColumn]));
                }
                set {
                    this[this.tableVerwerkperiode.Vwp_EinddatumColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal Vwp_Beginsaldo {
                get {
                    try {
                        return ((decimal)(this[this.tableVerwerkperiode.Vwp_BeginsaldoColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Vwp_Beginsaldo\' in table \'Verwerkperiode\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableVerwerkperiode.Vwp_BeginsaldoColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal Vwp_Eindsaldo {
                get {
                    try {
                        return ((decimal)(this[this.tableVerwerkperiode.Vwp_EindsaldoColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Vwp_Eindsaldo\' in table \'Verwerkperiode\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableVerwerkperiode.Vwp_EindsaldoColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public System.DateTime Vwp_Mutatiedatum {
                get {
                    return ((global::System.DateTime)(this[this.tableVerwerkperiode.Vwp_MutatiedatumColumn]));
                }
                set {
                    this[this.tableVerwerkperiode.Vwp_MutatiedatumColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string Vwp_Opmerking {
                get {
                    try {
                        return ((string)(this[this.tableVerwerkperiode.Vwp_OpmerkingColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Vwp_Opmerking\' in table \'Verwerkperiode\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableVerwerkperiode.Vwp_OpmerkingColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsVwp_StatusIdNull() {
                return this.IsNull(this.tableVerwerkperiode.Vwp_StatusIdColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetVwp_StatusIdNull() {
                this[this.tableVerwerkperiode.Vwp_StatusIdColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsVwp_DispstatusNull() {
                return this.IsNull(this.tableVerwerkperiode.Vwp_DispstatusColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetVwp_DispstatusNull() {
                this[this.tableVerwerkperiode.Vwp_DispstatusColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsVwp_BeginsaldoNull() {
                return this.IsNull(this.tableVerwerkperiode.Vwp_BeginsaldoColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetVwp_BeginsaldoNull() {
                this[this.tableVerwerkperiode.Vwp_BeginsaldoColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsVwp_EindsaldoNull() {
                return this.IsNull(this.tableVerwerkperiode.Vwp_EindsaldoColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetVwp_EindsaldoNull() {
                this[this.tableVerwerkperiode.Vwp_EindsaldoColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsVwp_OpmerkingNull() {
                return this.IsNull(this.tableVerwerkperiode.Vwp_OpmerkingColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetVwp_OpmerkingNull() {
                this[this.tableVerwerkperiode.Vwp_OpmerkingColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        public partial class VoorraadRow : global::System.Data.DataRow {
            
            private VoorraadDataTable tableVoorraad;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal VoorraadRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableVoorraad = ((VoorraadDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public long Vrrd_Id {
                get {
                    return ((long)(this[this.tableVoorraad.Vrrd_IdColumn]));
                }
                set {
                    this[this.tableVoorraad.Vrrd_IdColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public long Vrrd_JgegId {
                get {
                    try {
                        return ((long)(this[this.tableVoorraad.Vrrd_JgegIdColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Vrrd_JgegId\' in table \'Voorraad\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableVoorraad.Vrrd_JgegIdColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string Vrrd_DispJgeg {
                get {
                    try {
                        return ((string)(this[this.tableVoorraad.Vrrd_DispJgegColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Vrrd_DispJgeg\' in table \'Voorraad\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableVoorraad.Vrrd_DispJgegColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public long Vrrd_StatusId {
                get {
                    try {
                        return ((long)(this[this.tableVoorraad.Vrrd_StatusIdColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Vrrd_StatusId\' in table \'Voorraad\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableVoorraad.Vrrd_StatusIdColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string Vrrd_Dispstatus {
                get {
                    try {
                        return ((string)(this[this.tableVoorraad.Vrrd_DispstatusColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Vrrd_Dispstatus\' in table \'Voorraad\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableVoorraad.Vrrd_DispstatusColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public long Vrrd_ProdId {
                get {
                    try {
                        return ((long)(this[this.tableVoorraad.Vrrd_ProdIdColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Vrrd_ProdId\' in table \'Voorraad\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableVoorraad.Vrrd_ProdIdColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string Vrrd_DispProduct {
                get {
                    try {
                        return ((string)(this[this.tableVoorraad.Vrrd_DispProductColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Vrrd_DispProduct\' in table \'Voorraad\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableVoorraad.Vrrd_DispProductColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public System.DateTime Vrrd_Inventarisatiedatum {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableVoorraad.Vrrd_InventarisatiedatumColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Vrrd_Inventarisatiedatum\' in table \'Voorraad\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableVoorraad.Vrrd_InventarisatiedatumColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public long Vrrd_Aantal {
                get {
                    try {
                        return ((long)(this[this.tableVoorraad.Vrrd_AantalColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Vrrd_Aantal\' in table \'Voorraad\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableVoorraad.Vrrd_AantalColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public long Vrrd_Laagste_productnr {
                get {
                    try {
                        return ((long)(this[this.tableVoorraad.Vrrd_Laagste_productnrColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Vrrd_Laagste_productnr\' in table \'Voorraad\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableVoorraad.Vrrd_Laagste_productnrColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public long Vrrd_Hoogste_productnr {
                get {
                    try {
                        return ((long)(this[this.tableVoorraad.Vrrd_Hoogste_productnrColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Vrrd_Hoogste_productnr\' in table \'Voorraad\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableVoorraad.Vrrd_Hoogste_productnrColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public System.DateTime Vrrd_Mutatiedatum {
                get {
                    return ((global::System.DateTime)(this[this.tableVoorraad.Vrrd_MutatiedatumColumn]));
                }
                set {
                    this[this.tableVoorraad.Vrrd_MutatiedatumColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string Vrrd_Opmerking {
                get {
                    try {
                        return ((string)(this[this.tableVoorraad.Vrrd_OpmerkingColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Vrrd_Opmerking\' in table \'Voorraad\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableVoorraad.Vrrd_OpmerkingColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsVrrd_JgegIdNull() {
                return this.IsNull(this.tableVoorraad.Vrrd_JgegIdColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetVrrd_JgegIdNull() {
                this[this.tableVoorraad.Vrrd_JgegIdColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsVrrd_DispJgegNull() {
                return this.IsNull(this.tableVoorraad.Vrrd_DispJgegColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetVrrd_DispJgegNull() {
                this[this.tableVoorraad.Vrrd_DispJgegColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsVrrd_StatusIdNull() {
                return this.IsNull(this.tableVoorraad.Vrrd_StatusIdColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetVrrd_StatusIdNull() {
                this[this.tableVoorraad.Vrrd_StatusIdColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsVrrd_DispstatusNull() {
                return this.IsNull(this.tableVoorraad.Vrrd_DispstatusColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetVrrd_DispstatusNull() {
                this[this.tableVoorraad.Vrrd_DispstatusColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsVrrd_ProdIdNull() {
                return this.IsNull(this.tableVoorraad.Vrrd_ProdIdColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetVrrd_ProdIdNull() {
                this[this.tableVoorraad.Vrrd_ProdIdColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsVrrd_DispProductNull() {
                return this.IsNull(this.tableVoorraad.Vrrd_DispProductColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetVrrd_DispProductNull() {
                this[this.tableVoorraad.Vrrd_DispProductColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsVrrd_InventarisatiedatumNull() {
                return this.IsNull(this.tableVoorraad.Vrrd_InventarisatiedatumColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetVrrd_InventarisatiedatumNull() {
                this[this.tableVoorraad.Vrrd_InventarisatiedatumColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsVrrd_AantalNull() {
                return this.IsNull(this.tableVoorraad.Vrrd_AantalColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetVrrd_AantalNull() {
                this[this.tableVoorraad.Vrrd_AantalColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsVrrd_Laagste_productnrNull() {
                return this.IsNull(this.tableVoorraad.Vrrd_Laagste_productnrColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetVrrd_Laagste_productnrNull() {
                this[this.tableVoorraad.Vrrd_Laagste_productnrColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsVrrd_Hoogste_productnrNull() {
                return this.IsNull(this.tableVoorraad.Vrrd_Hoogste_productnrColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetVrrd_Hoogste_productnrNull() {
                this[this.tableVoorraad.Vrrd_Hoogste_productnrColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsVrrd_OpmerkingNull() {
                return this.IsNull(this.tableVoorraad.Vrrd_OpmerkingColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetVrrd_OpmerkingNull() {
                this[this.tableVoorraad.Vrrd_OpmerkingColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public class AdresgegevensRowChangeEvent : global::System.EventArgs {
            
            private AdresgegevensRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public AdresgegevensRowChangeEvent(AdresgegevensRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public AdresgegevensRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public class BankgironrRowChangeEvent : global::System.EventArgs {
            
            private BankgironrRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public BankgironrRowChangeEvent(BankgironrRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public BankgironrRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public class BankregelRowChangeEvent : global::System.EventArgs {
            
            private BankregelRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public BankregelRowChangeEvent(BankregelRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public BankregelRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public class BestellingRowChangeEvent : global::System.EventArgs {
            
            private BestellingRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public BestellingRowChangeEvent(BestellingRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public BestellingRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public class BestelregelRowChangeEvent : global::System.EventArgs {
            
            private BestelregelRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public BestelregelRowChangeEvent(BestelregelRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public BestelregelRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public class Component_tekstRowChangeEvent : global::System.EventArgs {
            
            private Component_tekstRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public Component_tekstRowChangeEvent(Component_tekstRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public Component_tekstRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public class DbFilesRowChangeEvent : global::System.EventArgs {
            
            private DbFilesRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public DbFilesRowChangeEvent(DbFilesRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public DbFilesRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public class EmailRowChangeEvent : global::System.EventArgs {
            
            private EmailRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public EmailRowChangeEvent(EmailRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public EmailRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public class EmailadresRowChangeEvent : global::System.EventArgs {
            
            private EmailadresRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public EmailadresRowChangeEvent(EmailadresRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public EmailadresRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public class GebruikerRowChangeEvent : global::System.EventArgs {
            
            private GebruikerRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public GebruikerRowChangeEvent(GebruikerRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public GebruikerRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public class HoofdcategorieRowChangeEvent : global::System.EventArgs {
            
            private HoofdcategorieRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public HoofdcategorieRowChangeEvent(HoofdcategorieRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public HoofdcategorieRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public class HoofdUitgavesoortRowChangeEvent : global::System.EventArgs {
            
            private HoofdUitgavesoortRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public HoofdUitgavesoortRowChangeEvent(HoofdUitgavesoortRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public HoofdUitgavesoortRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public class InstellingenRowChangeEvent : global::System.EventArgs {
            
            private InstellingenRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public InstellingenRowChangeEvent(InstellingenRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public InstellingenRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public class JaargegevensRowChangeEvent : global::System.EventArgs {
            
            private JaargegevensRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public JaargegevensRowChangeEvent(JaargegevensRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public JaargegevensRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public class JaarsaldoRowChangeEvent : global::System.EventArgs {
            
            private JaarsaldoRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public JaarsaldoRowChangeEvent(JaarsaldoRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public JaarsaldoRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public class Klant_BegunstigdeRowChangeEvent : global::System.EventArgs {
            
            private Klant_BegunstigdeRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public Klant_BegunstigdeRowChangeEvent(Klant_BegunstigdeRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public Klant_BegunstigdeRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public class Licentie_controleRowChangeEvent : global::System.EventArgs {
            
            private Licentie_controleRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public Licentie_controleRowChangeEvent(Licentie_controleRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public Licentie_controleRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public class LogRowChangeEvent : global::System.EventArgs {
            
            private LogRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public LogRowChangeEvent(LogRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public LogRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public class ProductRowChangeEvent : global::System.EventArgs {
            
            private ProductRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public ProductRowChangeEvent(ProductRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public ProductRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public class ProgramerrorRowChangeEvent : global::System.EventArgs {
            
            private ProgramerrorRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public ProgramerrorRowChangeEvent(ProgramerrorRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public ProgramerrorRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public class SaldostandRowChangeEvent : global::System.EventArgs {
            
            private SaldostandRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public SaldostandRowChangeEvent(SaldostandRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public SaldostandRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public class StatusRowChangeEvent : global::System.EventArgs {
            
            private StatusRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public StatusRowChangeEvent(StatusRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public StatusRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public class SubcategorieRowChangeEvent : global::System.EventArgs {
            
            private SubcategorieRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public SubcategorieRowChangeEvent(SubcategorieRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public SubcategorieRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public class SubUitgavesoortRowChangeEvent : global::System.EventArgs {
            
            private SubUitgavesoortRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public SubUitgavesoortRowChangeEvent(SubUitgavesoortRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public SubUitgavesoortRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public class TelefoonnrRowChangeEvent : global::System.EventArgs {
            
            private TelefoonnrRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public TelefoonnrRowChangeEvent(TelefoonnrRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public TelefoonnrRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public class UitgavenRowChangeEvent : global::System.EventArgs {
            
            private UitgavenRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public UitgavenRowChangeEvent(UitgavenRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public UitgavenRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public class VerwerkperiodeRowChangeEvent : global::System.EventArgs {
            
            private VerwerkperiodeRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public VerwerkperiodeRowChangeEvent(VerwerkperiodeRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public VerwerkperiodeRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public class VoorraadRowChangeEvent : global::System.EventArgs {
            
            private VoorraadRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public VoorraadRowChangeEvent(VoorraadRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public VoorraadRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
    }
}
namespace Cmbap._Cmbap_dataDataSetTableAdapters {
    
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class AdresgegevensTableAdapter : global::System.ComponentModel.Component {
        
        private global::System.Data.SQLite.SQLiteDataAdapter _adapter;
        
        private global::System.Data.SQLite.SQLiteConnection _connection;
        
        private global::System.Data.SQLite.SQLiteTransaction _transaction;
        
        private global::System.Data.SQLite.SQLiteCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public AdresgegevensTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected internal global::System.Data.SQLite.SQLiteDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal global::System.Data.SQLite.SQLiteConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::System.Data.SQLite.SQLiteCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal global::System.Data.SQLite.SQLiteTransaction Transaction {
            get {
                return this._transaction;
            }
            set {
                this._transaction = value;
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    this.CommandCollection[i].Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.DeleteCommand != null))) {
                    this.Adapter.DeleteCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.InsertCommand != null))) {
                    this.Adapter.InsertCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.UpdateCommand != null))) {
                    this.Adapter.UpdateCommand.Transaction = this._transaction;
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected global::System.Data.SQLite.SQLiteCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitAdapter() {
            this._adapter = new global::System.Data.SQLite.SQLiteDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "Adresgegevens";
            tableMapping.ColumnMappings.Add("Adrsgeg_Id", "Adrsgeg_Id");
            tableMapping.ColumnMappings.Add("Adrsgeg_StatusId", "Adrsgeg_StatusId");
            tableMapping.ColumnMappings.Add("Adrsgeg_DispStatus", "Adrsgeg_DispStatus");
            tableMapping.ColumnMappings.Add("Adrsgeg_KlBgId", "Adrsgeg_KlBgId");
            tableMapping.ColumnMappings.Add("Adrsgeg_DispKlBg", "Adrsgeg_DispKlBg");
            tableMapping.ColumnMappings.Add("Adrsgeg_Straatnaam", "Adrsgeg_Straatnaam");
            tableMapping.ColumnMappings.Add("Adrsgeg_Huisnummer", "Adrsgeg_Huisnummer");
            tableMapping.ColumnMappings.Add("Adrsgeg_Huisnummertoevoeging", "Adrsgeg_Huisnummertoevoeging");
            tableMapping.ColumnMappings.Add("Adrsgeg_Adres", "Adrsgeg_Adres");
            tableMapping.ColumnMappings.Add("Adrsgeg_Postcode", "Adrsgeg_Postcode");
            tableMapping.ColumnMappings.Add("Adrsgeg_Woonplaats", "Adrsgeg_Woonplaats");
            tableMapping.ColumnMappings.Add("Adrsgeg_Mutatiedatum", "Adrsgeg_Mutatiedatum");
            tableMapping.ColumnMappings.Add("Adrsgeg_Opmerking", "Adrsgeg_Opmerking");
            this._adapter.TableMappings.Add(tableMapping);
            this._adapter.DeleteCommand = new global::System.Data.SQLite.SQLiteCommand();
            this._adapter.DeleteCommand.Connection = this.Connection;
            this._adapter.DeleteCommand.CommandText = @"DELETE FROM [main].[sqlite_default_schema].[Adresgegevens] WHERE (([Adrsgeg_Id] = @Original_Adrsgeg_Id) AND ((@IsNull_Adrsgeg_StatusId = 1 AND [Adrsgeg_StatusId] IS NULL) OR ([Adrsgeg_StatusId] = @Original_Adrsgeg_StatusId)) AND ((@IsNull_Adrsgeg_DispStatus = 1 AND [Adrsgeg_DispStatus] IS NULL) OR ([Adrsgeg_DispStatus] = @Original_Adrsgeg_DispStatus)) AND ([Adrsgeg_KlBgId] = @Original_Adrsgeg_KlBgId) AND ((@IsNull_Adrsgeg_DispKlBg = 1 AND [Adrsgeg_DispKlBg] IS NULL) OR ([Adrsgeg_DispKlBg] = @Original_Adrsgeg_DispKlBg)) AND ([Adrsgeg_Straatnaam] = @Original_Adrsgeg_Straatnaam) AND ([Adrsgeg_Huisnummer] = @Original_Adrsgeg_Huisnummer) AND ((@IsNull_Adrsgeg_Huisnummertoevoeging = 1 AND [Adrsgeg_Huisnummertoevoeging] IS NULL) OR ([Adrsgeg_Huisnummertoevoeging] = @Original_Adrsgeg_Huisnummertoevoeging)) AND ([Adrsgeg_Adres] = @Original_Adrsgeg_Adres) AND ([Adrsgeg_Postcode] = @Original_Adrsgeg_Postcode) AND ([Adrsgeg_Woonplaats] = @Original_Adrsgeg_Woonplaats) AND ([Adrsgeg_Mutatiedatum] = @Original_Adrsgeg_Mutatiedatum) AND ((@IsNull_Adrsgeg_Opmerking = 1 AND [Adrsgeg_Opmerking] IS NULL) OR ([Adrsgeg_Opmerking] = @Original_Adrsgeg_Opmerking)))";
            this._adapter.DeleteCommand.CommandType = global::System.Data.CommandType.Text;
            global::System.Data.SQLite.SQLiteParameter param = new global::System.Data.SQLite.SQLiteParameter();
            param.ParameterName = "@Original_Adrsgeg_Id";
            param.DbType = global::System.Data.DbType.Int64;
            param.DbType = global::System.Data.DbType.Int64;
            param.SourceColumn = "Adrsgeg_Id";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::System.Data.SQLite.SQLiteParameter();
            param.ParameterName = "@IsNull_Adrsgeg_StatusId";
            param.DbType = global::System.Data.DbType.Int32;
            param.DbType = global::System.Data.DbType.Int32;
            param.SourceColumn = "Adrsgeg_StatusId";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::System.Data.SQLite.SQLiteParameter();
            param.ParameterName = "@Original_Adrsgeg_StatusId";
            param.DbType = global::System.Data.DbType.Int64;
            param.DbType = global::System.Data.DbType.Int64;
            param.SourceColumn = "Adrsgeg_StatusId";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::System.Data.SQLite.SQLiteParameter();
            param.ParameterName = "@IsNull_Adrsgeg_DispStatus";
            param.DbType = global::System.Data.DbType.Int32;
            param.DbType = global::System.Data.DbType.Int32;
            param.SourceColumn = "Adrsgeg_DispStatus";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::System.Data.SQLite.SQLiteParameter();
            param.ParameterName = "@Original_Adrsgeg_DispStatus";
            param.DbType = global::System.Data.DbType.AnsiString;
            param.DbType = global::System.Data.DbType.AnsiString;
            param.SourceColumn = "Adrsgeg_DispStatus";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::System.Data.SQLite.SQLiteParameter();
            param.ParameterName = "@Original_Adrsgeg_KlBgId";
            param.DbType = global::System.Data.DbType.Int64;
            param.DbType = global::System.Data.DbType.Int64;
            param.SourceColumn = "Adrsgeg_KlBgId";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::System.Data.SQLite.SQLiteParameter();
            param.ParameterName = "@IsNull_Adrsgeg_DispKlBg";
            param.DbType = global::System.Data.DbType.Int32;
            param.DbType = global::System.Data.DbType.Int32;
            param.SourceColumn = "Adrsgeg_DispKlBg";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::System.Data.SQLite.SQLiteParameter();
            param.ParameterName = "@Original_Adrsgeg_DispKlBg";
            param.DbType = global::System.Data.DbType.AnsiString;
            param.DbType = global::System.Data.DbType.AnsiString;
            param.SourceColumn = "Adrsgeg_DispKlBg";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::System.Data.SQLite.SQLiteParameter();
            param.ParameterName = "@Original_Adrsgeg_Straatnaam";
            param.DbType = global::System.Data.DbType.AnsiString;
            param.DbType = global::System.Data.DbType.AnsiString;
            param.SourceColumn = "Adrsgeg_Straatnaam";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::System.Data.SQLite.SQLiteParameter();
            param.ParameterName = "@Original_Adrsgeg_Huisnummer";
            param.DbType = global::System.Data.DbType.AnsiString;
            param.DbType = global::System.Data.DbType.AnsiString;
            param.SourceColumn = "Adrsgeg_Huisnummer";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::System.Data.SQLite.SQLiteParameter();
            param.ParameterName = "@IsNull_Adrsgeg_Huisnummertoevoeging";
            param.DbType = global::System.Data.DbType.Int32;
            param.DbType = global::System.Data.DbType.Int32;
            param.SourceColumn = "Adrsgeg_Huisnummertoevoeging";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::System.Data.SQLite.SQLiteParameter();
            param.ParameterName = "@Original_Adrsgeg_Huisnummertoevoeging";
            param.DbType = global::System.Data.DbType.AnsiString;
            param.DbType = global::System.Data.DbType.AnsiString;
            param.SourceColumn = "Adrsgeg_Huisnummertoevoeging";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::System.Data.SQLite.SQLiteParameter();
            param.ParameterName = "@Original_Adrsgeg_Adres";
            param.DbType = global::System.Data.DbType.AnsiString;
            param.DbType = global::System.Data.DbType.AnsiString;
            param.SourceColumn = "Adrsgeg_Adres";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::System.Data.SQLite.SQLiteParameter();
            param.ParameterName = "@Original_Adrsgeg_Postcode";
            param.DbType = global::System.Data.DbType.AnsiString;
            param.DbType = global::System.Data.DbType.AnsiString;
            param.SourceColumn = "Adrsgeg_Postcode";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::System.Data.SQLite.SQLiteParameter();
            param.ParameterName = "@Original_Adrsgeg_Woonplaats";
            param.DbType = global::System.Data.DbType.AnsiString;
            param.DbType = global::System.Data.DbType.AnsiString;
            param.SourceColumn = "Adrsgeg_Woonplaats";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::System.Data.SQLite.SQLiteParameter();
            param.ParameterName = "@Original_Adrsgeg_Mutatiedatum";
            param.DbType = global::System.Data.DbType.DateTime;
            param.DbType = global::System.Data.DbType.DateTime;
            param.SourceColumn = "Adrsgeg_Mutatiedatum";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::System.Data.SQLite.SQLiteParameter();
            param.ParameterName = "@IsNull_Adrsgeg_Opmerking";
            param.DbType = global::System.Data.DbType.Int32;
            param.DbType = global::System.Data.DbType.Int32;
            param.SourceColumn = "Adrsgeg_Opmerking";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::System.Data.SQLite.SQLiteParameter();
            param.ParameterName = "@Original_Adrsgeg_Opmerking";
            param.DbType = global::System.Data.DbType.AnsiString;
            param.DbType = global::System.Data.DbType.AnsiString;
            param.SourceColumn = "Adrsgeg_Opmerking";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            this._adapter.InsertCommand = new global::System.Data.SQLite.SQLiteCommand();
            this._adapter.InsertCommand.Connection = this.Connection;
            this._adapter.InsertCommand.CommandText = @"INSERT INTO [main].[sqlite_default_schema].[Adresgegevens] ([Adrsgeg_StatusId], [Adrsgeg_DispStatus], [Adrsgeg_KlBgId], [Adrsgeg_DispKlBg], [Adrsgeg_Straatnaam], [Adrsgeg_Huisnummer], [Adrsgeg_Huisnummertoevoeging], [Adrsgeg_Adres], [Adrsgeg_Postcode], [Adrsgeg_Woonplaats], [Adrsgeg_Mutatiedatum], [Adrsgeg_Opmerking]) VALUES (@Adrsgeg_StatusId, @Adrsgeg_DispStatus, @Adrsgeg_KlBgId, @Adrsgeg_DispKlBg, @Adrsgeg_Straatnaam, @Adrsgeg_Huisnummer, @Adrsgeg_Huisnummertoevoeging, @Adrsgeg_Adres, @Adrsgeg_Postcode, @Adrsgeg_Woonplaats, @Adrsgeg_Mutatiedatum, @Adrsgeg_Opmerking)";
            this._adapter.InsertCommand.CommandType = global::System.Data.CommandType.Text;
            param = new global::System.Data.SQLite.SQLiteParameter();
            param.ParameterName = "@Adrsgeg_StatusId";
            param.DbType = global::System.Data.DbType.Int64;
            param.DbType = global::System.Data.DbType.Int64;
            param.SourceColumn = "Adrsgeg_StatusId";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::System.Data.SQLite.SQLiteParameter();
            param.ParameterName = "@Adrsgeg_DispStatus";
            param.DbType = global::System.Data.DbType.AnsiString;
            param.DbType = global::System.Data.DbType.AnsiString;
            param.SourceColumn = "Adrsgeg_DispStatus";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::System.Data.SQLite.SQLiteParameter();
            param.ParameterName = "@Adrsgeg_KlBgId";
            param.DbType = global::System.Data.DbType.Int64;
            param.DbType = global::System.Data.DbType.Int64;
            param.SourceColumn = "Adrsgeg_KlBgId";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::System.Data.SQLite.SQLiteParameter();
            param.ParameterName = "@Adrsgeg_DispKlBg";
            param.DbType = global::System.Data.DbType.AnsiString;
            param.DbType = global::System.Data.DbType.AnsiString;
            param.SourceColumn = "Adrsgeg_DispKlBg";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::System.Data.SQLite.SQLiteParameter();
            param.ParameterName = "@Adrsgeg_Straatnaam";
            param.DbType = global::System.Data.DbType.AnsiString;
            param.DbType = global::System.Data.DbType.AnsiString;
            param.SourceColumn = "Adrsgeg_Straatnaam";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::System.Data.SQLite.SQLiteParameter();
            param.ParameterName = "@Adrsgeg_Huisnummer";
            param.DbType = global::System.Data.DbType.AnsiString;
            param.DbType = global::System.Data.DbType.AnsiString;
            param.SourceColumn = "Adrsgeg_Huisnummer";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::System.Data.SQLite.SQLiteParameter();
            param.ParameterName = "@Adrsgeg_Huisnummertoevoeging";
            param.DbType = global::System.Data.DbType.AnsiString;
            param.DbType = global::System.Data.DbType.AnsiString;
            param.SourceColumn = "Adrsgeg_Huisnummertoevoeging";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::System.Data.SQLite.SQLiteParameter();
            param.ParameterName = "@Adrsgeg_Adres";
            param.DbType = global::System.Data.DbType.AnsiString;
            param.DbType = global::System.Data.DbType.AnsiString;
            param.SourceColumn = "Adrsgeg_Adres";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::System.Data.SQLite.SQLiteParameter();
            param.ParameterName = "@Adrsgeg_Postcode";
            param.DbType = global::System.Data.DbType.AnsiString;
            param.DbType = global::System.Data.DbType.AnsiString;
            param.SourceColumn = "Adrsgeg_Postcode";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::System.Data.SQLite.SQLiteParameter();
            param.ParameterName = "@Adrsgeg_Woonplaats";
            param.DbType = global::System.Data.DbType.AnsiString;
            param.DbType = global::System.Data.DbType.AnsiString;
            param.SourceColumn = "Adrsgeg_Woonplaats";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::System.Data.SQLite.SQLiteParameter();
            param.ParameterName = "@Adrsgeg_Mutatiedatum";
            param.DbType = global::System.Data.DbType.DateTime;
            param.DbType = global::System.Data.DbType.DateTime;
            param.SourceColumn = "Adrsgeg_Mutatiedatum";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::System.Data.SQLite.SQLiteParameter();
            param.ParameterName = "@Adrsgeg_Opmerking";
            param.DbType = global::System.Data.DbType.AnsiString;
            param.DbType = global::System.Data.DbType.AnsiString;
            param.SourceColumn = "Adrsgeg_Opmerking";
            this._adapter.InsertCommand.Parameters.Add(param);
            this._adapter.UpdateCommand = new global::System.Data.SQLite.SQLiteCommand();
            this._adapter.UpdateCommand.Connection = this.Connection;
            this._adapter.UpdateCommand.CommandText = "UPDATE [main].[sqlite_default_schema].[Adresgegevens] SET [Adrsgeg_StatusId] = @A" +
                "drsgeg_StatusId, [Adrsgeg_DispStatus] = @Adrsgeg_DispStatus, [Adrsgeg_KlBgId] = " +
                "@Adrsgeg_KlBgId, [Adrsgeg_DispKlBg] = @Adrsgeg_DispKlBg, [Adrsgeg_Straatnaam] = " +
                "@Adrsgeg_Straatnaam, [Adrsgeg_Huisnummer] = @Adrsgeg_Huisnummer, [Adrsgeg_Huisnu" +
                "mmertoevoeging] = @Adrsgeg_Huisnummertoevoeging, [Adrsgeg_Adres] = @Adrsgeg_Adre" +
                "s, [Adrsgeg_Postcode] = @Adrsgeg_Postcode, [Adrsgeg_Woonplaats] = @Adrsgeg_Woonp" +
                "laats, [Adrsgeg_Mutatiedatum] = @Adrsgeg_Mutatiedatum, [Adrsgeg_Opmerking] = @Ad" +
                "rsgeg_Opmerking WHERE (([Adrsgeg_Id] = @Original_Adrsgeg_Id) AND ((@IsNull_Adrsg" +
                "eg_StatusId = 1 AND [Adrsgeg_StatusId] IS NULL) OR ([Adrsgeg_StatusId] = @Origin" +
                "al_Adrsgeg_StatusId)) AND ((@IsNull_Adrsgeg_DispStatus = 1 AND [Adrsgeg_DispStat" +
                "us] IS NULL) OR ([Adrsgeg_DispStatus] = @Original_Adrsgeg_DispStatus)) AND ([Adr" +
                "sgeg_KlBgId] = @Original_Adrsgeg_KlBgId) AND ((@IsNull_Adrsgeg_DispKlBg = 1 AND " +
                "[Adrsgeg_DispKlBg] IS NULL) OR ([Adrsgeg_DispKlBg] = @Original_Adrsgeg_DispKlBg)" +
                ") AND ([Adrsgeg_Straatnaam] = @Original_Adrsgeg_Straatnaam) AND ([Adrsgeg_Huisnu" +
                "mmer] = @Original_Adrsgeg_Huisnummer) AND ((@IsNull_Adrsgeg_Huisnummertoevoeging" +
                " = 1 AND [Adrsgeg_Huisnummertoevoeging] IS NULL) OR ([Adrsgeg_Huisnummertoevoegi" +
                "ng] = @Original_Adrsgeg_Huisnummertoevoeging)) AND ([Adrsgeg_Adres] = @Original_" +
                "Adrsgeg_Adres) AND ([Adrsgeg_Postcode] = @Original_Adrsgeg_Postcode) AND ([Adrsg" +
                "eg_Woonplaats] = @Original_Adrsgeg_Woonplaats) AND ([Adrsgeg_Mutatiedatum] = @Or" +
                "iginal_Adrsgeg_Mutatiedatum) AND ((@IsNull_Adrsgeg_Opmerking = 1 AND [Adrsgeg_Op" +
                "merking] IS NULL) OR ([Adrsgeg_Opmerking] = @Original_Adrsgeg_Opmerking)))";
            this._adapter.UpdateCommand.CommandType = global::System.Data.CommandType.Text;
            param = new global::System.Data.SQLite.SQLiteParameter();
            param.ParameterName = "@Adrsgeg_StatusId";
            param.DbType = global::System.Data.DbType.Int64;
            param.DbType = global::System.Data.DbType.Int64;
            param.SourceColumn = "Adrsgeg_StatusId";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::System.Data.SQLite.SQLiteParameter();
            param.ParameterName = "@Adrsgeg_DispStatus";
            param.DbType = global::System.Data.DbType.AnsiString;
            param.DbType = global::System.Data.DbType.AnsiString;
            param.SourceColumn = "Adrsgeg_DispStatus";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::System.Data.SQLite.SQLiteParameter();
            param.ParameterName = "@Adrsgeg_KlBgId";
            param.DbType = global::System.Data.DbType.Int64;
            param.DbType = global::System.Data.DbType.Int64;
            param.SourceColumn = "Adrsgeg_KlBgId";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::System.Data.SQLite.SQLiteParameter();
            param.ParameterName = "@Adrsgeg_DispKlBg";
            param.DbType = global::System.Data.DbType.AnsiString;
            param.DbType = global::System.Data.DbType.AnsiString;
            param.SourceColumn = "Adrsgeg_DispKlBg";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::System.Data.SQLite.SQLiteParameter();
            param.ParameterName = "@Adrsgeg_Straatnaam";
            param.DbType = global::System.Data.DbType.AnsiString;
            param.DbType = global::System.Data.DbType.AnsiString;
            param.SourceColumn = "Adrsgeg_Straatnaam";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::System.Data.SQLite.SQLiteParameter();
            param.ParameterName = "@Adrsgeg_Huisnummer";
            param.DbType = global::System.Data.DbType.AnsiString;
            param.DbType = global::System.Data.DbType.AnsiString;
            param.SourceColumn = "Adrsgeg_Huisnummer";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::System.Data.SQLite.SQLiteParameter();
            param.ParameterName = "@Adrsgeg_Huisnummertoevoeging";
            param.DbType = global::System.Data.DbType.AnsiString;
            param.DbType = global::System.Data.DbType.AnsiString;
            param.SourceColumn = "Adrsgeg_Huisnummertoevoeging";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::System.Data.SQLite.SQLiteParameter();
            param.ParameterName = "@Adrsgeg_Adres";
            param.DbType = global::System.Data.DbType.AnsiString;
            param.DbType = global::System.Data.DbType.AnsiString;
            param.SourceColumn = "Adrsgeg_Adres";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::System.Data.SQLite.SQLiteParameter();
            param.ParameterName = "@Adrsgeg_Postcode";
            param.DbType = global::System.Data.DbType.AnsiString;
            param.DbType = global::System.Data.DbType.AnsiString;
            param.SourceColumn = "Adrsgeg_Postcode";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::System.Data.SQLite.SQLiteParameter();
            param.ParameterName = "@Adrsgeg_Woonplaats";
            param.DbType = global::System.Data.DbType.AnsiString;
            param.DbType = global::System.Data.DbType.AnsiString;
            param.SourceColumn = "Adrsgeg_Woonplaats";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::System.Data.SQLite.SQLiteParameter();
            param.ParameterName = "@Adrsgeg_Mutatiedatum";
            param.DbType = global::System.Data.DbType.DateTime;
            param.DbType = global::System.Data.DbType.DateTime;
            param.SourceColumn = "Adrsgeg_Mutatiedatum";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::System.Data.SQLite.SQLiteParameter();
            param.ParameterName = "@Adrsgeg_Opmerking";
            param.DbType = global::System.Data.DbType.AnsiString;
            param.DbType = global::System.Data.DbType.AnsiString;
            param.SourceColumn = "Adrsgeg_Opmerking";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::System.Data.SQLite.SQLiteParameter();
            param.ParameterName = "@Original_Adrsgeg_Id";
            param.DbType = global::System.Data.DbType.Int64;
            param.DbType = global::System.Data.DbType.Int64;
            param.SourceColumn = "Adrsgeg_Id";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::System.Data.SQLite.SQLiteParameter();
            param.ParameterName = "@IsNull_Adrsgeg_StatusId";
            param.DbType = global::System.Data.DbType.Int32;
            param.DbType = global::System.Data.DbType.Int32;
            param.SourceColumn = "Adrsgeg_StatusId";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::System.Data.SQLite.SQLiteParameter();
            param.ParameterName = "@Original_Adrsgeg_StatusId";
            param.DbType = global::System.Data.DbType.Int64;
            param.DbType = global::System.Data.DbType.Int64;
            param.SourceColumn = "Adrsgeg_StatusId";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::System.Data.SQLite.SQLiteParameter();
            param.ParameterName = "@IsNull_Adrsgeg_DispStatus";
            param.DbType = global::System.Data.DbType.Int32;
            param.DbType = global::System.Data.DbType.Int32;
            param.SourceColumn = "Adrsgeg_DispStatus";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::System.Data.SQLite.SQLiteParameter();
            param.ParameterName = "@Original_Adrsgeg_DispStatus";
            param.DbType = global::System.Data.DbType.AnsiString;
            param.DbType = global::System.Data.DbType.AnsiString;
            param.SourceColumn = "Adrsgeg_DispStatus";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::System.Data.SQLite.SQLiteParameter();
            param.ParameterName = "@Original_Adrsgeg_KlBgId";
            param.DbType = global::System.Data.DbType.Int64;
            param.DbType = global::System.Data.DbType.Int64;
            param.SourceColumn = "Adrsgeg_KlBgId";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::System.Data.SQLite.SQLiteParameter();
            param.ParameterName = "@IsNull_Adrsgeg_DispKlBg";
            param.DbType = global::System.Data.DbType.Int32;
            param.DbType = global::System.Data.DbType.Int32;
            param.SourceColumn = "Adrsgeg_DispKlBg";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::System.Data.SQLite.SQLiteParameter();
            param.ParameterName = "@Original_Adrsgeg_DispKlBg";
            param.DbType = global::System.Data.DbType.AnsiString;
            param.DbType = global::System.Data.DbType.AnsiString;
            param.SourceColumn = "Adrsgeg_DispKlBg";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::System.Data.SQLite.SQLiteParameter();
            param.ParameterName = "@Original_Adrsgeg_Straatnaam";
            param.DbType = global::System.Data.DbType.AnsiString;
            param.DbType = global::System.Data.DbType.AnsiString;
            param.SourceColumn = "Adrsgeg_Straatnaam";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::System.Data.SQLite.SQLiteParameter();
            param.ParameterName = "@Original_Adrsgeg_Huisnummer";
            param.DbType = global::System.Data.DbType.AnsiString;
            param.DbType = global::System.Data.DbType.AnsiString;
            param.SourceColumn = "Adrsgeg_Huisnummer";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::System.Data.SQLite.SQLiteParameter();
            param.ParameterName = "@IsNull_Adrsgeg_Huisnummertoevoeging";
            param.DbType = global::System.Data.DbType.Int32;
            param.DbType = global::System.Data.DbType.Int32;
            param.SourceColumn = "Adrsgeg_Huisnummertoevoeging";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::System.Data.SQLite.SQLiteParameter();
            param.ParameterName = "@Original_Adrsgeg_Huisnummertoevoeging";
            param.DbType = global::System.Data.DbType.AnsiString;
            param.DbType = global::System.Data.DbType.AnsiString;
            param.SourceColumn = "Adrsgeg_Huisnummertoevoeging";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::System.Data.SQLite.SQLiteParameter();
            param.ParameterName = "@Original_Adrsgeg_Adres";
            param.DbType = global::System.Data.DbType.AnsiString;
            param.DbType = global::System.Data.DbType.AnsiString;
            param.SourceColumn = "Adrsgeg_Adres";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::System.Data.SQLite.SQLiteParameter();
            param.ParameterName = "@Original_Adrsgeg_Postcode";
            param.DbType = global::System.Data.DbType.AnsiString;
            param.DbType = global::System.Data.DbType.AnsiString;
            param.SourceColumn = "Adrsgeg_Postcode";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::System.Data.SQLite.SQLiteParameter();
            param.ParameterName = "@Original_Adrsgeg_Woonplaats";
            param.DbType = global::System.Data.DbType.AnsiString;
            param.DbType = global::System.Data.DbType.AnsiString;
            param.SourceColumn = "Adrsgeg_Woonplaats";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::System.Data.SQLite.SQLiteParameter();
            param.ParameterName = "@Original_Adrsgeg_Mutatiedatum";
            param.DbType = global::System.Data.DbType.DateTime;
            param.DbType = global::System.Data.DbType.DateTime;
            param.SourceColumn = "Adrsgeg_Mutatiedatum";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::System.Data.SQLite.SQLiteParameter();
            param.ParameterName = "@IsNull_Adrsgeg_Opmerking";
            param.DbType = global::System.Data.DbType.Int32;
            param.DbType = global::System.Data.DbType.Int32;
            param.SourceColumn = "Adrsgeg_Opmerking";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::System.Data.SQLite.SQLiteParameter();
            param.ParameterName = "@Original_Adrsgeg_Opmerking";
            param.DbType = global::System.Data.DbType.AnsiString;
            param.DbType = global::System.Data.DbType.AnsiString;
            param.SourceColumn = "Adrsgeg_Opmerking";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitConnection() {
            this._connection = new global::System.Data.SQLite.SQLiteConnection();
            this._connection.ConnectionString = global::Cmbap.Properties.Settings.Default.Cmbap_dataConnectionString;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitCommandCollection() {
            this._commandCollection = new global::System.Data.SQLite.SQLiteCommand[1];
            this._commandCollection[0] = new global::System.Data.SQLite.SQLiteCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = @"SELECT [Adrsgeg_Id], [Adrsgeg_StatusId], [Adrsgeg_DispStatus], [Adrsgeg_KlBgId], [Adrsgeg_DispKlBg], [Adrsgeg_Straatnaam], [Adrsgeg_Huisnummer], [Adrsgeg_Huisnummertoevoeging], [Adrsgeg_Adres], [Adrsgeg_Postcode], [Adrsgeg_Woonplaats], [Adrsgeg_Mutatiedatum], [Adrsgeg_Opmerking] FROM [Adresgegevens]";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(_Cmbap_dataDataSet.AdresgegevensDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual _Cmbap_dataDataSet.AdresgegevensDataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            _Cmbap_dataDataSet.AdresgegevensDataTable dataTable = new _Cmbap_dataDataSet.AdresgegevensDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(_Cmbap_dataDataSet.AdresgegevensDataTable dataTable) {
            return this.Adapter.Update(dataTable);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(_Cmbap_dataDataSet dataSet) {
            return this.Adapter.Update(dataSet, "Adresgegevens");
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow dataRow) {
            return this.Adapter.Update(new global::System.Data.DataRow[] {
                        dataRow});
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow[] dataRows) {
            return this.Adapter.Update(dataRows);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Delete, true)]
        public virtual int Delete(long Original_Adrsgeg_Id, global::System.Nullable<long> Original_Adrsgeg_StatusId, string Original_Adrsgeg_DispStatus, long Original_Adrsgeg_KlBgId, string Original_Adrsgeg_DispKlBg, string Original_Adrsgeg_Straatnaam, string Original_Adrsgeg_Huisnummer, string Original_Adrsgeg_Huisnummertoevoeging, string Original_Adrsgeg_Adres, string Original_Adrsgeg_Postcode, string Original_Adrsgeg_Woonplaats, System.DateTime Original_Adrsgeg_Mutatiedatum, string Original_Adrsgeg_Opmerking) {
            this.Adapter.DeleteCommand.Parameters[0].Value = ((long)(Original_Adrsgeg_Id));
            if ((Original_Adrsgeg_StatusId.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[1].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[2].Value = ((long)(Original_Adrsgeg_StatusId.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[1].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[2].Value = global::System.DBNull.Value;
            }
            if ((Original_Adrsgeg_DispStatus == null)) {
                this.Adapter.DeleteCommand.Parameters[3].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[4].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[3].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[4].Value = ((string)(Original_Adrsgeg_DispStatus));
            }
            this.Adapter.DeleteCommand.Parameters[5].Value = ((long)(Original_Adrsgeg_KlBgId));
            if ((Original_Adrsgeg_DispKlBg == null)) {
                this.Adapter.DeleteCommand.Parameters[6].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[7].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[6].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[7].Value = ((string)(Original_Adrsgeg_DispKlBg));
            }
            if ((Original_Adrsgeg_Straatnaam == null)) {
                throw new global::System.ArgumentNullException("Original_Adrsgeg_Straatnaam");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[8].Value = ((string)(Original_Adrsgeg_Straatnaam));
            }
            if ((Original_Adrsgeg_Huisnummer == null)) {
                throw new global::System.ArgumentNullException("Original_Adrsgeg_Huisnummer");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[9].Value = ((string)(Original_Adrsgeg_Huisnummer));
            }
            if ((Original_Adrsgeg_Huisnummertoevoeging == null)) {
                this.Adapter.DeleteCommand.Parameters[10].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[11].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[10].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[11].Value = ((string)(Original_Adrsgeg_Huisnummertoevoeging));
            }
            if ((Original_Adrsgeg_Adres == null)) {
                throw new global::System.ArgumentNullException("Original_Adrsgeg_Adres");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[12].Value = ((string)(Original_Adrsgeg_Adres));
            }
            if ((Original_Adrsgeg_Postcode == null)) {
                throw new global::System.ArgumentNullException("Original_Adrsgeg_Postcode");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[13].Value = ((string)(Original_Adrsgeg_Postcode));
            }
            if ((Original_Adrsgeg_Woonplaats == null)) {
                throw new global::System.ArgumentNullException("Original_Adrsgeg_Woonplaats");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[14].Value = ((string)(Original_Adrsgeg_Woonplaats));
            }
            this.Adapter.DeleteCommand.Parameters[15].Value = ((System.DateTime)(Original_Adrsgeg_Mutatiedatum));
            if ((Original_Adrsgeg_Opmerking == null)) {
                this.Adapter.DeleteCommand.Parameters[16].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[17].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[16].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[17].Value = ((string)(Original_Adrsgeg_Opmerking));
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.DeleteCommand.Connection.State;
            if (((this.Adapter.DeleteCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.DeleteCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.DeleteCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.DeleteCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Insert, true)]
        public virtual int Insert(global::System.Nullable<long> Adrsgeg_StatusId, string Adrsgeg_DispStatus, long Adrsgeg_KlBgId, string Adrsgeg_DispKlBg, string Adrsgeg_Straatnaam, string Adrsgeg_Huisnummer, string Adrsgeg_Huisnummertoevoeging, string Adrsgeg_Adres, string Adrsgeg_Postcode, string Adrsgeg_Woonplaats, System.DateTime Adrsgeg_Mutatiedatum, string Adrsgeg_Opmerking) {
            if ((Adrsgeg_StatusId.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[0].Value = ((long)(Adrsgeg_StatusId.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[0].Value = global::System.DBNull.Value;
            }
            if ((Adrsgeg_DispStatus == null)) {
                this.Adapter.InsertCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[1].Value = ((string)(Adrsgeg_DispStatus));
            }
            this.Adapter.InsertCommand.Parameters[2].Value = ((long)(Adrsgeg_KlBgId));
            if ((Adrsgeg_DispKlBg == null)) {
                this.Adapter.InsertCommand.Parameters[3].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[3].Value = ((string)(Adrsgeg_DispKlBg));
            }
            if ((Adrsgeg_Straatnaam == null)) {
                throw new global::System.ArgumentNullException("Adrsgeg_Straatnaam");
            }
            else {
                this.Adapter.InsertCommand.Parameters[4].Value = ((string)(Adrsgeg_Straatnaam));
            }
            if ((Adrsgeg_Huisnummer == null)) {
                throw new global::System.ArgumentNullException("Adrsgeg_Huisnummer");
            }
            else {
                this.Adapter.InsertCommand.Parameters[5].Value = ((string)(Adrsgeg_Huisnummer));
            }
            if ((Adrsgeg_Huisnummertoevoeging == null)) {
                this.Adapter.InsertCommand.Parameters[6].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[6].Value = ((string)(Adrsgeg_Huisnummertoevoeging));
            }
            if ((Adrsgeg_Adres == null)) {
                throw new global::System.ArgumentNullException("Adrsgeg_Adres");
            }
            else {
                this.Adapter.InsertCommand.Parameters[7].Value = ((string)(Adrsgeg_Adres));
            }
            if ((Adrsgeg_Postcode == null)) {
                throw new global::System.ArgumentNullException("Adrsgeg_Postcode");
            }
            else {
                this.Adapter.InsertCommand.Parameters[8].Value = ((string)(Adrsgeg_Postcode));
            }
            if ((Adrsgeg_Woonplaats == null)) {
                throw new global::System.ArgumentNullException("Adrsgeg_Woonplaats");
            }
            else {
                this.Adapter.InsertCommand.Parameters[9].Value = ((string)(Adrsgeg_Woonplaats));
            }
            this.Adapter.InsertCommand.Parameters[10].Value = ((System.DateTime)(Adrsgeg_Mutatiedatum));
            if ((Adrsgeg_Opmerking == null)) {
                this.Adapter.InsertCommand.Parameters[11].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[11].Value = ((string)(Adrsgeg_Opmerking));
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.InsertCommand.Connection.State;
            if (((this.Adapter.InsertCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.InsertCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.InsertCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.InsertCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(
                    global::System.Nullable<long> Adrsgeg_StatusId, 
                    string Adrsgeg_DispStatus, 
                    long Adrsgeg_KlBgId, 
                    string Adrsgeg_DispKlBg, 
                    string Adrsgeg_Straatnaam, 
                    string Adrsgeg_Huisnummer, 
                    string Adrsgeg_Huisnummertoevoeging, 
                    string Adrsgeg_Adres, 
                    string Adrsgeg_Postcode, 
                    string Adrsgeg_Woonplaats, 
                    System.DateTime Adrsgeg_Mutatiedatum, 
                    string Adrsgeg_Opmerking, 
                    long Original_Adrsgeg_Id, 
                    global::System.Nullable<long> Original_Adrsgeg_StatusId, 
                    string Original_Adrsgeg_DispStatus, 
                    long Original_Adrsgeg_KlBgId, 
                    string Original_Adrsgeg_DispKlBg, 
                    string Original_Adrsgeg_Straatnaam, 
                    string Original_Adrsgeg_Huisnummer, 
                    string Original_Adrsgeg_Huisnummertoevoeging, 
                    string Original_Adrsgeg_Adres, 
                    string Original_Adrsgeg_Postcode, 
                    string Original_Adrsgeg_Woonplaats, 
                    System.DateTime Original_Adrsgeg_Mutatiedatum, 
                    string Original_Adrsgeg_Opmerking) {
            if ((Adrsgeg_StatusId.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[0].Value = ((long)(Adrsgeg_StatusId.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[0].Value = global::System.DBNull.Value;
            }
            if ((Adrsgeg_DispStatus == null)) {
                this.Adapter.UpdateCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[1].Value = ((string)(Adrsgeg_DispStatus));
            }
            this.Adapter.UpdateCommand.Parameters[2].Value = ((long)(Adrsgeg_KlBgId));
            if ((Adrsgeg_DispKlBg == null)) {
                this.Adapter.UpdateCommand.Parameters[3].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[3].Value = ((string)(Adrsgeg_DispKlBg));
            }
            if ((Adrsgeg_Straatnaam == null)) {
                throw new global::System.ArgumentNullException("Adrsgeg_Straatnaam");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[4].Value = ((string)(Adrsgeg_Straatnaam));
            }
            if ((Adrsgeg_Huisnummer == null)) {
                throw new global::System.ArgumentNullException("Adrsgeg_Huisnummer");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[5].Value = ((string)(Adrsgeg_Huisnummer));
            }
            if ((Adrsgeg_Huisnummertoevoeging == null)) {
                this.Adapter.UpdateCommand.Parameters[6].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[6].Value = ((string)(Adrsgeg_Huisnummertoevoeging));
            }
            if ((Adrsgeg_Adres == null)) {
                throw new global::System.ArgumentNullException("Adrsgeg_Adres");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[7].Value = ((string)(Adrsgeg_Adres));
            }
            if ((Adrsgeg_Postcode == null)) {
                throw new global::System.ArgumentNullException("Adrsgeg_Postcode");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[8].Value = ((string)(Adrsgeg_Postcode));
            }
            if ((Adrsgeg_Woonplaats == null)) {
                throw new global::System.ArgumentNullException("Adrsgeg_Woonplaats");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[9].Value = ((string)(Adrsgeg_Woonplaats));
            }
            this.Adapter.UpdateCommand.Parameters[10].Value = ((System.DateTime)(Adrsgeg_Mutatiedatum));
            if ((Adrsgeg_Opmerking == null)) {
                this.Adapter.UpdateCommand.Parameters[11].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[11].Value = ((string)(Adrsgeg_Opmerking));
            }
            this.Adapter.UpdateCommand.Parameters[12].Value = ((long)(Original_Adrsgeg_Id));
            if ((Original_Adrsgeg_StatusId.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[13].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[14].Value = ((long)(Original_Adrsgeg_StatusId.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[13].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[14].Value = global::System.DBNull.Value;
            }
            if ((Original_Adrsgeg_DispStatus == null)) {
                this.Adapter.UpdateCommand.Parameters[15].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[16].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[15].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[16].Value = ((string)(Original_Adrsgeg_DispStatus));
            }
            this.Adapter.UpdateCommand.Parameters[17].Value = ((long)(Original_Adrsgeg_KlBgId));
            if ((Original_Adrsgeg_DispKlBg == null)) {
                this.Adapter.UpdateCommand.Parameters[18].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[19].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[18].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[19].Value = ((string)(Original_Adrsgeg_DispKlBg));
            }
            if ((Original_Adrsgeg_Straatnaam == null)) {
                throw new global::System.ArgumentNullException("Original_Adrsgeg_Straatnaam");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[20].Value = ((string)(Original_Adrsgeg_Straatnaam));
            }
            if ((Original_Adrsgeg_Huisnummer == null)) {
                throw new global::System.ArgumentNullException("Original_Adrsgeg_Huisnummer");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[21].Value = ((string)(Original_Adrsgeg_Huisnummer));
            }
            if ((Original_Adrsgeg_Huisnummertoevoeging == null)) {
                this.Adapter.UpdateCommand.Parameters[22].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[23].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[22].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[23].Value = ((string)(Original_Adrsgeg_Huisnummertoevoeging));
            }
            if ((Original_Adrsgeg_Adres == null)) {
                throw new global::System.ArgumentNullException("Original_Adrsgeg_Adres");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[24].Value = ((string)(Original_Adrsgeg_Adres));
            }
            if ((Original_Adrsgeg_Postcode == null)) {
                throw new global::System.ArgumentNullException("Original_Adrsgeg_Postcode");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[25].Value = ((string)(Original_Adrsgeg_Postcode));
            }
            if ((Original_Adrsgeg_Woonplaats == null)) {
                throw new global::System.ArgumentNullException("Original_Adrsgeg_Woonplaats");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[26].Value = ((string)(Original_Adrsgeg_Woonplaats));
            }
            this.Adapter.UpdateCommand.Parameters[27].Value = ((System.DateTime)(Original_Adrsgeg_Mutatiedatum));
            if ((Original_Adrsgeg_Opmerking == null)) {
                this.Adapter.UpdateCommand.Parameters[28].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[29].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[28].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[29].Value = ((string)(Original_Adrsgeg_Opmerking));
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.UpdateCommand.Connection.State;
            if (((this.Adapter.UpdateCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.UpdateCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.UpdateCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.UpdateCommand.Connection.Close();
                }
            }
        }
    }
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class BankgironrTableAdapter : global::System.ComponentModel.Component {
        
        private global::System.Data.SQLite.SQLiteDataAdapter _adapter;
        
        private global::System.Data.SQLite.SQLiteConnection _connection;
        
        private global::System.Data.SQLite.SQLiteTransaction _transaction;
        
        private global::System.Data.SQLite.SQLiteCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public BankgironrTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected internal global::System.Data.SQLite.SQLiteDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal global::System.Data.SQLite.SQLiteConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::System.Data.SQLite.SQLiteCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal global::System.Data.SQLite.SQLiteTransaction Transaction {
            get {
                return this._transaction;
            }
            set {
                this._transaction = value;
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    this.CommandCollection[i].Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.DeleteCommand != null))) {
                    this.Adapter.DeleteCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.InsertCommand != null))) {
                    this.Adapter.InsertCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.UpdateCommand != null))) {
                    this.Adapter.UpdateCommand.Transaction = this._transaction;
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected global::System.Data.SQLite.SQLiteCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitAdapter() {
            this._adapter = new global::System.Data.SQLite.SQLiteDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "Bankgironr";
            tableMapping.ColumnMappings.Add("Bgnr_Id", "Bgnr_Id");
            tableMapping.ColumnMappings.Add("Bgnr_StatusId", "Bgnr_StatusId");
            tableMapping.ColumnMappings.Add("Bgnr_DispStatus", "Bgnr_DispStatus");
            tableMapping.ColumnMappings.Add("Bgnr_SysteemBgnrJN", "Bgnr_SysteemBgnrJN");
            tableMapping.ColumnMappings.Add("Bgnr_KLBgId", "Bgnr_KLBgId");
            tableMapping.ColumnMappings.Add("Bgnr_DispKlBg", "Bgnr_DispKlBg");
            tableMapping.ColumnMappings.Add("Bgnr_Tnv", "Bgnr_Tnv");
            tableMapping.ColumnMappings.Add("Bgnr_Kort", "Bgnr_Kort");
            tableMapping.ColumnMappings.Add("Bgnr_Iban", "Bgnr_Iban");
            tableMapping.ColumnMappings.Add("Bgnr_IbanBankGiroKas", "Bgnr_IbanBankGiroKas");
            tableMapping.ColumnMappings.Add("Bgnr_Mutatiedatum", "Bgnr_Mutatiedatum");
            tableMapping.ColumnMappings.Add("Bgnr_Opmerking", "Bgnr_Opmerking");
            this._adapter.TableMappings.Add(tableMapping);
            this._adapter.DeleteCommand = new global::System.Data.SQLite.SQLiteCommand();
            this._adapter.DeleteCommand.Connection = this.Connection;
            this._adapter.DeleteCommand.CommandText = @"DELETE FROM [main].[sqlite_default_schema].[Bankgironr] WHERE (([Bgnr_Id] = @Original_Bgnr_Id) AND ((@IsNull_Bgnr_StatusId = 1 AND [Bgnr_StatusId] IS NULL) OR ([Bgnr_StatusId] = @Original_Bgnr_StatusId)) AND ((@IsNull_Bgnr_DispStatus = 1 AND [Bgnr_DispStatus] IS NULL) OR ([Bgnr_DispStatus] = @Original_Bgnr_DispStatus)) AND ((@IsNull_Bgnr_SysteemBgnrJN = 1 AND [Bgnr_SysteemBgnrJN] IS NULL) OR ([Bgnr_SysteemBgnrJN] = @Original_Bgnr_SysteemBgnrJN)) AND ([Bgnr_KLBgId] = @Original_Bgnr_KLBgId) AND ((@IsNull_Bgnr_DispKlBg = 1 AND [Bgnr_DispKlBg] IS NULL) OR ([Bgnr_DispKlBg] = @Original_Bgnr_DispKlBg)) AND ((@IsNull_Bgnr_Tnv = 1 AND [Bgnr_Tnv] IS NULL) OR ([Bgnr_Tnv] = @Original_Bgnr_Tnv)) AND ([Bgnr_Kort] = @Original_Bgnr_Kort) AND ([Bgnr_Iban] = @Original_Bgnr_Iban) AND ([Bgnr_IbanBankGiroKas] = @Original_Bgnr_IbanBankGiroKas) AND ((@IsNull_Bgnr_Mutatiedatum = 1 AND [Bgnr_Mutatiedatum] IS NULL) OR ([Bgnr_Mutatiedatum] = @Original_Bgnr_Mutatiedatum)) AND ((@IsNull_Bgnr_Opmerking = 1 AND [Bgnr_Opmerking] IS NULL) OR ([Bgnr_Opmerking] = @Original_Bgnr_Opmerking)))";
            this._adapter.DeleteCommand.CommandType = global::System.Data.CommandType.Text;
            global::System.Data.SQLite.SQLiteParameter param = new global::System.Data.SQLite.SQLiteParameter();
            param.ParameterName = "@Original_Bgnr_Id";
            param.DbType = global::System.Data.DbType.Int64;
            param.DbType = global::System.Data.DbType.Int64;
            param.SourceColumn = "Bgnr_Id";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::System.Data.SQLite.SQLiteParameter();
            param.ParameterName = "@IsNull_Bgnr_StatusId";
            param.DbType = global::System.Data.DbType.Int32;
            param.DbType = global::System.Data.DbType.Int32;
            param.SourceColumn = "Bgnr_StatusId";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::System.Data.SQLite.SQLiteParameter();
            param.ParameterName = "@Original_Bgnr_StatusId";
            param.DbType = global::System.Data.DbType.Int64;
            param.DbType = global::System.Data.DbType.Int64;
            param.SourceColumn = "Bgnr_StatusId";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::System.Data.SQLite.SQLiteParameter();
            param.ParameterName = "@IsNull_Bgnr_DispStatus";
            param.DbType = global::System.Data.DbType.Int32;
            param.DbType = global::System.Data.DbType.Int32;
            param.SourceColumn = "Bgnr_DispStatus";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::System.Data.SQLite.SQLiteParameter();
            param.ParameterName = "@Original_Bgnr_DispStatus";
            param.DbType = global::System.Data.DbType.AnsiString;
            param.DbType = global::System.Data.DbType.AnsiString;
            param.SourceColumn = "Bgnr_DispStatus";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::System.Data.SQLite.SQLiteParameter();
            param.ParameterName = "@IsNull_Bgnr_SysteemBgnrJN";
            param.DbType = global::System.Data.DbType.Int32;
            param.DbType = global::System.Data.DbType.Int32;
            param.SourceColumn = "Bgnr_SysteemBgnrJN";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::System.Data.SQLite.SQLiteParameter();
            param.ParameterName = "@Original_Bgnr_SysteemBgnrJN";
            param.DbType = global::System.Data.DbType.Int64;
            param.DbType = global::System.Data.DbType.Int64;
            param.SourceColumn = "Bgnr_SysteemBgnrJN";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::System.Data.SQLite.SQLiteParameter();
            param.ParameterName = "@Original_Bgnr_KLBgId";
            param.DbType = global::System.Data.DbType.Int64;
            param.DbType = global::System.Data.DbType.Int64;
            param.SourceColumn = "Bgnr_KLBgId";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::System.Data.SQLite.SQLiteParameter();
            param.ParameterName = "@IsNull_Bgnr_DispKlBg";
            param.DbType = global::System.Data.DbType.Int32;
            param.DbType = global::System.Data.DbType.Int32;
            param.SourceColumn = "Bgnr_DispKlBg";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::System.Data.SQLite.SQLiteParameter();
            param.ParameterName = "@Original_Bgnr_DispKlBg";
            param.DbType = global::System.Data.DbType.AnsiString;
            param.DbType = global::System.Data.DbType.AnsiString;
            param.SourceColumn = "Bgnr_DispKlBg";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::System.Data.SQLite.SQLiteParameter();
            param.ParameterName = "@IsNull_Bgnr_Tnv";
            param.DbType = global::System.Data.DbType.Int32;
            param.DbType = global::System.Data.DbType.Int32;
            param.SourceColumn = "Bgnr_Tnv";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::System.Data.SQLite.SQLiteParameter();
            param.ParameterName = "@Original_Bgnr_Tnv";
            param.DbType = global::System.Data.DbType.AnsiString;
            param.DbType = global::System.Data.DbType.AnsiString;
            param.SourceColumn = "Bgnr_Tnv";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::System.Data.SQLite.SQLiteParameter();
            param.ParameterName = "@Original_Bgnr_Kort";
            param.DbType = global::System.Data.DbType.AnsiString;
            param.DbType = global::System.Data.DbType.AnsiString;
            param.SourceColumn = "Bgnr_Kort";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::System.Data.SQLite.SQLiteParameter();
            param.ParameterName = "@Original_Bgnr_Iban";
            param.DbType = global::System.Data.DbType.AnsiString;
            param.DbType = global::System.Data.DbType.AnsiString;
            param.SourceColumn = "Bgnr_Iban";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::System.Data.SQLite.SQLiteParameter();
            param.ParameterName = "@Original_Bgnr_IbanBankGiroKas";
            param.DbType = global::System.Data.DbType.AnsiString;
            param.DbType = global::System.Data.DbType.AnsiString;
            param.SourceColumn = "Bgnr_IbanBankGiroKas";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::System.Data.SQLite.SQLiteParameter();
            param.ParameterName = "@IsNull_Bgnr_Mutatiedatum";
            param.DbType = global::System.Data.DbType.Int32;
            param.DbType = global::System.Data.DbType.Int32;
            param.SourceColumn = "Bgnr_Mutatiedatum";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::System.Data.SQLite.SQLiteParameter();
            param.ParameterName = "@Original_Bgnr_Mutatiedatum";
            param.DbType = global::System.Data.DbType.DateTime;
            param.DbType = global::System.Data.DbType.DateTime;
            param.SourceColumn = "Bgnr_Mutatiedatum";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::System.Data.SQLite.SQLiteParameter();
            param.ParameterName = "@IsNull_Bgnr_Opmerking";
            param.DbType = global::System.Data.DbType.Int32;
            param.DbType = global::System.Data.DbType.Int32;
            param.SourceColumn = "Bgnr_Opmerking";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::System.Data.SQLite.SQLiteParameter();
            param.ParameterName = "@Original_Bgnr_Opmerking";
            param.DbType = global::System.Data.DbType.AnsiString;
            param.DbType = global::System.Data.DbType.AnsiString;
            param.SourceColumn = "Bgnr_Opmerking";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            this._adapter.InsertCommand = new global::System.Data.SQLite.SQLiteCommand();
            this._adapter.InsertCommand.Connection = this.Connection;
            this._adapter.InsertCommand.CommandText = @"INSERT INTO [main].[sqlite_default_schema].[Bankgironr] ([Bgnr_StatusId], [Bgnr_DispStatus], [Bgnr_SysteemBgnrJN], [Bgnr_KLBgId], [Bgnr_DispKlBg], [Bgnr_Tnv], [Bgnr_Kort], [Bgnr_Iban], [Bgnr_IbanBankGiroKas], [Bgnr_Mutatiedatum], [Bgnr_Opmerking]) VALUES (@Bgnr_StatusId, @Bgnr_DispStatus, @Bgnr_SysteemBgnrJN, @Bgnr_KLBgId, @Bgnr_DispKlBg, @Bgnr_Tnv, @Bgnr_Kort, @Bgnr_Iban, @Bgnr_IbanBankGiroKas, @Bgnr_Mutatiedatum, @Bgnr_Opmerking)";
            this._adapter.InsertCommand.CommandType = global::System.Data.CommandType.Text;
            param = new global::System.Data.SQLite.SQLiteParameter();
            param.ParameterName = "@Bgnr_StatusId";
            param.DbType = global::System.Data.DbType.Int64;
            param.DbType = global::System.Data.DbType.Int64;
            param.SourceColumn = "Bgnr_StatusId";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::System.Data.SQLite.SQLiteParameter();
            param.ParameterName = "@Bgnr_DispStatus";
            param.DbType = global::System.Data.DbType.AnsiString;
            param.DbType = global::System.Data.DbType.AnsiString;
            param.SourceColumn = "Bgnr_DispStatus";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::System.Data.SQLite.SQLiteParameter();
            param.ParameterName = "@Bgnr_SysteemBgnrJN";
            param.DbType = global::System.Data.DbType.Int64;
            param.DbType = global::System.Data.DbType.Int64;
            param.SourceColumn = "Bgnr_SysteemBgnrJN";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::System.Data.SQLite.SQLiteParameter();
            param.ParameterName = "@Bgnr_KLBgId";
            param.DbType = global::System.Data.DbType.Int64;
            param.DbType = global::System.Data.DbType.Int64;
            param.SourceColumn = "Bgnr_KLBgId";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::System.Data.SQLite.SQLiteParameter();
            param.ParameterName = "@Bgnr_DispKlBg";
            param.DbType = global::System.Data.DbType.AnsiString;
            param.DbType = global::System.Data.DbType.AnsiString;
            param.SourceColumn = "Bgnr_DispKlBg";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::System.Data.SQLite.SQLiteParameter();
            param.ParameterName = "@Bgnr_Tnv";
            param.DbType = global::System.Data.DbType.AnsiString;
            param.DbType = global::System.Data.DbType.AnsiString;
            param.SourceColumn = "Bgnr_Tnv";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::System.Data.SQLite.SQLiteParameter();
            param.ParameterName = "@Bgnr_Kort";
            param.DbType = global::System.Data.DbType.AnsiString;
            param.DbType = global::System.Data.DbType.AnsiString;
            param.SourceColumn = "Bgnr_Kort";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::System.Data.SQLite.SQLiteParameter();
            param.ParameterName = "@Bgnr_Iban";
            param.DbType = global::System.Data.DbType.AnsiString;
            param.DbType = global::System.Data.DbType.AnsiString;
            param.SourceColumn = "Bgnr_Iban";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::System.Data.SQLite.SQLiteParameter();
            param.ParameterName = "@Bgnr_IbanBankGiroKas";
            param.DbType = global::System.Data.DbType.AnsiString;
            param.DbType = global::System.Data.DbType.AnsiString;
            param.SourceColumn = "Bgnr_IbanBankGiroKas";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::System.Data.SQLite.SQLiteParameter();
            param.ParameterName = "@Bgnr_Mutatiedatum";
            param.DbType = global::System.Data.DbType.DateTime;
            param.DbType = global::System.Data.DbType.DateTime;
            param.SourceColumn = "Bgnr_Mutatiedatum";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::System.Data.SQLite.SQLiteParameter();
            param.ParameterName = "@Bgnr_Opmerking";
            param.DbType = global::System.Data.DbType.AnsiString;
            param.DbType = global::System.Data.DbType.AnsiString;
            param.SourceColumn = "Bgnr_Opmerking";
            this._adapter.InsertCommand.Parameters.Add(param);
            this._adapter.UpdateCommand = new global::System.Data.SQLite.SQLiteCommand();
            this._adapter.UpdateCommand.Connection = this.Connection;
            this._adapter.UpdateCommand.CommandText = @"UPDATE [main].[sqlite_default_schema].[Bankgironr] SET [Bgnr_StatusId] = @Bgnr_StatusId, [Bgnr_DispStatus] = @Bgnr_DispStatus, [Bgnr_SysteemBgnrJN] = @Bgnr_SysteemBgnrJN, [Bgnr_KLBgId] = @Bgnr_KLBgId, [Bgnr_DispKlBg] = @Bgnr_DispKlBg, [Bgnr_Tnv] = @Bgnr_Tnv, [Bgnr_Kort] = @Bgnr_Kort, [Bgnr_Iban] = @Bgnr_Iban, [Bgnr_IbanBankGiroKas] = @Bgnr_IbanBankGiroKas, [Bgnr_Mutatiedatum] = @Bgnr_Mutatiedatum, [Bgnr_Opmerking] = @Bgnr_Opmerking WHERE (([Bgnr_Id] = @Original_Bgnr_Id) AND ((@IsNull_Bgnr_StatusId = 1 AND [Bgnr_StatusId] IS NULL) OR ([Bgnr_StatusId] = @Original_Bgnr_StatusId)) AND ((@IsNull_Bgnr_DispStatus = 1 AND [Bgnr_DispStatus] IS NULL) OR ([Bgnr_DispStatus] = @Original_Bgnr_DispStatus)) AND ((@IsNull_Bgnr_SysteemBgnrJN = 1 AND [Bgnr_SysteemBgnrJN] IS NULL) OR ([Bgnr_SysteemBgnrJN] = @Original_Bgnr_SysteemBgnrJN)) AND ([Bgnr_KLBgId] = @Original_Bgnr_KLBgId) AND ((@IsNull_Bgnr_DispKlBg = 1 AND [Bgnr_DispKlBg] IS NULL) OR ([Bgnr_DispKlBg] = @Original_Bgnr_DispKlBg)) AND ((@IsNull_Bgnr_Tnv = 1 AND [Bgnr_Tnv] IS NULL) OR ([Bgnr_Tnv] = @Original_Bgnr_Tnv)) AND ([Bgnr_Kort] = @Original_Bgnr_Kort) AND ([Bgnr_Iban] = @Original_Bgnr_Iban) AND ([Bgnr_IbanBankGiroKas] = @Original_Bgnr_IbanBankGiroKas) AND ((@IsNull_Bgnr_Mutatiedatum = 1 AND [Bgnr_Mutatiedatum] IS NULL) OR ([Bgnr_Mutatiedatum] = @Original_Bgnr_Mutatiedatum)) AND ((@IsNull_Bgnr_Opmerking = 1 AND [Bgnr_Opmerking] IS NULL) OR ([Bgnr_Opmerking] = @Original_Bgnr_Opmerking)))";
            this._adapter.UpdateCommand.CommandType = global::System.Data.CommandType.Text;
            param = new global::System.Data.SQLite.SQLiteParameter();
            param.ParameterName = "@Bgnr_StatusId";
            param.DbType = global::System.Data.DbType.Int64;
            param.DbType = global::System.Data.DbType.Int64;
            param.SourceColumn = "Bgnr_StatusId";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::System.Data.SQLite.SQLiteParameter();
            param.ParameterName = "@Bgnr_DispStatus";
            param.DbType = global::System.Data.DbType.AnsiString;
            param.DbType = global::System.Data.DbType.AnsiString;
            param.SourceColumn = "Bgnr_DispStatus";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::System.Data.SQLite.SQLiteParameter();
            param.ParameterName = "@Bgnr_SysteemBgnrJN";
            param.DbType = global::System.Data.DbType.Int64;
            param.DbType = global::System.Data.DbType.Int64;
            param.SourceColumn = "Bgnr_SysteemBgnrJN";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::System.Data.SQLite.SQLiteParameter();
            param.ParameterName = "@Bgnr_KLBgId";
            param.DbType = global::System.Data.DbType.Int64;
            param.DbType = global::System.Data.DbType.Int64;
            param.SourceColumn = "Bgnr_KLBgId";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::System.Data.SQLite.SQLiteParameter();
            param.ParameterName = "@Bgnr_DispKlBg";
            param.DbType = global::System.Data.DbType.AnsiString;
            param.DbType = global::System.Data.DbType.AnsiString;
            param.SourceColumn = "Bgnr_DispKlBg";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::System.Data.SQLite.SQLiteParameter();
            param.ParameterName = "@Bgnr_Tnv";
            param.DbType = global::System.Data.DbType.AnsiString;
            param.DbType = global::System.Data.DbType.AnsiString;
            param.SourceColumn = "Bgnr_Tnv";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::System.Data.SQLite.SQLiteParameter();
            param.ParameterName = "@Bgnr_Kort";
            param.DbType = global::System.Data.DbType.AnsiString;
            param.DbType = global::System.Data.DbType.AnsiString;
            param.SourceColumn = "Bgnr_Kort";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::System.Data.SQLite.SQLiteParameter();
            param.ParameterName = "@Bgnr_Iban";
            param.DbType = global::System.Data.DbType.AnsiString;
            param.DbType = global::System.Data.DbType.AnsiString;
            param.SourceColumn = "Bgnr_Iban";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::System.Data.SQLite.SQLiteParameter();
            param.ParameterName = "@Bgnr_IbanBankGiroKas";
            param.DbType = global::System.Data.DbType.AnsiString;
            param.DbType = global::System.Data.DbType.AnsiString;
            param.SourceColumn = "Bgnr_IbanBankGiroKas";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::System.Data.SQLite.SQLiteParameter();
            param.ParameterName = "@Bgnr_Mutatiedatum";
            param.DbType = global::System.Data.DbType.DateTime;
            param.DbType = global::System.Data.DbType.DateTime;
            param.SourceColumn = "Bgnr_Mutatiedatum";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::System.Data.SQLite.SQLiteParameter();
            param.ParameterName = "@Bgnr_Opmerking";
            param.DbType = global::System.Data.DbType.AnsiString;
            param.DbType = global::System.Data.DbType.AnsiString;
            param.SourceColumn = "Bgnr_Opmerking";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::System.Data.SQLite.SQLiteParameter();
            param.ParameterName = "@Original_Bgnr_Id";
            param.DbType = global::System.Data.DbType.Int64;
            param.DbType = global::System.Data.DbType.Int64;
            param.SourceColumn = "Bgnr_Id";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::System.Data.SQLite.SQLiteParameter();
            param.ParameterName = "@IsNull_Bgnr_StatusId";
            param.DbType = global::System.Data.DbType.Int32;
            param.DbType = global::System.Data.DbType.Int32;
            param.SourceColumn = "Bgnr_StatusId";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::System.Data.SQLite.SQLiteParameter();
            param.ParameterName = "@Original_Bgnr_StatusId";
            param.DbType = global::System.Data.DbType.Int64;
            param.DbType = global::System.Data.DbType.Int64;
            param.SourceColumn = "Bgnr_StatusId";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::System.Data.SQLite.SQLiteParameter();
            param.ParameterName = "@IsNull_Bgnr_DispStatus";
            param.DbType = global::System.Data.DbType.Int32;
            param.DbType = global::System.Data.DbType.Int32;
            param.SourceColumn = "Bgnr_DispStatus";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::System.Data.SQLite.SQLiteParameter();
            param.ParameterName = "@Original_Bgnr_DispStatus";
            param.DbType = global::System.Data.DbType.AnsiString;
            param.DbType = global::System.Data.DbType.AnsiString;
            param.SourceColumn = "Bgnr_DispStatus";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::System.Data.SQLite.SQLiteParameter();
            param.ParameterName = "@IsNull_Bgnr_SysteemBgnrJN";
            param.DbType = global::System.Data.DbType.Int32;
            param.DbType = global::System.Data.DbType.Int32;
            param.SourceColumn = "Bgnr_SysteemBgnrJN";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::System.Data.SQLite.SQLiteParameter();
            param.ParameterName = "@Original_Bgnr_SysteemBgnrJN";
            param.DbType = global::System.Data.DbType.Int64;
            param.DbType = global::System.Data.DbType.Int64;
            param.SourceColumn = "Bgnr_SysteemBgnrJN";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::System.Data.SQLite.SQLiteParameter();
            param.ParameterName = "@Original_Bgnr_KLBgId";
            param.DbType = global::System.Data.DbType.Int64;
            param.DbType = global::System.Data.DbType.Int64;
            param.SourceColumn = "Bgnr_KLBgId";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::System.Data.SQLite.SQLiteParameter();
            param.ParameterName = "@IsNull_Bgnr_DispKlBg";
            param.DbType = global::System.Data.DbType.Int32;
            param.DbType = global::System.Data.DbType.Int32;
            param.SourceColumn = "Bgnr_DispKlBg";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::System.Data.SQLite.SQLiteParameter();
            param.ParameterName = "@Original_Bgnr_DispKlBg";
            param.DbType = global::System.Data.DbType.AnsiString;
            param.DbType = global::System.Data.DbType.AnsiString;
            param.SourceColumn = "Bgnr_DispKlBg";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::System.Data.SQLite.SQLiteParameter();
            param.ParameterName = "@IsNull_Bgnr_Tnv";
            param.DbType = global::System.Data.DbType.Int32;
            param.DbType = global::System.Data.DbType.Int32;
            param.SourceColumn = "Bgnr_Tnv";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::System.Data.SQLite.SQLiteParameter();
            param.ParameterName = "@Original_Bgnr_Tnv";
            param.DbType = global::System.Data.DbType.AnsiString;
            param.DbType = global::System.Data.DbType.AnsiString;
            param.SourceColumn = "Bgnr_Tnv";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::System.Data.SQLite.SQLiteParameter();
            param.ParameterName = "@Original_Bgnr_Kort";
            param.DbType = global::System.Data.DbType.AnsiString;
            param.DbType = global::System.Data.DbType.AnsiString;
            param.SourceColumn = "Bgnr_Kort";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::System.Data.SQLite.SQLiteParameter();
            param.ParameterName = "@Original_Bgnr_Iban";
            param.DbType = global::System.Data.DbType.AnsiString;
            param.DbType = global::System.Data.DbType.AnsiString;
            param.SourceColumn = "Bgnr_Iban";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::System.Data.SQLite.SQLiteParameter();
            param.ParameterName = "@Original_Bgnr_IbanBankGiroKas";
            param.DbType = global::System.Data.DbType.AnsiString;
            param.DbType = global::System.Data.DbType.AnsiString;
            param.SourceColumn = "Bgnr_IbanBankGiroKas";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::System.Data.SQLite.SQLiteParameter();
            param.ParameterName = "@IsNull_Bgnr_Mutatiedatum";
            param.DbType = global::System.Data.DbType.Int32;
            param.DbType = global::System.Data.DbType.Int32;
            param.SourceColumn = "Bgnr_Mutatiedatum";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::System.Data.SQLite.SQLiteParameter();
            param.ParameterName = "@Original_Bgnr_Mutatiedatum";
            param.DbType = global::System.Data.DbType.DateTime;
            param.DbType = global::System.Data.DbType.DateTime;
            param.SourceColumn = "Bgnr_Mutatiedatum";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::System.Data.SQLite.SQLiteParameter();
            param.ParameterName = "@IsNull_Bgnr_Opmerking";
            param.DbType = global::System.Data.DbType.Int32;
            param.DbType = global::System.Data.DbType.Int32;
            param.SourceColumn = "Bgnr_Opmerking";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::System.Data.SQLite.SQLiteParameter();
            param.ParameterName = "@Original_Bgnr_Opmerking";
            param.DbType = global::System.Data.DbType.AnsiString;
            param.DbType = global::System.Data.DbType.AnsiString;
            param.SourceColumn = "Bgnr_Opmerking";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitConnection() {
            this._connection = new global::System.Data.SQLite.SQLiteConnection();
            this._connection.ConnectionString = global::Cmbap.Properties.Settings.Default.Cmbap_dataConnectionString;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitCommandCollection() {
            this._commandCollection = new global::System.Data.SQLite.SQLiteCommand[1];
            this._commandCollection[0] = new global::System.Data.SQLite.SQLiteCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "SELECT [Bgnr_Id], [Bgnr_StatusId], [Bgnr_DispStatus], [Bgnr_SysteemBgnrJN], [Bgnr" +
                "_KLBgId], [Bgnr_DispKlBg], [Bgnr_Tnv], [Bgnr_Kort], [Bgnr_Iban], [Bgnr_IbanBankG" +
                "iroKas], [Bgnr_Mutatiedatum], [Bgnr_Opmerking] FROM [Bankgironr]";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(_Cmbap_dataDataSet.BankgironrDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual _Cmbap_dataDataSet.BankgironrDataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            _Cmbap_dataDataSet.BankgironrDataTable dataTable = new _Cmbap_dataDataSet.BankgironrDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(_Cmbap_dataDataSet.BankgironrDataTable dataTable) {
            return this.Adapter.Update(dataTable);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(_Cmbap_dataDataSet dataSet) {
            return this.Adapter.Update(dataSet, "Bankgironr");
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow dataRow) {
            return this.Adapter.Update(new global::System.Data.DataRow[] {
                        dataRow});
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow[] dataRows) {
            return this.Adapter.Update(dataRows);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Delete, true)]
        public virtual int Delete(long Original_Bgnr_Id, global::System.Nullable<long> Original_Bgnr_StatusId, string Original_Bgnr_DispStatus, global::System.Nullable<long> Original_Bgnr_SysteemBgnrJN, long Original_Bgnr_KLBgId, string Original_Bgnr_DispKlBg, string Original_Bgnr_Tnv, string Original_Bgnr_Kort, string Original_Bgnr_Iban, string Original_Bgnr_IbanBankGiroKas, global::System.Nullable<global::System.DateTime> Original_Bgnr_Mutatiedatum, string Original_Bgnr_Opmerking) {
            this.Adapter.DeleteCommand.Parameters[0].Value = ((long)(Original_Bgnr_Id));
            if ((Original_Bgnr_StatusId.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[1].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[2].Value = ((long)(Original_Bgnr_StatusId.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[1].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[2].Value = global::System.DBNull.Value;
            }
            if ((Original_Bgnr_DispStatus == null)) {
                this.Adapter.DeleteCommand.Parameters[3].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[4].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[3].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[4].Value = ((string)(Original_Bgnr_DispStatus));
            }
            if ((Original_Bgnr_SysteemBgnrJN.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[5].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[6].Value = ((long)(Original_Bgnr_SysteemBgnrJN.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[5].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[6].Value = global::System.DBNull.Value;
            }
            this.Adapter.DeleteCommand.Parameters[7].Value = ((long)(Original_Bgnr_KLBgId));
            if ((Original_Bgnr_DispKlBg == null)) {
                this.Adapter.DeleteCommand.Parameters[8].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[9].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[8].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[9].Value = ((string)(Original_Bgnr_DispKlBg));
            }
            if ((Original_Bgnr_Tnv == null)) {
                this.Adapter.DeleteCommand.Parameters[10].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[11].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[10].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[11].Value = ((string)(Original_Bgnr_Tnv));
            }
            if ((Original_Bgnr_Kort == null)) {
                throw new global::System.ArgumentNullException("Original_Bgnr_Kort");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[12].Value = ((string)(Original_Bgnr_Kort));
            }
            if ((Original_Bgnr_Iban == null)) {
                throw new global::System.ArgumentNullException("Original_Bgnr_Iban");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[13].Value = ((string)(Original_Bgnr_Iban));
            }
            if ((Original_Bgnr_IbanBankGiroKas == null)) {
                throw new global::System.ArgumentNullException("Original_Bgnr_IbanBankGiroKas");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[14].Value = ((string)(Original_Bgnr_IbanBankGiroKas));
            }
            if ((Original_Bgnr_Mutatiedatum.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[15].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[16].Value = ((System.DateTime)(Original_Bgnr_Mutatiedatum.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[15].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[16].Value = global::System.DBNull.Value;
            }
            if ((Original_Bgnr_Opmerking == null)) {
                this.Adapter.DeleteCommand.Parameters[17].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[18].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[17].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[18].Value = ((string)(Original_Bgnr_Opmerking));
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.DeleteCommand.Connection.State;
            if (((this.Adapter.DeleteCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.DeleteCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.DeleteCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.DeleteCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Insert, true)]
        public virtual int Insert(global::System.Nullable<long> Bgnr_StatusId, string Bgnr_DispStatus, global::System.Nullable<long> Bgnr_SysteemBgnrJN, long Bgnr_KLBgId, string Bgnr_DispKlBg, string Bgnr_Tnv, string Bgnr_Kort, string Bgnr_Iban, string Bgnr_IbanBankGiroKas, global::System.Nullable<global::System.DateTime> Bgnr_Mutatiedatum, string Bgnr_Opmerking) {
            if ((Bgnr_StatusId.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[0].Value = ((long)(Bgnr_StatusId.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[0].Value = global::System.DBNull.Value;
            }
            if ((Bgnr_DispStatus == null)) {
                this.Adapter.InsertCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[1].Value = ((string)(Bgnr_DispStatus));
            }
            if ((Bgnr_SysteemBgnrJN.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[2].Value = ((long)(Bgnr_SysteemBgnrJN.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[2].Value = global::System.DBNull.Value;
            }
            this.Adapter.InsertCommand.Parameters[3].Value = ((long)(Bgnr_KLBgId));
            if ((Bgnr_DispKlBg == null)) {
                this.Adapter.InsertCommand.Parameters[4].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[4].Value = ((string)(Bgnr_DispKlBg));
            }
            if ((Bgnr_Tnv == null)) {
                this.Adapter.InsertCommand.Parameters[5].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[5].Value = ((string)(Bgnr_Tnv));
            }
            if ((Bgnr_Kort == null)) {
                throw new global::System.ArgumentNullException("Bgnr_Kort");
            }
            else {
                this.Adapter.InsertCommand.Parameters[6].Value = ((string)(Bgnr_Kort));
            }
            if ((Bgnr_Iban == null)) {
                throw new global::System.ArgumentNullException("Bgnr_Iban");
            }
            else {
                this.Adapter.InsertCommand.Parameters[7].Value = ((string)(Bgnr_Iban));
            }
            if ((Bgnr_IbanBankGiroKas == null)) {
                throw new global::System.ArgumentNullException("Bgnr_IbanBankGiroKas");
            }
            else {
                this.Adapter.InsertCommand.Parameters[8].Value = ((string)(Bgnr_IbanBankGiroKas));
            }
            if ((Bgnr_Mutatiedatum.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[9].Value = ((System.DateTime)(Bgnr_Mutatiedatum.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[9].Value = global::System.DBNull.Value;
            }
            if ((Bgnr_Opmerking == null)) {
                this.Adapter.InsertCommand.Parameters[10].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[10].Value = ((string)(Bgnr_Opmerking));
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.InsertCommand.Connection.State;
            if (((this.Adapter.InsertCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.InsertCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.InsertCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.InsertCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(
                    global::System.Nullable<long> Bgnr_StatusId, 
                    string Bgnr_DispStatus, 
                    global::System.Nullable<long> Bgnr_SysteemBgnrJN, 
                    long Bgnr_KLBgId, 
                    string Bgnr_DispKlBg, 
                    string Bgnr_Tnv, 
                    string Bgnr_Kort, 
                    string Bgnr_Iban, 
                    string Bgnr_IbanBankGiroKas, 
                    global::System.Nullable<global::System.DateTime> Bgnr_Mutatiedatum, 
                    string Bgnr_Opmerking, 
                    long Original_Bgnr_Id, 
                    global::System.Nullable<long> Original_Bgnr_StatusId, 
                    string Original_Bgnr_DispStatus, 
                    global::System.Nullable<long> Original_Bgnr_SysteemBgnrJN, 
                    long Original_Bgnr_KLBgId, 
                    string Original_Bgnr_DispKlBg, 
                    string Original_Bgnr_Tnv, 
                    string Original_Bgnr_Kort, 
                    string Original_Bgnr_Iban, 
                    string Original_Bgnr_IbanBankGiroKas, 
                    global::System.Nullable<global::System.DateTime> Original_Bgnr_Mutatiedatum, 
                    string Original_Bgnr_Opmerking) {
            if ((Bgnr_StatusId.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[0].Value = ((long)(Bgnr_StatusId.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[0].Value = global::System.DBNull.Value;
            }
            if ((Bgnr_DispStatus == null)) {
                this.Adapter.UpdateCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[1].Value = ((string)(Bgnr_DispStatus));
            }
            if ((Bgnr_SysteemBgnrJN.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[2].Value = ((long)(Bgnr_SysteemBgnrJN.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[2].Value = global::System.DBNull.Value;
            }
            this.Adapter.UpdateCommand.Parameters[3].Value = ((long)(Bgnr_KLBgId));
            if ((Bgnr_DispKlBg == null)) {
                this.Adapter.UpdateCommand.Parameters[4].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[4].Value = ((string)(Bgnr_DispKlBg));
            }
            if ((Bgnr_Tnv == null)) {
                this.Adapter.UpdateCommand.Parameters[5].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[5].Value = ((string)(Bgnr_Tnv));
            }
            if ((Bgnr_Kort == null)) {
                throw new global::System.ArgumentNullException("Bgnr_Kort");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[6].Value = ((string)(Bgnr_Kort));
            }
            if ((Bgnr_Iban == null)) {
                throw new global::System.ArgumentNullException("Bgnr_Iban");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[7].Value = ((string)(Bgnr_Iban));
            }
            if ((Bgnr_IbanBankGiroKas == null)) {
                throw new global::System.ArgumentNullException("Bgnr_IbanBankGiroKas");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[8].Value = ((string)(Bgnr_IbanBankGiroKas));
            }
            if ((Bgnr_Mutatiedatum.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[9].Value = ((System.DateTime)(Bgnr_Mutatiedatum.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[9].Value = global::System.DBNull.Value;
            }
            if ((Bgnr_Opmerking == null)) {
                this.Adapter.UpdateCommand.Parameters[10].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[10].Value = ((string)(Bgnr_Opmerking));
            }
            this.Adapter.UpdateCommand.Parameters[11].Value = ((long)(Original_Bgnr_Id));
            if ((Original_Bgnr_StatusId.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[12].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[13].Value = ((long)(Original_Bgnr_StatusId.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[12].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[13].Value = global::System.DBNull.Value;
            }
            if ((Original_Bgnr_DispStatus == null)) {
                this.Adapter.UpdateCommand.Parameters[14].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[15].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[14].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[15].Value = ((string)(Original_Bgnr_DispStatus));
            }
            if ((Original_Bgnr_SysteemBgnrJN.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[16].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[17].Value = ((long)(Original_Bgnr_SysteemBgnrJN.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[16].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[17].Value = global::System.DBNull.Value;
            }
            this.Adapter.UpdateCommand.Parameters[18].Value = ((long)(Original_Bgnr_KLBgId));
            if ((Original_Bgnr_DispKlBg == null)) {
                this.Adapter.UpdateCommand.Parameters[19].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[20].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[19].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[20].Value = ((string)(Original_Bgnr_DispKlBg));
            }
            if ((Original_Bgnr_Tnv == null)) {
                this.Adapter.UpdateCommand.Parameters[21].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[22].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[21].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[22].Value = ((string)(Original_Bgnr_Tnv));
            }
            if ((Original_Bgnr_Kort == null)) {
                throw new global::System.ArgumentNullException("Original_Bgnr_Kort");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[23].Value = ((string)(Original_Bgnr_Kort));
            }
            if ((Original_Bgnr_Iban == null)) {
                throw new global::System.ArgumentNullException("Original_Bgnr_Iban");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[24].Value = ((string)(Original_Bgnr_Iban));
            }
            if ((Original_Bgnr_IbanBankGiroKas == null)) {
                throw new global::System.ArgumentNullException("Original_Bgnr_IbanBankGiroKas");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[25].Value = ((string)(Original_Bgnr_IbanBankGiroKas));
            }
            if ((Original_Bgnr_Mutatiedatum.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[26].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[27].Value = ((System.DateTime)(Original_Bgnr_Mutatiedatum.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[26].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[27].Value = global::System.DBNull.Value;
            }
            if ((Original_Bgnr_Opmerking == null)) {
                this.Adapter.UpdateCommand.Parameters[28].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[29].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[28].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[29].Value = ((string)(Original_Bgnr_Opmerking));
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.UpdateCommand.Connection.State;
            if (((this.Adapter.UpdateCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.UpdateCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.UpdateCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.UpdateCommand.Connection.Close();
                }
            }
        }
    }
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class BankregelTableAdapter : global::System.ComponentModel.Component {
        
        private global::System.Data.SQLite.SQLiteDataAdapter _adapter;
        
        private global::System.Data.SQLite.SQLiteConnection _connection;
        
        private global::System.Data.SQLite.SQLiteTransaction _transaction;
        
        private global::System.Data.SQLite.SQLiteCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public BankregelTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected internal global::System.Data.SQLite.SQLiteDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal global::System.Data.SQLite.SQLiteConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::System.Data.SQLite.SQLiteCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal global::System.Data.SQLite.SQLiteTransaction Transaction {
            get {
                return this._transaction;
            }
            set {
                this._transaction = value;
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    this.CommandCollection[i].Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.DeleteCommand != null))) {
                    this.Adapter.DeleteCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.InsertCommand != null))) {
                    this.Adapter.InsertCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.UpdateCommand != null))) {
                    this.Adapter.UpdateCommand.Transaction = this._transaction;
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected global::System.Data.SQLite.SQLiteCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitAdapter() {
            this._adapter = new global::System.Data.SQLite.SQLiteDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "Bankregel";
            tableMapping.ColumnMappings.Add("Bnkrgl_Id", "Bnkrgl_Id");
            tableMapping.ColumnMappings.Add("Bnkrgl_StatusId", "Bnkrgl_StatusId");
            tableMapping.ColumnMappings.Add("Bnkrgl_DispStatus", "Bnkrgl_DispStatus");
            tableMapping.ColumnMappings.Add("Bnkrgl_VerwerkId", "Bnkrgl_VerwerkId");
            tableMapping.ColumnMappings.Add("Bnkrgl_Bankregel", "Bnkrgl_Bankregel");
            tableMapping.ColumnMappings.Add("Bnkrgl_BstlId", "Bnkrgl_BstlId");
            tableMapping.ColumnMappings.Add("Bnkrgl_Mutatiedatum", "Bnkrgl_Mutatiedatum");
            tableMapping.ColumnMappings.Add("Bnkrgl_Opmerking", "Bnkrgl_Opmerking");
            this._adapter.TableMappings.Add(tableMapping);
            this._adapter.DeleteCommand = new global::System.Data.SQLite.SQLiteCommand();
            this._adapter.DeleteCommand.Connection = this.Connection;
            this._adapter.DeleteCommand.CommandText = @"DELETE FROM [main].[sqlite_default_schema].[Bankregel] WHERE (([Bnkrgl_Id] = @Original_Bnkrgl_Id) AND ((@IsNull_Bnkrgl_StatusId = 1 AND [Bnkrgl_StatusId] IS NULL) OR ([Bnkrgl_StatusId] = @Original_Bnkrgl_StatusId)) AND ((@IsNull_Bnkrgl_DispStatus = 1 AND [Bnkrgl_DispStatus] IS NULL) OR ([Bnkrgl_DispStatus] = @Original_Bnkrgl_DispStatus)) AND ([Bnkrgl_VerwerkId] = @Original_Bnkrgl_VerwerkId) AND ((@IsNull_Bnkrgl_Bankregel = 1 AND [Bnkrgl_Bankregel] IS NULL) OR ([Bnkrgl_Bankregel] = @Original_Bnkrgl_Bankregel)) AND ([Bnkrgl_BstlId] = @Original_Bnkrgl_BstlId) AND ([Bnkrgl_Mutatiedatum] = @Original_Bnkrgl_Mutatiedatum) AND ((@IsNull_Bnkrgl_Opmerking = 1 AND [Bnkrgl_Opmerking] IS NULL) OR ([Bnkrgl_Opmerking] = @Original_Bnkrgl_Opmerking)))";
            this._adapter.DeleteCommand.CommandType = global::System.Data.CommandType.Text;
            global::System.Data.SQLite.SQLiteParameter param = new global::System.Data.SQLite.SQLiteParameter();
            param.ParameterName = "@Original_Bnkrgl_Id";
            param.DbType = global::System.Data.DbType.Int64;
            param.DbType = global::System.Data.DbType.Int64;
            param.SourceColumn = "Bnkrgl_Id";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::System.Data.SQLite.SQLiteParameter();
            param.ParameterName = "@IsNull_Bnkrgl_StatusId";
            param.DbType = global::System.Data.DbType.Int32;
            param.DbType = global::System.Data.DbType.Int32;
            param.SourceColumn = "Bnkrgl_StatusId";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::System.Data.SQLite.SQLiteParameter();
            param.ParameterName = "@Original_Bnkrgl_StatusId";
            param.DbType = global::System.Data.DbType.Int64;
            param.DbType = global::System.Data.DbType.Int64;
            param.SourceColumn = "Bnkrgl_StatusId";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::System.Data.SQLite.SQLiteParameter();
            param.ParameterName = "@IsNull_Bnkrgl_DispStatus";
            param.DbType = global::System.Data.DbType.Int32;
            param.DbType = global::System.Data.DbType.Int32;
            param.SourceColumn = "Bnkrgl_DispStatus";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::System.Data.SQLite.SQLiteParameter();
            param.ParameterName = "@Original_Bnkrgl_DispStatus";
            param.DbType = global::System.Data.DbType.AnsiString;
            param.DbType = global::System.Data.DbType.AnsiString;
            param.SourceColumn = "Bnkrgl_DispStatus";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::System.Data.SQLite.SQLiteParameter();
            param.ParameterName = "@Original_Bnkrgl_VerwerkId";
            param.DbType = global::System.Data.DbType.Int64;
            param.DbType = global::System.Data.DbType.Int64;
            param.SourceColumn = "Bnkrgl_VerwerkId";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::System.Data.SQLite.SQLiteParameter();
            param.ParameterName = "@IsNull_Bnkrgl_Bankregel";
            param.DbType = global::System.Data.DbType.Int32;
            param.DbType = global::System.Data.DbType.Int32;
            param.SourceColumn = "Bnkrgl_Bankregel";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::System.Data.SQLite.SQLiteParameter();
            param.ParameterName = "@Original_Bnkrgl_Bankregel";
            param.DbType = global::System.Data.DbType.String;
            param.SourceColumn = "Bnkrgl_Bankregel";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::System.Data.SQLite.SQLiteParameter();
            param.ParameterName = "@Original_Bnkrgl_BstlId";
            param.DbType = global::System.Data.DbType.Int64;
            param.DbType = global::System.Data.DbType.Int64;
            param.SourceColumn = "Bnkrgl_BstlId";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::System.Data.SQLite.SQLiteParameter();
            param.ParameterName = "@Original_Bnkrgl_Mutatiedatum";
            param.DbType = global::System.Data.DbType.DateTime;
            param.DbType = global::System.Data.DbType.DateTime;
            param.SourceColumn = "Bnkrgl_Mutatiedatum";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::System.Data.SQLite.SQLiteParameter();
            param.ParameterName = "@IsNull_Bnkrgl_Opmerking";
            param.DbType = global::System.Data.DbType.Int32;
            param.DbType = global::System.Data.DbType.Int32;
            param.SourceColumn = "Bnkrgl_Opmerking";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::System.Data.SQLite.SQLiteParameter();
            param.ParameterName = "@Original_Bnkrgl_Opmerking";
            param.DbType = global::System.Data.DbType.AnsiString;
            param.DbType = global::System.Data.DbType.AnsiString;
            param.SourceColumn = "Bnkrgl_Opmerking";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            this._adapter.InsertCommand = new global::System.Data.SQLite.SQLiteCommand();
            this._adapter.InsertCommand.Connection = this.Connection;
            this._adapter.InsertCommand.CommandText = @"INSERT INTO [main].[sqlite_default_schema].[Bankregel] ([Bnkrgl_StatusId], [Bnkrgl_DispStatus], [Bnkrgl_VerwerkId], [Bnkrgl_Bankregel], [Bnkrgl_BstlId], [Bnkrgl_Mutatiedatum], [Bnkrgl_Opmerking]) VALUES (@Bnkrgl_StatusId, @Bnkrgl_DispStatus, @Bnkrgl_VerwerkId, @Bnkrgl_Bankregel, @Bnkrgl_BstlId, @Bnkrgl_Mutatiedatum, @Bnkrgl_Opmerking)";
            this._adapter.InsertCommand.CommandType = global::System.Data.CommandType.Text;
            param = new global::System.Data.SQLite.SQLiteParameter();
            param.ParameterName = "@Bnkrgl_StatusId";
            param.DbType = global::System.Data.DbType.Int64;
            param.DbType = global::System.Data.DbType.Int64;
            param.SourceColumn = "Bnkrgl_StatusId";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::System.Data.SQLite.SQLiteParameter();
            param.ParameterName = "@Bnkrgl_DispStatus";
            param.DbType = global::System.Data.DbType.AnsiString;
            param.DbType = global::System.Data.DbType.AnsiString;
            param.SourceColumn = "Bnkrgl_DispStatus";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::System.Data.SQLite.SQLiteParameter();
            param.ParameterName = "@Bnkrgl_VerwerkId";
            param.DbType = global::System.Data.DbType.Int64;
            param.DbType = global::System.Data.DbType.Int64;
            param.SourceColumn = "Bnkrgl_VerwerkId";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::System.Data.SQLite.SQLiteParameter();
            param.ParameterName = "@Bnkrgl_Bankregel";
            param.DbType = global::System.Data.DbType.String;
            param.SourceColumn = "Bnkrgl_Bankregel";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::System.Data.SQLite.SQLiteParameter();
            param.ParameterName = "@Bnkrgl_BstlId";
            param.DbType = global::System.Data.DbType.Int64;
            param.DbType = global::System.Data.DbType.Int64;
            param.SourceColumn = "Bnkrgl_BstlId";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::System.Data.SQLite.SQLiteParameter();
            param.ParameterName = "@Bnkrgl_Mutatiedatum";
            param.DbType = global::System.Data.DbType.DateTime;
            param.DbType = global::System.Data.DbType.DateTime;
            param.SourceColumn = "Bnkrgl_Mutatiedatum";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::System.Data.SQLite.SQLiteParameter();
            param.ParameterName = "@Bnkrgl_Opmerking";
            param.DbType = global::System.Data.DbType.AnsiString;
            param.DbType = global::System.Data.DbType.AnsiString;
            param.SourceColumn = "Bnkrgl_Opmerking";
            this._adapter.InsertCommand.Parameters.Add(param);
            this._adapter.UpdateCommand = new global::System.Data.SQLite.SQLiteCommand();
            this._adapter.UpdateCommand.Connection = this.Connection;
            this._adapter.UpdateCommand.CommandText = @"UPDATE [main].[sqlite_default_schema].[Bankregel] SET [Bnkrgl_StatusId] = @Bnkrgl_StatusId, [Bnkrgl_DispStatus] = @Bnkrgl_DispStatus, [Bnkrgl_VerwerkId] = @Bnkrgl_VerwerkId, [Bnkrgl_Bankregel] = @Bnkrgl_Bankregel, [Bnkrgl_BstlId] = @Bnkrgl_BstlId, [Bnkrgl_Mutatiedatum] = @Bnkrgl_Mutatiedatum, [Bnkrgl_Opmerking] = @Bnkrgl_Opmerking WHERE (([Bnkrgl_Id] = @Original_Bnkrgl_Id) AND ((@IsNull_Bnkrgl_StatusId = 1 AND [Bnkrgl_StatusId] IS NULL) OR ([Bnkrgl_StatusId] = @Original_Bnkrgl_StatusId)) AND ((@IsNull_Bnkrgl_DispStatus = 1 AND [Bnkrgl_DispStatus] IS NULL) OR ([Bnkrgl_DispStatus] = @Original_Bnkrgl_DispStatus)) AND ([Bnkrgl_VerwerkId] = @Original_Bnkrgl_VerwerkId) AND ((@IsNull_Bnkrgl_Bankregel = 1 AND [Bnkrgl_Bankregel] IS NULL) OR ([Bnkrgl_Bankregel] = @Original_Bnkrgl_Bankregel)) AND ([Bnkrgl_BstlId] = @Original_Bnkrgl_BstlId) AND ([Bnkrgl_Mutatiedatum] = @Original_Bnkrgl_Mutatiedatum) AND ((@IsNull_Bnkrgl_Opmerking = 1 AND [Bnkrgl_Opmerking] IS NULL) OR ([Bnkrgl_Opmerking] = @Original_Bnkrgl_Opmerking)))";
            this._adapter.UpdateCommand.CommandType = global::System.Data.CommandType.Text;
            param = new global::System.Data.SQLite.SQLiteParameter();
            param.ParameterName = "@Bnkrgl_StatusId";
            param.DbType = global::System.Data.DbType.Int64;
            param.DbType = global::System.Data.DbType.Int64;
            param.SourceColumn = "Bnkrgl_StatusId";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::System.Data.SQLite.SQLiteParameter();
            param.ParameterName = "@Bnkrgl_DispStatus";
            param.DbType = global::System.Data.DbType.AnsiString;
            param.DbType = global::System.Data.DbType.AnsiString;
            param.SourceColumn = "Bnkrgl_DispStatus";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::System.Data.SQLite.SQLiteParameter();
            param.ParameterName = "@Bnkrgl_VerwerkId";
            param.DbType = global::System.Data.DbType.Int64;
            param.DbType = global::System.Data.DbType.Int64;
            param.SourceColumn = "Bnkrgl_VerwerkId";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::System.Data.SQLite.SQLiteParameter();
            param.ParameterName = "@Bnkrgl_Bankregel";
            param.DbType = global::System.Data.DbType.String;
            param.SourceColumn = "Bnkrgl_Bankregel";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::System.Data.SQLite.SQLiteParameter();
            param.ParameterName = "@Bnkrgl_BstlId";
            param.DbType = global::System.Data.DbType.Int64;
            param.DbType = global::System.Data.DbType.Int64;
            param.SourceColumn = "Bnkrgl_BstlId";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::System.Data.SQLite.SQLiteParameter();
            param.ParameterName = "@Bnkrgl_Mutatiedatum";
            param.DbType = global::System.Data.DbType.DateTime;
            param.DbType = global::System.Data.DbType.DateTime;
            param.SourceColumn = "Bnkrgl_Mutatiedatum";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::System.Data.SQLite.SQLiteParameter();
            param.ParameterName = "@Bnkrgl_Opmerking";
            param.DbType = global::System.Data.DbType.AnsiString;
            param.DbType = global::System.Data.DbType.AnsiString;
            param.SourceColumn = "Bnkrgl_Opmerking";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::System.Data.SQLite.SQLiteParameter();
            param.ParameterName = "@Original_Bnkrgl_Id";
            param.DbType = global::System.Data.DbType.Int64;
            param.DbType = global::System.Data.DbType.Int64;
            param.SourceColumn = "Bnkrgl_Id";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::System.Data.SQLite.SQLiteParameter();
            param.ParameterName = "@IsNull_Bnkrgl_StatusId";
            param.DbType = global::System.Data.DbType.Int32;
            param.DbType = global::System.Data.DbType.Int32;
            param.SourceColumn = "Bnkrgl_StatusId";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::System.Data.SQLite.SQLiteParameter();
            param.ParameterName = "@Original_Bnkrgl_StatusId";
            param.DbType = global::System.Data.DbType.Int64;
            param.DbType = global::System.Data.DbType.Int64;
            param.SourceColumn = "Bnkrgl_StatusId";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::System.Data.SQLite.SQLiteParameter();
            param.ParameterName = "@IsNull_Bnkrgl_DispStatus";
            param.DbType = global::System.Data.DbType.Int32;
            param.DbType = global::System.Data.DbType.Int32;
            param.SourceColumn = "Bnkrgl_DispStatus";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::System.Data.SQLite.SQLiteParameter();
            param.ParameterName = "@Original_Bnkrgl_DispStatus";
            param.DbType = global::System.Data.DbType.AnsiString;
            param.DbType = global::System.Data.DbType.AnsiString;
            param.SourceColumn = "Bnkrgl_DispStatus";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::System.Data.SQLite.SQLiteParameter();
            param.ParameterName = "@Original_Bnkrgl_VerwerkId";
            param.DbType = global::System.Data.DbType.Int64;
            param.DbType = global::System.Data.DbType.Int64;
            param.SourceColumn = "Bnkrgl_VerwerkId";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::System.Data.SQLite.SQLiteParameter();
            param.ParameterName = "@IsNull_Bnkrgl_Bankregel";
            param.DbType = global::System.Data.DbType.Int32;
            param.DbType = global::System.Data.DbType.Int32;
            param.SourceColumn = "Bnkrgl_Bankregel";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::System.Data.SQLite.SQLiteParameter();
            param.ParameterName = "@Original_Bnkrgl_Bankregel";
            param.DbType = global::System.Data.DbType.String;
            param.SourceColumn = "Bnkrgl_Bankregel";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::System.Data.SQLite.SQLiteParameter();
            param.ParameterName = "@Original_Bnkrgl_BstlId";
            param.DbType = global::System.Data.DbType.Int64;
            param.DbType = global::System.Data.DbType.Int64;
            param.SourceColumn = "Bnkrgl_BstlId";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::System.Data.SQLite.SQLiteParameter();
            param.ParameterName = "@Original_Bnkrgl_Mutatiedatum";
            param.DbType = global::System.Data.DbType.DateTime;
            param.DbType = global::System.Data.DbType.DateTime;
            param.SourceColumn = "Bnkrgl_Mutatiedatum";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::System.Data.SQLite.SQLiteParameter();
            param.ParameterName = "@IsNull_Bnkrgl_Opmerking";
            param.DbType = global::System.Data.DbType.Int32;
            param.DbType = global::System.Data.DbType.Int32;
            param.SourceColumn = "Bnkrgl_Opmerking";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::System.Data.SQLite.SQLiteParameter();
            param.ParameterName = "@Original_Bnkrgl_Opmerking";
            param.DbType = global::System.Data.DbType.AnsiString;
            param.DbType = global::System.Data.DbType.AnsiString;
            param.SourceColumn = "Bnkrgl_Opmerking";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitConnection() {
            this._connection = new global::System.Data.SQLite.SQLiteConnection();
            this._connection.ConnectionString = global::Cmbap.Properties.Settings.Default.Cmbap_dataConnectionString;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitCommandCollection() {
            this._commandCollection = new global::System.Data.SQLite.SQLiteCommand[1];
            this._commandCollection[0] = new global::System.Data.SQLite.SQLiteCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "SELECT [Bnkrgl_Id], [Bnkrgl_StatusId], [Bnkrgl_DispStatus], [Bnkrgl_VerwerkId], [" +
                "Bnkrgl_Bankregel], [Bnkrgl_BstlId], [Bnkrgl_Mutatiedatum], [Bnkrgl_Opmerking] FR" +
                "OM [Bankregel]";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(_Cmbap_dataDataSet.BankregelDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual _Cmbap_dataDataSet.BankregelDataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            _Cmbap_dataDataSet.BankregelDataTable dataTable = new _Cmbap_dataDataSet.BankregelDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(_Cmbap_dataDataSet.BankregelDataTable dataTable) {
            return this.Adapter.Update(dataTable);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(_Cmbap_dataDataSet dataSet) {
            return this.Adapter.Update(dataSet, "Bankregel");
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow dataRow) {
            return this.Adapter.Update(new global::System.Data.DataRow[] {
                        dataRow});
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow[] dataRows) {
            return this.Adapter.Update(dataRows);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Delete, true)]
        public virtual int Delete(long Original_Bnkrgl_Id, global::System.Nullable<long> Original_Bnkrgl_StatusId, string Original_Bnkrgl_DispStatus, long Original_Bnkrgl_VerwerkId, string Original_Bnkrgl_Bankregel, long Original_Bnkrgl_BstlId, System.DateTime Original_Bnkrgl_Mutatiedatum, string Original_Bnkrgl_Opmerking) {
            this.Adapter.DeleteCommand.Parameters[0].Value = ((long)(Original_Bnkrgl_Id));
            if ((Original_Bnkrgl_StatusId.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[1].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[2].Value = ((long)(Original_Bnkrgl_StatusId.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[1].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[2].Value = global::System.DBNull.Value;
            }
            if ((Original_Bnkrgl_DispStatus == null)) {
                this.Adapter.DeleteCommand.Parameters[3].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[4].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[3].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[4].Value = ((string)(Original_Bnkrgl_DispStatus));
            }
            this.Adapter.DeleteCommand.Parameters[5].Value = ((long)(Original_Bnkrgl_VerwerkId));
            if ((Original_Bnkrgl_Bankregel == null)) {
                this.Adapter.DeleteCommand.Parameters[6].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[7].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[6].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[7].Value = ((string)(Original_Bnkrgl_Bankregel));
            }
            this.Adapter.DeleteCommand.Parameters[8].Value = ((long)(Original_Bnkrgl_BstlId));
            this.Adapter.DeleteCommand.Parameters[9].Value = ((System.DateTime)(Original_Bnkrgl_Mutatiedatum));
            if ((Original_Bnkrgl_Opmerking == null)) {
                this.Adapter.DeleteCommand.Parameters[10].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[11].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[10].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[11].Value = ((string)(Original_Bnkrgl_Opmerking));
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.DeleteCommand.Connection.State;
            if (((this.Adapter.DeleteCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.DeleteCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.DeleteCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.DeleteCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Insert, true)]
        public virtual int Insert(global::System.Nullable<long> Bnkrgl_StatusId, string Bnkrgl_DispStatus, long Bnkrgl_VerwerkId, string Bnkrgl_Bankregel, long Bnkrgl_BstlId, System.DateTime Bnkrgl_Mutatiedatum, string Bnkrgl_Opmerking) {
            if ((Bnkrgl_StatusId.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[0].Value = ((long)(Bnkrgl_StatusId.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[0].Value = global::System.DBNull.Value;
            }
            if ((Bnkrgl_DispStatus == null)) {
                this.Adapter.InsertCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[1].Value = ((string)(Bnkrgl_DispStatus));
            }
            this.Adapter.InsertCommand.Parameters[2].Value = ((long)(Bnkrgl_VerwerkId));
            if ((Bnkrgl_Bankregel == null)) {
                this.Adapter.InsertCommand.Parameters[3].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[3].Value = ((string)(Bnkrgl_Bankregel));
            }
            this.Adapter.InsertCommand.Parameters[4].Value = ((long)(Bnkrgl_BstlId));
            this.Adapter.InsertCommand.Parameters[5].Value = ((System.DateTime)(Bnkrgl_Mutatiedatum));
            if ((Bnkrgl_Opmerking == null)) {
                this.Adapter.InsertCommand.Parameters[6].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[6].Value = ((string)(Bnkrgl_Opmerking));
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.InsertCommand.Connection.State;
            if (((this.Adapter.InsertCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.InsertCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.InsertCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.InsertCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(global::System.Nullable<long> Bnkrgl_StatusId, string Bnkrgl_DispStatus, long Bnkrgl_VerwerkId, string Bnkrgl_Bankregel, long Bnkrgl_BstlId, System.DateTime Bnkrgl_Mutatiedatum, string Bnkrgl_Opmerking, long Original_Bnkrgl_Id, global::System.Nullable<long> Original_Bnkrgl_StatusId, string Original_Bnkrgl_DispStatus, long Original_Bnkrgl_VerwerkId, string Original_Bnkrgl_Bankregel, long Original_Bnkrgl_BstlId, System.DateTime Original_Bnkrgl_Mutatiedatum, string Original_Bnkrgl_Opmerking) {
            if ((Bnkrgl_StatusId.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[0].Value = ((long)(Bnkrgl_StatusId.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[0].Value = global::System.DBNull.Value;
            }
            if ((Bnkrgl_DispStatus == null)) {
                this.Adapter.UpdateCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[1].Value = ((string)(Bnkrgl_DispStatus));
            }
            this.Adapter.UpdateCommand.Parameters[2].Value = ((long)(Bnkrgl_VerwerkId));
            if ((Bnkrgl_Bankregel == null)) {
                this.Adapter.UpdateCommand.Parameters[3].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[3].Value = ((string)(Bnkrgl_Bankregel));
            }
            this.Adapter.UpdateCommand.Parameters[4].Value = ((long)(Bnkrgl_BstlId));
            this.Adapter.UpdateCommand.Parameters[5].Value = ((System.DateTime)(Bnkrgl_Mutatiedatum));
            if ((Bnkrgl_Opmerking == null)) {
                this.Adapter.UpdateCommand.Parameters[6].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[6].Value = ((string)(Bnkrgl_Opmerking));
            }
            this.Adapter.UpdateCommand.Parameters[7].Value = ((long)(Original_Bnkrgl_Id));
            if ((Original_Bnkrgl_StatusId.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[8].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[9].Value = ((long)(Original_Bnkrgl_StatusId.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[8].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[9].Value = global::System.DBNull.Value;
            }
            if ((Original_Bnkrgl_DispStatus == null)) {
                this.Adapter.UpdateCommand.Parameters[10].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[11].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[10].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[11].Value = ((string)(Original_Bnkrgl_DispStatus));
            }
            this.Adapter.UpdateCommand.Parameters[12].Value = ((long)(Original_Bnkrgl_VerwerkId));
            if ((Original_Bnkrgl_Bankregel == null)) {
                this.Adapter.UpdateCommand.Parameters[13].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[14].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[13].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[14].Value = ((string)(Original_Bnkrgl_Bankregel));
            }
            this.Adapter.UpdateCommand.Parameters[15].Value = ((long)(Original_Bnkrgl_BstlId));
            this.Adapter.UpdateCommand.Parameters[16].Value = ((System.DateTime)(Original_Bnkrgl_Mutatiedatum));
            if ((Original_Bnkrgl_Opmerking == null)) {
                this.Adapter.UpdateCommand.Parameters[17].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[18].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[17].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[18].Value = ((string)(Original_Bnkrgl_Opmerking));
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.UpdateCommand.Connection.State;
            if (((this.Adapter.UpdateCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.UpdateCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.UpdateCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.UpdateCommand.Connection.Close();
                }
            }
        }
    }
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class BestellingTableAdapter : global::System.ComponentModel.Component {
        
        private global::System.Data.SQLite.SQLiteDataAdapter _adapter;
        
        private global::System.Data.SQLite.SQLiteConnection _connection;
        
        private global::System.Data.SQLite.SQLiteTransaction _transaction;
        
        private global::System.Data.SQLite.SQLiteCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public BestellingTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected internal global::System.Data.SQLite.SQLiteDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal global::System.Data.SQLite.SQLiteConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::System.Data.SQLite.SQLiteCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal global::System.Data.SQLite.SQLiteTransaction Transaction {
            get {
                return this._transaction;
            }
            set {
                this._transaction = value;
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    this.CommandCollection[i].Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.DeleteCommand != null))) {
                    this.Adapter.DeleteCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.InsertCommand != null))) {
                    this.Adapter.InsertCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.UpdateCommand != null))) {
                    this.Adapter.UpdateCommand.Transaction = this._transaction;
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected global::System.Data.SQLite.SQLiteCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitAdapter() {
            this._adapter = new global::System.Data.SQLite.SQLiteDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "Bestelling";
            tableMapping.ColumnMappings.Add("Bstl_Id", "Bstl_Id");
            tableMapping.ColumnMappings.Add("Bstl_StatusId", "Bstl_StatusId");
            tableMapping.ColumnMappings.Add("Bstl_Dispstatus", "Bstl_Dispstatus");
            tableMapping.ColumnMappings.Add("Bstl_BgnrId", "Bstl_BgnrId");
            tableMapping.ColumnMappings.Add("Bstl_DispBgnr", "Bstl_DispBgnr");
            tableMapping.ColumnMappings.Add("Bstl_KlBgId", "Bstl_KlBgId");
            tableMapping.ColumnMappings.Add("Bstl_DispKlBg", "Bstl_DispKlBg");
            tableMapping.ColumnMappings.Add("Bstl_VerwerkperiodeId", "Bstl_VerwerkperiodeId");
            tableMapping.ColumnMappings.Add("Bstl_Valutadatum", "Bstl_Valutadatum");
            tableMapping.ColumnMappings.Add("Bstl_Bestelbedrag", "Bstl_Bestelbedrag");
            tableMapping.ColumnMappings.Add("Bstl_Diversen", "Bstl_Diversen");
            tableMapping.ColumnMappings.Add("Bstl_DiversenId", "Bstl_DiversenId");
            tableMapping.ColumnMappings.Add("Bstl_DispDiversen", "Bstl_DispDiversen");
            tableMapping.ColumnMappings.Add("Bstl_Verschil", "Bstl_Verschil");
            tableMapping.ColumnMappings.Add("Bstl_VerschilId", "Bstl_VerschilId");
            tableMapping.ColumnMappings.Add("Bstl_DispVerschil", "Bstl_DispVerschil");
            tableMapping.ColumnMappings.Add("Bstl_Vastekostenperbestelling", "Bstl_Vastekostenperbestelling");
            tableMapping.ColumnMappings.Add("Bstl_BonnengevraagdJN", "Bstl_BonnengevraagdJN");
            tableMapping.ColumnMappings.Add("Bstl_Mutatiedatum", "Bstl_Mutatiedatum");
            tableMapping.ColumnMappings.Add("Bstl_Opmerking", "Bstl_Opmerking");
            this._adapter.TableMappings.Add(tableMapping);
            this._adapter.DeleteCommand = new global::System.Data.SQLite.SQLiteCommand();
            this._adapter.DeleteCommand.Connection = this.Connection;
            this._adapter.DeleteCommand.CommandText = "DELETE FROM [main].[sqlite_default_schema].[Bestelling] WHERE (([Bstl_Id] = @Orig" +
                "inal_Bstl_Id) AND ((@IsNull_Bstl_StatusId = 1 AND [Bstl_StatusId] IS NULL) OR ([" +
                "Bstl_StatusId] = @Original_Bstl_StatusId)) AND ((@IsNull_Bstl_Dispstatus = 1 AND" +
                " [Bstl_Dispstatus] IS NULL) OR ([Bstl_Dispstatus] = @Original_Bstl_Dispstatus)) " +
                "AND ([Bstl_BgnrId] = @Original_Bstl_BgnrId) AND ((@IsNull_Bstl_DispBgnr = 1 AND " +
                "[Bstl_DispBgnr] IS NULL) OR ([Bstl_DispBgnr] = @Original_Bstl_DispBgnr)) AND ([B" +
                "stl_KlBgId] = @Original_Bstl_KlBgId) AND ((@IsNull_Bstl_DispKlBg = 1 AND [Bstl_D" +
                "ispKlBg] IS NULL) OR ([Bstl_DispKlBg] = @Original_Bstl_DispKlBg)) AND ((@IsNull_" +
                "Bstl_VerwerkperiodeId = 1 AND [Bstl_VerwerkperiodeId] IS NULL) OR ([Bstl_Verwerk" +
                "periodeId] = @Original_Bstl_VerwerkperiodeId)) AND ([Bstl_Valutadatum] = @Origin" +
                "al_Bstl_Valutadatum) AND ([Bstl_Bestelbedrag] = @Original_Bstl_Bestelbedrag) AND" +
                " ((@IsNull_Bstl_Diversen = 1 AND [Bstl_Diversen] IS NULL) OR ([Bstl_Diversen] = " +
                "@Original_Bstl_Diversen)) AND ((@IsNull_Bstl_DiversenId = 1 AND [Bstl_DiversenId" +
                "] IS NULL) OR ([Bstl_DiversenId] = @Original_Bstl_DiversenId)) AND ((@IsNull_Bst" +
                "l_DispDiversen = 1 AND [Bstl_DispDiversen] IS NULL) OR ([Bstl_DispDiversen] = @O" +
                "riginal_Bstl_DispDiversen)) AND ((@IsNull_Bstl_Verschil = 1 AND [Bstl_Verschil] " +
                "IS NULL) OR ([Bstl_Verschil] = @Original_Bstl_Verschil)) AND ((@IsNull_Bstl_Vers" +
                "chilId = 1 AND [Bstl_VerschilId] IS NULL) OR ([Bstl_VerschilId] = @Original_Bstl" +
                "_VerschilId)) AND ((@IsNull_Bstl_DispVerschil = 1 AND [Bstl_DispVerschil] IS NUL" +
                "L) OR ([Bstl_DispVerschil] = @Original_Bstl_DispVerschil)) AND ((@IsNull_Bstl_Va" +
                "stekostenperbestelling = 1 AND [Bstl_Vastekostenperbestelling] IS NULL) OR ([Bst" +
                "l_Vastekostenperbestelling] = @Original_Bstl_Vastekostenperbestelling)) AND ([Bs" +
                "tl_BonnengevraagdJN] = @Original_Bstl_BonnengevraagdJN) AND ((@IsNull_Bstl_Mutat" +
                "iedatum = 1 AND [Bstl_Mutatiedatum] IS NULL) OR ([Bstl_Mutatiedatum] = @Original" +
                "_Bstl_Mutatiedatum)) AND ((@IsNull_Bstl_Opmerking = 1 AND [Bstl_Opmerking] IS NU" +
                "LL) OR ([Bstl_Opmerking] = @Original_Bstl_Opmerking)))";
            this._adapter.DeleteCommand.CommandType = global::System.Data.CommandType.Text;
            global::System.Data.SQLite.SQLiteParameter param = new global::System.Data.SQLite.SQLiteParameter();
            param.ParameterName = "@Original_Bstl_Id";
            param.DbType = global::System.Data.DbType.Int64;
            param.DbType = global::System.Data.DbType.Int64;
            param.SourceColumn = "Bstl_Id";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::System.Data.SQLite.SQLiteParameter();
            param.ParameterName = "@IsNull_Bstl_StatusId";
            param.DbType = global::System.Data.DbType.Int32;
            param.DbType = global::System.Data.DbType.Int32;
            param.SourceColumn = "Bstl_StatusId";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::System.Data.SQLite.SQLiteParameter();
            param.ParameterName = "@Original_Bstl_StatusId";
            param.DbType = global::System.Data.DbType.Int64;
            param.DbType = global::System.Data.DbType.Int64;
            param.SourceColumn = "Bstl_StatusId";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::System.Data.SQLite.SQLiteParameter();
            param.ParameterName = "@IsNull_Bstl_Dispstatus";
            param.DbType = global::System.Data.DbType.Int32;
            param.DbType = global::System.Data.DbType.Int32;
            param.SourceColumn = "Bstl_Dispstatus";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::System.Data.SQLite.SQLiteParameter();
            param.ParameterName = "@Original_Bstl_Dispstatus";
            param.DbType = global::System.Data.DbType.AnsiString;
            param.DbType = global::System.Data.DbType.AnsiString;
            param.SourceColumn = "Bstl_Dispstatus";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::System.Data.SQLite.SQLiteParameter();
            param.ParameterName = "@Original_Bstl_BgnrId";
            param.DbType = global::System.Data.DbType.Int64;
            param.DbType = global::System.Data.DbType.Int64;
            param.SourceColumn = "Bstl_BgnrId";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::System.Data.SQLite.SQLiteParameter();
            param.ParameterName = "@IsNull_Bstl_DispBgnr";
            param.DbType = global::System.Data.DbType.Int32;
            param.DbType = global::System.Data.DbType.Int32;
            param.SourceColumn = "Bstl_DispBgnr";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::System.Data.SQLite.SQLiteParameter();
            param.ParameterName = "@Original_Bstl_DispBgnr";
            param.DbType = global::System.Data.DbType.AnsiString;
            param.DbType = global::System.Data.DbType.AnsiString;
            param.SourceColumn = "Bstl_DispBgnr";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::System.Data.SQLite.SQLiteParameter();
            param.ParameterName = "@Original_Bstl_KlBgId";
            param.DbType = global::System.Data.DbType.Int64;
            param.DbType = global::System.Data.DbType.Int64;
            param.SourceColumn = "Bstl_KlBgId";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::System.Data.SQLite.SQLiteParameter();
            param.ParameterName = "@IsNull_Bstl_DispKlBg";
            param.DbType = global::System.Data.DbType.Int32;
            param.DbType = global::System.Data.DbType.Int32;
            param.SourceColumn = "Bstl_DispKlBg";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::System.Data.SQLite.SQLiteParameter();
            param.ParameterName = "@Original_Bstl_DispKlBg";
            param.DbType = global::System.Data.DbType.AnsiString;
            param.DbType = global::System.Data.DbType.AnsiString;
            param.SourceColumn = "Bstl_DispKlBg";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::System.Data.SQLite.SQLiteParameter();
            param.ParameterName = "@IsNull_Bstl_VerwerkperiodeId";
            param.DbType = global::System.Data.DbType.Int32;
            param.DbType = global::System.Data.DbType.Int32;
            param.SourceColumn = "Bstl_VerwerkperiodeId";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::System.Data.SQLite.SQLiteParameter();
            param.ParameterName = "@Original_Bstl_VerwerkperiodeId";
            param.DbType = global::System.Data.DbType.Int64;
            param.DbType = global::System.Data.DbType.Int64;
            param.SourceColumn = "Bstl_VerwerkperiodeId";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::System.Data.SQLite.SQLiteParameter();
            param.ParameterName = "@Original_Bstl_Valutadatum";
            param.DbType = global::System.Data.DbType.DateTime;
            param.DbType = global::System.Data.DbType.DateTime;
            param.SourceColumn = "Bstl_Valutadatum";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::System.Data.SQLite.SQLiteParameter();
            param.ParameterName = "@Original_Bstl_Bestelbedrag";
            param.DbType = global::System.Data.DbType.Decimal;
            param.DbType = global::System.Data.DbType.Decimal;
            param.SourceColumn = "Bstl_Bestelbedrag";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::System.Data.SQLite.SQLiteParameter();
            param.ParameterName = "@IsNull_Bstl_Diversen";
            param.DbType = global::System.Data.DbType.Int32;
            param.DbType = global::System.Data.DbType.Int32;
            param.SourceColumn = "Bstl_Diversen";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::System.Data.SQLite.SQLiteParameter();
            param.ParameterName = "@Original_Bstl_Diversen";
            param.DbType = global::System.Data.DbType.Decimal;
            param.DbType = global::System.Data.DbType.Decimal;
            param.SourceColumn = "Bstl_Diversen";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::System.Data.SQLite.SQLiteParameter();
            param.ParameterName = "@IsNull_Bstl_DiversenId";
            param.DbType = global::System.Data.DbType.Int32;
            param.DbType = global::System.Data.DbType.Int32;
            param.SourceColumn = "Bstl_DiversenId";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::System.Data.SQLite.SQLiteParameter();
            param.ParameterName = "@Original_Bstl_DiversenId";
            param.DbType = global::System.Data.DbType.Int64;
            param.DbType = global::System.Data.DbType.Int64;
            param.SourceColumn = "Bstl_DiversenId";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::System.Data.SQLite.SQLiteParameter();
            param.ParameterName = "@IsNull_Bstl_DispDiversen";
            param.DbType = global::System.Data.DbType.Int32;
            param.DbType = global::System.Data.DbType.Int32;
            param.SourceColumn = "Bstl_DispDiversen";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::System.Data.SQLite.SQLiteParameter();
            param.ParameterName = "@Original_Bstl_DispDiversen";
            param.DbType = global::System.Data.DbType.AnsiString;
            param.DbType = global::System.Data.DbType.AnsiString;
            param.SourceColumn = "Bstl_DispDiversen";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::System.Data.SQLite.SQLiteParameter();
            param.ParameterName = "@IsNull_Bstl_Verschil";
            param.DbType = global::System.Data.DbType.Int32;
            param.DbType = global::System.Data.DbType.Int32;
            param.SourceColumn = "Bstl_Verschil";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::System.Data.SQLite.SQLiteParameter();
            param.ParameterName = "@Original_Bstl_Verschil";
            param.DbType = global::System.Data.DbType.Decimal;
            param.DbType = global::System.Data.DbType.Decimal;
            param.SourceColumn = "Bstl_Verschil";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::System.Data.SQLite.SQLiteParameter();
            param.ParameterName = "@IsNull_Bstl_VerschilId";
            param.DbType = global::System.Data.DbType.Int32;
            param.DbType = global::System.Data.DbType.Int32;
            param.SourceColumn = "Bstl_VerschilId";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::System.Data.SQLite.SQLiteParameter();
            param.ParameterName = "@Original_Bstl_VerschilId";
            param.DbType = global::System.Data.DbType.Int64;
            param.DbType = global::System.Data.DbType.Int64;
            param.SourceColumn = "Bstl_VerschilId";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::System.Data.SQLite.SQLiteParameter();
            param.ParameterName = "@IsNull_Bstl_DispVerschil";
            param.DbType = global::System.Data.DbType.Int32;
            param.DbType = global::System.Data.DbType.Int32;
            param.SourceColumn = "Bstl_DispVerschil";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::System.Data.SQLite.SQLiteParameter();
            param.ParameterName = "@Original_Bstl_DispVerschil";
            param.DbType = global::System.Data.DbType.AnsiString;
            param.DbType = global::System.Data.DbType.AnsiString;
            param.SourceColumn = "Bstl_DispVerschil";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::System.Data.SQLite.SQLiteParameter();
            param.ParameterName = "@IsNull_Bstl_Vastekostenperbestelling";
            param.DbType = global::System.Data.DbType.Int32;
            param.DbType = global::System.Data.DbType.Int32;
            param.SourceColumn = "Bstl_Vastekostenperbestelling";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::System.Data.SQLite.SQLiteParameter();
            param.ParameterName = "@Original_Bstl_Vastekostenperbestelling";
            param.DbType = global::System.Data.DbType.Decimal;
            param.DbType = global::System.Data.DbType.Decimal;
            param.SourceColumn = "Bstl_Vastekostenperbestelling";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::System.Data.SQLite.SQLiteParameter();
            param.ParameterName = "@Original_Bstl_BonnengevraagdJN";
            param.DbType = global::System.Data.DbType.Int64;
            param.DbType = global::System.Data.DbType.Int64;
            param.SourceColumn = "Bstl_BonnengevraagdJN";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::System.Data.SQLite.SQLiteParameter();
            param.ParameterName = "@IsNull_Bstl_Mutatiedatum";
            param.DbType = global::System.Data.DbType.Int32;
            param.DbType = global::System.Data.DbType.Int32;
            param.SourceColumn = "Bstl_Mutatiedatum";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::System.Data.SQLite.SQLiteParameter();
            param.ParameterName = "@Original_Bstl_Mutatiedatum";
            param.DbType = global::System.Data.DbType.DateTime;
            param.DbType = global::System.Data.DbType.DateTime;
            param.SourceColumn = "Bstl_Mutatiedatum";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::System.Data.SQLite.SQLiteParameter();
            param.ParameterName = "@IsNull_Bstl_Opmerking";
            param.DbType = global::System.Data.DbType.Int32;
            param.DbType = global::System.Data.DbType.Int32;
            param.SourceColumn = "Bstl_Opmerking";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::System.Data.SQLite.SQLiteParameter();
            param.ParameterName = "@Original_Bstl_Opmerking";
            param.DbType = global::System.Data.DbType.AnsiString;
            param.DbType = global::System.Data.DbType.AnsiString;
            param.SourceColumn = "Bstl_Opmerking";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            this._adapter.InsertCommand = new global::System.Data.SQLite.SQLiteCommand();
            this._adapter.InsertCommand.Connection = this.Connection;
            this._adapter.InsertCommand.CommandText = @"INSERT INTO [main].[sqlite_default_schema].[Bestelling] ([Bstl_StatusId], [Bstl_Dispstatus], [Bstl_BgnrId], [Bstl_DispBgnr], [Bstl_KlBgId], [Bstl_DispKlBg], [Bstl_VerwerkperiodeId], [Bstl_Valutadatum], [Bstl_Bestelbedrag], [Bstl_Diversen], [Bstl_DiversenId], [Bstl_DispDiversen], [Bstl_Verschil], [Bstl_VerschilId], [Bstl_DispVerschil], [Bstl_Vastekostenperbestelling], [Bstl_BonnengevraagdJN], [Bstl_Mutatiedatum], [Bstl_Opmerking]) VALUES (@Bstl_StatusId, @Bstl_Dispstatus, @Bstl_BgnrId, @Bstl_DispBgnr, @Bstl_KlBgId, @Bstl_DispKlBg, @Bstl_VerwerkperiodeId, @Bstl_Valutadatum, @Bstl_Bestelbedrag, @Bstl_Diversen, @Bstl_DiversenId, @Bstl_DispDiversen, @Bstl_Verschil, @Bstl_VerschilId, @Bstl_DispVerschil, @Bstl_Vastekostenperbestelling, @Bstl_BonnengevraagdJN, @Bstl_Mutatiedatum, @Bstl_Opmerking)";
            this._adapter.InsertCommand.CommandType = global::System.Data.CommandType.Text;
            param = new global::System.Data.SQLite.SQLiteParameter();
            param.ParameterName = "@Bstl_StatusId";
            param.DbType = global::System.Data.DbType.Int64;
            param.DbType = global::System.Data.DbType.Int64;
            param.SourceColumn = "Bstl_StatusId";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::System.Data.SQLite.SQLiteParameter();
            param.ParameterName = "@Bstl_Dispstatus";
            param.DbType = global::System.Data.DbType.AnsiString;
            param.DbType = global::System.Data.DbType.AnsiString;
            param.SourceColumn = "Bstl_Dispstatus";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::System.Data.SQLite.SQLiteParameter();
            param.ParameterName = "@Bstl_BgnrId";
            param.DbType = global::System.Data.DbType.Int64;
            param.DbType = global::System.Data.DbType.Int64;
            param.SourceColumn = "Bstl_BgnrId";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::System.Data.SQLite.SQLiteParameter();
            param.ParameterName = "@Bstl_DispBgnr";
            param.DbType = global::System.Data.DbType.AnsiString;
            param.DbType = global::System.Data.DbType.AnsiString;
            param.SourceColumn = "Bstl_DispBgnr";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::System.Data.SQLite.SQLiteParameter();
            param.ParameterName = "@Bstl_KlBgId";
            param.DbType = global::System.Data.DbType.Int64;
            param.DbType = global::System.Data.DbType.Int64;
            param.SourceColumn = "Bstl_KlBgId";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::System.Data.SQLite.SQLiteParameter();
            param.ParameterName = "@Bstl_DispKlBg";
            param.DbType = global::System.Data.DbType.AnsiString;
            param.DbType = global::System.Data.DbType.AnsiString;
            param.SourceColumn = "Bstl_DispKlBg";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::System.Data.SQLite.SQLiteParameter();
            param.ParameterName = "@Bstl_VerwerkperiodeId";
            param.DbType = global::System.Data.DbType.Int64;
            param.DbType = global::System.Data.DbType.Int64;
            param.SourceColumn = "Bstl_VerwerkperiodeId";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::System.Data.SQLite.SQLiteParameter();
            param.ParameterName = "@Bstl_Valutadatum";
            param.DbType = global::System.Data.DbType.DateTime;
            param.DbType = global::System.Data.DbType.DateTime;
            param.SourceColumn = "Bstl_Valutadatum";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::System.Data.SQLite.SQLiteParameter();
            param.ParameterName = "@Bstl_Bestelbedrag";
            param.DbType = global::System.Data.DbType.Decimal;
            param.DbType = global::System.Data.DbType.Decimal;
            param.SourceColumn = "Bstl_Bestelbedrag";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::System.Data.SQLite.SQLiteParameter();
            param.ParameterName = "@Bstl_Diversen";
            param.DbType = global::System.Data.DbType.Decimal;
            param.DbType = global::System.Data.DbType.Decimal;
            param.SourceColumn = "Bstl_Diversen";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::System.Data.SQLite.SQLiteParameter();
            param.ParameterName = "@Bstl_DiversenId";
            param.DbType = global::System.Data.DbType.Int64;
            param.DbType = global::System.Data.DbType.Int64;
            param.SourceColumn = "Bstl_DiversenId";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::System.Data.SQLite.SQLiteParameter();
            param.ParameterName = "@Bstl_DispDiversen";
            param.DbType = global::System.Data.DbType.AnsiString;
            param.DbType = global::System.Data.DbType.AnsiString;
            param.SourceColumn = "Bstl_DispDiversen";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::System.Data.SQLite.SQLiteParameter();
            param.ParameterName = "@Bstl_Verschil";
            param.DbType = global::System.Data.DbType.Decimal;
            param.DbType = global::System.Data.DbType.Decimal;
            param.SourceColumn = "Bstl_Verschil";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::System.Data.SQLite.SQLiteParameter();
            param.ParameterName = "@Bstl_VerschilId";
            param.DbType = global::System.Data.DbType.Int64;
            param.DbType = global::System.Data.DbType.Int64;
            param.SourceColumn = "Bstl_VerschilId";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::System.Data.SQLite.SQLiteParameter();
            param.ParameterName = "@Bstl_DispVerschil";
            param.DbType = global::System.Data.DbType.AnsiString;
            param.DbType = global::System.Data.DbType.AnsiString;
            param.SourceColumn = "Bstl_DispVerschil";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::System.Data.SQLite.SQLiteParameter();
            param.ParameterName = "@Bstl_Vastekostenperbestelling";
            param.DbType = global::System.Data.DbType.Decimal;
            param.DbType = global::System.Data.DbType.Decimal;
            param.SourceColumn = "Bstl_Vastekostenperbestelling";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::System.Data.SQLite.SQLiteParameter();
            param.ParameterName = "@Bstl_BonnengevraagdJN";
            param.DbType = global::System.Data.DbType.Int64;
            param.DbType = global::System.Data.DbType.Int64;
            param.SourceColumn = "Bstl_BonnengevraagdJN";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::System.Data.SQLite.SQLiteParameter();
            param.ParameterName = "@Bstl_Mutatiedatum";
            param.DbType = global::System.Data.DbType.DateTime;
            param.DbType = global::System.Data.DbType.DateTime;
            param.SourceColumn = "Bstl_Mutatiedatum";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::System.Data.SQLite.SQLiteParameter();
            param.ParameterName = "@Bstl_Opmerking";
            param.DbType = global::System.Data.DbType.AnsiString;
            param.DbType = global::System.Data.DbType.AnsiString;
            param.SourceColumn = "Bstl_Opmerking";
            this._adapter.InsertCommand.Parameters.Add(param);
            this._adapter.UpdateCommand = new global::System.Data.SQLite.SQLiteCommand();
            this._adapter.UpdateCommand.Connection = this.Connection;
            this._adapter.UpdateCommand.CommandText = "UPDATE [main].[sqlite_default_schema].[Bestelling] SET [Bstl_StatusId] = @Bstl_St" +
                "atusId, [Bstl_Dispstatus] = @Bstl_Dispstatus, [Bstl_BgnrId] = @Bstl_BgnrId, [Bst" +
                "l_DispBgnr] = @Bstl_DispBgnr, [Bstl_KlBgId] = @Bstl_KlBgId, [Bstl_DispKlBg] = @B" +
                "stl_DispKlBg, [Bstl_VerwerkperiodeId] = @Bstl_VerwerkperiodeId, [Bstl_Valutadatu" +
                "m] = @Bstl_Valutadatum, [Bstl_Bestelbedrag] = @Bstl_Bestelbedrag, [Bstl_Diversen" +
                "] = @Bstl_Diversen, [Bstl_DiversenId] = @Bstl_DiversenId, [Bstl_DispDiversen] = " +
                "@Bstl_DispDiversen, [Bstl_Verschil] = @Bstl_Verschil, [Bstl_VerschilId] = @Bstl_" +
                "VerschilId, [Bstl_DispVerschil] = @Bstl_DispVerschil, [Bstl_Vastekostenperbestel" +
                "ling] = @Bstl_Vastekostenperbestelling, [Bstl_BonnengevraagdJN] = @Bstl_Bonnenge" +
                "vraagdJN, [Bstl_Mutatiedatum] = @Bstl_Mutatiedatum, [Bstl_Opmerking] = @Bstl_Opm" +
                "erking WHERE (([Bstl_Id] = @Original_Bstl_Id) AND ((@IsNull_Bstl_StatusId = 1 AN" +
                "D [Bstl_StatusId] IS NULL) OR ([Bstl_StatusId] = @Original_Bstl_StatusId)) AND (" +
                "(@IsNull_Bstl_Dispstatus = 1 AND [Bstl_Dispstatus] IS NULL) OR ([Bstl_Dispstatus" +
                "] = @Original_Bstl_Dispstatus)) AND ([Bstl_BgnrId] = @Original_Bstl_BgnrId) AND " +
                "((@IsNull_Bstl_DispBgnr = 1 AND [Bstl_DispBgnr] IS NULL) OR ([Bstl_DispBgnr] = @" +
                "Original_Bstl_DispBgnr)) AND ([Bstl_KlBgId] = @Original_Bstl_KlBgId) AND ((@IsNu" +
                "ll_Bstl_DispKlBg = 1 AND [Bstl_DispKlBg] IS NULL) OR ([Bstl_DispKlBg] = @Origina" +
                "l_Bstl_DispKlBg)) AND ((@IsNull_Bstl_VerwerkperiodeId = 1 AND [Bstl_Verwerkperio" +
                "deId] IS NULL) OR ([Bstl_VerwerkperiodeId] = @Original_Bstl_VerwerkperiodeId)) A" +
                "ND ([Bstl_Valutadatum] = @Original_Bstl_Valutadatum) AND ([Bstl_Bestelbedrag] = " +
                "@Original_Bstl_Bestelbedrag) AND ((@IsNull_Bstl_Diversen = 1 AND [Bstl_Diversen]" +
                " IS NULL) OR ([Bstl_Diversen] = @Original_Bstl_Diversen)) AND ((@IsNull_Bstl_Div" +
                "ersenId = 1 AND [Bstl_DiversenId] IS NULL) OR ([Bstl_DiversenId] = @Original_Bst" +
                "l_DiversenId)) AND ((@IsNull_Bstl_DispDiversen = 1 AND [Bstl_DispDiversen] IS NU" +
                "LL) OR ([Bstl_DispDiversen] = @Original_Bstl_DispDiversen)) AND ((@IsNull_Bstl_V" +
                "erschil = 1 AND [Bstl_Verschil] IS NULL) OR ([Bstl_Verschil] = @Original_Bstl_Ve" +
                "rschil)) AND ((@IsNull_Bstl_VerschilId = 1 AND [Bstl_VerschilId] IS NULL) OR ([B" +
                "stl_VerschilId] = @Original_Bstl_VerschilId)) AND ((@IsNull_Bstl_DispVerschil = " +
                "1 AND [Bstl_DispVerschil] IS NULL) OR ([Bstl_DispVerschil] = @Original_Bstl_Disp" +
                "Verschil)) AND ((@IsNull_Bstl_Vastekostenperbestelling = 1 AND [Bstl_Vastekosten" +
                "perbestelling] IS NULL) OR ([Bstl_Vastekostenperbestelling] = @Original_Bstl_Vas" +
                "tekostenperbestelling)) AND ([Bstl_BonnengevraagdJN] = @Original_Bstl_Bonnengevr" +
                "aagdJN) AND ((@IsNull_Bstl_Mutatiedatum = 1 AND [Bstl_Mutatiedatum] IS NULL) OR " +
                "([Bstl_Mutatiedatum] = @Original_Bstl_Mutatiedatum)) AND ((@IsNull_Bstl_Opmerkin" +
                "g = 1 AND [Bstl_Opmerking] IS NULL) OR ([Bstl_Opmerking] = @Original_Bstl_Opmerk" +
                "ing)))";
            this._adapter.UpdateCommand.CommandType = global::System.Data.CommandType.Text;
            param = new global::System.Data.SQLite.SQLiteParameter();
            param.ParameterName = "@Bstl_StatusId";
            param.DbType = global::System.Data.DbType.Int64;
            param.DbType = global::System.Data.DbType.Int64;
            param.SourceColumn = "Bstl_StatusId";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::System.Data.SQLite.SQLiteParameter();
            param.ParameterName = "@Bstl_Dispstatus";
            param.DbType = global::System.Data.DbType.AnsiString;
            param.DbType = global::System.Data.DbType.AnsiString;
            param.SourceColumn = "Bstl_Dispstatus";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::System.Data.SQLite.SQLiteParameter();
            param.ParameterName = "@Bstl_BgnrId";
            param.DbType = global::System.Data.DbType.Int64;
            param.DbType = global::System.Data.DbType.Int64;
            param.SourceColumn = "Bstl_BgnrId";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::System.Data.SQLite.SQLiteParameter();
            param.ParameterName = "@Bstl_DispBgnr";
            param.DbType = global::System.Data.DbType.AnsiString;
            param.DbType = global::System.Data.DbType.AnsiString;
            param.SourceColumn = "Bstl_DispBgnr";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::System.Data.SQLite.SQLiteParameter();
            param.ParameterName = "@Bstl_KlBgId";
            param.DbType = global::System.Data.DbType.Int64;
            param.DbType = global::System.Data.DbType.Int64;
            param.SourceColumn = "Bstl_KlBgId";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::System.Data.SQLite.SQLiteParameter();
            param.ParameterName = "@Bstl_DispKlBg";
            param.DbType = global::System.Data.DbType.AnsiString;
            param.DbType = global::System.Data.DbType.AnsiString;
            param.SourceColumn = "Bstl_DispKlBg";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::System.Data.SQLite.SQLiteParameter();
            param.ParameterName = "@Bstl_VerwerkperiodeId";
            param.DbType = global::System.Data.DbType.Int64;
            param.DbType = global::System.Data.DbType.Int64;
            param.SourceColumn = "Bstl_VerwerkperiodeId";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::System.Data.SQLite.SQLiteParameter();
            param.ParameterName = "@Bstl_Valutadatum";
            param.DbType = global::System.Data.DbType.DateTime;
            param.DbType = global::System.Data.DbType.DateTime;
            param.SourceColumn = "Bstl_Valutadatum";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::System.Data.SQLite.SQLiteParameter();
            param.ParameterName = "@Bstl_Bestelbedrag";
            param.DbType = global::System.Data.DbType.Decimal;
            param.DbType = global::System.Data.DbType.Decimal;
            param.SourceColumn = "Bstl_Bestelbedrag";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::System.Data.SQLite.SQLiteParameter();
            param.ParameterName = "@Bstl_Diversen";
            param.DbType = global::System.Data.DbType.Decimal;
            param.DbType = global::System.Data.DbType.Decimal;
            param.SourceColumn = "Bstl_Diversen";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::System.Data.SQLite.SQLiteParameter();
            param.ParameterName = "@Bstl_DiversenId";
            param.DbType = global::System.Data.DbType.Int64;
            param.DbType = global::System.Data.DbType.Int64;
            param.SourceColumn = "Bstl_DiversenId";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::System.Data.SQLite.SQLiteParameter();
            param.ParameterName = "@Bstl_DispDiversen";
            param.DbType = global::System.Data.DbType.AnsiString;
            param.DbType = global::System.Data.DbType.AnsiString;
            param.SourceColumn = "Bstl_DispDiversen";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::System.Data.SQLite.SQLiteParameter();
            param.ParameterName = "@Bstl_Verschil";
            param.DbType = global::System.Data.DbType.Decimal;
            param.DbType = global::System.Data.DbType.Decimal;
            param.SourceColumn = "Bstl_Verschil";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::System.Data.SQLite.SQLiteParameter();
            param.ParameterName = "@Bstl_VerschilId";
            param.DbType = global::System.Data.DbType.Int64;
            param.DbType = global::System.Data.DbType.Int64;
            param.SourceColumn = "Bstl_VerschilId";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::System.Data.SQLite.SQLiteParameter();
            param.ParameterName = "@Bstl_DispVerschil";
            param.DbType = global::System.Data.DbType.AnsiString;
            param.DbType = global::System.Data.DbType.AnsiString;
            param.SourceColumn = "Bstl_DispVerschil";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::System.Data.SQLite.SQLiteParameter();
            param.ParameterName = "@Bstl_Vastekostenperbestelling";
            param.DbType = global::System.Data.DbType.Decimal;
            param.DbType = global::System.Data.DbType.Decimal;
            param.SourceColumn = "Bstl_Vastekostenperbestelling";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::System.Data.SQLite.SQLiteParameter();
            param.ParameterName = "@Bstl_BonnengevraagdJN";
            param.DbType = global::System.Data.DbType.Int64;
            param.DbType = global::System.Data.DbType.Int64;
            param.SourceColumn = "Bstl_BonnengevraagdJN";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::System.Data.SQLite.SQLiteParameter();
            param.ParameterName = "@Bstl_Mutatiedatum";
            param.DbType = global::System.Data.DbType.DateTime;
            param.DbType = global::System.Data.DbType.DateTime;
            param.SourceColumn = "Bstl_Mutatiedatum";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::System.Data.SQLite.SQLiteParameter();
            param.ParameterName = "@Bstl_Opmerking";
            param.DbType = global::System.Data.DbType.AnsiString;
            param.DbType = global::System.Data.DbType.AnsiString;
            param.SourceColumn = "Bstl_Opmerking";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::System.Data.SQLite.SQLiteParameter();
            param.ParameterName = "@Original_Bstl_Id";
            param.DbType = global::System.Data.DbType.Int64;
            param.DbType = global::System.Data.DbType.Int64;
            param.SourceColumn = "Bstl_Id";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::System.Data.SQLite.SQLiteParameter();
            param.ParameterName = "@IsNull_Bstl_StatusId";
            param.DbType = global::System.Data.DbType.Int32;
            param.DbType = global::System.Data.DbType.Int32;
            param.SourceColumn = "Bstl_StatusId";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::System.Data.SQLite.SQLiteParameter();
            param.ParameterName = "@Original_Bstl_StatusId";
            param.DbType = global::System.Data.DbType.Int64;
            param.DbType = global::System.Data.DbType.Int64;
            param.SourceColumn = "Bstl_StatusId";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::System.Data.SQLite.SQLiteParameter();
            param.ParameterName = "@IsNull_Bstl_Dispstatus";
            param.DbType = global::System.Data.DbType.Int32;
            param.DbType = global::System.Data.DbType.Int32;
            param.SourceColumn = "Bstl_Dispstatus";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::System.Data.SQLite.SQLiteParameter();
            param.ParameterName = "@Original_Bstl_Dispstatus";
            param.DbType = global::System.Data.DbType.AnsiString;
            param.DbType = global::System.Data.DbType.AnsiString;
            param.SourceColumn = "Bstl_Dispstatus";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::System.Data.SQLite.SQLiteParameter();
            param.ParameterName = "@Original_Bstl_BgnrId";
            param.DbType = global::System.Data.DbType.Int64;
            param.DbType = global::System.Data.DbType.Int64;
            param.SourceColumn = "Bstl_BgnrId";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::System.Data.SQLite.SQLiteParameter();
            param.ParameterName = "@IsNull_Bstl_DispBgnr";
            param.DbType = global::System.Data.DbType.Int32;
            param.DbType = global::System.Data.DbType.Int32;
            param.SourceColumn = "Bstl_DispBgnr";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::System.Data.SQLite.SQLiteParameter();
            param.ParameterName = "@Original_Bstl_DispBgnr";
            param.DbType = global::System.Data.DbType.AnsiString;
            param.DbType = global::System.Data.DbType.AnsiString;
            param.SourceColumn = "Bstl_DispBgnr";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::System.Data.SQLite.SQLiteParameter();
            param.ParameterName = "@Original_Bstl_KlBgId";
            param.DbType = global::System.Data.DbType.Int64;
            param.DbType = global::System.Data.DbType.Int64;
            param.SourceColumn = "Bstl_KlBgId";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::System.Data.SQLite.SQLiteParameter();
            param.ParameterName = "@IsNull_Bstl_DispKlBg";
            param.DbType = global::System.Data.DbType.Int32;
            param.DbType = global::System.Data.DbType.Int32;
            param.SourceColumn = "Bstl_DispKlBg";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::System.Data.SQLite.SQLiteParameter();
            param.ParameterName = "@Original_Bstl_DispKlBg";
            param.DbType = global::System.Data.DbType.AnsiString;
            param.DbType = global::System.Data.DbType.AnsiString;
            param.SourceColumn = "Bstl_DispKlBg";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::System.Data.SQLite.SQLiteParameter();
            param.ParameterName = "@IsNull_Bstl_VerwerkperiodeId";
            param.DbType = global::System.Data.DbType.Int32;
            param.DbType = global::System.Data.DbType.Int32;
            param.SourceColumn = "Bstl_VerwerkperiodeId";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::System.Data.SQLite.SQLiteParameter();
            param.ParameterName = "@Original_Bstl_VerwerkperiodeId";
            param.DbType = global::System.Data.DbType.Int64;
            param.DbType = global::System.Data.DbType.Int64;
            param.SourceColumn = "Bstl_VerwerkperiodeId";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::System.Data.SQLite.SQLiteParameter();
            param.ParameterName = "@Original_Bstl_Valutadatum";
            param.DbType = global::System.Data.DbType.DateTime;
            param.DbType = global::System.Data.DbType.DateTime;
            param.SourceColumn = "Bstl_Valutadatum";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::System.Data.SQLite.SQLiteParameter();
            param.ParameterName = "@Original_Bstl_Bestelbedrag";
            param.DbType = global::System.Data.DbType.Decimal;
            param.DbType = global::System.Data.DbType.Decimal;
            param.SourceColumn = "Bstl_Bestelbedrag";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::System.Data.SQLite.SQLiteParameter();
            param.ParameterName = "@IsNull_Bstl_Diversen";
            param.DbType = global::System.Data.DbType.Int32;
            param.DbType = global::System.Data.DbType.Int32;
            param.SourceColumn = "Bstl_Diversen";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::System.Data.SQLite.SQLiteParameter();
            param.ParameterName = "@Original_Bstl_Diversen";
            param.DbType = global::System.Data.DbType.Decimal;
            param.DbType = global::System.Data.DbType.Decimal;
            param.SourceColumn = "Bstl_Diversen";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::System.Data.SQLite.SQLiteParameter();
            param.ParameterName = "@IsNull_Bstl_DiversenId";
            param.DbType = global::System.Data.DbType.Int32;
            param.DbType = global::System.Data.DbType.Int32;
            param.SourceColumn = "Bstl_DiversenId";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::System.Data.SQLite.SQLiteParameter();
            param.ParameterName = "@Original_Bstl_DiversenId";
            param.DbType = global::System.Data.DbType.Int64;
            param.DbType = global::System.Data.DbType.Int64;
            param.SourceColumn = "Bstl_DiversenId";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::System.Data.SQLite.SQLiteParameter();
            param.ParameterName = "@IsNull_Bstl_DispDiversen";
            param.DbType = global::System.Data.DbType.Int32;
            param.DbType = global::System.Data.DbType.Int32;
            param.SourceColumn = "Bstl_DispDiversen";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::System.Data.SQLite.SQLiteParameter();
            param.ParameterName = "@Original_Bstl_DispDiversen";
            param.DbType = global::System.Data.DbType.AnsiString;
            param.DbType = global::System.Data.DbType.AnsiString;
            param.SourceColumn = "Bstl_DispDiversen";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::System.Data.SQLite.SQLiteParameter();
            param.ParameterName = "@IsNull_Bstl_Verschil";
            param.DbType = global::System.Data.DbType.Int32;
            param.DbType = global::System.Data.DbType.Int32;
            param.SourceColumn = "Bstl_Verschil";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::System.Data.SQLite.SQLiteParameter();
            param.ParameterName = "@Original_Bstl_Verschil";
            param.DbType = global::System.Data.DbType.Decimal;
            param.DbType = global::System.Data.DbType.Decimal;
            param.SourceColumn = "Bstl_Verschil";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::System.Data.SQLite.SQLiteParameter();
            param.ParameterName = "@IsNull_Bstl_VerschilId";
            param.DbType = global::System.Data.DbType.Int32;
            param.DbType = global::System.Data.DbType.Int32;
            param.SourceColumn = "Bstl_VerschilId";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::System.Data.SQLite.SQLiteParameter();
            param.ParameterName = "@Original_Bstl_VerschilId";
            param.DbType = global::System.Data.DbType.Int64;
            param.DbType = global::System.Data.DbType.Int64;
            param.SourceColumn = "Bstl_VerschilId";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::System.Data.SQLite.SQLiteParameter();
            param.ParameterName = "@IsNull_Bstl_DispVerschil";
            param.DbType = global::System.Data.DbType.Int32;
            param.DbType = global::System.Data.DbType.Int32;
            param.SourceColumn = "Bstl_DispVerschil";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::System.Data.SQLite.SQLiteParameter();
            param.ParameterName = "@Original_Bstl_DispVerschil";
            param.DbType = global::System.Data.DbType.AnsiString;
            param.DbType = global::System.Data.DbType.AnsiString;
            param.SourceColumn = "Bstl_DispVerschil";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::System.Data.SQLite.SQLiteParameter();
            param.ParameterName = "@IsNull_Bstl_Vastekostenperbestelling";
            param.DbType = global::System.Data.DbType.Int32;
            param.DbType = global::System.Data.DbType.Int32;
            param.SourceColumn = "Bstl_Vastekostenperbestelling";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::System.Data.SQLite.SQLiteParameter();
            param.ParameterName = "@Original_Bstl_Vastekostenperbestelling";
            param.DbType = global::System.Data.DbType.Decimal;
            param.DbType = global::System.Data.DbType.Decimal;
            param.SourceColumn = "Bstl_Vastekostenperbestelling";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::System.Data.SQLite.SQLiteParameter();
            param.ParameterName = "@Original_Bstl_BonnengevraagdJN";
            param.DbType = global::System.Data.DbType.Int64;
            param.DbType = global::System.Data.DbType.Int64;
            param.SourceColumn = "Bstl_BonnengevraagdJN";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::System.Data.SQLite.SQLiteParameter();
            param.ParameterName = "@IsNull_Bstl_Mutatiedatum";
            param.DbType = global::System.Data.DbType.Int32;
            param.DbType = global::System.Data.DbType.Int32;
            param.SourceColumn = "Bstl_Mutatiedatum";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::System.Data.SQLite.SQLiteParameter();
            param.ParameterName = "@Original_Bstl_Mutatiedatum";
            param.DbType = global::System.Data.DbType.DateTime;
            param.DbType = global::System.Data.DbType.DateTime;
            param.SourceColumn = "Bstl_Mutatiedatum";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::System.Data.SQLite.SQLiteParameter();
            param.ParameterName = "@IsNull_Bstl_Opmerking";
            param.DbType = global::System.Data.DbType.Int32;
            param.DbType = global::System.Data.DbType.Int32;
            param.SourceColumn = "Bstl_Opmerking";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::System.Data.SQLite.SQLiteParameter();
            param.ParameterName = "@Original_Bstl_Opmerking";
            param.DbType = global::System.Data.DbType.AnsiString;
            param.DbType = global::System.Data.DbType.AnsiString;
            param.SourceColumn = "Bstl_Opmerking";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitConnection() {
            this._connection = new global::System.Data.SQLite.SQLiteConnection();
            this._connection.ConnectionString = global::Cmbap.Properties.Settings.Default.Cmbap_dataConnectionString;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitCommandCollection() {
            this._commandCollection = new global::System.Data.SQLite.SQLiteCommand[1];
            this._commandCollection[0] = new global::System.Data.SQLite.SQLiteCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = @"SELECT [Bstl_Id], [Bstl_StatusId], [Bstl_Dispstatus], [Bstl_BgnrId], [Bstl_DispBgnr], [Bstl_KlBgId], [Bstl_DispKlBg], [Bstl_VerwerkperiodeId], [Bstl_Valutadatum], [Bstl_Bestelbedrag], [Bstl_Diversen], [Bstl_DiversenId], [Bstl_DispDiversen], [Bstl_Verschil], [Bstl_VerschilId], [Bstl_DispVerschil], [Bstl_Vastekostenperbestelling], [Bstl_BonnengevraagdJN], [Bstl_Mutatiedatum], [Bstl_Opmerking] FROM [Bestelling]";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(_Cmbap_dataDataSet.BestellingDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual _Cmbap_dataDataSet.BestellingDataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            _Cmbap_dataDataSet.BestellingDataTable dataTable = new _Cmbap_dataDataSet.BestellingDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(_Cmbap_dataDataSet.BestellingDataTable dataTable) {
            return this.Adapter.Update(dataTable);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(_Cmbap_dataDataSet dataSet) {
            return this.Adapter.Update(dataSet, "Bestelling");
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow dataRow) {
            return this.Adapter.Update(new global::System.Data.DataRow[] {
                        dataRow});
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow[] dataRows) {
            return this.Adapter.Update(dataRows);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Delete, true)]
        public virtual int Delete(
                    long Original_Bstl_Id, 
                    global::System.Nullable<long> Original_Bstl_StatusId, 
                    string Original_Bstl_Dispstatus, 
                    long Original_Bstl_BgnrId, 
                    string Original_Bstl_DispBgnr, 
                    long Original_Bstl_KlBgId, 
                    string Original_Bstl_DispKlBg, 
                    global::System.Nullable<long> Original_Bstl_VerwerkperiodeId, 
                    System.DateTime Original_Bstl_Valutadatum, 
                    decimal Original_Bstl_Bestelbedrag, 
                    global::System.Nullable<decimal> Original_Bstl_Diversen, 
                    global::System.Nullable<long> Original_Bstl_DiversenId, 
                    string Original_Bstl_DispDiversen, 
                    global::System.Nullable<decimal> Original_Bstl_Verschil, 
                    global::System.Nullable<long> Original_Bstl_VerschilId, 
                    string Original_Bstl_DispVerschil, 
                    global::System.Nullable<decimal> Original_Bstl_Vastekostenperbestelling, 
                    long Original_Bstl_BonnengevraagdJN, 
                    global::System.Nullable<global::System.DateTime> Original_Bstl_Mutatiedatum, 
                    string Original_Bstl_Opmerking) {
            this.Adapter.DeleteCommand.Parameters[0].Value = ((long)(Original_Bstl_Id));
            if ((Original_Bstl_StatusId.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[1].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[2].Value = ((long)(Original_Bstl_StatusId.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[1].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[2].Value = global::System.DBNull.Value;
            }
            if ((Original_Bstl_Dispstatus == null)) {
                this.Adapter.DeleteCommand.Parameters[3].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[4].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[3].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[4].Value = ((string)(Original_Bstl_Dispstatus));
            }
            this.Adapter.DeleteCommand.Parameters[5].Value = ((long)(Original_Bstl_BgnrId));
            if ((Original_Bstl_DispBgnr == null)) {
                this.Adapter.DeleteCommand.Parameters[6].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[7].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[6].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[7].Value = ((string)(Original_Bstl_DispBgnr));
            }
            this.Adapter.DeleteCommand.Parameters[8].Value = ((long)(Original_Bstl_KlBgId));
            if ((Original_Bstl_DispKlBg == null)) {
                this.Adapter.DeleteCommand.Parameters[9].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[10].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[9].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[10].Value = ((string)(Original_Bstl_DispKlBg));
            }
            if ((Original_Bstl_VerwerkperiodeId.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[11].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[12].Value = ((long)(Original_Bstl_VerwerkperiodeId.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[11].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[12].Value = global::System.DBNull.Value;
            }
            this.Adapter.DeleteCommand.Parameters[13].Value = ((System.DateTime)(Original_Bstl_Valutadatum));
            this.Adapter.DeleteCommand.Parameters[14].Value = ((decimal)(Original_Bstl_Bestelbedrag));
            if ((Original_Bstl_Diversen.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[15].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[16].Value = ((decimal)(Original_Bstl_Diversen.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[15].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[16].Value = global::System.DBNull.Value;
            }
            if ((Original_Bstl_DiversenId.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[17].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[18].Value = ((long)(Original_Bstl_DiversenId.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[17].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[18].Value = global::System.DBNull.Value;
            }
            if ((Original_Bstl_DispDiversen == null)) {
                this.Adapter.DeleteCommand.Parameters[19].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[20].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[19].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[20].Value = ((string)(Original_Bstl_DispDiversen));
            }
            if ((Original_Bstl_Verschil.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[21].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[22].Value = ((decimal)(Original_Bstl_Verschil.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[21].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[22].Value = global::System.DBNull.Value;
            }
            if ((Original_Bstl_VerschilId.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[23].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[24].Value = ((long)(Original_Bstl_VerschilId.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[23].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[24].Value = global::System.DBNull.Value;
            }
            if ((Original_Bstl_DispVerschil == null)) {
                this.Adapter.DeleteCommand.Parameters[25].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[26].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[25].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[26].Value = ((string)(Original_Bstl_DispVerschil));
            }
            if ((Original_Bstl_Vastekostenperbestelling.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[27].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[28].Value = ((decimal)(Original_Bstl_Vastekostenperbestelling.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[27].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[28].Value = global::System.DBNull.Value;
            }
            this.Adapter.DeleteCommand.Parameters[29].Value = ((long)(Original_Bstl_BonnengevraagdJN));
            if ((Original_Bstl_Mutatiedatum.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[30].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[31].Value = ((System.DateTime)(Original_Bstl_Mutatiedatum.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[30].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[31].Value = global::System.DBNull.Value;
            }
            if ((Original_Bstl_Opmerking == null)) {
                this.Adapter.DeleteCommand.Parameters[32].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[33].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[32].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[33].Value = ((string)(Original_Bstl_Opmerking));
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.DeleteCommand.Connection.State;
            if (((this.Adapter.DeleteCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.DeleteCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.DeleteCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.DeleteCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Insert, true)]
        public virtual int Insert(
                    global::System.Nullable<long> Bstl_StatusId, 
                    string Bstl_Dispstatus, 
                    long Bstl_BgnrId, 
                    string Bstl_DispBgnr, 
                    long Bstl_KlBgId, 
                    string Bstl_DispKlBg, 
                    global::System.Nullable<long> Bstl_VerwerkperiodeId, 
                    System.DateTime Bstl_Valutadatum, 
                    decimal Bstl_Bestelbedrag, 
                    global::System.Nullable<decimal> Bstl_Diversen, 
                    global::System.Nullable<long> Bstl_DiversenId, 
                    string Bstl_DispDiversen, 
                    global::System.Nullable<decimal> Bstl_Verschil, 
                    global::System.Nullable<long> Bstl_VerschilId, 
                    string Bstl_DispVerschil, 
                    global::System.Nullable<decimal> Bstl_Vastekostenperbestelling, 
                    long Bstl_BonnengevraagdJN, 
                    global::System.Nullable<global::System.DateTime> Bstl_Mutatiedatum, 
                    string Bstl_Opmerking) {
            if ((Bstl_StatusId.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[0].Value = ((long)(Bstl_StatusId.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[0].Value = global::System.DBNull.Value;
            }
            if ((Bstl_Dispstatus == null)) {
                this.Adapter.InsertCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[1].Value = ((string)(Bstl_Dispstatus));
            }
            this.Adapter.InsertCommand.Parameters[2].Value = ((long)(Bstl_BgnrId));
            if ((Bstl_DispBgnr == null)) {
                this.Adapter.InsertCommand.Parameters[3].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[3].Value = ((string)(Bstl_DispBgnr));
            }
            this.Adapter.InsertCommand.Parameters[4].Value = ((long)(Bstl_KlBgId));
            if ((Bstl_DispKlBg == null)) {
                this.Adapter.InsertCommand.Parameters[5].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[5].Value = ((string)(Bstl_DispKlBg));
            }
            if ((Bstl_VerwerkperiodeId.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[6].Value = ((long)(Bstl_VerwerkperiodeId.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[6].Value = global::System.DBNull.Value;
            }
            this.Adapter.InsertCommand.Parameters[7].Value = ((System.DateTime)(Bstl_Valutadatum));
            this.Adapter.InsertCommand.Parameters[8].Value = ((decimal)(Bstl_Bestelbedrag));
            if ((Bstl_Diversen.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[9].Value = ((decimal)(Bstl_Diversen.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[9].Value = global::System.DBNull.Value;
            }
            if ((Bstl_DiversenId.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[10].Value = ((long)(Bstl_DiversenId.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[10].Value = global::System.DBNull.Value;
            }
            if ((Bstl_DispDiversen == null)) {
                this.Adapter.InsertCommand.Parameters[11].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[11].Value = ((string)(Bstl_DispDiversen));
            }
            if ((Bstl_Verschil.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[12].Value = ((decimal)(Bstl_Verschil.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[12].Value = global::System.DBNull.Value;
            }
            if ((Bstl_VerschilId.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[13].Value = ((long)(Bstl_VerschilId.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[13].Value = global::System.DBNull.Value;
            }
            if ((Bstl_DispVerschil == null)) {
                this.Adapter.InsertCommand.Parameters[14].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[14].Value = ((string)(Bstl_DispVerschil));
            }
            if ((Bstl_Vastekostenperbestelling.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[15].Value = ((decimal)(Bstl_Vastekostenperbestelling.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[15].Value = global::System.DBNull.Value;
            }
            this.Adapter.InsertCommand.Parameters[16].Value = ((long)(Bstl_BonnengevraagdJN));
            if ((Bstl_Mutatiedatum.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[17].Value = ((System.DateTime)(Bstl_Mutatiedatum.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[17].Value = global::System.DBNull.Value;
            }
            if ((Bstl_Opmerking == null)) {
                this.Adapter.InsertCommand.Parameters[18].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[18].Value = ((string)(Bstl_Opmerking));
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.InsertCommand.Connection.State;
            if (((this.Adapter.InsertCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.InsertCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.InsertCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.InsertCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(
                    global::System.Nullable<long> Bstl_StatusId, 
                    string Bstl_Dispstatus, 
                    long Bstl_BgnrId, 
                    string Bstl_DispBgnr, 
                    long Bstl_KlBgId, 
                    string Bstl_DispKlBg, 
                    global::System.Nullable<long> Bstl_VerwerkperiodeId, 
                    System.DateTime Bstl_Valutadatum, 
                    decimal Bstl_Bestelbedrag, 
                    global::System.Nullable<decimal> Bstl_Diversen, 
                    global::System.Nullable<long> Bstl_DiversenId, 
                    string Bstl_DispDiversen, 
                    global::System.Nullable<decimal> Bstl_Verschil, 
                    global::System.Nullable<long> Bstl_VerschilId, 
                    string Bstl_DispVerschil, 
                    global::System.Nullable<decimal> Bstl_Vastekostenperbestelling, 
                    long Bstl_BonnengevraagdJN, 
                    global::System.Nullable<global::System.DateTime> Bstl_Mutatiedatum, 
                    string Bstl_Opmerking, 
                    long Original_Bstl_Id, 
                    global::System.Nullable<long> Original_Bstl_StatusId, 
                    string Original_Bstl_Dispstatus, 
                    long Original_Bstl_BgnrId, 
                    string Original_Bstl_DispBgnr, 
                    long Original_Bstl_KlBgId, 
                    string Original_Bstl_DispKlBg, 
                    global::System.Nullable<long> Original_Bstl_VerwerkperiodeId, 
                    System.DateTime Original_Bstl_Valutadatum, 
                    decimal Original_Bstl_Bestelbedrag, 
                    global::System.Nullable<decimal> Original_Bstl_Diversen, 
                    global::System.Nullable<long> Original_Bstl_DiversenId, 
                    string Original_Bstl_DispDiversen, 
                    global::System.Nullable<decimal> Original_Bstl_Verschil, 
                    global::System.Nullable<long> Original_Bstl_VerschilId, 
                    string Original_Bstl_DispVerschil, 
                    global::System.Nullable<decimal> Original_Bstl_Vastekostenperbestelling, 
                    long Original_Bstl_BonnengevraagdJN, 
                    global::System.Nullable<global::System.DateTime> Original_Bstl_Mutatiedatum, 
                    string Original_Bstl_Opmerking) {
            if ((Bstl_StatusId.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[0].Value = ((long)(Bstl_StatusId.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[0].Value = global::System.DBNull.Value;
            }
            if ((Bstl_Dispstatus == null)) {
                this.Adapter.UpdateCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[1].Value = ((string)(Bstl_Dispstatus));
            }
            this.Adapter.UpdateCommand.Parameters[2].Value = ((long)(Bstl_BgnrId));
            if ((Bstl_DispBgnr == null)) {
                this.Adapter.UpdateCommand.Parameters[3].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[3].Value = ((string)(Bstl_DispBgnr));
            }
            this.Adapter.UpdateCommand.Parameters[4].Value = ((long)(Bstl_KlBgId));
            if ((Bstl_DispKlBg == null)) {
                this.Adapter.UpdateCommand.Parameters[5].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[5].Value = ((string)(Bstl_DispKlBg));
            }
            if ((Bstl_VerwerkperiodeId.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[6].Value = ((long)(Bstl_VerwerkperiodeId.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[6].Value = global::System.DBNull.Value;
            }
            this.Adapter.UpdateCommand.Parameters[7].Value = ((System.DateTime)(Bstl_Valutadatum));
            this.Adapter.UpdateCommand.Parameters[8].Value = ((decimal)(Bstl_Bestelbedrag));
            if ((Bstl_Diversen.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[9].Value = ((decimal)(Bstl_Diversen.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[9].Value = global::System.DBNull.Value;
            }
            if ((Bstl_DiversenId.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[10].Value = ((long)(Bstl_DiversenId.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[10].Value = global::System.DBNull.Value;
            }
            if ((Bstl_DispDiversen == null)) {
                this.Adapter.UpdateCommand.Parameters[11].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[11].Value = ((string)(Bstl_DispDiversen));
            }
            if ((Bstl_Verschil.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[12].Value = ((decimal)(Bstl_Verschil.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[12].Value = global::System.DBNull.Value;
            }
            if ((Bstl_VerschilId.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[13].Value = ((long)(Bstl_VerschilId.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[13].Value = global::System.DBNull.Value;
            }
            if ((Bstl_DispVerschil == null)) {
                this.Adapter.UpdateCommand.Parameters[14].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[14].Value = ((string)(Bstl_DispVerschil));
            }
            if ((Bstl_Vastekostenperbestelling.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[15].Value = ((decimal)(Bstl_Vastekostenperbestelling.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[15].Value = global::System.DBNull.Value;
            }
            this.Adapter.UpdateCommand.Parameters[16].Value = ((long)(Bstl_BonnengevraagdJN));
            if ((Bstl_Mutatiedatum.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[17].Value = ((System.DateTime)(Bstl_Mutatiedatum.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[17].Value = global::System.DBNull.Value;
            }
            if ((Bstl_Opmerking == null)) {
                this.Adapter.UpdateCommand.Parameters[18].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[18].Value = ((string)(Bstl_Opmerking));
            }
            this.Adapter.UpdateCommand.Parameters[19].Value = ((long)(Original_Bstl_Id));
            if ((Original_Bstl_StatusId.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[20].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[21].Value = ((long)(Original_Bstl_StatusId.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[20].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[21].Value = global::System.DBNull.Value;
            }
            if ((Original_Bstl_Dispstatus == null)) {
                this.Adapter.UpdateCommand.Parameters[22].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[23].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[22].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[23].Value = ((string)(Original_Bstl_Dispstatus));
            }
            this.Adapter.UpdateCommand.Parameters[24].Value = ((long)(Original_Bstl_BgnrId));
            if ((Original_Bstl_DispBgnr == null)) {
                this.Adapter.UpdateCommand.Parameters[25].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[26].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[25].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[26].Value = ((string)(Original_Bstl_DispBgnr));
            }
            this.Adapter.UpdateCommand.Parameters[27].Value = ((long)(Original_Bstl_KlBgId));
            if ((Original_Bstl_DispKlBg == null)) {
                this.Adapter.UpdateCommand.Parameters[28].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[29].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[28].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[29].Value = ((string)(Original_Bstl_DispKlBg));
            }
            if ((Original_Bstl_VerwerkperiodeId.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[30].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[31].Value = ((long)(Original_Bstl_VerwerkperiodeId.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[30].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[31].Value = global::System.DBNull.Value;
            }
            this.Adapter.UpdateCommand.Parameters[32].Value = ((System.DateTime)(Original_Bstl_Valutadatum));
            this.Adapter.UpdateCommand.Parameters[33].Value = ((decimal)(Original_Bstl_Bestelbedrag));
            if ((Original_Bstl_Diversen.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[34].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[35].Value = ((decimal)(Original_Bstl_Diversen.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[34].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[35].Value = global::System.DBNull.Value;
            }
            if ((Original_Bstl_DiversenId.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[36].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[37].Value = ((long)(Original_Bstl_DiversenId.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[36].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[37].Value = global::System.DBNull.Value;
            }
            if ((Original_Bstl_DispDiversen == null)) {
                this.Adapter.UpdateCommand.Parameters[38].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[39].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[38].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[39].Value = ((string)(Original_Bstl_DispDiversen));
            }
            if ((Original_Bstl_Verschil.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[40].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[41].Value = ((decimal)(Original_Bstl_Verschil.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[40].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[41].Value = global::System.DBNull.Value;
            }
            if ((Original_Bstl_VerschilId.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[42].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[43].Value = ((long)(Original_Bstl_VerschilId.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[42].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[43].Value = global::System.DBNull.Value;
            }
            if ((Original_Bstl_DispVerschil == null)) {
                this.Adapter.UpdateCommand.Parameters[44].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[45].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[44].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[45].Value = ((string)(Original_Bstl_DispVerschil));
            }
            if ((Original_Bstl_Vastekostenperbestelling.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[46].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[47].Value = ((decimal)(Original_Bstl_Vastekostenperbestelling.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[46].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[47].Value = global::System.DBNull.Value;
            }
            this.Adapter.UpdateCommand.Parameters[48].Value = ((long)(Original_Bstl_BonnengevraagdJN));
            if ((Original_Bstl_Mutatiedatum.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[49].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[50].Value = ((System.DateTime)(Original_Bstl_Mutatiedatum.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[49].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[50].Value = global::System.DBNull.Value;
            }
            if ((Original_Bstl_Opmerking == null)) {
                this.Adapter.UpdateCommand.Parameters[51].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[52].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[51].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[52].Value = ((string)(Original_Bstl_Opmerking));
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.UpdateCommand.Connection.State;
            if (((this.Adapter.UpdateCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.UpdateCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.UpdateCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.UpdateCommand.Connection.Close();
                }
            }
        }
    }
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class BestelregelTableAdapter : global::System.ComponentModel.Component {
        
        private global::System.Data.SQLite.SQLiteDataAdapter _adapter;
        
        private global::System.Data.SQLite.SQLiteConnection _connection;
        
        private global::System.Data.SQLite.SQLiteTransaction _transaction;
        
        private global::System.Data.SQLite.SQLiteCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public BestelregelTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected internal global::System.Data.SQLite.SQLiteDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal global::System.Data.SQLite.SQLiteConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::System.Data.SQLite.SQLiteCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal global::System.Data.SQLite.SQLiteTransaction Transaction {
            get {
                return this._transaction;
            }
            set {
                this._transaction = value;
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    this.CommandCollection[i].Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.DeleteCommand != null))) {
                    this.Adapter.DeleteCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.InsertCommand != null))) {
                    this.Adapter.InsertCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.UpdateCommand != null))) {
                    this.Adapter.UpdateCommand.Transaction = this._transaction;
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected global::System.Data.SQLite.SQLiteCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitAdapter() {
            this._adapter = new global::System.Data.SQLite.SQLiteDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "Bestelregel";
            tableMapping.ColumnMappings.Add("Bstlr_Id", "Bstlr_Id");
            tableMapping.ColumnMappings.Add("Bstlr_BstlId", "Bstlr_BstlId");
            tableMapping.ColumnMappings.Add("Bstlr_StatusId", "Bstlr_StatusId");
            tableMapping.ColumnMappings.Add("Bstlr_Dispstatus", "Bstlr_Dispstatus");
            tableMapping.ColumnMappings.Add("Bstlr_ProdId", "Bstlr_ProdId");
            tableMapping.ColumnMappings.Add("Bstlr_DispProduct", "Bstlr_DispProduct");
            tableMapping.ColumnMappings.Add("Bstlr_Aantal", "Bstlr_Aantal");
            tableMapping.ColumnMappings.Add("Bstlr_Beginnr", "Bstlr_Beginnr");
            tableMapping.ColumnMappings.Add("Bstlr_Eindnr", "Bstlr_Eindnr");
            tableMapping.ColumnMappings.Add("Bstlr_Voorraad", "Bstlr_Voorraad");
            tableMapping.ColumnMappings.Add("Bstlr_Extranr1", "Bstlr_Extranr1");
            tableMapping.ColumnMappings.Add("Bstlr_Extranr2", "Bstlr_Extranr2");
            tableMapping.ColumnMappings.Add("Bstlr_Extranr3", "Bstlr_Extranr3");
            tableMapping.ColumnMappings.Add("Bstlr_Mutatiedatum", "Bstlr_Mutatiedatum");
            tableMapping.ColumnMappings.Add("Bstlr_Opmerking", "Bstlr_Opmerking");
            this._adapter.TableMappings.Add(tableMapping);
            this._adapter.DeleteCommand = new global::System.Data.SQLite.SQLiteCommand();
            this._adapter.DeleteCommand.Connection = this.Connection;
            this._adapter.DeleteCommand.CommandText = @"DELETE FROM [main].[sqlite_default_schema].[Bestelregel] WHERE (([Bstlr_Id] = @Original_Bstlr_Id) AND ([Bstlr_BstlId] = @Original_Bstlr_BstlId) AND ((@IsNull_Bstlr_StatusId = 1 AND [Bstlr_StatusId] IS NULL) OR ([Bstlr_StatusId] = @Original_Bstlr_StatusId)) AND ((@IsNull_Bstlr_Dispstatus = 1 AND [Bstlr_Dispstatus] IS NULL) OR ([Bstlr_Dispstatus] = @Original_Bstlr_Dispstatus)) AND ([Bstlr_ProdId] = @Original_Bstlr_ProdId) AND ((@IsNull_Bstlr_DispProduct = 1 AND [Bstlr_DispProduct] IS NULL) OR ([Bstlr_DispProduct] = @Original_Bstlr_DispProduct)) AND ([Bstlr_Aantal] = @Original_Bstlr_Aantal) AND ((@IsNull_Bstlr_Beginnr = 1 AND [Bstlr_Beginnr] IS NULL) OR ([Bstlr_Beginnr] = @Original_Bstlr_Beginnr)) AND ((@IsNull_Bstlr_Eindnr = 1 AND [Bstlr_Eindnr] IS NULL) OR ([Bstlr_Eindnr] = @Original_Bstlr_Eindnr)) AND ((@IsNull_Bstlr_Voorraad = 1 AND [Bstlr_Voorraad] IS NULL) OR ([Bstlr_Voorraad] = @Original_Bstlr_Voorraad)) AND ((@IsNull_Bstlr_Extranr1 = 1 AND [Bstlr_Extranr1] IS NULL) OR ([Bstlr_Extranr1] = @Original_Bstlr_Extranr1)) AND ((@IsNull_Bstlr_Extranr2 = 1 AND [Bstlr_Extranr2] IS NULL) OR ([Bstlr_Extranr2] = @Original_Bstlr_Extranr2)) AND ((@IsNull_Bstlr_Extranr3 = 1 AND [Bstlr_Extranr3] IS NULL) OR ([Bstlr_Extranr3] = @Original_Bstlr_Extranr3)) AND ([Bstlr_Mutatiedatum] = @Original_Bstlr_Mutatiedatum) AND ((@IsNull_Bstlr_Opmerking = 1 AND [Bstlr_Opmerking] IS NULL) OR ([Bstlr_Opmerking] = @Original_Bstlr_Opmerking)))";
            this._adapter.DeleteCommand.CommandType = global::System.Data.CommandType.Text;
            global::System.Data.SQLite.SQLiteParameter param = new global::System.Data.SQLite.SQLiteParameter();
            param.ParameterName = "@Original_Bstlr_Id";
            param.DbType = global::System.Data.DbType.Int64;
            param.DbType = global::System.Data.DbType.Int64;
            param.SourceColumn = "Bstlr_Id";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::System.Data.SQLite.SQLiteParameter();
            param.ParameterName = "@Original_Bstlr_BstlId";
            param.DbType = global::System.Data.DbType.Int64;
            param.DbType = global::System.Data.DbType.Int64;
            param.SourceColumn = "Bstlr_BstlId";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::System.Data.SQLite.SQLiteParameter();
            param.ParameterName = "@IsNull_Bstlr_StatusId";
            param.DbType = global::System.Data.DbType.Int32;
            param.DbType = global::System.Data.DbType.Int32;
            param.SourceColumn = "Bstlr_StatusId";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::System.Data.SQLite.SQLiteParameter();
            param.ParameterName = "@Original_Bstlr_StatusId";
            param.DbType = global::System.Data.DbType.Int64;
            param.DbType = global::System.Data.DbType.Int64;
            param.SourceColumn = "Bstlr_StatusId";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::System.Data.SQLite.SQLiteParameter();
            param.ParameterName = "@IsNull_Bstlr_Dispstatus";
            param.DbType = global::System.Data.DbType.Int32;
            param.DbType = global::System.Data.DbType.Int32;
            param.SourceColumn = "Bstlr_Dispstatus";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::System.Data.SQLite.SQLiteParameter();
            param.ParameterName = "@Original_Bstlr_Dispstatus";
            param.DbType = global::System.Data.DbType.AnsiString;
            param.DbType = global::System.Data.DbType.AnsiString;
            param.SourceColumn = "Bstlr_Dispstatus";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::System.Data.SQLite.SQLiteParameter();
            param.ParameterName = "@Original_Bstlr_ProdId";
            param.DbType = global::System.Data.DbType.Int64;
            param.DbType = global::System.Data.DbType.Int64;
            param.SourceColumn = "Bstlr_ProdId";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::System.Data.SQLite.SQLiteParameter();
            param.ParameterName = "@IsNull_Bstlr_DispProduct";
            param.DbType = global::System.Data.DbType.Int32;
            param.DbType = global::System.Data.DbType.Int32;
            param.SourceColumn = "Bstlr_DispProduct";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::System.Data.SQLite.SQLiteParameter();
            param.ParameterName = "@Original_Bstlr_DispProduct";
            param.DbType = global::System.Data.DbType.AnsiString;
            param.DbType = global::System.Data.DbType.AnsiString;
            param.SourceColumn = "Bstlr_DispProduct";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::System.Data.SQLite.SQLiteParameter();
            param.ParameterName = "@Original_Bstlr_Aantal";
            param.DbType = global::System.Data.DbType.Int64;
            param.DbType = global::System.Data.DbType.Int64;
            param.SourceColumn = "Bstlr_Aantal";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::System.Data.SQLite.SQLiteParameter();
            param.ParameterName = "@IsNull_Bstlr_Beginnr";
            param.DbType = global::System.Data.DbType.Int32;
            param.DbType = global::System.Data.DbType.Int32;
            param.SourceColumn = "Bstlr_Beginnr";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::System.Data.SQLite.SQLiteParameter();
            param.ParameterName = "@Original_Bstlr_Beginnr";
            param.DbType = global::System.Data.DbType.Int64;
            param.DbType = global::System.Data.DbType.Int64;
            param.SourceColumn = "Bstlr_Beginnr";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::System.Data.SQLite.SQLiteParameter();
            param.ParameterName = "@IsNull_Bstlr_Eindnr";
            param.DbType = global::System.Data.DbType.Int32;
            param.DbType = global::System.Data.DbType.Int32;
            param.SourceColumn = "Bstlr_Eindnr";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::System.Data.SQLite.SQLiteParameter();
            param.ParameterName = "@Original_Bstlr_Eindnr";
            param.DbType = global::System.Data.DbType.Int64;
            param.DbType = global::System.Data.DbType.Int64;
            param.SourceColumn = "Bstlr_Eindnr";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::System.Data.SQLite.SQLiteParameter();
            param.ParameterName = "@IsNull_Bstlr_Voorraad";
            param.DbType = global::System.Data.DbType.Int32;
            param.DbType = global::System.Data.DbType.Int32;
            param.SourceColumn = "Bstlr_Voorraad";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::System.Data.SQLite.SQLiteParameter();
            param.ParameterName = "@Original_Bstlr_Voorraad";
            param.DbType = global::System.Data.DbType.Int64;
            param.DbType = global::System.Data.DbType.Int64;
            param.SourceColumn = "Bstlr_Voorraad";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::System.Data.SQLite.SQLiteParameter();
            param.ParameterName = "@IsNull_Bstlr_Extranr1";
            param.DbType = global::System.Data.DbType.Int32;
            param.DbType = global::System.Data.DbType.Int32;
            param.SourceColumn = "Bstlr_Extranr1";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::System.Data.SQLite.SQLiteParameter();
            param.ParameterName = "@Original_Bstlr_Extranr1";
            param.DbType = global::System.Data.DbType.Int64;
            param.DbType = global::System.Data.DbType.Int64;
            param.SourceColumn = "Bstlr_Extranr1";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::System.Data.SQLite.SQLiteParameter();
            param.ParameterName = "@IsNull_Bstlr_Extranr2";
            param.DbType = global::System.Data.DbType.Int32;
            param.DbType = global::System.Data.DbType.Int32;
            param.SourceColumn = "Bstlr_Extranr2";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::System.Data.SQLite.SQLiteParameter();
            param.ParameterName = "@Original_Bstlr_Extranr2";
            param.DbType = global::System.Data.DbType.Int64;
            param.DbType = global::System.Data.DbType.Int64;
            param.SourceColumn = "Bstlr_Extranr2";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::System.Data.SQLite.SQLiteParameter();
            param.ParameterName = "@IsNull_Bstlr_Extranr3";
            param.DbType = global::System.Data.DbType.Int32;
            param.DbType = global::System.Data.DbType.Int32;
            param.SourceColumn = "Bstlr_Extranr3";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::System.Data.SQLite.SQLiteParameter();
            param.ParameterName = "@Original_Bstlr_Extranr3";
            param.DbType = global::System.Data.DbType.Int64;
            param.DbType = global::System.Data.DbType.Int64;
            param.SourceColumn = "Bstlr_Extranr3";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::System.Data.SQLite.SQLiteParameter();
            param.ParameterName = "@Original_Bstlr_Mutatiedatum";
            param.DbType = global::System.Data.DbType.DateTime;
            param.DbType = global::System.Data.DbType.DateTime;
            param.SourceColumn = "Bstlr_Mutatiedatum";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::System.Data.SQLite.SQLiteParameter();
            param.ParameterName = "@IsNull_Bstlr_Opmerking";
            param.DbType = global::System.Data.DbType.Int32;
            param.DbType = global::System.Data.DbType.Int32;
            param.SourceColumn = "Bstlr_Opmerking";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::System.Data.SQLite.SQLiteParameter();
            param.ParameterName = "@Original_Bstlr_Opmerking";
            param.DbType = global::System.Data.DbType.AnsiString;
            param.DbType = global::System.Data.DbType.AnsiString;
            param.SourceColumn = "Bstlr_Opmerking";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            this._adapter.InsertCommand = new global::System.Data.SQLite.SQLiteCommand();
            this._adapter.InsertCommand.Connection = this.Connection;
            this._adapter.InsertCommand.CommandText = @"INSERT INTO [main].[sqlite_default_schema].[Bestelregel] ([Bstlr_BstlId], [Bstlr_StatusId], [Bstlr_Dispstatus], [Bstlr_ProdId], [Bstlr_DispProduct], [Bstlr_Aantal], [Bstlr_Beginnr], [Bstlr_Eindnr], [Bstlr_Voorraad], [Bstlr_Extranr1], [Bstlr_Extranr2], [Bstlr_Extranr3], [Bstlr_Mutatiedatum], [Bstlr_Opmerking]) VALUES (@Bstlr_BstlId, @Bstlr_StatusId, @Bstlr_Dispstatus, @Bstlr_ProdId, @Bstlr_DispProduct, @Bstlr_Aantal, @Bstlr_Beginnr, @Bstlr_Eindnr, @Bstlr_Voorraad, @Bstlr_Extranr1, @Bstlr_Extranr2, @Bstlr_Extranr3, @Bstlr_Mutatiedatum, @Bstlr_Opmerking)";
            this._adapter.InsertCommand.CommandType = global::System.Data.CommandType.Text;
            param = new global::System.Data.SQLite.SQLiteParameter();
            param.ParameterName = "@Bstlr_BstlId";
            param.DbType = global::System.Data.DbType.Int64;
            param.DbType = global::System.Data.DbType.Int64;
            param.SourceColumn = "Bstlr_BstlId";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::System.Data.SQLite.SQLiteParameter();
            param.ParameterName = "@Bstlr_StatusId";
            param.DbType = global::System.Data.DbType.Int64;
            param.DbType = global::System.Data.DbType.Int64;
            param.SourceColumn = "Bstlr_StatusId";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::System.Data.SQLite.SQLiteParameter();
            param.ParameterName = "@Bstlr_Dispstatus";
            param.DbType = global::System.Data.DbType.AnsiString;
            param.DbType = global::System.Data.DbType.AnsiString;
            param.SourceColumn = "Bstlr_Dispstatus";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::System.Data.SQLite.SQLiteParameter();
            param.ParameterName = "@Bstlr_ProdId";
            param.DbType = global::System.Data.DbType.Int64;
            param.DbType = global::System.Data.DbType.Int64;
            param.SourceColumn = "Bstlr_ProdId";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::System.Data.SQLite.SQLiteParameter();
            param.ParameterName = "@Bstlr_DispProduct";
            param.DbType = global::System.Data.DbType.AnsiString;
            param.DbType = global::System.Data.DbType.AnsiString;
            param.SourceColumn = "Bstlr_DispProduct";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::System.Data.SQLite.SQLiteParameter();
            param.ParameterName = "@Bstlr_Aantal";
            param.DbType = global::System.Data.DbType.Int64;
            param.DbType = global::System.Data.DbType.Int64;
            param.SourceColumn = "Bstlr_Aantal";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::System.Data.SQLite.SQLiteParameter();
            param.ParameterName = "@Bstlr_Beginnr";
            param.DbType = global::System.Data.DbType.Int64;
            param.DbType = global::System.Data.DbType.Int64;
            param.SourceColumn = "Bstlr_Beginnr";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::System.Data.SQLite.SQLiteParameter();
            param.ParameterName = "@Bstlr_Eindnr";
            param.DbType = global::System.Data.DbType.Int64;
            param.DbType = global::System.Data.DbType.Int64;
            param.SourceColumn = "Bstlr_Eindnr";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::System.Data.SQLite.SQLiteParameter();
            param.ParameterName = "@Bstlr_Voorraad";
            param.DbType = global::System.Data.DbType.Int64;
            param.DbType = global::System.Data.DbType.Int64;
            param.SourceColumn = "Bstlr_Voorraad";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::System.Data.SQLite.SQLiteParameter();
            param.ParameterName = "@Bstlr_Extranr1";
            param.DbType = global::System.Data.DbType.Int64;
            param.DbType = global::System.Data.DbType.Int64;
            param.SourceColumn = "Bstlr_Extranr1";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::System.Data.SQLite.SQLiteParameter();
            param.ParameterName = "@Bstlr_Extranr2";
            param.DbType = global::System.Data.DbType.Int64;
            param.DbType = global::System.Data.DbType.Int64;
            param.SourceColumn = "Bstlr_Extranr2";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::System.Data.SQLite.SQLiteParameter();
            param.ParameterName = "@Bstlr_Extranr3";
            param.DbType = global::System.Data.DbType.Int64;
            param.DbType = global::System.Data.DbType.Int64;
            param.SourceColumn = "Bstlr_Extranr3";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::System.Data.SQLite.SQLiteParameter();
            param.ParameterName = "@Bstlr_Mutatiedatum";
            param.DbType = global::System.Data.DbType.DateTime;
            param.DbType = global::System.Data.DbType.DateTime;
            param.SourceColumn = "Bstlr_Mutatiedatum";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::System.Data.SQLite.SQLiteParameter();
            param.ParameterName = "@Bstlr_Opmerking";
            param.DbType = global::System.Data.DbType.AnsiString;
            param.DbType = global::System.Data.DbType.AnsiString;
            param.SourceColumn = "Bstlr_Opmerking";
            this._adapter.InsertCommand.Parameters.Add(param);
            this._adapter.UpdateCommand = new global::System.Data.SQLite.SQLiteCommand();
            this._adapter.UpdateCommand.Connection = this.Connection;
            this._adapter.UpdateCommand.CommandText = "UPDATE [main].[sqlite_default_schema].[Bestelregel] SET [Bstlr_BstlId] = @Bstlr_B" +
                "stlId, [Bstlr_StatusId] = @Bstlr_StatusId, [Bstlr_Dispstatus] = @Bstlr_Dispstatu" +
                "s, [Bstlr_ProdId] = @Bstlr_ProdId, [Bstlr_DispProduct] = @Bstlr_DispProduct, [Bs" +
                "tlr_Aantal] = @Bstlr_Aantal, [Bstlr_Beginnr] = @Bstlr_Beginnr, [Bstlr_Eindnr] = " +
                "@Bstlr_Eindnr, [Bstlr_Voorraad] = @Bstlr_Voorraad, [Bstlr_Extranr1] = @Bstlr_Ext" +
                "ranr1, [Bstlr_Extranr2] = @Bstlr_Extranr2, [Bstlr_Extranr3] = @Bstlr_Extranr3, [" +
                "Bstlr_Mutatiedatum] = @Bstlr_Mutatiedatum, [Bstlr_Opmerking] = @Bstlr_Opmerking " +
                "WHERE (([Bstlr_Id] = @Original_Bstlr_Id) AND ([Bstlr_BstlId] = @Original_Bstlr_B" +
                "stlId) AND ((@IsNull_Bstlr_StatusId = 1 AND [Bstlr_StatusId] IS NULL) OR ([Bstlr" +
                "_StatusId] = @Original_Bstlr_StatusId)) AND ((@IsNull_Bstlr_Dispstatus = 1 AND [" +
                "Bstlr_Dispstatus] IS NULL) OR ([Bstlr_Dispstatus] = @Original_Bstlr_Dispstatus))" +
                " AND ([Bstlr_ProdId] = @Original_Bstlr_ProdId) AND ((@IsNull_Bstlr_DispProduct =" +
                " 1 AND [Bstlr_DispProduct] IS NULL) OR ([Bstlr_DispProduct] = @Original_Bstlr_Di" +
                "spProduct)) AND ([Bstlr_Aantal] = @Original_Bstlr_Aantal) AND ((@IsNull_Bstlr_Be" +
                "ginnr = 1 AND [Bstlr_Beginnr] IS NULL) OR ([Bstlr_Beginnr] = @Original_Bstlr_Beg" +
                "innr)) AND ((@IsNull_Bstlr_Eindnr = 1 AND [Bstlr_Eindnr] IS NULL) OR ([Bstlr_Ein" +
                "dnr] = @Original_Bstlr_Eindnr)) AND ((@IsNull_Bstlr_Voorraad = 1 AND [Bstlr_Voor" +
                "raad] IS NULL) OR ([Bstlr_Voorraad] = @Original_Bstlr_Voorraad)) AND ((@IsNull_B" +
                "stlr_Extranr1 = 1 AND [Bstlr_Extranr1] IS NULL) OR ([Bstlr_Extranr1] = @Original" +
                "_Bstlr_Extranr1)) AND ((@IsNull_Bstlr_Extranr2 = 1 AND [Bstlr_Extranr2] IS NULL)" +
                " OR ([Bstlr_Extranr2] = @Original_Bstlr_Extranr2)) AND ((@IsNull_Bstlr_Extranr3 " +
                "= 1 AND [Bstlr_Extranr3] IS NULL) OR ([Bstlr_Extranr3] = @Original_Bstlr_Extranr" +
                "3)) AND ([Bstlr_Mutatiedatum] = @Original_Bstlr_Mutatiedatum) AND ((@IsNull_Bstl" +
                "r_Opmerking = 1 AND [Bstlr_Opmerking] IS NULL) OR ([Bstlr_Opmerking] = @Original" +
                "_Bstlr_Opmerking)))";
            this._adapter.UpdateCommand.CommandType = global::System.Data.CommandType.Text;
            param = new global::System.Data.SQLite.SQLiteParameter();
            param.ParameterName = "@Bstlr_BstlId";
            param.DbType = global::System.Data.DbType.Int64;
            param.DbType = global::System.Data.DbType.Int64;
            param.SourceColumn = "Bstlr_BstlId";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::System.Data.SQLite.SQLiteParameter();
            param.ParameterName = "@Bstlr_StatusId";
            param.DbType = global::System.Data.DbType.Int64;
            param.DbType = global::System.Data.DbType.Int64;
            param.SourceColumn = "Bstlr_StatusId";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::System.Data.SQLite.SQLiteParameter();
            param.ParameterName = "@Bstlr_Dispstatus";
            param.DbType = global::System.Data.DbType.AnsiString;
            param.DbType = global::System.Data.DbType.AnsiString;
            param.SourceColumn = "Bstlr_Dispstatus";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::System.Data.SQLite.SQLiteParameter();
            param.ParameterName = "@Bstlr_ProdId";
            param.DbType = global::System.Data.DbType.Int64;
            param.DbType = global::System.Data.DbType.Int64;
            param.SourceColumn = "Bstlr_ProdId";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::System.Data.SQLite.SQLiteParameter();
            param.ParameterName = "@Bstlr_DispProduct";
            param.DbType = global::System.Data.DbType.AnsiString;
            param.DbType = global::System.Data.DbType.AnsiString;
            param.SourceColumn = "Bstlr_DispProduct";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::System.Data.SQLite.SQLiteParameter();
            param.ParameterName = "@Bstlr_Aantal";
            param.DbType = global::System.Data.DbType.Int64;
            param.DbType = global::System.Data.DbType.Int64;
            param.SourceColumn = "Bstlr_Aantal";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::System.Data.SQLite.SQLiteParameter();
            param.ParameterName = "@Bstlr_Beginnr";
            param.DbType = global::System.Data.DbType.Int64;
            param.DbType = global::System.Data.DbType.Int64;
            param.SourceColumn = "Bstlr_Beginnr";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::System.Data.SQLite.SQLiteParameter();
            param.ParameterName = "@Bstlr_Eindnr";
            param.DbType = global::System.Data.DbType.Int64;
            param.DbType = global::System.Data.DbType.Int64;
            param.SourceColumn = "Bstlr_Eindnr";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::System.Data.SQLite.SQLiteParameter();
            param.ParameterName = "@Bstlr_Voorraad";
            param.DbType = global::System.Data.DbType.Int64;
            param.DbType = global::System.Data.DbType.Int64;
            param.SourceColumn = "Bstlr_Voorraad";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::System.Data.SQLite.SQLiteParameter();
            param.ParameterName = "@Bstlr_Extranr1";
            param.DbType = global::System.Data.DbType.Int64;
            param.DbType = global::System.Data.DbType.Int64;
            param.SourceColumn = "Bstlr_Extranr1";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::System.Data.SQLite.SQLiteParameter();
            param.ParameterName = "@Bstlr_Extranr2";
            param.DbType = global::System.Data.DbType.Int64;
            param.DbType = global::System.Data.DbType.Int64;
            param.SourceColumn = "Bstlr_Extranr2";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::System.Data.SQLite.SQLiteParameter();
            param.ParameterName = "@Bstlr_Extranr3";
            param.DbType = global::System.Data.DbType.Int64;
            param.DbType = global::System.Data.DbType.Int64;
            param.SourceColumn = "Bstlr_Extranr3";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::System.Data.SQLite.SQLiteParameter();
            param.ParameterName = "@Bstlr_Mutatiedatum";
            param.DbType = global::System.Data.DbType.DateTime;
            param.DbType = global::System.Data.DbType.DateTime;
            param.SourceColumn = "Bstlr_Mutatiedatum";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::System.Data.SQLite.SQLiteParameter();
            param.ParameterName = "@Bstlr_Opmerking";
            param.DbType = global::System.Data.DbType.AnsiString;
            param.DbType = global::System.Data.DbType.AnsiString;
            param.SourceColumn = "Bstlr_Opmerking";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::System.Data.SQLite.SQLiteParameter();
            param.ParameterName = "@Original_Bstlr_Id";
            param.DbType = global::System.Data.DbType.Int64;
            param.DbType = global::System.Data.DbType.Int64;
            param.SourceColumn = "Bstlr_Id";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::System.Data.SQLite.SQLiteParameter();
            param.ParameterName = "@Original_Bstlr_BstlId";
            param.DbType = global::System.Data.DbType.Int64;
            param.DbType = global::System.Data.DbType.Int64;
            param.SourceColumn = "Bstlr_BstlId";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::System.Data.SQLite.SQLiteParameter();
            param.ParameterName = "@IsNull_Bstlr_StatusId";
            param.DbType = global::System.Data.DbType.Int32;
            param.DbType = global::System.Data.DbType.Int32;
            param.SourceColumn = "Bstlr_StatusId";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::System.Data.SQLite.SQLiteParameter();
            param.ParameterName = "@Original_Bstlr_StatusId";
            param.DbType = global::System.Data.DbType.Int64;
            param.DbType = global::System.Data.DbType.Int64;
            param.SourceColumn = "Bstlr_StatusId";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::System.Data.SQLite.SQLiteParameter();
            param.ParameterName = "@IsNull_Bstlr_Dispstatus";
            param.DbType = global::System.Data.DbType.Int32;
            param.DbType = global::System.Data.DbType.Int32;
            param.SourceColumn = "Bstlr_Dispstatus";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::System.Data.SQLite.SQLiteParameter();
            param.ParameterName = "@Original_Bstlr_Dispstatus";
            param.DbType = global::System.Data.DbType.AnsiString;
            param.DbType = global::System.Data.DbType.AnsiString;
            param.SourceColumn = "Bstlr_Dispstatus";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::System.Data.SQLite.SQLiteParameter();
            param.ParameterName = "@Original_Bstlr_ProdId";
            param.DbType = global::System.Data.DbType.Int64;
            param.DbType = global::System.Data.DbType.Int64;
            param.SourceColumn = "Bstlr_ProdId";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::System.Data.SQLite.SQLiteParameter();
            param.ParameterName = "@IsNull_Bstlr_DispProduct";
            param.DbType = global::System.Data.DbType.Int32;
            param.DbType = global::System.Data.DbType.Int32;
            param.SourceColumn = "Bstlr_DispProduct";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::System.Data.SQLite.SQLiteParameter();
            param.ParameterName = "@Original_Bstlr_DispProduct";
            param.DbType = global::System.Data.DbType.AnsiString;
            param.DbType = global::System.Data.DbType.AnsiString;
            param.SourceColumn = "Bstlr_DispProduct";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::System.Data.SQLite.SQLiteParameter();
            param.ParameterName = "@Original_Bstlr_Aantal";
            param.DbType = global::System.Data.DbType.Int64;
            param.DbType = global::System.Data.DbType.Int64;
            param.SourceColumn = "Bstlr_Aantal";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::System.Data.SQLite.SQLiteParameter();
            param.ParameterName = "@IsNull_Bstlr_Beginnr";
            param.DbType = global::System.Data.DbType.Int32;
            param.DbType = global::System.Data.DbType.Int32;
            param.SourceColumn = "Bstlr_Beginnr";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::System.Data.SQLite.SQLiteParameter();
            param.ParameterName = "@Original_Bstlr_Beginnr";
            param.DbType = global::System.Data.DbType.Int64;
            param.DbType = global::System.Data.DbType.Int64;
            param.SourceColumn = "Bstlr_Beginnr";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::System.Data.SQLite.SQLiteParameter();
            param.ParameterName = "@IsNull_Bstlr_Eindnr";
            param.DbType = global::System.Data.DbType.Int32;
            param.DbType = global::System.Data.DbType.Int32;
            param.SourceColumn = "Bstlr_Eindnr";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::System.Data.SQLite.SQLiteParameter();
            param.ParameterName = "@Original_Bstlr_Eindnr";
            param.DbType = global::System.Data.DbType.Int64;
            param.DbType = global::System.Data.DbType.Int64;
            param.SourceColumn = "Bstlr_Eindnr";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::System.Data.SQLite.SQLiteParameter();
            param.ParameterName = "@IsNull_Bstlr_Voorraad";
            param.DbType = global::System.Data.DbType.Int32;
            param.DbType = global::System.Data.DbType.Int32;
            param.SourceColumn = "Bstlr_Voorraad";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::System.Data.SQLite.SQLiteParameter();
            param.ParameterName = "@Original_Bstlr_Voorraad";
            param.DbType = global::System.Data.DbType.Int64;
            param.DbType = global::System.Data.DbType.Int64;
            param.SourceColumn = "Bstlr_Voorraad";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::System.Data.SQLite.SQLiteParameter();
            param.ParameterName = "@IsNull_Bstlr_Extranr1";
            param.DbType = global::System.Data.DbType.Int32;
            param.DbType = global::System.Data.DbType.Int32;
            param.SourceColumn = "Bstlr_Extranr1";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::System.Data.SQLite.SQLiteParameter();
            param.ParameterName = "@Original_Bstlr_Extranr1";
            param.DbType = global::System.Data.DbType.Int64;
            param.DbType = global::System.Data.DbType.Int64;
            param.SourceColumn = "Bstlr_Extranr1";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::System.Data.SQLite.SQLiteParameter();
            param.ParameterName = "@IsNull_Bstlr_Extranr2";
            param.DbType = global::System.Data.DbType.Int32;
            param.DbType = global::System.Data.DbType.Int32;
            param.SourceColumn = "Bstlr_Extranr2";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::System.Data.SQLite.SQLiteParameter();
            param.ParameterName = "@Original_Bstlr_Extranr2";
            param.DbType = global::System.Data.DbType.Int64;
            param.DbType = global::System.Data.DbType.Int64;
            param.SourceColumn = "Bstlr_Extranr2";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::System.Data.SQLite.SQLiteParameter();
            param.ParameterName = "@IsNull_Bstlr_Extranr3";
            param.DbType = global::System.Data.DbType.Int32;
            param.DbType = global::System.Data.DbType.Int32;
            param.SourceColumn = "Bstlr_Extranr3";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::System.Data.SQLite.SQLiteParameter();
            param.ParameterName = "@Original_Bstlr_Extranr3";
            param.DbType = global::System.Data.DbType.Int64;
            param.DbType = global::System.Data.DbType.Int64;
            param.SourceColumn = "Bstlr_Extranr3";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::System.Data.SQLite.SQLiteParameter();
            param.ParameterName = "@Original_Bstlr_Mutatiedatum";
            param.DbType = global::System.Data.DbType.DateTime;
            param.DbType = global::System.Data.DbType.DateTime;
            param.SourceColumn = "Bstlr_Mutatiedatum";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::System.Data.SQLite.SQLiteParameter();
            param.ParameterName = "@IsNull_Bstlr_Opmerking";
            param.DbType = global::System.Data.DbType.Int32;
            param.DbType = global::System.Data.DbType.Int32;
            param.SourceColumn = "Bstlr_Opmerking";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::System.Data.SQLite.SQLiteParameter();
            param.ParameterName = "@Original_Bstlr_Opmerking";
            param.DbType = global::System.Data.DbType.AnsiString;
            param.DbType = global::System.Data.DbType.AnsiString;
            param.SourceColumn = "Bstlr_Opmerking";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitConnection() {
            this._connection = new global::System.Data.SQLite.SQLiteConnection();
            this._connection.ConnectionString = global::Cmbap.Properties.Settings.Default.Cmbap_dataConnectionString;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitCommandCollection() {
            this._commandCollection = new global::System.Data.SQLite.SQLiteCommand[1];
            this._commandCollection[0] = new global::System.Data.SQLite.SQLiteCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = @"SELECT [Bstlr_Id], [Bstlr_BstlId], [Bstlr_StatusId], [Bstlr_Dispstatus], [Bstlr_ProdId], [Bstlr_DispProduct], [Bstlr_Aantal], [Bstlr_Beginnr], [Bstlr_Eindnr], [Bstlr_Voorraad], [Bstlr_Extranr1], [Bstlr_Extranr2], [Bstlr_Extranr3], [Bstlr_Mutatiedatum], [Bstlr_Opmerking] FROM [Bestelregel]";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(_Cmbap_dataDataSet.BestelregelDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual _Cmbap_dataDataSet.BestelregelDataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            _Cmbap_dataDataSet.BestelregelDataTable dataTable = new _Cmbap_dataDataSet.BestelregelDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(_Cmbap_dataDataSet.BestelregelDataTable dataTable) {
            return this.Adapter.Update(dataTable);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(_Cmbap_dataDataSet dataSet) {
            return this.Adapter.Update(dataSet, "Bestelregel");
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow dataRow) {
            return this.Adapter.Update(new global::System.Data.DataRow[] {
                        dataRow});
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow[] dataRows) {
            return this.Adapter.Update(dataRows);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Delete, true)]
        public virtual int Delete(long Original_Bstlr_Id, long Original_Bstlr_BstlId, global::System.Nullable<long> Original_Bstlr_StatusId, string Original_Bstlr_Dispstatus, long Original_Bstlr_ProdId, string Original_Bstlr_DispProduct, long Original_Bstlr_Aantal, global::System.Nullable<long> Original_Bstlr_Beginnr, global::System.Nullable<long> Original_Bstlr_Eindnr, global::System.Nullable<long> Original_Bstlr_Voorraad, global::System.Nullable<long> Original_Bstlr_Extranr1, global::System.Nullable<long> Original_Bstlr_Extranr2, global::System.Nullable<long> Original_Bstlr_Extranr3, System.DateTime Original_Bstlr_Mutatiedatum, string Original_Bstlr_Opmerking) {
            this.Adapter.DeleteCommand.Parameters[0].Value = ((long)(Original_Bstlr_Id));
            this.Adapter.DeleteCommand.Parameters[1].Value = ((long)(Original_Bstlr_BstlId));
            if ((Original_Bstlr_StatusId.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[2].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[3].Value = ((long)(Original_Bstlr_StatusId.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[2].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[3].Value = global::System.DBNull.Value;
            }
            if ((Original_Bstlr_Dispstatus == null)) {
                this.Adapter.DeleteCommand.Parameters[4].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[5].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[4].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[5].Value = ((string)(Original_Bstlr_Dispstatus));
            }
            this.Adapter.DeleteCommand.Parameters[6].Value = ((long)(Original_Bstlr_ProdId));
            if ((Original_Bstlr_DispProduct == null)) {
                this.Adapter.DeleteCommand.Parameters[7].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[8].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[7].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[8].Value = ((string)(Original_Bstlr_DispProduct));
            }
            this.Adapter.DeleteCommand.Parameters[9].Value = ((long)(Original_Bstlr_Aantal));
            if ((Original_Bstlr_Beginnr.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[10].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[11].Value = ((long)(Original_Bstlr_Beginnr.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[10].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[11].Value = global::System.DBNull.Value;
            }
            if ((Original_Bstlr_Eindnr.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[12].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[13].Value = ((long)(Original_Bstlr_Eindnr.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[12].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[13].Value = global::System.DBNull.Value;
            }
            if ((Original_Bstlr_Voorraad.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[14].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[15].Value = ((long)(Original_Bstlr_Voorraad.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[14].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[15].Value = global::System.DBNull.Value;
            }
            if ((Original_Bstlr_Extranr1.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[16].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[17].Value = ((long)(Original_Bstlr_Extranr1.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[16].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[17].Value = global::System.DBNull.Value;
            }
            if ((Original_Bstlr_Extranr2.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[18].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[19].Value = ((long)(Original_Bstlr_Extranr2.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[18].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[19].Value = global::System.DBNull.Value;
            }
            if ((Original_Bstlr_Extranr3.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[20].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[21].Value = ((long)(Original_Bstlr_Extranr3.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[20].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[21].Value = global::System.DBNull.Value;
            }
            this.Adapter.DeleteCommand.Parameters[22].Value = ((System.DateTime)(Original_Bstlr_Mutatiedatum));
            if ((Original_Bstlr_Opmerking == null)) {
                this.Adapter.DeleteCommand.Parameters[23].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[24].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[23].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[24].Value = ((string)(Original_Bstlr_Opmerking));
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.DeleteCommand.Connection.State;
            if (((this.Adapter.DeleteCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.DeleteCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.DeleteCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.DeleteCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Insert, true)]
        public virtual int Insert(long Bstlr_BstlId, global::System.Nullable<long> Bstlr_StatusId, string Bstlr_Dispstatus, long Bstlr_ProdId, string Bstlr_DispProduct, long Bstlr_Aantal, global::System.Nullable<long> Bstlr_Beginnr, global::System.Nullable<long> Bstlr_Eindnr, global::System.Nullable<long> Bstlr_Voorraad, global::System.Nullable<long> Bstlr_Extranr1, global::System.Nullable<long> Bstlr_Extranr2, global::System.Nullable<long> Bstlr_Extranr3, System.DateTime Bstlr_Mutatiedatum, string Bstlr_Opmerking) {
            this.Adapter.InsertCommand.Parameters[0].Value = ((long)(Bstlr_BstlId));
            if ((Bstlr_StatusId.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[1].Value = ((long)(Bstlr_StatusId.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            if ((Bstlr_Dispstatus == null)) {
                this.Adapter.InsertCommand.Parameters[2].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[2].Value = ((string)(Bstlr_Dispstatus));
            }
            this.Adapter.InsertCommand.Parameters[3].Value = ((long)(Bstlr_ProdId));
            if ((Bstlr_DispProduct == null)) {
                this.Adapter.InsertCommand.Parameters[4].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[4].Value = ((string)(Bstlr_DispProduct));
            }
            this.Adapter.InsertCommand.Parameters[5].Value = ((long)(Bstlr_Aantal));
            if ((Bstlr_Beginnr.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[6].Value = ((long)(Bstlr_Beginnr.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[6].Value = global::System.DBNull.Value;
            }
            if ((Bstlr_Eindnr.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[7].Value = ((long)(Bstlr_Eindnr.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[7].Value = global::System.DBNull.Value;
            }
            if ((Bstlr_Voorraad.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[8].Value = ((long)(Bstlr_Voorraad.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[8].Value = global::System.DBNull.Value;
            }
            if ((Bstlr_Extranr1.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[9].Value = ((long)(Bstlr_Extranr1.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[9].Value = global::System.DBNull.Value;
            }
            if ((Bstlr_Extranr2.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[10].Value = ((long)(Bstlr_Extranr2.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[10].Value = global::System.DBNull.Value;
            }
            if ((Bstlr_Extranr3.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[11].Value = ((long)(Bstlr_Extranr3.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[11].Value = global::System.DBNull.Value;
            }
            this.Adapter.InsertCommand.Parameters[12].Value = ((System.DateTime)(Bstlr_Mutatiedatum));
            if ((Bstlr_Opmerking == null)) {
                this.Adapter.InsertCommand.Parameters[13].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[13].Value = ((string)(Bstlr_Opmerking));
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.InsertCommand.Connection.State;
            if (((this.Adapter.InsertCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.InsertCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.InsertCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.InsertCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(
                    long Bstlr_BstlId, 
                    global::System.Nullable<long> Bstlr_StatusId, 
                    string Bstlr_Dispstatus, 
                    long Bstlr_ProdId, 
                    string Bstlr_DispProduct, 
                    long Bstlr_Aantal, 
                    global::System.Nullable<long> Bstlr_Beginnr, 
                    global::System.Nullable<long> Bstlr_Eindnr, 
                    global::System.Nullable<long> Bstlr_Voorraad, 
                    global::System.Nullable<long> Bstlr_Extranr1, 
                    global::System.Nullable<long> Bstlr_Extranr2, 
                    global::System.Nullable<long> Bstlr_Extranr3, 
                    System.DateTime Bstlr_Mutatiedatum, 
                    string Bstlr_Opmerking, 
                    long Original_Bstlr_Id, 
                    long Original_Bstlr_BstlId, 
                    global::System.Nullable<long> Original_Bstlr_StatusId, 
                    string Original_Bstlr_Dispstatus, 
                    long Original_Bstlr_ProdId, 
                    string Original_Bstlr_DispProduct, 
                    long Original_Bstlr_Aantal, 
                    global::System.Nullable<long> Original_Bstlr_Beginnr, 
                    global::System.Nullable<long> Original_Bstlr_Eindnr, 
                    global::System.Nullable<long> Original_Bstlr_Voorraad, 
                    global::System.Nullable<long> Original_Bstlr_Extranr1, 
                    global::System.Nullable<long> Original_Bstlr_Extranr2, 
                    global::System.Nullable<long> Original_Bstlr_Extranr3, 
                    System.DateTime Original_Bstlr_Mutatiedatum, 
                    string Original_Bstlr_Opmerking) {
            this.Adapter.UpdateCommand.Parameters[0].Value = ((long)(Bstlr_BstlId));
            if ((Bstlr_StatusId.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[1].Value = ((long)(Bstlr_StatusId.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            if ((Bstlr_Dispstatus == null)) {
                this.Adapter.UpdateCommand.Parameters[2].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[2].Value = ((string)(Bstlr_Dispstatus));
            }
            this.Adapter.UpdateCommand.Parameters[3].Value = ((long)(Bstlr_ProdId));
            if ((Bstlr_DispProduct == null)) {
                this.Adapter.UpdateCommand.Parameters[4].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[4].Value = ((string)(Bstlr_DispProduct));
            }
            this.Adapter.UpdateCommand.Parameters[5].Value = ((long)(Bstlr_Aantal));
            if ((Bstlr_Beginnr.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[6].Value = ((long)(Bstlr_Beginnr.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[6].Value = global::System.DBNull.Value;
            }
            if ((Bstlr_Eindnr.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[7].Value = ((long)(Bstlr_Eindnr.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[7].Value = global::System.DBNull.Value;
            }
            if ((Bstlr_Voorraad.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[8].Value = ((long)(Bstlr_Voorraad.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[8].Value = global::System.DBNull.Value;
            }
            if ((Bstlr_Extranr1.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[9].Value = ((long)(Bstlr_Extranr1.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[9].Value = global::System.DBNull.Value;
            }
            if ((Bstlr_Extranr2.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[10].Value = ((long)(Bstlr_Extranr2.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[10].Value = global::System.DBNull.Value;
            }
            if ((Bstlr_Extranr3.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[11].Value = ((long)(Bstlr_Extranr3.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[11].Value = global::System.DBNull.Value;
            }
            this.Adapter.UpdateCommand.Parameters[12].Value = ((System.DateTime)(Bstlr_Mutatiedatum));
            if ((Bstlr_Opmerking == null)) {
                this.Adapter.UpdateCommand.Parameters[13].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[13].Value = ((string)(Bstlr_Opmerking));
            }
            this.Adapter.UpdateCommand.Parameters[14].Value = ((long)(Original_Bstlr_Id));
            this.Adapter.UpdateCommand.Parameters[15].Value = ((long)(Original_Bstlr_BstlId));
            if ((Original_Bstlr_StatusId.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[16].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[17].Value = ((long)(Original_Bstlr_StatusId.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[16].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[17].Value = global::System.DBNull.Value;
            }
            if ((Original_Bstlr_Dispstatus == null)) {
                this.Adapter.UpdateCommand.Parameters[18].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[19].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[18].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[19].Value = ((string)(Original_Bstlr_Dispstatus));
            }
            this.Adapter.UpdateCommand.Parameters[20].Value = ((long)(Original_Bstlr_ProdId));
            if ((Original_Bstlr_DispProduct == null)) {
                this.Adapter.UpdateCommand.Parameters[21].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[22].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[21].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[22].Value = ((string)(Original_Bstlr_DispProduct));
            }
            this.Adapter.UpdateCommand.Parameters[23].Value = ((long)(Original_Bstlr_Aantal));
            if ((Original_Bstlr_Beginnr.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[24].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[25].Value = ((long)(Original_Bstlr_Beginnr.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[24].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[25].Value = global::System.DBNull.Value;
            }
            if ((Original_Bstlr_Eindnr.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[26].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[27].Value = ((long)(Original_Bstlr_Eindnr.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[26].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[27].Value = global::System.DBNull.Value;
            }
            if ((Original_Bstlr_Voorraad.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[28].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[29].Value = ((long)(Original_Bstlr_Voorraad.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[28].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[29].Value = global::System.DBNull.Value;
            }
            if ((Original_Bstlr_Extranr1.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[30].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[31].Value = ((long)(Original_Bstlr_Extranr1.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[30].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[31].Value = global::System.DBNull.Value;
            }
            if ((Original_Bstlr_Extranr2.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[32].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[33].Value = ((long)(Original_Bstlr_Extranr2.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[32].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[33].Value = global::System.DBNull.Value;
            }
            if ((Original_Bstlr_Extranr3.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[34].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[35].Value = ((long)(Original_Bstlr_Extranr3.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[34].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[35].Value = global::System.DBNull.Value;
            }
            this.Adapter.UpdateCommand.Parameters[36].Value = ((System.DateTime)(Original_Bstlr_Mutatiedatum));
            if ((Original_Bstlr_Opmerking == null)) {
                this.Adapter.UpdateCommand.Parameters[37].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[38].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[37].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[38].Value = ((string)(Original_Bstlr_Opmerking));
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.UpdateCommand.Connection.State;
            if (((this.Adapter.UpdateCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.UpdateCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.UpdateCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.UpdateCommand.Connection.Close();
                }
            }
        }
    }
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class Component_tekstTableAdapter : global::System.ComponentModel.Component {
        
        private global::System.Data.SQLite.SQLiteDataAdapter _adapter;
        
        private global::System.Data.SQLite.SQLiteConnection _connection;
        
        private global::System.Data.SQLite.SQLiteTransaction _transaction;
        
        private global::System.Data.SQLite.SQLiteCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public Component_tekstTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected internal global::System.Data.SQLite.SQLiteDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal global::System.Data.SQLite.SQLiteConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::System.Data.SQLite.SQLiteCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal global::System.Data.SQLite.SQLiteTransaction Transaction {
            get {
                return this._transaction;
            }
            set {
                this._transaction = value;
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    this.CommandCollection[i].Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.DeleteCommand != null))) {
                    this.Adapter.DeleteCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.InsertCommand != null))) {
                    this.Adapter.InsertCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.UpdateCommand != null))) {
                    this.Adapter.UpdateCommand.Transaction = this._transaction;
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected global::System.Data.SQLite.SQLiteCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitAdapter() {
            this._adapter = new global::System.Data.SQLite.SQLiteDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "Component_tekst";
            tableMapping.ColumnMappings.Add("ComponenttekstId", "ComponenttekstId");
            tableMapping.ColumnMappings.Add("CT_Taal", "CT_Taal");
            tableMapping.ColumnMappings.Add("CT_Type", "CT_Type");
            tableMapping.ColumnMappings.Add("CT_Componentnaam", "CT_Componentnaam");
            tableMapping.ColumnMappings.Add("CT_Componenttekst", "CT_Componenttekst");
            tableMapping.ColumnMappings.Add("CT_Mutatiedatum", "CT_Mutatiedatum");
            tableMapping.ColumnMappings.Add("CT_Opmerking", "CT_Opmerking");
            this._adapter.TableMappings.Add(tableMapping);
            this._adapter.DeleteCommand = new global::System.Data.SQLite.SQLiteCommand();
            this._adapter.DeleteCommand.Connection = this.Connection;
            this._adapter.DeleteCommand.CommandText = @"DELETE FROM [main].[sqlite_default_schema].[Component_tekst] WHERE (([ComponenttekstId] = @Original_ComponenttekstId) AND ((@IsNull_CT_Taal = 1 AND [CT_Taal] IS NULL) OR ([CT_Taal] = @Original_CT_Taal)) AND ([CT_Type] = @Original_CT_Type) AND ([CT_Componentnaam] = @Original_CT_Componentnaam) AND ([CT_Componenttekst] = @Original_CT_Componenttekst) AND ([CT_Mutatiedatum] = @Original_CT_Mutatiedatum) AND ((@IsNull_CT_Opmerking = 1 AND [CT_Opmerking] IS NULL) OR ([CT_Opmerking] = @Original_CT_Opmerking)))";
            this._adapter.DeleteCommand.CommandType = global::System.Data.CommandType.Text;
            global::System.Data.SQLite.SQLiteParameter param = new global::System.Data.SQLite.SQLiteParameter();
            param.ParameterName = "@Original_ComponenttekstId";
            param.DbType = global::System.Data.DbType.Int64;
            param.DbType = global::System.Data.DbType.Int64;
            param.SourceColumn = "ComponenttekstId";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::System.Data.SQLite.SQLiteParameter();
            param.ParameterName = "@IsNull_CT_Taal";
            param.DbType = global::System.Data.DbType.Int32;
            param.DbType = global::System.Data.DbType.Int32;
            param.SourceColumn = "CT_Taal";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::System.Data.SQLite.SQLiteParameter();
            param.ParameterName = "@Original_CT_Taal";
            param.DbType = global::System.Data.DbType.AnsiString;
            param.DbType = global::System.Data.DbType.AnsiString;
            param.SourceColumn = "CT_Taal";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::System.Data.SQLite.SQLiteParameter();
            param.ParameterName = "@Original_CT_Type";
            param.DbType = global::System.Data.DbType.Object;
            param.DbType = global::System.Data.DbType.Object;
            param.SourceColumn = "CT_Type";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::System.Data.SQLite.SQLiteParameter();
            param.ParameterName = "@Original_CT_Componentnaam";
            param.DbType = global::System.Data.DbType.AnsiString;
            param.DbType = global::System.Data.DbType.AnsiString;
            param.SourceColumn = "CT_Componentnaam";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::System.Data.SQLite.SQLiteParameter();
            param.ParameterName = "@Original_CT_Componenttekst";
            param.DbType = global::System.Data.DbType.AnsiString;
            param.DbType = global::System.Data.DbType.AnsiString;
            param.SourceColumn = "CT_Componenttekst";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::System.Data.SQLite.SQLiteParameter();
            param.ParameterName = "@Original_CT_Mutatiedatum";
            param.DbType = global::System.Data.DbType.DateTime;
            param.DbType = global::System.Data.DbType.DateTime;
            param.SourceColumn = "CT_Mutatiedatum";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::System.Data.SQLite.SQLiteParameter();
            param.ParameterName = "@IsNull_CT_Opmerking";
            param.DbType = global::System.Data.DbType.Int32;
            param.DbType = global::System.Data.DbType.Int32;
            param.SourceColumn = "CT_Opmerking";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::System.Data.SQLite.SQLiteParameter();
            param.ParameterName = "@Original_CT_Opmerking";
            param.DbType = global::System.Data.DbType.AnsiString;
            param.DbType = global::System.Data.DbType.AnsiString;
            param.SourceColumn = "CT_Opmerking";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            this._adapter.InsertCommand = new global::System.Data.SQLite.SQLiteCommand();
            this._adapter.InsertCommand.Connection = this.Connection;
            this._adapter.InsertCommand.CommandText = @"INSERT INTO [main].[sqlite_default_schema].[Component_tekst] ([CT_Taal], [CT_Type], [CT_Componentnaam], [CT_Componenttekst], [CT_Mutatiedatum], [CT_Opmerking]) VALUES (@CT_Taal, @CT_Type, @CT_Componentnaam, @CT_Componenttekst, @CT_Mutatiedatum, @CT_Opmerking)";
            this._adapter.InsertCommand.CommandType = global::System.Data.CommandType.Text;
            param = new global::System.Data.SQLite.SQLiteParameter();
            param.ParameterName = "@CT_Taal";
            param.DbType = global::System.Data.DbType.AnsiString;
            param.DbType = global::System.Data.DbType.AnsiString;
            param.SourceColumn = "CT_Taal";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::System.Data.SQLite.SQLiteParameter();
            param.ParameterName = "@CT_Type";
            param.DbType = global::System.Data.DbType.Object;
            param.DbType = global::System.Data.DbType.Object;
            param.SourceColumn = "CT_Type";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::System.Data.SQLite.SQLiteParameter();
            param.ParameterName = "@CT_Componentnaam";
            param.DbType = global::System.Data.DbType.AnsiString;
            param.DbType = global::System.Data.DbType.AnsiString;
            param.SourceColumn = "CT_Componentnaam";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::System.Data.SQLite.SQLiteParameter();
            param.ParameterName = "@CT_Componenttekst";
            param.DbType = global::System.Data.DbType.AnsiString;
            param.DbType = global::System.Data.DbType.AnsiString;
            param.SourceColumn = "CT_Componenttekst";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::System.Data.SQLite.SQLiteParameter();
            param.ParameterName = "@CT_Mutatiedatum";
            param.DbType = global::System.Data.DbType.DateTime;
            param.DbType = global::System.Data.DbType.DateTime;
            param.SourceColumn = "CT_Mutatiedatum";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::System.Data.SQLite.SQLiteParameter();
            param.ParameterName = "@CT_Opmerking";
            param.DbType = global::System.Data.DbType.AnsiString;
            param.DbType = global::System.Data.DbType.AnsiString;
            param.SourceColumn = "CT_Opmerking";
            this._adapter.InsertCommand.Parameters.Add(param);
            this._adapter.UpdateCommand = new global::System.Data.SQLite.SQLiteCommand();
            this._adapter.UpdateCommand.Connection = this.Connection;
            this._adapter.UpdateCommand.CommandText = @"UPDATE [main].[sqlite_default_schema].[Component_tekst] SET [CT_Taal] = @CT_Taal, [CT_Type] = @CT_Type, [CT_Componentnaam] = @CT_Componentnaam, [CT_Componenttekst] = @CT_Componenttekst, [CT_Mutatiedatum] = @CT_Mutatiedatum, [CT_Opmerking] = @CT_Opmerking WHERE (([ComponenttekstId] = @Original_ComponenttekstId) AND ((@IsNull_CT_Taal = 1 AND [CT_Taal] IS NULL) OR ([CT_Taal] = @Original_CT_Taal)) AND ([CT_Type] = @Original_CT_Type) AND ([CT_Componentnaam] = @Original_CT_Componentnaam) AND ([CT_Componenttekst] = @Original_CT_Componenttekst) AND ([CT_Mutatiedatum] = @Original_CT_Mutatiedatum) AND ((@IsNull_CT_Opmerking = 1 AND [CT_Opmerking] IS NULL) OR ([CT_Opmerking] = @Original_CT_Opmerking)))";
            this._adapter.UpdateCommand.CommandType = global::System.Data.CommandType.Text;
            param = new global::System.Data.SQLite.SQLiteParameter();
            param.ParameterName = "@CT_Taal";
            param.DbType = global::System.Data.DbType.AnsiString;
            param.DbType = global::System.Data.DbType.AnsiString;
            param.SourceColumn = "CT_Taal";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::System.Data.SQLite.SQLiteParameter();
            param.ParameterName = "@CT_Type";
            param.DbType = global::System.Data.DbType.Object;
            param.DbType = global::System.Data.DbType.Object;
            param.SourceColumn = "CT_Type";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::System.Data.SQLite.SQLiteParameter();
            param.ParameterName = "@CT_Componentnaam";
            param.DbType = global::System.Data.DbType.AnsiString;
            param.DbType = global::System.Data.DbType.AnsiString;
            param.SourceColumn = "CT_Componentnaam";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::System.Data.SQLite.SQLiteParameter();
            param.ParameterName = "@CT_Componenttekst";
            param.DbType = global::System.Data.DbType.AnsiString;
            param.DbType = global::System.Data.DbType.AnsiString;
            param.SourceColumn = "CT_Componenttekst";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::System.Data.SQLite.SQLiteParameter();
            param.ParameterName = "@CT_Mutatiedatum";
            param.DbType = global::System.Data.DbType.DateTime;
            param.DbType = global::System.Data.DbType.DateTime;
            param.SourceColumn = "CT_Mutatiedatum";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::System.Data.SQLite.SQLiteParameter();
            param.ParameterName = "@CT_Opmerking";
            param.DbType = global::System.Data.DbType.AnsiString;
            param.DbType = global::System.Data.DbType.AnsiString;
            param.SourceColumn = "CT_Opmerking";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::System.Data.SQLite.SQLiteParameter();
            param.ParameterName = "@Original_ComponenttekstId";
            param.DbType = global::System.Data.DbType.Int64;
            param.DbType = global::System.Data.DbType.Int64;
            param.SourceColumn = "ComponenttekstId";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::System.Data.SQLite.SQLiteParameter();
            param.ParameterName = "@IsNull_CT_Taal";
            param.DbType = global::System.Data.DbType.Int32;
            param.DbType = global::System.Data.DbType.Int32;
            param.SourceColumn = "CT_Taal";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::System.Data.SQLite.SQLiteParameter();
            param.ParameterName = "@Original_CT_Taal";
            param.DbType = global::System.Data.DbType.AnsiString;
            param.DbType = global::System.Data.DbType.AnsiString;
            param.SourceColumn = "CT_Taal";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::System.Data.SQLite.SQLiteParameter();
            param.ParameterName = "@Original_CT_Type";
            param.DbType = global::System.Data.DbType.Object;
            param.DbType = global::System.Data.DbType.Object;
            param.SourceColumn = "CT_Type";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::System.Data.SQLite.SQLiteParameter();
            param.ParameterName = "@Original_CT_Componentnaam";
            param.DbType = global::System.Data.DbType.AnsiString;
            param.DbType = global::System.Data.DbType.AnsiString;
            param.SourceColumn = "CT_Componentnaam";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::System.Data.SQLite.SQLiteParameter();
            param.ParameterName = "@Original_CT_Componenttekst";
            param.DbType = global::System.Data.DbType.AnsiString;
            param.DbType = global::System.Data.DbType.AnsiString;
            param.SourceColumn = "CT_Componenttekst";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::System.Data.SQLite.SQLiteParameter();
            param.ParameterName = "@Original_CT_Mutatiedatum";
            param.DbType = global::System.Data.DbType.DateTime;
            param.DbType = global::System.Data.DbType.DateTime;
            param.SourceColumn = "CT_Mutatiedatum";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::System.Data.SQLite.SQLiteParameter();
            param.ParameterName = "@IsNull_CT_Opmerking";
            param.DbType = global::System.Data.DbType.Int32;
            param.DbType = global::System.Data.DbType.Int32;
            param.SourceColumn = "CT_Opmerking";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::System.Data.SQLite.SQLiteParameter();
            param.ParameterName = "@Original_CT_Opmerking";
            param.DbType = global::System.Data.DbType.AnsiString;
            param.DbType = global::System.Data.DbType.AnsiString;
            param.SourceColumn = "CT_Opmerking";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitConnection() {
            this._connection = new global::System.Data.SQLite.SQLiteConnection();
            this._connection.ConnectionString = global::Cmbap.Properties.Settings.Default.Cmbap_dataConnectionString;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitCommandCollection() {
            this._commandCollection = new global::System.Data.SQLite.SQLiteCommand[1];
            this._commandCollection[0] = new global::System.Data.SQLite.SQLiteCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "SELECT [ComponenttekstId], [CT_Taal], [CT_Type], [CT_Componentnaam], [CT_Componen" +
                "ttekst], [CT_Mutatiedatum], [CT_Opmerking] FROM [Component_tekst]";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(_Cmbap_dataDataSet.Component_tekstDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual _Cmbap_dataDataSet.Component_tekstDataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            _Cmbap_dataDataSet.Component_tekstDataTable dataTable = new _Cmbap_dataDataSet.Component_tekstDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(_Cmbap_dataDataSet.Component_tekstDataTable dataTable) {
            return this.Adapter.Update(dataTable);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(_Cmbap_dataDataSet dataSet) {
            return this.Adapter.Update(dataSet, "Component_tekst");
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow dataRow) {
            return this.Adapter.Update(new global::System.Data.DataRow[] {
                        dataRow});
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow[] dataRows) {
            return this.Adapter.Update(dataRows);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Delete, true)]
        public virtual int Delete(long Original_ComponenttekstId, string Original_CT_Taal, object Original_CT_Type, string Original_CT_Componentnaam, string Original_CT_Componenttekst, System.DateTime Original_CT_Mutatiedatum, string Original_CT_Opmerking) {
            this.Adapter.DeleteCommand.Parameters[0].Value = ((long)(Original_ComponenttekstId));
            if ((Original_CT_Taal == null)) {
                this.Adapter.DeleteCommand.Parameters[1].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[2].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[1].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[2].Value = ((string)(Original_CT_Taal));
            }
            if ((Original_CT_Type == null)) {
                throw new global::System.ArgumentNullException("Original_CT_Type");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[3].Value = ((object)(Original_CT_Type));
            }
            if ((Original_CT_Componentnaam == null)) {
                throw new global::System.ArgumentNullException("Original_CT_Componentnaam");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[4].Value = ((string)(Original_CT_Componentnaam));
            }
            if ((Original_CT_Componenttekst == null)) {
                throw new global::System.ArgumentNullException("Original_CT_Componenttekst");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[5].Value = ((string)(Original_CT_Componenttekst));
            }
            this.Adapter.DeleteCommand.Parameters[6].Value = ((System.DateTime)(Original_CT_Mutatiedatum));
            if ((Original_CT_Opmerking == null)) {
                this.Adapter.DeleteCommand.Parameters[7].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[8].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[7].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[8].Value = ((string)(Original_CT_Opmerking));
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.DeleteCommand.Connection.State;
            if (((this.Adapter.DeleteCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.DeleteCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.DeleteCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.DeleteCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Insert, true)]
        public virtual int Insert(string CT_Taal, object CT_Type, string CT_Componentnaam, string CT_Componenttekst, System.DateTime CT_Mutatiedatum, string CT_Opmerking) {
            if ((CT_Taal == null)) {
                this.Adapter.InsertCommand.Parameters[0].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[0].Value = ((string)(CT_Taal));
            }
            if ((CT_Type == null)) {
                throw new global::System.ArgumentNullException("CT_Type");
            }
            else {
                this.Adapter.InsertCommand.Parameters[1].Value = ((object)(CT_Type));
            }
            if ((CT_Componentnaam == null)) {
                throw new global::System.ArgumentNullException("CT_Componentnaam");
            }
            else {
                this.Adapter.InsertCommand.Parameters[2].Value = ((string)(CT_Componentnaam));
            }
            if ((CT_Componenttekst == null)) {
                throw new global::System.ArgumentNullException("CT_Componenttekst");
            }
            else {
                this.Adapter.InsertCommand.Parameters[3].Value = ((string)(CT_Componenttekst));
            }
            this.Adapter.InsertCommand.Parameters[4].Value = ((System.DateTime)(CT_Mutatiedatum));
            if ((CT_Opmerking == null)) {
                this.Adapter.InsertCommand.Parameters[5].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[5].Value = ((string)(CT_Opmerking));
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.InsertCommand.Connection.State;
            if (((this.Adapter.InsertCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.InsertCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.InsertCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.InsertCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(string CT_Taal, object CT_Type, string CT_Componentnaam, string CT_Componenttekst, System.DateTime CT_Mutatiedatum, string CT_Opmerking, long Original_ComponenttekstId, string Original_CT_Taal, object Original_CT_Type, string Original_CT_Componentnaam, string Original_CT_Componenttekst, System.DateTime Original_CT_Mutatiedatum, string Original_CT_Opmerking) {
            if ((CT_Taal == null)) {
                this.Adapter.UpdateCommand.Parameters[0].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[0].Value = ((string)(CT_Taal));
            }
            if ((CT_Type == null)) {
                throw new global::System.ArgumentNullException("CT_Type");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[1].Value = ((object)(CT_Type));
            }
            if ((CT_Componentnaam == null)) {
                throw new global::System.ArgumentNullException("CT_Componentnaam");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[2].Value = ((string)(CT_Componentnaam));
            }
            if ((CT_Componenttekst == null)) {
                throw new global::System.ArgumentNullException("CT_Componenttekst");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[3].Value = ((string)(CT_Componenttekst));
            }
            this.Adapter.UpdateCommand.Parameters[4].Value = ((System.DateTime)(CT_Mutatiedatum));
            if ((CT_Opmerking == null)) {
                this.Adapter.UpdateCommand.Parameters[5].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[5].Value = ((string)(CT_Opmerking));
            }
            this.Adapter.UpdateCommand.Parameters[6].Value = ((long)(Original_ComponenttekstId));
            if ((Original_CT_Taal == null)) {
                this.Adapter.UpdateCommand.Parameters[7].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[8].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[7].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[8].Value = ((string)(Original_CT_Taal));
            }
            if ((Original_CT_Type == null)) {
                throw new global::System.ArgumentNullException("Original_CT_Type");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[9].Value = ((object)(Original_CT_Type));
            }
            if ((Original_CT_Componentnaam == null)) {
                throw new global::System.ArgumentNullException("Original_CT_Componentnaam");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[10].Value = ((string)(Original_CT_Componentnaam));
            }
            if ((Original_CT_Componenttekst == null)) {
                throw new global::System.ArgumentNullException("Original_CT_Componenttekst");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[11].Value = ((string)(Original_CT_Componenttekst));
            }
            this.Adapter.UpdateCommand.Parameters[12].Value = ((System.DateTime)(Original_CT_Mutatiedatum));
            if ((Original_CT_Opmerking == null)) {
                this.Adapter.UpdateCommand.Parameters[13].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[14].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[13].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[14].Value = ((string)(Original_CT_Opmerking));
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.UpdateCommand.Connection.State;
            if (((this.Adapter.UpdateCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.UpdateCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.UpdateCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.UpdateCommand.Connection.Close();
                }
            }
        }
    }
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class DbFilesTableAdapter : global::System.ComponentModel.Component {
        
        private global::System.Data.SQLite.SQLiteDataAdapter _adapter;
        
        private global::System.Data.SQLite.SQLiteConnection _connection;
        
        private global::System.Data.SQLite.SQLiteTransaction _transaction;
        
        private global::System.Data.SQLite.SQLiteCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public DbFilesTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected internal global::System.Data.SQLite.SQLiteDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal global::System.Data.SQLite.SQLiteConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::System.Data.SQLite.SQLiteCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal global::System.Data.SQLite.SQLiteTransaction Transaction {
            get {
                return this._transaction;
            }
            set {
                this._transaction = value;
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    this.CommandCollection[i].Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.DeleteCommand != null))) {
                    this.Adapter.DeleteCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.InsertCommand != null))) {
                    this.Adapter.InsertCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.UpdateCommand != null))) {
                    this.Adapter.UpdateCommand.Transaction = this._transaction;
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected global::System.Data.SQLite.SQLiteCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitAdapter() {
            this._adapter = new global::System.Data.SQLite.SQLiteDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "DbFiles";
            tableMapping.ColumnMappings.Add("DbFilesId", "DbFilesId");
            tableMapping.ColumnMappings.Add("DbFiles_Naam", "DbFiles_Naam");
            tableMapping.ColumnMappings.Add("DbFiles_Omschrijving", "DbFiles_Omschrijving");
            tableMapping.ColumnMappings.Add("DbFiles_Nr", "DbFiles_Nr");
            tableMapping.ColumnMappings.Add("DbFiles_Kort", "DbFiles_Kort");
            tableMapping.ColumnMappings.Add("DbFiles_Mutatiedatum", "DbFiles_Mutatiedatum");
            tableMapping.ColumnMappings.Add("DbFiles_Opmerking", "DbFiles_Opmerking");
            this._adapter.TableMappings.Add(tableMapping);
            this._adapter.DeleteCommand = new global::System.Data.SQLite.SQLiteCommand();
            this._adapter.DeleteCommand.Connection = this.Connection;
            this._adapter.DeleteCommand.CommandText = @"DELETE FROM [main].[sqlite_default_schema].[DbFiles] WHERE (([DbFilesId] = @Original_DbFilesId) AND ([DbFiles_Naam] = @Original_DbFiles_Naam) AND ((@IsNull_DbFiles_Omschrijving = 1 AND [DbFiles_Omschrijving] IS NULL) OR ([DbFiles_Omschrijving] = @Original_DbFiles_Omschrijving)) AND ([DbFiles_Nr] = @Original_DbFiles_Nr) AND ([DbFiles_Kort] = @Original_DbFiles_Kort) AND ([DbFiles_Mutatiedatum] = @Original_DbFiles_Mutatiedatum) AND ((@IsNull_DbFiles_Opmerking = 1 AND [DbFiles_Opmerking] IS NULL) OR ([DbFiles_Opmerking] = @Original_DbFiles_Opmerking)))";
            this._adapter.DeleteCommand.CommandType = global::System.Data.CommandType.Text;
            global::System.Data.SQLite.SQLiteParameter param = new global::System.Data.SQLite.SQLiteParameter();
            param.ParameterName = "@Original_DbFilesId";
            param.DbType = global::System.Data.DbType.Int64;
            param.DbType = global::System.Data.DbType.Int64;
            param.SourceColumn = "DbFilesId";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::System.Data.SQLite.SQLiteParameter();
            param.ParameterName = "@Original_DbFiles_Naam";
            param.DbType = global::System.Data.DbType.AnsiString;
            param.DbType = global::System.Data.DbType.AnsiString;
            param.SourceColumn = "DbFiles_Naam";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::System.Data.SQLite.SQLiteParameter();
            param.ParameterName = "@IsNull_DbFiles_Omschrijving";
            param.DbType = global::System.Data.DbType.Int32;
            param.DbType = global::System.Data.DbType.Int32;
            param.SourceColumn = "DbFiles_Omschrijving";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::System.Data.SQLite.SQLiteParameter();
            param.ParameterName = "@Original_DbFiles_Omschrijving";
            param.DbType = global::System.Data.DbType.AnsiString;
            param.DbType = global::System.Data.DbType.AnsiString;
            param.SourceColumn = "DbFiles_Omschrijving";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::System.Data.SQLite.SQLiteParameter();
            param.ParameterName = "@Original_DbFiles_Nr";
            param.DbType = global::System.Data.DbType.Int64;
            param.DbType = global::System.Data.DbType.Int64;
            param.SourceColumn = "DbFiles_Nr";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::System.Data.SQLite.SQLiteParameter();
            param.ParameterName = "@Original_DbFiles_Kort";
            param.DbType = global::System.Data.DbType.AnsiString;
            param.DbType = global::System.Data.DbType.AnsiString;
            param.SourceColumn = "DbFiles_Kort";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::System.Data.SQLite.SQLiteParameter();
            param.ParameterName = "@Original_DbFiles_Mutatiedatum";
            param.DbType = global::System.Data.DbType.DateTime;
            param.DbType = global::System.Data.DbType.DateTime;
            param.SourceColumn = "DbFiles_Mutatiedatum";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::System.Data.SQLite.SQLiteParameter();
            param.ParameterName = "@IsNull_DbFiles_Opmerking";
            param.DbType = global::System.Data.DbType.Int32;
            param.DbType = global::System.Data.DbType.Int32;
            param.SourceColumn = "DbFiles_Opmerking";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::System.Data.SQLite.SQLiteParameter();
            param.ParameterName = "@Original_DbFiles_Opmerking";
            param.DbType = global::System.Data.DbType.AnsiString;
            param.DbType = global::System.Data.DbType.AnsiString;
            param.SourceColumn = "DbFiles_Opmerking";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            this._adapter.InsertCommand = new global::System.Data.SQLite.SQLiteCommand();
            this._adapter.InsertCommand.Connection = this.Connection;
            this._adapter.InsertCommand.CommandText = @"INSERT INTO [main].[sqlite_default_schema].[DbFiles] ([DbFiles_Naam], [DbFiles_Omschrijving], [DbFiles_Nr], [DbFiles_Kort], [DbFiles_Mutatiedatum], [DbFiles_Opmerking]) VALUES (@DbFiles_Naam, @DbFiles_Omschrijving, @DbFiles_Nr, @DbFiles_Kort, @DbFiles_Mutatiedatum, @DbFiles_Opmerking)";
            this._adapter.InsertCommand.CommandType = global::System.Data.CommandType.Text;
            param = new global::System.Data.SQLite.SQLiteParameter();
            param.ParameterName = "@DbFiles_Naam";
            param.DbType = global::System.Data.DbType.AnsiString;
            param.DbType = global::System.Data.DbType.AnsiString;
            param.SourceColumn = "DbFiles_Naam";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::System.Data.SQLite.SQLiteParameter();
            param.ParameterName = "@DbFiles_Omschrijving";
            param.DbType = global::System.Data.DbType.AnsiString;
            param.DbType = global::System.Data.DbType.AnsiString;
            param.SourceColumn = "DbFiles_Omschrijving";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::System.Data.SQLite.SQLiteParameter();
            param.ParameterName = "@DbFiles_Nr";
            param.DbType = global::System.Data.DbType.Int64;
            param.DbType = global::System.Data.DbType.Int64;
            param.SourceColumn = "DbFiles_Nr";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::System.Data.SQLite.SQLiteParameter();
            param.ParameterName = "@DbFiles_Kort";
            param.DbType = global::System.Data.DbType.AnsiString;
            param.DbType = global::System.Data.DbType.AnsiString;
            param.SourceColumn = "DbFiles_Kort";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::System.Data.SQLite.SQLiteParameter();
            param.ParameterName = "@DbFiles_Mutatiedatum";
            param.DbType = global::System.Data.DbType.DateTime;
            param.DbType = global::System.Data.DbType.DateTime;
            param.SourceColumn = "DbFiles_Mutatiedatum";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::System.Data.SQLite.SQLiteParameter();
            param.ParameterName = "@DbFiles_Opmerking";
            param.DbType = global::System.Data.DbType.AnsiString;
            param.DbType = global::System.Data.DbType.AnsiString;
            param.SourceColumn = "DbFiles_Opmerking";
            this._adapter.InsertCommand.Parameters.Add(param);
            this._adapter.UpdateCommand = new global::System.Data.SQLite.SQLiteCommand();
            this._adapter.UpdateCommand.Connection = this.Connection;
            this._adapter.UpdateCommand.CommandText = @"UPDATE [main].[sqlite_default_schema].[DbFiles] SET [DbFiles_Naam] = @DbFiles_Naam, [DbFiles_Omschrijving] = @DbFiles_Omschrijving, [DbFiles_Nr] = @DbFiles_Nr, [DbFiles_Kort] = @DbFiles_Kort, [DbFiles_Mutatiedatum] = @DbFiles_Mutatiedatum, [DbFiles_Opmerking] = @DbFiles_Opmerking WHERE (([DbFilesId] = @Original_DbFilesId) AND ([DbFiles_Naam] = @Original_DbFiles_Naam) AND ((@IsNull_DbFiles_Omschrijving = 1 AND [DbFiles_Omschrijving] IS NULL) OR ([DbFiles_Omschrijving] = @Original_DbFiles_Omschrijving)) AND ([DbFiles_Nr] = @Original_DbFiles_Nr) AND ([DbFiles_Kort] = @Original_DbFiles_Kort) AND ([DbFiles_Mutatiedatum] = @Original_DbFiles_Mutatiedatum) AND ((@IsNull_DbFiles_Opmerking = 1 AND [DbFiles_Opmerking] IS NULL) OR ([DbFiles_Opmerking] = @Original_DbFiles_Opmerking)))";
            this._adapter.UpdateCommand.CommandType = global::System.Data.CommandType.Text;
            param = new global::System.Data.SQLite.SQLiteParameter();
            param.ParameterName = "@DbFiles_Naam";
            param.DbType = global::System.Data.DbType.AnsiString;
            param.DbType = global::System.Data.DbType.AnsiString;
            param.SourceColumn = "DbFiles_Naam";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::System.Data.SQLite.SQLiteParameter();
            param.ParameterName = "@DbFiles_Omschrijving";
            param.DbType = global::System.Data.DbType.AnsiString;
            param.DbType = global::System.Data.DbType.AnsiString;
            param.SourceColumn = "DbFiles_Omschrijving";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::System.Data.SQLite.SQLiteParameter();
            param.ParameterName = "@DbFiles_Nr";
            param.DbType = global::System.Data.DbType.Int64;
            param.DbType = global::System.Data.DbType.Int64;
            param.SourceColumn = "DbFiles_Nr";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::System.Data.SQLite.SQLiteParameter();
            param.ParameterName = "@DbFiles_Kort";
            param.DbType = global::System.Data.DbType.AnsiString;
            param.DbType = global::System.Data.DbType.AnsiString;
            param.SourceColumn = "DbFiles_Kort";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::System.Data.SQLite.SQLiteParameter();
            param.ParameterName = "@DbFiles_Mutatiedatum";
            param.DbType = global::System.Data.DbType.DateTime;
            param.DbType = global::System.Data.DbType.DateTime;
            param.SourceColumn = "DbFiles_Mutatiedatum";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::System.Data.SQLite.SQLiteParameter();
            param.ParameterName = "@DbFiles_Opmerking";
            param.DbType = global::System.Data.DbType.AnsiString;
            param.DbType = global::System.Data.DbType.AnsiString;
            param.SourceColumn = "DbFiles_Opmerking";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::System.Data.SQLite.SQLiteParameter();
            param.ParameterName = "@Original_DbFilesId";
            param.DbType = global::System.Data.DbType.Int64;
            param.DbType = global::System.Data.DbType.Int64;
            param.SourceColumn = "DbFilesId";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::System.Data.SQLite.SQLiteParameter();
            param.ParameterName = "@Original_DbFiles_Naam";
            param.DbType = global::System.Data.DbType.AnsiString;
            param.DbType = global::System.Data.DbType.AnsiString;
            param.SourceColumn = "DbFiles_Naam";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::System.Data.SQLite.SQLiteParameter();
            param.ParameterName = "@IsNull_DbFiles_Omschrijving";
            param.DbType = global::System.Data.DbType.Int32;
            param.DbType = global::System.Data.DbType.Int32;
            param.SourceColumn = "DbFiles_Omschrijving";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::System.Data.SQLite.SQLiteParameter();
            param.ParameterName = "@Original_DbFiles_Omschrijving";
            param.DbType = global::System.Data.DbType.AnsiString;
            param.DbType = global::System.Data.DbType.AnsiString;
            param.SourceColumn = "DbFiles_Omschrijving";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::System.Data.SQLite.SQLiteParameter();
            param.ParameterName = "@Original_DbFiles_Nr";
            param.DbType = global::System.Data.DbType.Int64;
            param.DbType = global::System.Data.DbType.Int64;
            param.SourceColumn = "DbFiles_Nr";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::System.Data.SQLite.SQLiteParameter();
            param.ParameterName = "@Original_DbFiles_Kort";
            param.DbType = global::System.Data.DbType.AnsiString;
            param.DbType = global::System.Data.DbType.AnsiString;
            param.SourceColumn = "DbFiles_Kort";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::System.Data.SQLite.SQLiteParameter();
            param.ParameterName = "@Original_DbFiles_Mutatiedatum";
            param.DbType = global::System.Data.DbType.DateTime;
            param.DbType = global::System.Data.DbType.DateTime;
            param.SourceColumn = "DbFiles_Mutatiedatum";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::System.Data.SQLite.SQLiteParameter();
            param.ParameterName = "@IsNull_DbFiles_Opmerking";
            param.DbType = global::System.Data.DbType.Int32;
            param.DbType = global::System.Data.DbType.Int32;
            param.SourceColumn = "DbFiles_Opmerking";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::System.Data.SQLite.SQLiteParameter();
            param.ParameterName = "@Original_DbFiles_Opmerking";
            param.DbType = global::System.Data.DbType.AnsiString;
            param.DbType = global::System.Data.DbType.AnsiString;
            param.SourceColumn = "DbFiles_Opmerking";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitConnection() {
            this._connection = new global::System.Data.SQLite.SQLiteConnection();
            this._connection.ConnectionString = global::Cmbap.Properties.Settings.Default.Cmbap_dataConnectionString;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitCommandCollection() {
            this._commandCollection = new global::System.Data.SQLite.SQLiteCommand[1];
            this._commandCollection[0] = new global::System.Data.SQLite.SQLiteCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "SELECT [DbFilesId], [DbFiles_Naam], [DbFiles_Omschrijving], [DbFiles_Nr], [DbFile" +
                "s_Kort], [DbFiles_Mutatiedatum], [DbFiles_Opmerking] FROM [DbFiles]";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(_Cmbap_dataDataSet.DbFilesDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual _Cmbap_dataDataSet.DbFilesDataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            _Cmbap_dataDataSet.DbFilesDataTable dataTable = new _Cmbap_dataDataSet.DbFilesDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(_Cmbap_dataDataSet.DbFilesDataTable dataTable) {
            return this.Adapter.Update(dataTable);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(_Cmbap_dataDataSet dataSet) {
            return this.Adapter.Update(dataSet, "DbFiles");
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow dataRow) {
            return this.Adapter.Update(new global::System.Data.DataRow[] {
                        dataRow});
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow[] dataRows) {
            return this.Adapter.Update(dataRows);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Delete, true)]
        public virtual int Delete(long Original_DbFilesId, string Original_DbFiles_Naam, string Original_DbFiles_Omschrijving, long Original_DbFiles_Nr, string Original_DbFiles_Kort, System.DateTime Original_DbFiles_Mutatiedatum, string Original_DbFiles_Opmerking) {
            this.Adapter.DeleteCommand.Parameters[0].Value = ((long)(Original_DbFilesId));
            if ((Original_DbFiles_Naam == null)) {
                throw new global::System.ArgumentNullException("Original_DbFiles_Naam");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[1].Value = ((string)(Original_DbFiles_Naam));
            }
            if ((Original_DbFiles_Omschrijving == null)) {
                this.Adapter.DeleteCommand.Parameters[2].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[3].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[2].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[3].Value = ((string)(Original_DbFiles_Omschrijving));
            }
            this.Adapter.DeleteCommand.Parameters[4].Value = ((long)(Original_DbFiles_Nr));
            if ((Original_DbFiles_Kort == null)) {
                throw new global::System.ArgumentNullException("Original_DbFiles_Kort");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[5].Value = ((string)(Original_DbFiles_Kort));
            }
            this.Adapter.DeleteCommand.Parameters[6].Value = ((System.DateTime)(Original_DbFiles_Mutatiedatum));
            if ((Original_DbFiles_Opmerking == null)) {
                this.Adapter.DeleteCommand.Parameters[7].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[8].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[7].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[8].Value = ((string)(Original_DbFiles_Opmerking));
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.DeleteCommand.Connection.State;
            if (((this.Adapter.DeleteCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.DeleteCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.DeleteCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.DeleteCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Insert, true)]
        public virtual int Insert(string DbFiles_Naam, string DbFiles_Omschrijving, long DbFiles_Nr, string DbFiles_Kort, System.DateTime DbFiles_Mutatiedatum, string DbFiles_Opmerking) {
            if ((DbFiles_Naam == null)) {
                throw new global::System.ArgumentNullException("DbFiles_Naam");
            }
            else {
                this.Adapter.InsertCommand.Parameters[0].Value = ((string)(DbFiles_Naam));
            }
            if ((DbFiles_Omschrijving == null)) {
                this.Adapter.InsertCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[1].Value = ((string)(DbFiles_Omschrijving));
            }
            this.Adapter.InsertCommand.Parameters[2].Value = ((long)(DbFiles_Nr));
            if ((DbFiles_Kort == null)) {
                throw new global::System.ArgumentNullException("DbFiles_Kort");
            }
            else {
                this.Adapter.InsertCommand.Parameters[3].Value = ((string)(DbFiles_Kort));
            }
            this.Adapter.InsertCommand.Parameters[4].Value = ((System.DateTime)(DbFiles_Mutatiedatum));
            if ((DbFiles_Opmerking == null)) {
                this.Adapter.InsertCommand.Parameters[5].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[5].Value = ((string)(DbFiles_Opmerking));
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.InsertCommand.Connection.State;
            if (((this.Adapter.InsertCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.InsertCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.InsertCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.InsertCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(string DbFiles_Naam, string DbFiles_Omschrijving, long DbFiles_Nr, string DbFiles_Kort, System.DateTime DbFiles_Mutatiedatum, string DbFiles_Opmerking, long Original_DbFilesId, string Original_DbFiles_Naam, string Original_DbFiles_Omschrijving, long Original_DbFiles_Nr, string Original_DbFiles_Kort, System.DateTime Original_DbFiles_Mutatiedatum, string Original_DbFiles_Opmerking) {
            if ((DbFiles_Naam == null)) {
                throw new global::System.ArgumentNullException("DbFiles_Naam");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[0].Value = ((string)(DbFiles_Naam));
            }
            if ((DbFiles_Omschrijving == null)) {
                this.Adapter.UpdateCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[1].Value = ((string)(DbFiles_Omschrijving));
            }
            this.Adapter.UpdateCommand.Parameters[2].Value = ((long)(DbFiles_Nr));
            if ((DbFiles_Kort == null)) {
                throw new global::System.ArgumentNullException("DbFiles_Kort");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[3].Value = ((string)(DbFiles_Kort));
            }
            this.Adapter.UpdateCommand.Parameters[4].Value = ((System.DateTime)(DbFiles_Mutatiedatum));
            if ((DbFiles_Opmerking == null)) {
                this.Adapter.UpdateCommand.Parameters[5].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[5].Value = ((string)(DbFiles_Opmerking));
            }
            this.Adapter.UpdateCommand.Parameters[6].Value = ((long)(Original_DbFilesId));
            if ((Original_DbFiles_Naam == null)) {
                throw new global::System.ArgumentNullException("Original_DbFiles_Naam");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[7].Value = ((string)(Original_DbFiles_Naam));
            }
            if ((Original_DbFiles_Omschrijving == null)) {
                this.Adapter.UpdateCommand.Parameters[8].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[9].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[8].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[9].Value = ((string)(Original_DbFiles_Omschrijving));
            }
            this.Adapter.UpdateCommand.Parameters[10].Value = ((long)(Original_DbFiles_Nr));
            if ((Original_DbFiles_Kort == null)) {
                throw new global::System.ArgumentNullException("Original_DbFiles_Kort");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[11].Value = ((string)(Original_DbFiles_Kort));
            }
            this.Adapter.UpdateCommand.Parameters[12].Value = ((System.DateTime)(Original_DbFiles_Mutatiedatum));
            if ((Original_DbFiles_Opmerking == null)) {
                this.Adapter.UpdateCommand.Parameters[13].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[14].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[13].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[14].Value = ((string)(Original_DbFiles_Opmerking));
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.UpdateCommand.Connection.State;
            if (((this.Adapter.UpdateCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.UpdateCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.UpdateCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.UpdateCommand.Connection.Close();
                }
            }
        }
    }
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class EmailTableAdapter : global::System.ComponentModel.Component {
        
        private global::System.Data.SQLite.SQLiteDataAdapter _adapter;
        
        private global::System.Data.SQLite.SQLiteConnection _connection;
        
        private global::System.Data.SQLite.SQLiteTransaction _transaction;
        
        private global::System.Data.SQLite.SQLiteCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public EmailTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected internal global::System.Data.SQLite.SQLiteDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal global::System.Data.SQLite.SQLiteConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::System.Data.SQLite.SQLiteCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal global::System.Data.SQLite.SQLiteTransaction Transaction {
            get {
                return this._transaction;
            }
            set {
                this._transaction = value;
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    this.CommandCollection[i].Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.DeleteCommand != null))) {
                    this.Adapter.DeleteCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.InsertCommand != null))) {
                    this.Adapter.InsertCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.UpdateCommand != null))) {
                    this.Adapter.UpdateCommand.Transaction = this._transaction;
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected global::System.Data.SQLite.SQLiteCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitAdapter() {
            this._adapter = new global::System.Data.SQLite.SQLiteDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "Email";
            tableMapping.ColumnMappings.Add("Em_Id", "Em_Id");
            tableMapping.ColumnMappings.Add("Em_StatusId", "Em_StatusId");
            tableMapping.ColumnMappings.Add("Em_DispStatus", "Em_DispStatus");
            tableMapping.ColumnMappings.Add("Em_Afzender", "Em_Afzender");
            tableMapping.ColumnMappings.Add("Em_EmailAdresId", "Em_EmailAdresId");
            tableMapping.ColumnMappings.Add("Em_Onderwerp", "Em_Onderwerp");
            tableMapping.ColumnMappings.Add("Em_Bericht", "Em_Bericht");
            tableMapping.ColumnMappings.Add("Em_BestellingId", "Em_BestellingId");
            tableMapping.ColumnMappings.Add("Em_Mutatiedatum", "Em_Mutatiedatum");
            tableMapping.ColumnMappings.Add("Em_Opmerking", "Em_Opmerking");
            this._adapter.TableMappings.Add(tableMapping);
            this._adapter.DeleteCommand = new global::System.Data.SQLite.SQLiteCommand();
            this._adapter.DeleteCommand.Connection = this.Connection;
            this._adapter.DeleteCommand.CommandText = @"DELETE FROM [main].[sqlite_default_schema].[Email] WHERE (([Em_Id] = @Original_Em_Id) AND ((@IsNull_Em_StatusId = 1 AND [Em_StatusId] IS NULL) OR ([Em_StatusId] = @Original_Em_StatusId)) AND ((@IsNull_Em_DispStatus = 1 AND [Em_DispStatus] IS NULL) OR ([Em_DispStatus] = @Original_Em_DispStatus)) AND ([Em_Afzender] = @Original_Em_Afzender) AND ([Em_EmailAdresId] = @Original_Em_EmailAdresId) AND ([Em_Onderwerp] = @Original_Em_Onderwerp) AND ((@IsNull_Em_Bericht = 1 AND [Em_Bericht] IS NULL) OR ([Em_Bericht] = @Original_Em_Bericht)) AND ((@IsNull_Em_BestellingId = 1 AND [Em_BestellingId] IS NULL) OR ([Em_BestellingId] = @Original_Em_BestellingId)) AND ([Em_Mutatiedatum] = @Original_Em_Mutatiedatum) AND ((@IsNull_Em_Opmerking = 1 AND [Em_Opmerking] IS NULL) OR ([Em_Opmerking] = @Original_Em_Opmerking)))";
            this._adapter.DeleteCommand.CommandType = global::System.Data.CommandType.Text;
            global::System.Data.SQLite.SQLiteParameter param = new global::System.Data.SQLite.SQLiteParameter();
            param.ParameterName = "@Original_Em_Id";
            param.DbType = global::System.Data.DbType.Int64;
            param.DbType = global::System.Data.DbType.Int64;
            param.SourceColumn = "Em_Id";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::System.Data.SQLite.SQLiteParameter();
            param.ParameterName = "@IsNull_Em_StatusId";
            param.DbType = global::System.Data.DbType.Int32;
            param.DbType = global::System.Data.DbType.Int32;
            param.SourceColumn = "Em_StatusId";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::System.Data.SQLite.SQLiteParameter();
            param.ParameterName = "@Original_Em_StatusId";
            param.DbType = global::System.Data.DbType.Int64;
            param.DbType = global::System.Data.DbType.Int64;
            param.SourceColumn = "Em_StatusId";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::System.Data.SQLite.SQLiteParameter();
            param.ParameterName = "@IsNull_Em_DispStatus";
            param.DbType = global::System.Data.DbType.Int32;
            param.DbType = global::System.Data.DbType.Int32;
            param.SourceColumn = "Em_DispStatus";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::System.Data.SQLite.SQLiteParameter();
            param.ParameterName = "@Original_Em_DispStatus";
            param.DbType = global::System.Data.DbType.AnsiString;
            param.DbType = global::System.Data.DbType.AnsiString;
            param.SourceColumn = "Em_DispStatus";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::System.Data.SQLite.SQLiteParameter();
            param.ParameterName = "@Original_Em_Afzender";
            param.DbType = global::System.Data.DbType.AnsiString;
            param.DbType = global::System.Data.DbType.AnsiString;
            param.SourceColumn = "Em_Afzender";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::System.Data.SQLite.SQLiteParameter();
            param.ParameterName = "@Original_Em_EmailAdresId";
            param.DbType = global::System.Data.DbType.Int64;
            param.DbType = global::System.Data.DbType.Int64;
            param.SourceColumn = "Em_EmailAdresId";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::System.Data.SQLite.SQLiteParameter();
            param.ParameterName = "@Original_Em_Onderwerp";
            param.DbType = global::System.Data.DbType.AnsiString;
            param.DbType = global::System.Data.DbType.AnsiString;
            param.SourceColumn = "Em_Onderwerp";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::System.Data.SQLite.SQLiteParameter();
            param.ParameterName = "@IsNull_Em_Bericht";
            param.DbType = global::System.Data.DbType.Int32;
            param.DbType = global::System.Data.DbType.Int32;
            param.SourceColumn = "Em_Bericht";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::System.Data.SQLite.SQLiteParameter();
            param.ParameterName = "@Original_Em_Bericht";
            param.DbType = global::System.Data.DbType.Binary;
            param.DbType = global::System.Data.DbType.Binary;
            param.SourceColumn = "Em_Bericht";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::System.Data.SQLite.SQLiteParameter();
            param.ParameterName = "@IsNull_Em_BestellingId";
            param.DbType = global::System.Data.DbType.Int32;
            param.DbType = global::System.Data.DbType.Int32;
            param.SourceColumn = "Em_BestellingId";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::System.Data.SQLite.SQLiteParameter();
            param.ParameterName = "@Original_Em_BestellingId";
            param.DbType = global::System.Data.DbType.Int64;
            param.DbType = global::System.Data.DbType.Int64;
            param.SourceColumn = "Em_BestellingId";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::System.Data.SQLite.SQLiteParameter();
            param.ParameterName = "@Original_Em_Mutatiedatum";
            param.DbType = global::System.Data.DbType.DateTime;
            param.DbType = global::System.Data.DbType.DateTime;
            param.SourceColumn = "Em_Mutatiedatum";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::System.Data.SQLite.SQLiteParameter();
            param.ParameterName = "@IsNull_Em_Opmerking";
            param.DbType = global::System.Data.DbType.Int32;
            param.DbType = global::System.Data.DbType.Int32;
            param.SourceColumn = "Em_Opmerking";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::System.Data.SQLite.SQLiteParameter();
            param.ParameterName = "@Original_Em_Opmerking";
            param.DbType = global::System.Data.DbType.AnsiString;
            param.DbType = global::System.Data.DbType.AnsiString;
            param.SourceColumn = "Em_Opmerking";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            this._adapter.InsertCommand = new global::System.Data.SQLite.SQLiteCommand();
            this._adapter.InsertCommand.Connection = this.Connection;
            this._adapter.InsertCommand.CommandText = @"INSERT INTO [main].[sqlite_default_schema].[Email] ([Em_StatusId], [Em_DispStatus], [Em_Afzender], [Em_EmailAdresId], [Em_Onderwerp], [Em_Bericht], [Em_BestellingId], [Em_Mutatiedatum], [Em_Opmerking]) VALUES (@Em_StatusId, @Em_DispStatus, @Em_Afzender, @Em_EmailAdresId, @Em_Onderwerp, @Em_Bericht, @Em_BestellingId, @Em_Mutatiedatum, @Em_Opmerking)";
            this._adapter.InsertCommand.CommandType = global::System.Data.CommandType.Text;
            param = new global::System.Data.SQLite.SQLiteParameter();
            param.ParameterName = "@Em_StatusId";
            param.DbType = global::System.Data.DbType.Int64;
            param.DbType = global::System.Data.DbType.Int64;
            param.SourceColumn = "Em_StatusId";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::System.Data.SQLite.SQLiteParameter();
            param.ParameterName = "@Em_DispStatus";
            param.DbType = global::System.Data.DbType.AnsiString;
            param.DbType = global::System.Data.DbType.AnsiString;
            param.SourceColumn = "Em_DispStatus";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::System.Data.SQLite.SQLiteParameter();
            param.ParameterName = "@Em_Afzender";
            param.DbType = global::System.Data.DbType.AnsiString;
            param.DbType = global::System.Data.DbType.AnsiString;
            param.SourceColumn = "Em_Afzender";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::System.Data.SQLite.SQLiteParameter();
            param.ParameterName = "@Em_EmailAdresId";
            param.DbType = global::System.Data.DbType.Int64;
            param.DbType = global::System.Data.DbType.Int64;
            param.SourceColumn = "Em_EmailAdresId";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::System.Data.SQLite.SQLiteParameter();
            param.ParameterName = "@Em_Onderwerp";
            param.DbType = global::System.Data.DbType.AnsiString;
            param.DbType = global::System.Data.DbType.AnsiString;
            param.SourceColumn = "Em_Onderwerp";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::System.Data.SQLite.SQLiteParameter();
            param.ParameterName = "@Em_Bericht";
            param.DbType = global::System.Data.DbType.Binary;
            param.DbType = global::System.Data.DbType.Binary;
            param.SourceColumn = "Em_Bericht";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::System.Data.SQLite.SQLiteParameter();
            param.ParameterName = "@Em_BestellingId";
            param.DbType = global::System.Data.DbType.Int64;
            param.DbType = global::System.Data.DbType.Int64;
            param.SourceColumn = "Em_BestellingId";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::System.Data.SQLite.SQLiteParameter();
            param.ParameterName = "@Em_Mutatiedatum";
            param.DbType = global::System.Data.DbType.DateTime;
            param.DbType = global::System.Data.DbType.DateTime;
            param.SourceColumn = "Em_Mutatiedatum";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::System.Data.SQLite.SQLiteParameter();
            param.ParameterName = "@Em_Opmerking";
            param.DbType = global::System.Data.DbType.AnsiString;
            param.DbType = global::System.Data.DbType.AnsiString;
            param.SourceColumn = "Em_Opmerking";
            this._adapter.InsertCommand.Parameters.Add(param);
            this._adapter.UpdateCommand = new global::System.Data.SQLite.SQLiteCommand();
            this._adapter.UpdateCommand.Connection = this.Connection;
            this._adapter.UpdateCommand.CommandText = @"UPDATE [main].[sqlite_default_schema].[Email] SET [Em_StatusId] = @Em_StatusId, [Em_DispStatus] = @Em_DispStatus, [Em_Afzender] = @Em_Afzender, [Em_EmailAdresId] = @Em_EmailAdresId, [Em_Onderwerp] = @Em_Onderwerp, [Em_Bericht] = @Em_Bericht, [Em_BestellingId] = @Em_BestellingId, [Em_Mutatiedatum] = @Em_Mutatiedatum, [Em_Opmerking] = @Em_Opmerking WHERE (([Em_Id] = @Original_Em_Id) AND ((@IsNull_Em_StatusId = 1 AND [Em_StatusId] IS NULL) OR ([Em_StatusId] = @Original_Em_StatusId)) AND ((@IsNull_Em_DispStatus = 1 AND [Em_DispStatus] IS NULL) OR ([Em_DispStatus] = @Original_Em_DispStatus)) AND ([Em_Afzender] = @Original_Em_Afzender) AND ([Em_EmailAdresId] = @Original_Em_EmailAdresId) AND ([Em_Onderwerp] = @Original_Em_Onderwerp) AND ((@IsNull_Em_Bericht = 1 AND [Em_Bericht] IS NULL) OR ([Em_Bericht] = @Original_Em_Bericht)) AND ((@IsNull_Em_BestellingId = 1 AND [Em_BestellingId] IS NULL) OR ([Em_BestellingId] = @Original_Em_BestellingId)) AND ([Em_Mutatiedatum] = @Original_Em_Mutatiedatum) AND ((@IsNull_Em_Opmerking = 1 AND [Em_Opmerking] IS NULL) OR ([Em_Opmerking] = @Original_Em_Opmerking)))";
            this._adapter.UpdateCommand.CommandType = global::System.Data.CommandType.Text;
            param = new global::System.Data.SQLite.SQLiteParameter();
            param.ParameterName = "@Em_StatusId";
            param.DbType = global::System.Data.DbType.Int64;
            param.DbType = global::System.Data.DbType.Int64;
            param.SourceColumn = "Em_StatusId";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::System.Data.SQLite.SQLiteParameter();
            param.ParameterName = "@Em_DispStatus";
            param.DbType = global::System.Data.DbType.AnsiString;
            param.DbType = global::System.Data.DbType.AnsiString;
            param.SourceColumn = "Em_DispStatus";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::System.Data.SQLite.SQLiteParameter();
            param.ParameterName = "@Em_Afzender";
            param.DbType = global::System.Data.DbType.AnsiString;
            param.DbType = global::System.Data.DbType.AnsiString;
            param.SourceColumn = "Em_Afzender";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::System.Data.SQLite.SQLiteParameter();
            param.ParameterName = "@Em_EmailAdresId";
            param.DbType = global::System.Data.DbType.Int64;
            param.DbType = global::System.Data.DbType.Int64;
            param.SourceColumn = "Em_EmailAdresId";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::System.Data.SQLite.SQLiteParameter();
            param.ParameterName = "@Em_Onderwerp";
            param.DbType = global::System.Data.DbType.AnsiString;
            param.DbType = global::System.Data.DbType.AnsiString;
            param.SourceColumn = "Em_Onderwerp";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::System.Data.SQLite.SQLiteParameter();
            param.ParameterName = "@Em_Bericht";
            param.DbType = global::System.Data.DbType.Binary;
            param.DbType = global::System.Data.DbType.Binary;
            param.SourceColumn = "Em_Bericht";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::System.Data.SQLite.SQLiteParameter();
            param.ParameterName = "@Em_BestellingId";
            param.DbType = global::System.Data.DbType.Int64;
            param.DbType = global::System.Data.DbType.Int64;
            param.SourceColumn = "Em_BestellingId";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::System.Data.SQLite.SQLiteParameter();
            param.ParameterName = "@Em_Mutatiedatum";
            param.DbType = global::System.Data.DbType.DateTime;
            param.DbType = global::System.Data.DbType.DateTime;
            param.SourceColumn = "Em_Mutatiedatum";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::System.Data.SQLite.SQLiteParameter();
            param.ParameterName = "@Em_Opmerking";
            param.DbType = global::System.Data.DbType.AnsiString;
            param.DbType = global::System.Data.DbType.AnsiString;
            param.SourceColumn = "Em_Opmerking";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::System.Data.SQLite.SQLiteParameter();
            param.ParameterName = "@Original_Em_Id";
            param.DbType = global::System.Data.DbType.Int64;
            param.DbType = global::System.Data.DbType.Int64;
            param.SourceColumn = "Em_Id";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::System.Data.SQLite.SQLiteParameter();
            param.ParameterName = "@IsNull_Em_StatusId";
            param.DbType = global::System.Data.DbType.Int32;
            param.DbType = global::System.Data.DbType.Int32;
            param.SourceColumn = "Em_StatusId";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::System.Data.SQLite.SQLiteParameter();
            param.ParameterName = "@Original_Em_StatusId";
            param.DbType = global::System.Data.DbType.Int64;
            param.DbType = global::System.Data.DbType.Int64;
            param.SourceColumn = "Em_StatusId";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::System.Data.SQLite.SQLiteParameter();
            param.ParameterName = "@IsNull_Em_DispStatus";
            param.DbType = global::System.Data.DbType.Int32;
            param.DbType = global::System.Data.DbType.Int32;
            param.SourceColumn = "Em_DispStatus";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::System.Data.SQLite.SQLiteParameter();
            param.ParameterName = "@Original_Em_DispStatus";
            param.DbType = global::System.Data.DbType.AnsiString;
            param.DbType = global::System.Data.DbType.AnsiString;
            param.SourceColumn = "Em_DispStatus";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::System.Data.SQLite.SQLiteParameter();
            param.ParameterName = "@Original_Em_Afzender";
            param.DbType = global::System.Data.DbType.AnsiString;
            param.DbType = global::System.Data.DbType.AnsiString;
            param.SourceColumn = "Em_Afzender";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::System.Data.SQLite.SQLiteParameter();
            param.ParameterName = "@Original_Em_EmailAdresId";
            param.DbType = global::System.Data.DbType.Int64;
            param.DbType = global::System.Data.DbType.Int64;
            param.SourceColumn = "Em_EmailAdresId";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::System.Data.SQLite.SQLiteParameter();
            param.ParameterName = "@Original_Em_Onderwerp";
            param.DbType = global::System.Data.DbType.AnsiString;
            param.DbType = global::System.Data.DbType.AnsiString;
            param.SourceColumn = "Em_Onderwerp";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::System.Data.SQLite.SQLiteParameter();
            param.ParameterName = "@IsNull_Em_Bericht";
            param.DbType = global::System.Data.DbType.Int32;
            param.DbType = global::System.Data.DbType.Int32;
            param.SourceColumn = "Em_Bericht";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::System.Data.SQLite.SQLiteParameter();
            param.ParameterName = "@Original_Em_Bericht";
            param.DbType = global::System.Data.DbType.Binary;
            param.DbType = global::System.Data.DbType.Binary;
            param.SourceColumn = "Em_Bericht";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::System.Data.SQLite.SQLiteParameter();
            param.ParameterName = "@IsNull_Em_BestellingId";
            param.DbType = global::System.Data.DbType.Int32;
            param.DbType = global::System.Data.DbType.Int32;
            param.SourceColumn = "Em_BestellingId";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::System.Data.SQLite.SQLiteParameter();
            param.ParameterName = "@Original_Em_BestellingId";
            param.DbType = global::System.Data.DbType.Int64;
            param.DbType = global::System.Data.DbType.Int64;
            param.SourceColumn = "Em_BestellingId";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::System.Data.SQLite.SQLiteParameter();
            param.ParameterName = "@Original_Em_Mutatiedatum";
            param.DbType = global::System.Data.DbType.DateTime;
            param.DbType = global::System.Data.DbType.DateTime;
            param.SourceColumn = "Em_Mutatiedatum";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::System.Data.SQLite.SQLiteParameter();
            param.ParameterName = "@IsNull_Em_Opmerking";
            param.DbType = global::System.Data.DbType.Int32;
            param.DbType = global::System.Data.DbType.Int32;
            param.SourceColumn = "Em_Opmerking";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::System.Data.SQLite.SQLiteParameter();
            param.ParameterName = "@Original_Em_Opmerking";
            param.DbType = global::System.Data.DbType.AnsiString;
            param.DbType = global::System.Data.DbType.AnsiString;
            param.SourceColumn = "Em_Opmerking";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitConnection() {
            this._connection = new global::System.Data.SQLite.SQLiteConnection();
            this._connection.ConnectionString = global::Cmbap.Properties.Settings.Default.Cmbap_dataConnectionString;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitCommandCollection() {
            this._commandCollection = new global::System.Data.SQLite.SQLiteCommand[1];
            this._commandCollection[0] = new global::System.Data.SQLite.SQLiteCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "SELECT [Em_Id], [Em_StatusId], [Em_DispStatus], [Em_Afzender], [Em_EmailAdresId]," +
                " [Em_Onderwerp], [Em_Bericht], [Em_BestellingId], [Em_Mutatiedatum], [Em_Opmerki" +
                "ng] FROM [Email]";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(_Cmbap_dataDataSet.EmailDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual _Cmbap_dataDataSet.EmailDataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            _Cmbap_dataDataSet.EmailDataTable dataTable = new _Cmbap_dataDataSet.EmailDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(_Cmbap_dataDataSet.EmailDataTable dataTable) {
            return this.Adapter.Update(dataTable);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(_Cmbap_dataDataSet dataSet) {
            return this.Adapter.Update(dataSet, "Email");
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow dataRow) {
            return this.Adapter.Update(new global::System.Data.DataRow[] {
                        dataRow});
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow[] dataRows) {
            return this.Adapter.Update(dataRows);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Delete, true)]
        public virtual int Delete(long Original_Em_Id, global::System.Nullable<long> Original_Em_StatusId, string Original_Em_DispStatus, string Original_Em_Afzender, long Original_Em_EmailAdresId, string Original_Em_Onderwerp, byte[] Original_Em_Bericht, global::System.Nullable<long> Original_Em_BestellingId, System.DateTime Original_Em_Mutatiedatum, string Original_Em_Opmerking) {
            this.Adapter.DeleteCommand.Parameters[0].Value = ((long)(Original_Em_Id));
            if ((Original_Em_StatusId.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[1].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[2].Value = ((long)(Original_Em_StatusId.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[1].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[2].Value = global::System.DBNull.Value;
            }
            if ((Original_Em_DispStatus == null)) {
                this.Adapter.DeleteCommand.Parameters[3].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[4].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[3].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[4].Value = ((string)(Original_Em_DispStatus));
            }
            if ((Original_Em_Afzender == null)) {
                throw new global::System.ArgumentNullException("Original_Em_Afzender");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[5].Value = ((string)(Original_Em_Afzender));
            }
            this.Adapter.DeleteCommand.Parameters[6].Value = ((long)(Original_Em_EmailAdresId));
            if ((Original_Em_Onderwerp == null)) {
                throw new global::System.ArgumentNullException("Original_Em_Onderwerp");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[7].Value = ((string)(Original_Em_Onderwerp));
            }
            if ((Original_Em_Bericht == null)) {
                this.Adapter.DeleteCommand.Parameters[8].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[9].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[8].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[9].Value = ((byte[])(Original_Em_Bericht));
            }
            if ((Original_Em_BestellingId.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[10].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[11].Value = ((long)(Original_Em_BestellingId.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[10].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[11].Value = global::System.DBNull.Value;
            }
            this.Adapter.DeleteCommand.Parameters[12].Value = ((System.DateTime)(Original_Em_Mutatiedatum));
            if ((Original_Em_Opmerking == null)) {
                this.Adapter.DeleteCommand.Parameters[13].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[14].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[13].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[14].Value = ((string)(Original_Em_Opmerking));
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.DeleteCommand.Connection.State;
            if (((this.Adapter.DeleteCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.DeleteCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.DeleteCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.DeleteCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Insert, true)]
        public virtual int Insert(global::System.Nullable<long> Em_StatusId, string Em_DispStatus, string Em_Afzender, long Em_EmailAdresId, string Em_Onderwerp, byte[] Em_Bericht, global::System.Nullable<long> Em_BestellingId, System.DateTime Em_Mutatiedatum, string Em_Opmerking) {
            if ((Em_StatusId.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[0].Value = ((long)(Em_StatusId.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[0].Value = global::System.DBNull.Value;
            }
            if ((Em_DispStatus == null)) {
                this.Adapter.InsertCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[1].Value = ((string)(Em_DispStatus));
            }
            if ((Em_Afzender == null)) {
                throw new global::System.ArgumentNullException("Em_Afzender");
            }
            else {
                this.Adapter.InsertCommand.Parameters[2].Value = ((string)(Em_Afzender));
            }
            this.Adapter.InsertCommand.Parameters[3].Value = ((long)(Em_EmailAdresId));
            if ((Em_Onderwerp == null)) {
                throw new global::System.ArgumentNullException("Em_Onderwerp");
            }
            else {
                this.Adapter.InsertCommand.Parameters[4].Value = ((string)(Em_Onderwerp));
            }
            if ((Em_Bericht == null)) {
                this.Adapter.InsertCommand.Parameters[5].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[5].Value = ((byte[])(Em_Bericht));
            }
            if ((Em_BestellingId.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[6].Value = ((long)(Em_BestellingId.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[6].Value = global::System.DBNull.Value;
            }
            this.Adapter.InsertCommand.Parameters[7].Value = ((System.DateTime)(Em_Mutatiedatum));
            if ((Em_Opmerking == null)) {
                this.Adapter.InsertCommand.Parameters[8].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[8].Value = ((string)(Em_Opmerking));
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.InsertCommand.Connection.State;
            if (((this.Adapter.InsertCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.InsertCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.InsertCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.InsertCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(
                    global::System.Nullable<long> Em_StatusId, 
                    string Em_DispStatus, 
                    string Em_Afzender, 
                    long Em_EmailAdresId, 
                    string Em_Onderwerp, 
                    byte[] Em_Bericht, 
                    global::System.Nullable<long> Em_BestellingId, 
                    System.DateTime Em_Mutatiedatum, 
                    string Em_Opmerking, 
                    long Original_Em_Id, 
                    global::System.Nullable<long> Original_Em_StatusId, 
                    string Original_Em_DispStatus, 
                    string Original_Em_Afzender, 
                    long Original_Em_EmailAdresId, 
                    string Original_Em_Onderwerp, 
                    byte[] Original_Em_Bericht, 
                    global::System.Nullable<long> Original_Em_BestellingId, 
                    System.DateTime Original_Em_Mutatiedatum, 
                    string Original_Em_Opmerking) {
            if ((Em_StatusId.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[0].Value = ((long)(Em_StatusId.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[0].Value = global::System.DBNull.Value;
            }
            if ((Em_DispStatus == null)) {
                this.Adapter.UpdateCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[1].Value = ((string)(Em_DispStatus));
            }
            if ((Em_Afzender == null)) {
                throw new global::System.ArgumentNullException("Em_Afzender");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[2].Value = ((string)(Em_Afzender));
            }
            this.Adapter.UpdateCommand.Parameters[3].Value = ((long)(Em_EmailAdresId));
            if ((Em_Onderwerp == null)) {
                throw new global::System.ArgumentNullException("Em_Onderwerp");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[4].Value = ((string)(Em_Onderwerp));
            }
            if ((Em_Bericht == null)) {
                this.Adapter.UpdateCommand.Parameters[5].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[5].Value = ((byte[])(Em_Bericht));
            }
            if ((Em_BestellingId.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[6].Value = ((long)(Em_BestellingId.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[6].Value = global::System.DBNull.Value;
            }
            this.Adapter.UpdateCommand.Parameters[7].Value = ((System.DateTime)(Em_Mutatiedatum));
            if ((Em_Opmerking == null)) {
                this.Adapter.UpdateCommand.Parameters[8].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[8].Value = ((string)(Em_Opmerking));
            }
            this.Adapter.UpdateCommand.Parameters[9].Value = ((long)(Original_Em_Id));
            if ((Original_Em_StatusId.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[10].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[11].Value = ((long)(Original_Em_StatusId.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[10].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[11].Value = global::System.DBNull.Value;
            }
            if ((Original_Em_DispStatus == null)) {
                this.Adapter.UpdateCommand.Parameters[12].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[13].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[12].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[13].Value = ((string)(Original_Em_DispStatus));
            }
            if ((Original_Em_Afzender == null)) {
                throw new global::System.ArgumentNullException("Original_Em_Afzender");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[14].Value = ((string)(Original_Em_Afzender));
            }
            this.Adapter.UpdateCommand.Parameters[15].Value = ((long)(Original_Em_EmailAdresId));
            if ((Original_Em_Onderwerp == null)) {
                throw new global::System.ArgumentNullException("Original_Em_Onderwerp");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[16].Value = ((string)(Original_Em_Onderwerp));
            }
            if ((Original_Em_Bericht == null)) {
                this.Adapter.UpdateCommand.Parameters[17].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[18].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[17].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[18].Value = ((byte[])(Original_Em_Bericht));
            }
            if ((Original_Em_BestellingId.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[19].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[20].Value = ((long)(Original_Em_BestellingId.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[19].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[20].Value = global::System.DBNull.Value;
            }
            this.Adapter.UpdateCommand.Parameters[21].Value = ((System.DateTime)(Original_Em_Mutatiedatum));
            if ((Original_Em_Opmerking == null)) {
                this.Adapter.UpdateCommand.Parameters[22].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[23].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[22].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[23].Value = ((string)(Original_Em_Opmerking));
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.UpdateCommand.Connection.State;
            if (((this.Adapter.UpdateCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.UpdateCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.UpdateCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.UpdateCommand.Connection.Close();
                }
            }
        }
    }
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class EmailadresTableAdapter : global::System.ComponentModel.Component {
        
        private global::System.Data.SQLite.SQLiteDataAdapter _adapter;
        
        private global::System.Data.SQLite.SQLiteConnection _connection;
        
        private global::System.Data.SQLite.SQLiteTransaction _transaction;
        
        private global::System.Data.SQLite.SQLiteCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public EmailadresTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected internal global::System.Data.SQLite.SQLiteDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal global::System.Data.SQLite.SQLiteConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::System.Data.SQLite.SQLiteCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal global::System.Data.SQLite.SQLiteTransaction Transaction {
            get {
                return this._transaction;
            }
            set {
                this._transaction = value;
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    this.CommandCollection[i].Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.DeleteCommand != null))) {
                    this.Adapter.DeleteCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.InsertCommand != null))) {
                    this.Adapter.InsertCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.UpdateCommand != null))) {
                    this.Adapter.UpdateCommand.Transaction = this._transaction;
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected global::System.Data.SQLite.SQLiteCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitAdapter() {
            this._adapter = new global::System.Data.SQLite.SQLiteDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "Emailadres";
            tableMapping.ColumnMappings.Add("Emladrs_Id", "Emladrs_Id");
            tableMapping.ColumnMappings.Add("Emladrs_StatusId", "Emladrs_StatusId");
            tableMapping.ColumnMappings.Add("Emladrs_DispStatus", "Emladrs_DispStatus");
            tableMapping.ColumnMappings.Add("Emladrs_KlBgId", "Emladrs_KlBgId");
            tableMapping.ColumnMappings.Add("Emladrs_DispKlBg", "Emladrs_DispKlBg");
            tableMapping.ColumnMappings.Add("Emladrs_Emailadres", "Emladrs_Emailadres");
            tableMapping.ColumnMappings.Add("Emladrs_Mutatiedatum", "Emladrs_Mutatiedatum");
            tableMapping.ColumnMappings.Add("Emladrs_Opmerking", "Emladrs_Opmerking");
            this._adapter.TableMappings.Add(tableMapping);
            this._adapter.DeleteCommand = new global::System.Data.SQLite.SQLiteCommand();
            this._adapter.DeleteCommand.Connection = this.Connection;
            this._adapter.DeleteCommand.CommandText = @"DELETE FROM [main].[sqlite_default_schema].[Emailadres] WHERE (([Emladrs_Id] = @Original_Emladrs_Id) AND ((@IsNull_Emladrs_StatusId = 1 AND [Emladrs_StatusId] IS NULL) OR ([Emladrs_StatusId] = @Original_Emladrs_StatusId)) AND ((@IsNull_Emladrs_DispStatus = 1 AND [Emladrs_DispStatus] IS NULL) OR ([Emladrs_DispStatus] = @Original_Emladrs_DispStatus)) AND ([Emladrs_KlBgId] = @Original_Emladrs_KlBgId) AND ((@IsNull_Emladrs_DispKlBg = 1 AND [Emladrs_DispKlBg] IS NULL) OR ([Emladrs_DispKlBg] = @Original_Emladrs_DispKlBg)) AND ([Emladrs_Emailadres] = @Original_Emladrs_Emailadres) AND ([Emladrs_Mutatiedatum] = @Original_Emladrs_Mutatiedatum) AND ((@IsNull_Emladrs_Opmerking = 1 AND [Emladrs_Opmerking] IS NULL) OR ([Emladrs_Opmerking] = @Original_Emladrs_Opmerking)))";
            this._adapter.DeleteCommand.CommandType = global::System.Data.CommandType.Text;
            global::System.Data.SQLite.SQLiteParameter param = new global::System.Data.SQLite.SQLiteParameter();
            param.ParameterName = "@Original_Emladrs_Id";
            param.DbType = global::System.Data.DbType.Int64;
            param.DbType = global::System.Data.DbType.Int64;
            param.SourceColumn = "Emladrs_Id";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::System.Data.SQLite.SQLiteParameter();
            param.ParameterName = "@IsNull_Emladrs_StatusId";
            param.DbType = global::System.Data.DbType.Int32;
            param.DbType = global::System.Data.DbType.Int32;
            param.SourceColumn = "Emladrs_StatusId";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::System.Data.SQLite.SQLiteParameter();
            param.ParameterName = "@Original_Emladrs_StatusId";
            param.DbType = global::System.Data.DbType.Int64;
            param.DbType = global::System.Data.DbType.Int64;
            param.SourceColumn = "Emladrs_StatusId";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::System.Data.SQLite.SQLiteParameter();
            param.ParameterName = "@IsNull_Emladrs_DispStatus";
            param.DbType = global::System.Data.DbType.Int32;
            param.DbType = global::System.Data.DbType.Int32;
            param.SourceColumn = "Emladrs_DispStatus";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::System.Data.SQLite.SQLiteParameter();
            param.ParameterName = "@Original_Emladrs_DispStatus";
            param.DbType = global::System.Data.DbType.AnsiString;
            param.DbType = global::System.Data.DbType.AnsiString;
            param.SourceColumn = "Emladrs_DispStatus";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::System.Data.SQLite.SQLiteParameter();
            param.ParameterName = "@Original_Emladrs_KlBgId";
            param.DbType = global::System.Data.DbType.Int64;
            param.DbType = global::System.Data.DbType.Int64;
            param.SourceColumn = "Emladrs_KlBgId";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::System.Data.SQLite.SQLiteParameter();
            param.ParameterName = "@IsNull_Emladrs_DispKlBg";
            param.DbType = global::System.Data.DbType.Int32;
            param.DbType = global::System.Data.DbType.Int32;
            param.SourceColumn = "Emladrs_DispKlBg";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::System.Data.SQLite.SQLiteParameter();
            param.ParameterName = "@Original_Emladrs_DispKlBg";
            param.DbType = global::System.Data.DbType.AnsiString;
            param.DbType = global::System.Data.DbType.AnsiString;
            param.SourceColumn = "Emladrs_DispKlBg";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::System.Data.SQLite.SQLiteParameter();
            param.ParameterName = "@Original_Emladrs_Emailadres";
            param.DbType = global::System.Data.DbType.AnsiString;
            param.DbType = global::System.Data.DbType.AnsiString;
            param.SourceColumn = "Emladrs_Emailadres";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::System.Data.SQLite.SQLiteParameter();
            param.ParameterName = "@Original_Emladrs_Mutatiedatum";
            param.DbType = global::System.Data.DbType.DateTime;
            param.DbType = global::System.Data.DbType.DateTime;
            param.SourceColumn = "Emladrs_Mutatiedatum";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::System.Data.SQLite.SQLiteParameter();
            param.ParameterName = "@IsNull_Emladrs_Opmerking";
            param.DbType = global::System.Data.DbType.Int32;
            param.DbType = global::System.Data.DbType.Int32;
            param.SourceColumn = "Emladrs_Opmerking";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::System.Data.SQLite.SQLiteParameter();
            param.ParameterName = "@Original_Emladrs_Opmerking";
            param.DbType = global::System.Data.DbType.AnsiString;
            param.DbType = global::System.Data.DbType.AnsiString;
            param.SourceColumn = "Emladrs_Opmerking";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            this._adapter.InsertCommand = new global::System.Data.SQLite.SQLiteCommand();
            this._adapter.InsertCommand.Connection = this.Connection;
            this._adapter.InsertCommand.CommandText = @"INSERT INTO [main].[sqlite_default_schema].[Emailadres] ([Emladrs_StatusId], [Emladrs_DispStatus], [Emladrs_KlBgId], [Emladrs_DispKlBg], [Emladrs_Emailadres], [Emladrs_Mutatiedatum], [Emladrs_Opmerking]) VALUES (@Emladrs_StatusId, @Emladrs_DispStatus, @Emladrs_KlBgId, @Emladrs_DispKlBg, @Emladrs_Emailadres, @Emladrs_Mutatiedatum, @Emladrs_Opmerking)";
            this._adapter.InsertCommand.CommandType = global::System.Data.CommandType.Text;
            param = new global::System.Data.SQLite.SQLiteParameter();
            param.ParameterName = "@Emladrs_StatusId";
            param.DbType = global::System.Data.DbType.Int64;
            param.DbType = global::System.Data.DbType.Int64;
            param.SourceColumn = "Emladrs_StatusId";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::System.Data.SQLite.SQLiteParameter();
            param.ParameterName = "@Emladrs_DispStatus";
            param.DbType = global::System.Data.DbType.AnsiString;
            param.DbType = global::System.Data.DbType.AnsiString;
            param.SourceColumn = "Emladrs_DispStatus";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::System.Data.SQLite.SQLiteParameter();
            param.ParameterName = "@Emladrs_KlBgId";
            param.DbType = global::System.Data.DbType.Int64;
            param.DbType = global::System.Data.DbType.Int64;
            param.SourceColumn = "Emladrs_KlBgId";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::System.Data.SQLite.SQLiteParameter();
            param.ParameterName = "@Emladrs_DispKlBg";
            param.DbType = global::System.Data.DbType.AnsiString;
            param.DbType = global::System.Data.DbType.AnsiString;
            param.SourceColumn = "Emladrs_DispKlBg";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::System.Data.SQLite.SQLiteParameter();
            param.ParameterName = "@Emladrs_Emailadres";
            param.DbType = global::System.Data.DbType.AnsiString;
            param.DbType = global::System.Data.DbType.AnsiString;
            param.SourceColumn = "Emladrs_Emailadres";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::System.Data.SQLite.SQLiteParameter();
            param.ParameterName = "@Emladrs_Mutatiedatum";
            param.DbType = global::System.Data.DbType.DateTime;
            param.DbType = global::System.Data.DbType.DateTime;
            param.SourceColumn = "Emladrs_Mutatiedatum";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::System.Data.SQLite.SQLiteParameter();
            param.ParameterName = "@Emladrs_Opmerking";
            param.DbType = global::System.Data.DbType.AnsiString;
            param.DbType = global::System.Data.DbType.AnsiString;
            param.SourceColumn = "Emladrs_Opmerking";
            this._adapter.InsertCommand.Parameters.Add(param);
            this._adapter.UpdateCommand = new global::System.Data.SQLite.SQLiteCommand();
            this._adapter.UpdateCommand.Connection = this.Connection;
            this._adapter.UpdateCommand.CommandText = @"UPDATE [main].[sqlite_default_schema].[Emailadres] SET [Emladrs_StatusId] = @Emladrs_StatusId, [Emladrs_DispStatus] = @Emladrs_DispStatus, [Emladrs_KlBgId] = @Emladrs_KlBgId, [Emladrs_DispKlBg] = @Emladrs_DispKlBg, [Emladrs_Emailadres] = @Emladrs_Emailadres, [Emladrs_Mutatiedatum] = @Emladrs_Mutatiedatum, [Emladrs_Opmerking] = @Emladrs_Opmerking WHERE (([Emladrs_Id] = @Original_Emladrs_Id) AND ((@IsNull_Emladrs_StatusId = 1 AND [Emladrs_StatusId] IS NULL) OR ([Emladrs_StatusId] = @Original_Emladrs_StatusId)) AND ((@IsNull_Emladrs_DispStatus = 1 AND [Emladrs_DispStatus] IS NULL) OR ([Emladrs_DispStatus] = @Original_Emladrs_DispStatus)) AND ([Emladrs_KlBgId] = @Original_Emladrs_KlBgId) AND ((@IsNull_Emladrs_DispKlBg = 1 AND [Emladrs_DispKlBg] IS NULL) OR ([Emladrs_DispKlBg] = @Original_Emladrs_DispKlBg)) AND ([Emladrs_Emailadres] = @Original_Emladrs_Emailadres) AND ([Emladrs_Mutatiedatum] = @Original_Emladrs_Mutatiedatum) AND ((@IsNull_Emladrs_Opmerking = 1 AND [Emladrs_Opmerking] IS NULL) OR ([Emladrs_Opmerking] = @Original_Emladrs_Opmerking)))";
            this._adapter.UpdateCommand.CommandType = global::System.Data.CommandType.Text;
            param = new global::System.Data.SQLite.SQLiteParameter();
            param.ParameterName = "@Emladrs_StatusId";
            param.DbType = global::System.Data.DbType.Int64;
            param.DbType = global::System.Data.DbType.Int64;
            param.SourceColumn = "Emladrs_StatusId";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::System.Data.SQLite.SQLiteParameter();
            param.ParameterName = "@Emladrs_DispStatus";
            param.DbType = global::System.Data.DbType.AnsiString;
            param.DbType = global::System.Data.DbType.AnsiString;
            param.SourceColumn = "Emladrs_DispStatus";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::System.Data.SQLite.SQLiteParameter();
            param.ParameterName = "@Emladrs_KlBgId";
            param.DbType = global::System.Data.DbType.Int64;
            param.DbType = global::System.Data.DbType.Int64;
            param.SourceColumn = "Emladrs_KlBgId";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::System.Data.SQLite.SQLiteParameter();
            param.ParameterName = "@Emladrs_DispKlBg";
            param.DbType = global::System.Data.DbType.AnsiString;
            param.DbType = global::System.Data.DbType.AnsiString;
            param.SourceColumn = "Emladrs_DispKlBg";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::System.Data.SQLite.SQLiteParameter();
            param.ParameterName = "@Emladrs_Emailadres";
            param.DbType = global::System.Data.DbType.AnsiString;
            param.DbType = global::System.Data.DbType.AnsiString;
            param.SourceColumn = "Emladrs_Emailadres";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::System.Data.SQLite.SQLiteParameter();
            param.ParameterName = "@Emladrs_Mutatiedatum";
            param.DbType = global::System.Data.DbType.DateTime;
            param.DbType = global::System.Data.DbType.DateTime;
            param.SourceColumn = "Emladrs_Mutatiedatum";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::System.Data.SQLite.SQLiteParameter();
            param.ParameterName = "@Emladrs_Opmerking";
            param.DbType = global::System.Data.DbType.AnsiString;
            param.DbType = global::System.Data.DbType.AnsiString;
            param.SourceColumn = "Emladrs_Opmerking";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::System.Data.SQLite.SQLiteParameter();
            param.ParameterName = "@Original_Emladrs_Id";
            param.DbType = global::System.Data.DbType.Int64;
            param.DbType = global::System.Data.DbType.Int64;
            param.SourceColumn = "Emladrs_Id";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::System.Data.SQLite.SQLiteParameter();
            param.ParameterName = "@IsNull_Emladrs_StatusId";
            param.DbType = global::System.Data.DbType.Int32;
            param.DbType = global::System.Data.DbType.Int32;
            param.SourceColumn = "Emladrs_StatusId";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::System.Data.SQLite.SQLiteParameter();
            param.ParameterName = "@Original_Emladrs_StatusId";
            param.DbType = global::System.Data.DbType.Int64;
            param.DbType = global::System.Data.DbType.Int64;
            param.SourceColumn = "Emladrs_StatusId";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::System.Data.SQLite.SQLiteParameter();
            param.ParameterName = "@IsNull_Emladrs_DispStatus";
            param.DbType = global::System.Data.DbType.Int32;
            param.DbType = global::System.Data.DbType.Int32;
            param.SourceColumn = "Emladrs_DispStatus";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::System.Data.SQLite.SQLiteParameter();
            param.ParameterName = "@Original_Emladrs_DispStatus";
            param.DbType = global::System.Data.DbType.AnsiString;
            param.DbType = global::System.Data.DbType.AnsiString;
            param.SourceColumn = "Emladrs_DispStatus";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::System.Data.SQLite.SQLiteParameter();
            param.ParameterName = "@Original_Emladrs_KlBgId";
            param.DbType = global::System.Data.DbType.Int64;
            param.DbType = global::System.Data.DbType.Int64;
            param.SourceColumn = "Emladrs_KlBgId";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::System.Data.SQLite.SQLiteParameter();
            param.ParameterName = "@IsNull_Emladrs_DispKlBg";
            param.DbType = global::System.Data.DbType.Int32;
            param.DbType = global::System.Data.DbType.Int32;
            param.SourceColumn = "Emladrs_DispKlBg";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::System.Data.SQLite.SQLiteParameter();
            param.ParameterName = "@Original_Emladrs_DispKlBg";
            param.DbType = global::System.Data.DbType.AnsiString;
            param.DbType = global::System.Data.DbType.AnsiString;
            param.SourceColumn = "Emladrs_DispKlBg";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::System.Data.SQLite.SQLiteParameter();
            param.ParameterName = "@Original_Emladrs_Emailadres";
            param.DbType = global::System.Data.DbType.AnsiString;
            param.DbType = global::System.Data.DbType.AnsiString;
            param.SourceColumn = "Emladrs_Emailadres";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::System.Data.SQLite.SQLiteParameter();
            param.ParameterName = "@Original_Emladrs_Mutatiedatum";
            param.DbType = global::System.Data.DbType.DateTime;
            param.DbType = global::System.Data.DbType.DateTime;
            param.SourceColumn = "Emladrs_Mutatiedatum";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::System.Data.SQLite.SQLiteParameter();
            param.ParameterName = "@IsNull_Emladrs_Opmerking";
            param.DbType = global::System.Data.DbType.Int32;
            param.DbType = global::System.Data.DbType.Int32;
            param.SourceColumn = "Emladrs_Opmerking";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::System.Data.SQLite.SQLiteParameter();
            param.ParameterName = "@Original_Emladrs_Opmerking";
            param.DbType = global::System.Data.DbType.AnsiString;
            param.DbType = global::System.Data.DbType.AnsiString;
            param.SourceColumn = "Emladrs_Opmerking";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitConnection() {
            this._connection = new global::System.Data.SQLite.SQLiteConnection();
            this._connection.ConnectionString = global::Cmbap.Properties.Settings.Default.Cmbap_dataConnectionString;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitCommandCollection() {
            this._commandCollection = new global::System.Data.SQLite.SQLiteCommand[1];
            this._commandCollection[0] = new global::System.Data.SQLite.SQLiteCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "SELECT [Emladrs_Id], [Emladrs_StatusId], [Emladrs_DispStatus], [Emladrs_KlBgId], " +
                "[Emladrs_DispKlBg], [Emladrs_Emailadres], [Emladrs_Mutatiedatum], [Emladrs_Opmer" +
                "king] FROM [Emailadres]";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(_Cmbap_dataDataSet.EmailadresDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual _Cmbap_dataDataSet.EmailadresDataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            _Cmbap_dataDataSet.EmailadresDataTable dataTable = new _Cmbap_dataDataSet.EmailadresDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(_Cmbap_dataDataSet.EmailadresDataTable dataTable) {
            return this.Adapter.Update(dataTable);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(_Cmbap_dataDataSet dataSet) {
            return this.Adapter.Update(dataSet, "Emailadres");
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow dataRow) {
            return this.Adapter.Update(new global::System.Data.DataRow[] {
                        dataRow});
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow[] dataRows) {
            return this.Adapter.Update(dataRows);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Delete, true)]
        public virtual int Delete(long Original_Emladrs_Id, global::System.Nullable<long> Original_Emladrs_StatusId, string Original_Emladrs_DispStatus, long Original_Emladrs_KlBgId, string Original_Emladrs_DispKlBg, string Original_Emladrs_Emailadres, System.DateTime Original_Emladrs_Mutatiedatum, string Original_Emladrs_Opmerking) {
            this.Adapter.DeleteCommand.Parameters[0].Value = ((long)(Original_Emladrs_Id));
            if ((Original_Emladrs_StatusId.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[1].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[2].Value = ((long)(Original_Emladrs_StatusId.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[1].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[2].Value = global::System.DBNull.Value;
            }
            if ((Original_Emladrs_DispStatus == null)) {
                this.Adapter.DeleteCommand.Parameters[3].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[4].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[3].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[4].Value = ((string)(Original_Emladrs_DispStatus));
            }
            this.Adapter.DeleteCommand.Parameters[5].Value = ((long)(Original_Emladrs_KlBgId));
            if ((Original_Emladrs_DispKlBg == null)) {
                this.Adapter.DeleteCommand.Parameters[6].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[7].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[6].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[7].Value = ((string)(Original_Emladrs_DispKlBg));
            }
            if ((Original_Emladrs_Emailadres == null)) {
                throw new global::System.ArgumentNullException("Original_Emladrs_Emailadres");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[8].Value = ((string)(Original_Emladrs_Emailadres));
            }
            this.Adapter.DeleteCommand.Parameters[9].Value = ((System.DateTime)(Original_Emladrs_Mutatiedatum));
            if ((Original_Emladrs_Opmerking == null)) {
                this.Adapter.DeleteCommand.Parameters[10].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[11].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[10].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[11].Value = ((string)(Original_Emladrs_Opmerking));
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.DeleteCommand.Connection.State;
            if (((this.Adapter.DeleteCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.DeleteCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.DeleteCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.DeleteCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Insert, true)]
        public virtual int Insert(global::System.Nullable<long> Emladrs_StatusId, string Emladrs_DispStatus, long Emladrs_KlBgId, string Emladrs_DispKlBg, string Emladrs_Emailadres, System.DateTime Emladrs_Mutatiedatum, string Emladrs_Opmerking) {
            if ((Emladrs_StatusId.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[0].Value = ((long)(Emladrs_StatusId.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[0].Value = global::System.DBNull.Value;
            }
            if ((Emladrs_DispStatus == null)) {
                this.Adapter.InsertCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[1].Value = ((string)(Emladrs_DispStatus));
            }
            this.Adapter.InsertCommand.Parameters[2].Value = ((long)(Emladrs_KlBgId));
            if ((Emladrs_DispKlBg == null)) {
                this.Adapter.InsertCommand.Parameters[3].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[3].Value = ((string)(Emladrs_DispKlBg));
            }
            if ((Emladrs_Emailadres == null)) {
                throw new global::System.ArgumentNullException("Emladrs_Emailadres");
            }
            else {
                this.Adapter.InsertCommand.Parameters[4].Value = ((string)(Emladrs_Emailadres));
            }
            this.Adapter.InsertCommand.Parameters[5].Value = ((System.DateTime)(Emladrs_Mutatiedatum));
            if ((Emladrs_Opmerking == null)) {
                this.Adapter.InsertCommand.Parameters[6].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[6].Value = ((string)(Emladrs_Opmerking));
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.InsertCommand.Connection.State;
            if (((this.Adapter.InsertCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.InsertCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.InsertCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.InsertCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(global::System.Nullable<long> Emladrs_StatusId, string Emladrs_DispStatus, long Emladrs_KlBgId, string Emladrs_DispKlBg, string Emladrs_Emailadres, System.DateTime Emladrs_Mutatiedatum, string Emladrs_Opmerking, long Original_Emladrs_Id, global::System.Nullable<long> Original_Emladrs_StatusId, string Original_Emladrs_DispStatus, long Original_Emladrs_KlBgId, string Original_Emladrs_DispKlBg, string Original_Emladrs_Emailadres, System.DateTime Original_Emladrs_Mutatiedatum, string Original_Emladrs_Opmerking) {
            if ((Emladrs_StatusId.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[0].Value = ((long)(Emladrs_StatusId.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[0].Value = global::System.DBNull.Value;
            }
            if ((Emladrs_DispStatus == null)) {
                this.Adapter.UpdateCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[1].Value = ((string)(Emladrs_DispStatus));
            }
            this.Adapter.UpdateCommand.Parameters[2].Value = ((long)(Emladrs_KlBgId));
            if ((Emladrs_DispKlBg == null)) {
                this.Adapter.UpdateCommand.Parameters[3].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[3].Value = ((string)(Emladrs_DispKlBg));
            }
            if ((Emladrs_Emailadres == null)) {
                throw new global::System.ArgumentNullException("Emladrs_Emailadres");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[4].Value = ((string)(Emladrs_Emailadres));
            }
            this.Adapter.UpdateCommand.Parameters[5].Value = ((System.DateTime)(Emladrs_Mutatiedatum));
            if ((Emladrs_Opmerking == null)) {
                this.Adapter.UpdateCommand.Parameters[6].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[6].Value = ((string)(Emladrs_Opmerking));
            }
            this.Adapter.UpdateCommand.Parameters[7].Value = ((long)(Original_Emladrs_Id));
            if ((Original_Emladrs_StatusId.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[8].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[9].Value = ((long)(Original_Emladrs_StatusId.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[8].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[9].Value = global::System.DBNull.Value;
            }
            if ((Original_Emladrs_DispStatus == null)) {
                this.Adapter.UpdateCommand.Parameters[10].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[11].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[10].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[11].Value = ((string)(Original_Emladrs_DispStatus));
            }
            this.Adapter.UpdateCommand.Parameters[12].Value = ((long)(Original_Emladrs_KlBgId));
            if ((Original_Emladrs_DispKlBg == null)) {
                this.Adapter.UpdateCommand.Parameters[13].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[14].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[13].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[14].Value = ((string)(Original_Emladrs_DispKlBg));
            }
            if ((Original_Emladrs_Emailadres == null)) {
                throw new global::System.ArgumentNullException("Original_Emladrs_Emailadres");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[15].Value = ((string)(Original_Emladrs_Emailadres));
            }
            this.Adapter.UpdateCommand.Parameters[16].Value = ((System.DateTime)(Original_Emladrs_Mutatiedatum));
            if ((Original_Emladrs_Opmerking == null)) {
                this.Adapter.UpdateCommand.Parameters[17].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[18].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[17].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[18].Value = ((string)(Original_Emladrs_Opmerking));
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.UpdateCommand.Connection.State;
            if (((this.Adapter.UpdateCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.UpdateCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.UpdateCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.UpdateCommand.Connection.Close();
                }
            }
        }
    }
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class GebruikerTableAdapter : global::System.ComponentModel.Component {
        
        private global::System.Data.SQLite.SQLiteDataAdapter _adapter;
        
        private global::System.Data.SQLite.SQLiteConnection _connection;
        
        private global::System.Data.SQLite.SQLiteTransaction _transaction;
        
        private global::System.Data.SQLite.SQLiteCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public GebruikerTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected internal global::System.Data.SQLite.SQLiteDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal global::System.Data.SQLite.SQLiteConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::System.Data.SQLite.SQLiteCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal global::System.Data.SQLite.SQLiteTransaction Transaction {
            get {
                return this._transaction;
            }
            set {
                this._transaction = value;
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    this.CommandCollection[i].Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.DeleteCommand != null))) {
                    this.Adapter.DeleteCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.InsertCommand != null))) {
                    this.Adapter.InsertCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.UpdateCommand != null))) {
                    this.Adapter.UpdateCommand.Transaction = this._transaction;
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected global::System.Data.SQLite.SQLiteCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitAdapter() {
            this._adapter = new global::System.Data.SQLite.SQLiteDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "Gebruiker";
            tableMapping.ColumnMappings.Add("Gebr_Id", "Gebr_Id");
            tableMapping.ColumnMappings.Add("Gebr_StatusId", "Gebr_StatusId");
            tableMapping.ColumnMappings.Add("Gebr_DispStatus", "Gebr_DispStatus");
            tableMapping.ColumnMappings.Add("Gebr_Kort", "Gebr_Kort");
            tableMapping.ColumnMappings.Add("Gebr_Lang", "Gebr_Lang");
            tableMapping.ColumnMappings.Add("Gebr_Wachtwoord", "Gebr_Wachtwoord");
            tableMapping.ColumnMappings.Add("Gebr_Mutatiedatum", "Gebr_Mutatiedatum");
            tableMapping.ColumnMappings.Add("Gebr_Opmerking", "Gebr_Opmerking");
            this._adapter.TableMappings.Add(tableMapping);
            this._adapter.DeleteCommand = new global::System.Data.SQLite.SQLiteCommand();
            this._adapter.DeleteCommand.Connection = this.Connection;
            this._adapter.DeleteCommand.CommandText = @"DELETE FROM [main].[sqlite_default_schema].[Gebruiker] WHERE (([Gebr_Id] = @Original_Gebr_Id) AND ([Gebr_StatusId] = @Original_Gebr_StatusId) AND ((@IsNull_Gebr_DispStatus = 1 AND [Gebr_DispStatus] IS NULL) OR ([Gebr_DispStatus] = @Original_Gebr_DispStatus)) AND ([Gebr_Kort] = @Original_Gebr_Kort) AND ([Gebr_Lang] = @Original_Gebr_Lang) AND ((@IsNull_Gebr_Wachtwoord = 1 AND [Gebr_Wachtwoord] IS NULL) OR ([Gebr_Wachtwoord] = @Original_Gebr_Wachtwoord)) AND ([Gebr_Mutatiedatum] = @Original_Gebr_Mutatiedatum) AND ((@IsNull_Gebr_Opmerking = 1 AND [Gebr_Opmerking] IS NULL) OR ([Gebr_Opmerking] = @Original_Gebr_Opmerking)))";
            this._adapter.DeleteCommand.CommandType = global::System.Data.CommandType.Text;
            global::System.Data.SQLite.SQLiteParameter param = new global::System.Data.SQLite.SQLiteParameter();
            param.ParameterName = "@Original_Gebr_Id";
            param.DbType = global::System.Data.DbType.Int64;
            param.DbType = global::System.Data.DbType.Int64;
            param.SourceColumn = "Gebr_Id";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::System.Data.SQLite.SQLiteParameter();
            param.ParameterName = "@Original_Gebr_StatusId";
            param.DbType = global::System.Data.DbType.Int64;
            param.DbType = global::System.Data.DbType.Int64;
            param.SourceColumn = "Gebr_StatusId";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::System.Data.SQLite.SQLiteParameter();
            param.ParameterName = "@IsNull_Gebr_DispStatus";
            param.DbType = global::System.Data.DbType.Int32;
            param.DbType = global::System.Data.DbType.Int32;
            param.SourceColumn = "Gebr_DispStatus";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::System.Data.SQLite.SQLiteParameter();
            param.ParameterName = "@Original_Gebr_DispStatus";
            param.DbType = global::System.Data.DbType.AnsiString;
            param.DbType = global::System.Data.DbType.AnsiString;
            param.SourceColumn = "Gebr_DispStatus";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::System.Data.SQLite.SQLiteParameter();
            param.ParameterName = "@Original_Gebr_Kort";
            param.DbType = global::System.Data.DbType.AnsiStringFixedLength;
            param.DbType = global::System.Data.DbType.AnsiStringFixedLength;
            param.SourceColumn = "Gebr_Kort";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::System.Data.SQLite.SQLiteParameter();
            param.ParameterName = "@Original_Gebr_Lang";
            param.DbType = global::System.Data.DbType.AnsiStringFixedLength;
            param.DbType = global::System.Data.DbType.AnsiStringFixedLength;
            param.SourceColumn = "Gebr_Lang";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::System.Data.SQLite.SQLiteParameter();
            param.ParameterName = "@IsNull_Gebr_Wachtwoord";
            param.DbType = global::System.Data.DbType.Int32;
            param.DbType = global::System.Data.DbType.Int32;
            param.SourceColumn = "Gebr_Wachtwoord";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::System.Data.SQLite.SQLiteParameter();
            param.ParameterName = "@Original_Gebr_Wachtwoord";
            param.DbType = global::System.Data.DbType.AnsiStringFixedLength;
            param.DbType = global::System.Data.DbType.AnsiStringFixedLength;
            param.SourceColumn = "Gebr_Wachtwoord";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::System.Data.SQLite.SQLiteParameter();
            param.ParameterName = "@Original_Gebr_Mutatiedatum";
            param.DbType = global::System.Data.DbType.DateTime;
            param.DbType = global::System.Data.DbType.DateTime;
            param.SourceColumn = "Gebr_Mutatiedatum";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::System.Data.SQLite.SQLiteParameter();
            param.ParameterName = "@IsNull_Gebr_Opmerking";
            param.DbType = global::System.Data.DbType.Int32;
            param.DbType = global::System.Data.DbType.Int32;
            param.SourceColumn = "Gebr_Opmerking";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::System.Data.SQLite.SQLiteParameter();
            param.ParameterName = "@Original_Gebr_Opmerking";
            param.DbType = global::System.Data.DbType.AnsiString;
            param.DbType = global::System.Data.DbType.AnsiString;
            param.SourceColumn = "Gebr_Opmerking";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            this._adapter.InsertCommand = new global::System.Data.SQLite.SQLiteCommand();
            this._adapter.InsertCommand.Connection = this.Connection;
            this._adapter.InsertCommand.CommandText = @"INSERT INTO [main].[sqlite_default_schema].[Gebruiker] ([Gebr_StatusId], [Gebr_DispStatus], [Gebr_Kort], [Gebr_Lang], [Gebr_Wachtwoord], [Gebr_Mutatiedatum], [Gebr_Opmerking]) VALUES (@Gebr_StatusId, @Gebr_DispStatus, @Gebr_Kort, @Gebr_Lang, @Gebr_Wachtwoord, @Gebr_Mutatiedatum, @Gebr_Opmerking)";
            this._adapter.InsertCommand.CommandType = global::System.Data.CommandType.Text;
            param = new global::System.Data.SQLite.SQLiteParameter();
            param.ParameterName = "@Gebr_StatusId";
            param.DbType = global::System.Data.DbType.Int64;
            param.DbType = global::System.Data.DbType.Int64;
            param.SourceColumn = "Gebr_StatusId";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::System.Data.SQLite.SQLiteParameter();
            param.ParameterName = "@Gebr_DispStatus";
            param.DbType = global::System.Data.DbType.AnsiString;
            param.DbType = global::System.Data.DbType.AnsiString;
            param.SourceColumn = "Gebr_DispStatus";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::System.Data.SQLite.SQLiteParameter();
            param.ParameterName = "@Gebr_Kort";
            param.DbType = global::System.Data.DbType.AnsiStringFixedLength;
            param.DbType = global::System.Data.DbType.AnsiStringFixedLength;
            param.SourceColumn = "Gebr_Kort";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::System.Data.SQLite.SQLiteParameter();
            param.ParameterName = "@Gebr_Lang";
            param.DbType = global::System.Data.DbType.AnsiStringFixedLength;
            param.DbType = global::System.Data.DbType.AnsiStringFixedLength;
            param.SourceColumn = "Gebr_Lang";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::System.Data.SQLite.SQLiteParameter();
            param.ParameterName = "@Gebr_Wachtwoord";
            param.DbType = global::System.Data.DbType.AnsiStringFixedLength;
            param.DbType = global::System.Data.DbType.AnsiStringFixedLength;
            param.SourceColumn = "Gebr_Wachtwoord";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::System.Data.SQLite.SQLiteParameter();
            param.ParameterName = "@Gebr_Mutatiedatum";
            param.DbType = global::System.Data.DbType.DateTime;
            param.DbType = global::System.Data.DbType.DateTime;
            param.SourceColumn = "Gebr_Mutatiedatum";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::System.Data.SQLite.SQLiteParameter();
            param.ParameterName = "@Gebr_Opmerking";
            param.DbType = global::System.Data.DbType.AnsiString;
            param.DbType = global::System.Data.DbType.AnsiString;
            param.SourceColumn = "Gebr_Opmerking";
            this._adapter.InsertCommand.Parameters.Add(param);
            this._adapter.UpdateCommand = new global::System.Data.SQLite.SQLiteCommand();
            this._adapter.UpdateCommand.Connection = this.Connection;
            this._adapter.UpdateCommand.CommandText = @"UPDATE [main].[sqlite_default_schema].[Gebruiker] SET [Gebr_StatusId] = @Gebr_StatusId, [Gebr_DispStatus] = @Gebr_DispStatus, [Gebr_Kort] = @Gebr_Kort, [Gebr_Lang] = @Gebr_Lang, [Gebr_Wachtwoord] = @Gebr_Wachtwoord, [Gebr_Mutatiedatum] = @Gebr_Mutatiedatum, [Gebr_Opmerking] = @Gebr_Opmerking WHERE (([Gebr_Id] = @Original_Gebr_Id) AND ([Gebr_StatusId] = @Original_Gebr_StatusId) AND ((@IsNull_Gebr_DispStatus = 1 AND [Gebr_DispStatus] IS NULL) OR ([Gebr_DispStatus] = @Original_Gebr_DispStatus)) AND ([Gebr_Kort] = @Original_Gebr_Kort) AND ([Gebr_Lang] = @Original_Gebr_Lang) AND ((@IsNull_Gebr_Wachtwoord = 1 AND [Gebr_Wachtwoord] IS NULL) OR ([Gebr_Wachtwoord] = @Original_Gebr_Wachtwoord)) AND ([Gebr_Mutatiedatum] = @Original_Gebr_Mutatiedatum) AND ((@IsNull_Gebr_Opmerking = 1 AND [Gebr_Opmerking] IS NULL) OR ([Gebr_Opmerking] = @Original_Gebr_Opmerking)))";
            this._adapter.UpdateCommand.CommandType = global::System.Data.CommandType.Text;
            param = new global::System.Data.SQLite.SQLiteParameter();
            param.ParameterName = "@Gebr_StatusId";
            param.DbType = global::System.Data.DbType.Int64;
            param.DbType = global::System.Data.DbType.Int64;
            param.SourceColumn = "Gebr_StatusId";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::System.Data.SQLite.SQLiteParameter();
            param.ParameterName = "@Gebr_DispStatus";
            param.DbType = global::System.Data.DbType.AnsiString;
            param.DbType = global::System.Data.DbType.AnsiString;
            param.SourceColumn = "Gebr_DispStatus";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::System.Data.SQLite.SQLiteParameter();
            param.ParameterName = "@Gebr_Kort";
            param.DbType = global::System.Data.DbType.AnsiStringFixedLength;
            param.DbType = global::System.Data.DbType.AnsiStringFixedLength;
            param.SourceColumn = "Gebr_Kort";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::System.Data.SQLite.SQLiteParameter();
            param.ParameterName = "@Gebr_Lang";
            param.DbType = global::System.Data.DbType.AnsiStringFixedLength;
            param.DbType = global::System.Data.DbType.AnsiStringFixedLength;
            param.SourceColumn = "Gebr_Lang";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::System.Data.SQLite.SQLiteParameter();
            param.ParameterName = "@Gebr_Wachtwoord";
            param.DbType = global::System.Data.DbType.AnsiStringFixedLength;
            param.DbType = global::System.Data.DbType.AnsiStringFixedLength;
            param.SourceColumn = "Gebr_Wachtwoord";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::System.Data.SQLite.SQLiteParameter();
            param.ParameterName = "@Gebr_Mutatiedatum";
            param.DbType = global::System.Data.DbType.DateTime;
            param.DbType = global::System.Data.DbType.DateTime;
            param.SourceColumn = "Gebr_Mutatiedatum";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::System.Data.SQLite.SQLiteParameter();
            param.ParameterName = "@Gebr_Opmerking";
            param.DbType = global::System.Data.DbType.AnsiString;
            param.DbType = global::System.Data.DbType.AnsiString;
            param.SourceColumn = "Gebr_Opmerking";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::System.Data.SQLite.SQLiteParameter();
            param.ParameterName = "@Original_Gebr_Id";
            param.DbType = global::System.Data.DbType.Int64;
            param.DbType = global::System.Data.DbType.Int64;
            param.SourceColumn = "Gebr_Id";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::System.Data.SQLite.SQLiteParameter();
            param.ParameterName = "@Original_Gebr_StatusId";
            param.DbType = global::System.Data.DbType.Int64;
            param.DbType = global::System.Data.DbType.Int64;
            param.SourceColumn = "Gebr_StatusId";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::System.Data.SQLite.SQLiteParameter();
            param.ParameterName = "@IsNull_Gebr_DispStatus";
            param.DbType = global::System.Data.DbType.Int32;
            param.DbType = global::System.Data.DbType.Int32;
            param.SourceColumn = "Gebr_DispStatus";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::System.Data.SQLite.SQLiteParameter();
            param.ParameterName = "@Original_Gebr_DispStatus";
            param.DbType = global::System.Data.DbType.AnsiString;
            param.DbType = global::System.Data.DbType.AnsiString;
            param.SourceColumn = "Gebr_DispStatus";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::System.Data.SQLite.SQLiteParameter();
            param.ParameterName = "@Original_Gebr_Kort";
            param.DbType = global::System.Data.DbType.AnsiStringFixedLength;
            param.DbType = global::System.Data.DbType.AnsiStringFixedLength;
            param.SourceColumn = "Gebr_Kort";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::System.Data.SQLite.SQLiteParameter();
            param.ParameterName = "@Original_Gebr_Lang";
            param.DbType = global::System.Data.DbType.AnsiStringFixedLength;
            param.DbType = global::System.Data.DbType.AnsiStringFixedLength;
            param.SourceColumn = "Gebr_Lang";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::System.Data.SQLite.SQLiteParameter();
            param.ParameterName = "@IsNull_Gebr_Wachtwoord";
            param.DbType = global::System.Data.DbType.Int32;
            param.DbType = global::System.Data.DbType.Int32;
            param.SourceColumn = "Gebr_Wachtwoord";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::System.Data.SQLite.SQLiteParameter();
            param.ParameterName = "@Original_Gebr_Wachtwoord";
            param.DbType = global::System.Data.DbType.AnsiStringFixedLength;
            param.DbType = global::System.Data.DbType.AnsiStringFixedLength;
            param.SourceColumn = "Gebr_Wachtwoord";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::System.Data.SQLite.SQLiteParameter();
            param.ParameterName = "@Original_Gebr_Mutatiedatum";
            param.DbType = global::System.Data.DbType.DateTime;
            param.DbType = global::System.Data.DbType.DateTime;
            param.SourceColumn = "Gebr_Mutatiedatum";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::System.Data.SQLite.SQLiteParameter();
            param.ParameterName = "@IsNull_Gebr_Opmerking";
            param.DbType = global::System.Data.DbType.Int32;
            param.DbType = global::System.Data.DbType.Int32;
            param.SourceColumn = "Gebr_Opmerking";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::System.Data.SQLite.SQLiteParameter();
            param.ParameterName = "@Original_Gebr_Opmerking";
            param.DbType = global::System.Data.DbType.AnsiString;
            param.DbType = global::System.Data.DbType.AnsiString;
            param.SourceColumn = "Gebr_Opmerking";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitConnection() {
            this._connection = new global::System.Data.SQLite.SQLiteConnection();
            this._connection.ConnectionString = global::Cmbap.Properties.Settings.Default.Cmbap_dataConnectionString;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitCommandCollection() {
            this._commandCollection = new global::System.Data.SQLite.SQLiteCommand[1];
            this._commandCollection[0] = new global::System.Data.SQLite.SQLiteCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "SELECT [Gebr_Id], [Gebr_StatusId], [Gebr_DispStatus], [Gebr_Kort], [Gebr_Lang], [" +
                "Gebr_Wachtwoord], [Gebr_Mutatiedatum], [Gebr_Opmerking] FROM [Gebruiker]";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(_Cmbap_dataDataSet.GebruikerDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual _Cmbap_dataDataSet.GebruikerDataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            _Cmbap_dataDataSet.GebruikerDataTable dataTable = new _Cmbap_dataDataSet.GebruikerDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(_Cmbap_dataDataSet.GebruikerDataTable dataTable) {
            return this.Adapter.Update(dataTable);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(_Cmbap_dataDataSet dataSet) {
            return this.Adapter.Update(dataSet, "Gebruiker");
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow dataRow) {
            return this.Adapter.Update(new global::System.Data.DataRow[] {
                        dataRow});
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow[] dataRows) {
            return this.Adapter.Update(dataRows);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Delete, true)]
        public virtual int Delete(long Original_Gebr_Id, long Original_Gebr_StatusId, string Original_Gebr_DispStatus, string Original_Gebr_Kort, string Original_Gebr_Lang, string Original_Gebr_Wachtwoord, System.DateTime Original_Gebr_Mutatiedatum, string Original_Gebr_Opmerking) {
            this.Adapter.DeleteCommand.Parameters[0].Value = ((long)(Original_Gebr_Id));
            this.Adapter.DeleteCommand.Parameters[1].Value = ((long)(Original_Gebr_StatusId));
            if ((Original_Gebr_DispStatus == null)) {
                this.Adapter.DeleteCommand.Parameters[2].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[3].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[2].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[3].Value = ((string)(Original_Gebr_DispStatus));
            }
            if ((Original_Gebr_Kort == null)) {
                throw new global::System.ArgumentNullException("Original_Gebr_Kort");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[4].Value = ((string)(Original_Gebr_Kort));
            }
            if ((Original_Gebr_Lang == null)) {
                throw new global::System.ArgumentNullException("Original_Gebr_Lang");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[5].Value = ((string)(Original_Gebr_Lang));
            }
            if ((Original_Gebr_Wachtwoord == null)) {
                this.Adapter.DeleteCommand.Parameters[6].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[7].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[6].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[7].Value = ((string)(Original_Gebr_Wachtwoord));
            }
            this.Adapter.DeleteCommand.Parameters[8].Value = ((System.DateTime)(Original_Gebr_Mutatiedatum));
            if ((Original_Gebr_Opmerking == null)) {
                this.Adapter.DeleteCommand.Parameters[9].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[10].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[9].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[10].Value = ((string)(Original_Gebr_Opmerking));
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.DeleteCommand.Connection.State;
            if (((this.Adapter.DeleteCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.DeleteCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.DeleteCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.DeleteCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Insert, true)]
        public virtual int Insert(long Gebr_StatusId, string Gebr_DispStatus, string Gebr_Kort, string Gebr_Lang, string Gebr_Wachtwoord, System.DateTime Gebr_Mutatiedatum, string Gebr_Opmerking) {
            this.Adapter.InsertCommand.Parameters[0].Value = ((long)(Gebr_StatusId));
            if ((Gebr_DispStatus == null)) {
                this.Adapter.InsertCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[1].Value = ((string)(Gebr_DispStatus));
            }
            if ((Gebr_Kort == null)) {
                throw new global::System.ArgumentNullException("Gebr_Kort");
            }
            else {
                this.Adapter.InsertCommand.Parameters[2].Value = ((string)(Gebr_Kort));
            }
            if ((Gebr_Lang == null)) {
                throw new global::System.ArgumentNullException("Gebr_Lang");
            }
            else {
                this.Adapter.InsertCommand.Parameters[3].Value = ((string)(Gebr_Lang));
            }
            if ((Gebr_Wachtwoord == null)) {
                this.Adapter.InsertCommand.Parameters[4].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[4].Value = ((string)(Gebr_Wachtwoord));
            }
            this.Adapter.InsertCommand.Parameters[5].Value = ((System.DateTime)(Gebr_Mutatiedatum));
            if ((Gebr_Opmerking == null)) {
                this.Adapter.InsertCommand.Parameters[6].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[6].Value = ((string)(Gebr_Opmerking));
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.InsertCommand.Connection.State;
            if (((this.Adapter.InsertCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.InsertCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.InsertCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.InsertCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(long Gebr_StatusId, string Gebr_DispStatus, string Gebr_Kort, string Gebr_Lang, string Gebr_Wachtwoord, System.DateTime Gebr_Mutatiedatum, string Gebr_Opmerking, long Original_Gebr_Id, long Original_Gebr_StatusId, string Original_Gebr_DispStatus, string Original_Gebr_Kort, string Original_Gebr_Lang, string Original_Gebr_Wachtwoord, System.DateTime Original_Gebr_Mutatiedatum, string Original_Gebr_Opmerking) {
            this.Adapter.UpdateCommand.Parameters[0].Value = ((long)(Gebr_StatusId));
            if ((Gebr_DispStatus == null)) {
                this.Adapter.UpdateCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[1].Value = ((string)(Gebr_DispStatus));
            }
            if ((Gebr_Kort == null)) {
                throw new global::System.ArgumentNullException("Gebr_Kort");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[2].Value = ((string)(Gebr_Kort));
            }
            if ((Gebr_Lang == null)) {
                throw new global::System.ArgumentNullException("Gebr_Lang");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[3].Value = ((string)(Gebr_Lang));
            }
            if ((Gebr_Wachtwoord == null)) {
                this.Adapter.UpdateCommand.Parameters[4].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[4].Value = ((string)(Gebr_Wachtwoord));
            }
            this.Adapter.UpdateCommand.Parameters[5].Value = ((System.DateTime)(Gebr_Mutatiedatum));
            if ((Gebr_Opmerking == null)) {
                this.Adapter.UpdateCommand.Parameters[6].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[6].Value = ((string)(Gebr_Opmerking));
            }
            this.Adapter.UpdateCommand.Parameters[7].Value = ((long)(Original_Gebr_Id));
            this.Adapter.UpdateCommand.Parameters[8].Value = ((long)(Original_Gebr_StatusId));
            if ((Original_Gebr_DispStatus == null)) {
                this.Adapter.UpdateCommand.Parameters[9].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[10].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[9].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[10].Value = ((string)(Original_Gebr_DispStatus));
            }
            if ((Original_Gebr_Kort == null)) {
                throw new global::System.ArgumentNullException("Original_Gebr_Kort");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[11].Value = ((string)(Original_Gebr_Kort));
            }
            if ((Original_Gebr_Lang == null)) {
                throw new global::System.ArgumentNullException("Original_Gebr_Lang");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[12].Value = ((string)(Original_Gebr_Lang));
            }
            if ((Original_Gebr_Wachtwoord == null)) {
                this.Adapter.UpdateCommand.Parameters[13].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[14].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[13].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[14].Value = ((string)(Original_Gebr_Wachtwoord));
            }
            this.Adapter.UpdateCommand.Parameters[15].Value = ((System.DateTime)(Original_Gebr_Mutatiedatum));
            if ((Original_Gebr_Opmerking == null)) {
                this.Adapter.UpdateCommand.Parameters[16].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[17].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[16].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[17].Value = ((string)(Original_Gebr_Opmerking));
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.UpdateCommand.Connection.State;
            if (((this.Adapter.UpdateCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.UpdateCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.UpdateCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.UpdateCommand.Connection.Close();
                }
            }
        }
    }
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class HoofdcategorieTableAdapter : global::System.ComponentModel.Component {
        
        private global::System.Data.SQLite.SQLiteDataAdapter _adapter;
        
        private global::System.Data.SQLite.SQLiteConnection _connection;
        
        private global::System.Data.SQLite.SQLiteTransaction _transaction;
        
        private global::System.Data.SQLite.SQLiteCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public HoofdcategorieTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected internal global::System.Data.SQLite.SQLiteDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal global::System.Data.SQLite.SQLiteConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::System.Data.SQLite.SQLiteCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal global::System.Data.SQLite.SQLiteTransaction Transaction {
            get {
                return this._transaction;
            }
            set {
                this._transaction = value;
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    this.CommandCollection[i].Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.DeleteCommand != null))) {
                    this.Adapter.DeleteCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.InsertCommand != null))) {
                    this.Adapter.InsertCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.UpdateCommand != null))) {
                    this.Adapter.UpdateCommand.Transaction = this._transaction;
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected global::System.Data.SQLite.SQLiteCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitAdapter() {
            this._adapter = new global::System.Data.SQLite.SQLiteDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "Hoofdcategorie";
            tableMapping.ColumnMappings.Add("Hcat_Id", "Hcat_Id");
            tableMapping.ColumnMappings.Add("Hcat_StatusId", "Hcat_StatusId");
            tableMapping.ColumnMappings.Add("Hcat_DispStatus", "Hcat_DispStatus");
            tableMapping.ColumnMappings.Add("Hcat_Prefix", "Hcat_Prefix");
            tableMapping.ColumnMappings.Add("Hcat_Kort", "Hcat_Kort");
            tableMapping.ColumnMappings.Add("Hcat_Lang", "Hcat_Lang");
            tableMapping.ColumnMappings.Add("Hcat_WijzigentoegestaanJN", "Hcat_WijzigentoegestaanJN");
            tableMapping.ColumnMappings.Add("Hcat_Mutatiedatum", "Hcat_Mutatiedatum");
            tableMapping.ColumnMappings.Add("Hcat_Opmerking", "Hcat_Opmerking");
            this._adapter.TableMappings.Add(tableMapping);
            this._adapter.DeleteCommand = new global::System.Data.SQLite.SQLiteCommand();
            this._adapter.DeleteCommand.Connection = this.Connection;
            this._adapter.DeleteCommand.CommandText = @"DELETE FROM [main].[sqlite_default_schema].[Hoofdcategorie] WHERE (([Hcat_Id] = @Original_Hcat_Id) AND ((@IsNull_Hcat_StatusId = 1 AND [Hcat_StatusId] IS NULL) OR ([Hcat_StatusId] = @Original_Hcat_StatusId)) AND ((@IsNull_Hcat_DispStatus = 1 AND [Hcat_DispStatus] IS NULL) OR ([Hcat_DispStatus] = @Original_Hcat_DispStatus)) AND ((@IsNull_Hcat_Prefix = 1 AND [Hcat_Prefix] IS NULL) OR ([Hcat_Prefix] = @Original_Hcat_Prefix)) AND ([Hcat_Kort] = @Original_Hcat_Kort) AND ([Hcat_Lang] = @Original_Hcat_Lang) AND ([Hcat_WijzigentoegestaanJN] = @Original_Hcat_WijzigentoegestaanJN) AND ([Hcat_Mutatiedatum] = @Original_Hcat_Mutatiedatum) AND ((@IsNull_Hcat_Opmerking = 1 AND [Hcat_Opmerking] IS NULL) OR ([Hcat_Opmerking] = @Original_Hcat_Opmerking)))";
            this._adapter.DeleteCommand.CommandType = global::System.Data.CommandType.Text;
            global::System.Data.SQLite.SQLiteParameter param = new global::System.Data.SQLite.SQLiteParameter();
            param.ParameterName = "@Original_Hcat_Id";
            param.DbType = global::System.Data.DbType.Int64;
            param.DbType = global::System.Data.DbType.Int64;
            param.SourceColumn = "Hcat_Id";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::System.Data.SQLite.SQLiteParameter();
            param.ParameterName = "@IsNull_Hcat_StatusId";
            param.DbType = global::System.Data.DbType.Int32;
            param.DbType = global::System.Data.DbType.Int32;
            param.SourceColumn = "Hcat_StatusId";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::System.Data.SQLite.SQLiteParameter();
            param.ParameterName = "@Original_Hcat_StatusId";
            param.DbType = global::System.Data.DbType.Int64;
            param.DbType = global::System.Data.DbType.Int64;
            param.SourceColumn = "Hcat_StatusId";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::System.Data.SQLite.SQLiteParameter();
            param.ParameterName = "@IsNull_Hcat_DispStatus";
            param.DbType = global::System.Data.DbType.Int32;
            param.DbType = global::System.Data.DbType.Int32;
            param.SourceColumn = "Hcat_DispStatus";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::System.Data.SQLite.SQLiteParameter();
            param.ParameterName = "@Original_Hcat_DispStatus";
            param.DbType = global::System.Data.DbType.AnsiString;
            param.DbType = global::System.Data.DbType.AnsiString;
            param.SourceColumn = "Hcat_DispStatus";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::System.Data.SQLite.SQLiteParameter();
            param.ParameterName = "@IsNull_Hcat_Prefix";
            param.DbType = global::System.Data.DbType.Int32;
            param.DbType = global::System.Data.DbType.Int32;
            param.SourceColumn = "Hcat_Prefix";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::System.Data.SQLite.SQLiteParameter();
            param.ParameterName = "@Original_Hcat_Prefix";
            param.DbType = global::System.Data.DbType.AnsiString;
            param.DbType = global::System.Data.DbType.AnsiString;
            param.SourceColumn = "Hcat_Prefix";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::System.Data.SQLite.SQLiteParameter();
            param.ParameterName = "@Original_Hcat_Kort";
            param.DbType = global::System.Data.DbType.AnsiString;
            param.DbType = global::System.Data.DbType.AnsiString;
            param.SourceColumn = "Hcat_Kort";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::System.Data.SQLite.SQLiteParameter();
            param.ParameterName = "@Original_Hcat_Lang";
            param.DbType = global::System.Data.DbType.AnsiString;
            param.DbType = global::System.Data.DbType.AnsiString;
            param.SourceColumn = "Hcat_Lang";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::System.Data.SQLite.SQLiteParameter();
            param.ParameterName = "@Original_Hcat_WijzigentoegestaanJN";
            param.DbType = global::System.Data.DbType.Int64;
            param.DbType = global::System.Data.DbType.Int64;
            param.SourceColumn = "Hcat_WijzigentoegestaanJN";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::System.Data.SQLite.SQLiteParameter();
            param.ParameterName = "@Original_Hcat_Mutatiedatum";
            param.DbType = global::System.Data.DbType.DateTime;
            param.DbType = global::System.Data.DbType.DateTime;
            param.SourceColumn = "Hcat_Mutatiedatum";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::System.Data.SQLite.SQLiteParameter();
            param.ParameterName = "@IsNull_Hcat_Opmerking";
            param.DbType = global::System.Data.DbType.Int32;
            param.DbType = global::System.Data.DbType.Int32;
            param.SourceColumn = "Hcat_Opmerking";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::System.Data.SQLite.SQLiteParameter();
            param.ParameterName = "@Original_Hcat_Opmerking";
            param.DbType = global::System.Data.DbType.AnsiString;
            param.DbType = global::System.Data.DbType.AnsiString;
            param.SourceColumn = "Hcat_Opmerking";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            this._adapter.InsertCommand = new global::System.Data.SQLite.SQLiteCommand();
            this._adapter.InsertCommand.Connection = this.Connection;
            this._adapter.InsertCommand.CommandText = @"INSERT INTO [main].[sqlite_default_schema].[Hoofdcategorie] ([Hcat_StatusId], [Hcat_DispStatus], [Hcat_Prefix], [Hcat_Kort], [Hcat_Lang], [Hcat_WijzigentoegestaanJN], [Hcat_Mutatiedatum], [Hcat_Opmerking]) VALUES (@Hcat_StatusId, @Hcat_DispStatus, @Hcat_Prefix, @Hcat_Kort, @Hcat_Lang, @Hcat_WijzigentoegestaanJN, @Hcat_Mutatiedatum, @Hcat_Opmerking)";
            this._adapter.InsertCommand.CommandType = global::System.Data.CommandType.Text;
            param = new global::System.Data.SQLite.SQLiteParameter();
            param.ParameterName = "@Hcat_StatusId";
            param.DbType = global::System.Data.DbType.Int64;
            param.DbType = global::System.Data.DbType.Int64;
            param.SourceColumn = "Hcat_StatusId";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::System.Data.SQLite.SQLiteParameter();
            param.ParameterName = "@Hcat_DispStatus";
            param.DbType = global::System.Data.DbType.AnsiString;
            param.DbType = global::System.Data.DbType.AnsiString;
            param.SourceColumn = "Hcat_DispStatus";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::System.Data.SQLite.SQLiteParameter();
            param.ParameterName = "@Hcat_Prefix";
            param.DbType = global::System.Data.DbType.AnsiString;
            param.DbType = global::System.Data.DbType.AnsiString;
            param.SourceColumn = "Hcat_Prefix";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::System.Data.SQLite.SQLiteParameter();
            param.ParameterName = "@Hcat_Kort";
            param.DbType = global::System.Data.DbType.AnsiString;
            param.DbType = global::System.Data.DbType.AnsiString;
            param.SourceColumn = "Hcat_Kort";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::System.Data.SQLite.SQLiteParameter();
            param.ParameterName = "@Hcat_Lang";
            param.DbType = global::System.Data.DbType.AnsiString;
            param.DbType = global::System.Data.DbType.AnsiString;
            param.SourceColumn = "Hcat_Lang";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::System.Data.SQLite.SQLiteParameter();
            param.ParameterName = "@Hcat_WijzigentoegestaanJN";
            param.DbType = global::System.Data.DbType.Int64;
            param.DbType = global::System.Data.DbType.Int64;
            param.SourceColumn = "Hcat_WijzigentoegestaanJN";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::System.Data.SQLite.SQLiteParameter();
            param.ParameterName = "@Hcat_Mutatiedatum";
            param.DbType = global::System.Data.DbType.DateTime;
            param.DbType = global::System.Data.DbType.DateTime;
            param.SourceColumn = "Hcat_Mutatiedatum";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::System.Data.SQLite.SQLiteParameter();
            param.ParameterName = "@Hcat_Opmerking";
            param.DbType = global::System.Data.DbType.AnsiString;
            param.DbType = global::System.Data.DbType.AnsiString;
            param.SourceColumn = "Hcat_Opmerking";
            this._adapter.InsertCommand.Parameters.Add(param);
            this._adapter.UpdateCommand = new global::System.Data.SQLite.SQLiteCommand();
            this._adapter.UpdateCommand.Connection = this.Connection;
            this._adapter.UpdateCommand.CommandText = @"UPDATE [main].[sqlite_default_schema].[Hoofdcategorie] SET [Hcat_StatusId] = @Hcat_StatusId, [Hcat_DispStatus] = @Hcat_DispStatus, [Hcat_Prefix] = @Hcat_Prefix, [Hcat_Kort] = @Hcat_Kort, [Hcat_Lang] = @Hcat_Lang, [Hcat_WijzigentoegestaanJN] = @Hcat_WijzigentoegestaanJN, [Hcat_Mutatiedatum] = @Hcat_Mutatiedatum, [Hcat_Opmerking] = @Hcat_Opmerking WHERE (([Hcat_Id] = @Original_Hcat_Id) AND ((@IsNull_Hcat_StatusId = 1 AND [Hcat_StatusId] IS NULL) OR ([Hcat_StatusId] = @Original_Hcat_StatusId)) AND ((@IsNull_Hcat_DispStatus = 1 AND [Hcat_DispStatus] IS NULL) OR ([Hcat_DispStatus] = @Original_Hcat_DispStatus)) AND ((@IsNull_Hcat_Prefix = 1 AND [Hcat_Prefix] IS NULL) OR ([Hcat_Prefix] = @Original_Hcat_Prefix)) AND ([Hcat_Kort] = @Original_Hcat_Kort) AND ([Hcat_Lang] = @Original_Hcat_Lang) AND ([Hcat_WijzigentoegestaanJN] = @Original_Hcat_WijzigentoegestaanJN) AND ([Hcat_Mutatiedatum] = @Original_Hcat_Mutatiedatum) AND ((@IsNull_Hcat_Opmerking = 1 AND [Hcat_Opmerking] IS NULL) OR ([Hcat_Opmerking] = @Original_Hcat_Opmerking)))";
            this._adapter.UpdateCommand.CommandType = global::System.Data.CommandType.Text;
            param = new global::System.Data.SQLite.SQLiteParameter();
            param.ParameterName = "@Hcat_StatusId";
            param.DbType = global::System.Data.DbType.Int64;
            param.DbType = global::System.Data.DbType.Int64;
            param.SourceColumn = "Hcat_StatusId";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::System.Data.SQLite.SQLiteParameter();
            param.ParameterName = "@Hcat_DispStatus";
            param.DbType = global::System.Data.DbType.AnsiString;
            param.DbType = global::System.Data.DbType.AnsiString;
            param.SourceColumn = "Hcat_DispStatus";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::System.Data.SQLite.SQLiteParameter();
            param.ParameterName = "@Hcat_Prefix";
            param.DbType = global::System.Data.DbType.AnsiString;
            param.DbType = global::System.Data.DbType.AnsiString;
            param.SourceColumn = "Hcat_Prefix";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::System.Data.SQLite.SQLiteParameter();
            param.ParameterName = "@Hcat_Kort";
            param.DbType = global::System.Data.DbType.AnsiString;
            param.DbType = global::System.Data.DbType.AnsiString;
            param.SourceColumn = "Hcat_Kort";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::System.Data.SQLite.SQLiteParameter();
            param.ParameterName = "@Hcat_Lang";
            param.DbType = global::System.Data.DbType.AnsiString;
            param.DbType = global::System.Data.DbType.AnsiString;
            param.SourceColumn = "Hcat_Lang";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::System.Data.SQLite.SQLiteParameter();
            param.ParameterName = "@Hcat_WijzigentoegestaanJN";
            param.DbType = global::System.Data.DbType.Int64;
            param.DbType = global::System.Data.DbType.Int64;
            param.SourceColumn = "Hcat_WijzigentoegestaanJN";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::System.Data.SQLite.SQLiteParameter();
            param.ParameterName = "@Hcat_Mutatiedatum";
            param.DbType = global::System.Data.DbType.DateTime;
            param.DbType = global::System.Data.DbType.DateTime;
            param.SourceColumn = "Hcat_Mutatiedatum";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::System.Data.SQLite.SQLiteParameter();
            param.ParameterName = "@Hcat_Opmerking";
            param.DbType = global::System.Data.DbType.AnsiString;
            param.DbType = global::System.Data.DbType.AnsiString;
            param.SourceColumn = "Hcat_Opmerking";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::System.Data.SQLite.SQLiteParameter();
            param.ParameterName = "@Original_Hcat_Id";
            param.DbType = global::System.Data.DbType.Int64;
            param.DbType = global::System.Data.DbType.Int64;
            param.SourceColumn = "Hcat_Id";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::System.Data.SQLite.SQLiteParameter();
            param.ParameterName = "@IsNull_Hcat_StatusId";
            param.DbType = global::System.Data.DbType.Int32;
            param.DbType = global::System.Data.DbType.Int32;
            param.SourceColumn = "Hcat_StatusId";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::System.Data.SQLite.SQLiteParameter();
            param.ParameterName = "@Original_Hcat_StatusId";
            param.DbType = global::System.Data.DbType.Int64;
            param.DbType = global::System.Data.DbType.Int64;
            param.SourceColumn = "Hcat_StatusId";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::System.Data.SQLite.SQLiteParameter();
            param.ParameterName = "@IsNull_Hcat_DispStatus";
            param.DbType = global::System.Data.DbType.Int32;
            param.DbType = global::System.Data.DbType.Int32;
            param.SourceColumn = "Hcat_DispStatus";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::System.Data.SQLite.SQLiteParameter();
            param.ParameterName = "@Original_Hcat_DispStatus";
            param.DbType = global::System.Data.DbType.AnsiString;
            param.DbType = global::System.Data.DbType.AnsiString;
            param.SourceColumn = "Hcat_DispStatus";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::System.Data.SQLite.SQLiteParameter();
            param.ParameterName = "@IsNull_Hcat_Prefix";
            param.DbType = global::System.Data.DbType.Int32;
            param.DbType = global::System.Data.DbType.Int32;
            param.SourceColumn = "Hcat_Prefix";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::System.Data.SQLite.SQLiteParameter();
            param.ParameterName = "@Original_Hcat_Prefix";
            param.DbType = global::System.Data.DbType.AnsiString;
            param.DbType = global::System.Data.DbType.AnsiString;
            param.SourceColumn = "Hcat_Prefix";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::System.Data.SQLite.SQLiteParameter();
            param.ParameterName = "@Original_Hcat_Kort";
            param.DbType = global::System.Data.DbType.AnsiString;
            param.DbType = global::System.Data.DbType.AnsiString;
            param.SourceColumn = "Hcat_Kort";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::System.Data.SQLite.SQLiteParameter();
            param.ParameterName = "@Original_Hcat_Lang";
            param.DbType = global::System.Data.DbType.AnsiString;
            param.DbType = global::System.Data.DbType.AnsiString;
            param.SourceColumn = "Hcat_Lang";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::System.Data.SQLite.SQLiteParameter();
            param.ParameterName = "@Original_Hcat_WijzigentoegestaanJN";
            param.DbType = global::System.Data.DbType.Int64;
            param.DbType = global::System.Data.DbType.Int64;
            param.SourceColumn = "Hcat_WijzigentoegestaanJN";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::System.Data.SQLite.SQLiteParameter();
            param.ParameterName = "@Original_Hcat_Mutatiedatum";
            param.DbType = global::System.Data.DbType.DateTime;
            param.DbType = global::System.Data.DbType.DateTime;
            param.SourceColumn = "Hcat_Mutatiedatum";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::System.Data.SQLite.SQLiteParameter();
            param.ParameterName = "@IsNull_Hcat_Opmerking";
            param.DbType = global::System.Data.DbType.Int32;
            param.DbType = global::System.Data.DbType.Int32;
            param.SourceColumn = "Hcat_Opmerking";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::System.Data.SQLite.SQLiteParameter();
            param.ParameterName = "@Original_Hcat_Opmerking";
            param.DbType = global::System.Data.DbType.AnsiString;
            param.DbType = global::System.Data.DbType.AnsiString;
            param.SourceColumn = "Hcat_Opmerking";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitConnection() {
            this._connection = new global::System.Data.SQLite.SQLiteConnection();
            this._connection.ConnectionString = global::Cmbap.Properties.Settings.Default.Cmbap_dataConnectionString;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitCommandCollection() {
            this._commandCollection = new global::System.Data.SQLite.SQLiteCommand[1];
            this._commandCollection[0] = new global::System.Data.SQLite.SQLiteCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "SELECT [Hcat_Id], [Hcat_StatusId], [Hcat_DispStatus], [Hcat_Prefix], [Hcat_Kort]," +
                " [Hcat_Lang], [Hcat_WijzigentoegestaanJN], [Hcat_Mutatiedatum], [Hcat_Opmerking]" +
                " FROM [Hoofdcategorie]";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(_Cmbap_dataDataSet.HoofdcategorieDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual _Cmbap_dataDataSet.HoofdcategorieDataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            _Cmbap_dataDataSet.HoofdcategorieDataTable dataTable = new _Cmbap_dataDataSet.HoofdcategorieDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(_Cmbap_dataDataSet.HoofdcategorieDataTable dataTable) {
            return this.Adapter.Update(dataTable);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(_Cmbap_dataDataSet dataSet) {
            return this.Adapter.Update(dataSet, "Hoofdcategorie");
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow dataRow) {
            return this.Adapter.Update(new global::System.Data.DataRow[] {
                        dataRow});
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow[] dataRows) {
            return this.Adapter.Update(dataRows);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Delete, true)]
        public virtual int Delete(long Original_Hcat_Id, global::System.Nullable<long> Original_Hcat_StatusId, string Original_Hcat_DispStatus, string Original_Hcat_Prefix, string Original_Hcat_Kort, string Original_Hcat_Lang, long Original_Hcat_WijzigentoegestaanJN, System.DateTime Original_Hcat_Mutatiedatum, string Original_Hcat_Opmerking) {
            this.Adapter.DeleteCommand.Parameters[0].Value = ((long)(Original_Hcat_Id));
            if ((Original_Hcat_StatusId.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[1].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[2].Value = ((long)(Original_Hcat_StatusId.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[1].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[2].Value = global::System.DBNull.Value;
            }
            if ((Original_Hcat_DispStatus == null)) {
                this.Adapter.DeleteCommand.Parameters[3].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[4].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[3].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[4].Value = ((string)(Original_Hcat_DispStatus));
            }
            if ((Original_Hcat_Prefix == null)) {
                this.Adapter.DeleteCommand.Parameters[5].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[6].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[5].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[6].Value = ((string)(Original_Hcat_Prefix));
            }
            if ((Original_Hcat_Kort == null)) {
                throw new global::System.ArgumentNullException("Original_Hcat_Kort");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[7].Value = ((string)(Original_Hcat_Kort));
            }
            if ((Original_Hcat_Lang == null)) {
                throw new global::System.ArgumentNullException("Original_Hcat_Lang");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[8].Value = ((string)(Original_Hcat_Lang));
            }
            this.Adapter.DeleteCommand.Parameters[9].Value = ((long)(Original_Hcat_WijzigentoegestaanJN));
            this.Adapter.DeleteCommand.Parameters[10].Value = ((System.DateTime)(Original_Hcat_Mutatiedatum));
            if ((Original_Hcat_Opmerking == null)) {
                this.Adapter.DeleteCommand.Parameters[11].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[12].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[11].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[12].Value = ((string)(Original_Hcat_Opmerking));
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.DeleteCommand.Connection.State;
            if (((this.Adapter.DeleteCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.DeleteCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.DeleteCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.DeleteCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Insert, true)]
        public virtual int Insert(global::System.Nullable<long> Hcat_StatusId, string Hcat_DispStatus, string Hcat_Prefix, string Hcat_Kort, string Hcat_Lang, long Hcat_WijzigentoegestaanJN, System.DateTime Hcat_Mutatiedatum, string Hcat_Opmerking) {
            if ((Hcat_StatusId.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[0].Value = ((long)(Hcat_StatusId.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[0].Value = global::System.DBNull.Value;
            }
            if ((Hcat_DispStatus == null)) {
                this.Adapter.InsertCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[1].Value = ((string)(Hcat_DispStatus));
            }
            if ((Hcat_Prefix == null)) {
                this.Adapter.InsertCommand.Parameters[2].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[2].Value = ((string)(Hcat_Prefix));
            }
            if ((Hcat_Kort == null)) {
                throw new global::System.ArgumentNullException("Hcat_Kort");
            }
            else {
                this.Adapter.InsertCommand.Parameters[3].Value = ((string)(Hcat_Kort));
            }
            if ((Hcat_Lang == null)) {
                throw new global::System.ArgumentNullException("Hcat_Lang");
            }
            else {
                this.Adapter.InsertCommand.Parameters[4].Value = ((string)(Hcat_Lang));
            }
            this.Adapter.InsertCommand.Parameters[5].Value = ((long)(Hcat_WijzigentoegestaanJN));
            this.Adapter.InsertCommand.Parameters[6].Value = ((System.DateTime)(Hcat_Mutatiedatum));
            if ((Hcat_Opmerking == null)) {
                this.Adapter.InsertCommand.Parameters[7].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[7].Value = ((string)(Hcat_Opmerking));
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.InsertCommand.Connection.State;
            if (((this.Adapter.InsertCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.InsertCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.InsertCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.InsertCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(
                    global::System.Nullable<long> Hcat_StatusId, 
                    string Hcat_DispStatus, 
                    string Hcat_Prefix, 
                    string Hcat_Kort, 
                    string Hcat_Lang, 
                    long Hcat_WijzigentoegestaanJN, 
                    System.DateTime Hcat_Mutatiedatum, 
                    string Hcat_Opmerking, 
                    long Original_Hcat_Id, 
                    global::System.Nullable<long> Original_Hcat_StatusId, 
                    string Original_Hcat_DispStatus, 
                    string Original_Hcat_Prefix, 
                    string Original_Hcat_Kort, 
                    string Original_Hcat_Lang, 
                    long Original_Hcat_WijzigentoegestaanJN, 
                    System.DateTime Original_Hcat_Mutatiedatum, 
                    string Original_Hcat_Opmerking) {
            if ((Hcat_StatusId.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[0].Value = ((long)(Hcat_StatusId.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[0].Value = global::System.DBNull.Value;
            }
            if ((Hcat_DispStatus == null)) {
                this.Adapter.UpdateCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[1].Value = ((string)(Hcat_DispStatus));
            }
            if ((Hcat_Prefix == null)) {
                this.Adapter.UpdateCommand.Parameters[2].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[2].Value = ((string)(Hcat_Prefix));
            }
            if ((Hcat_Kort == null)) {
                throw new global::System.ArgumentNullException("Hcat_Kort");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[3].Value = ((string)(Hcat_Kort));
            }
            if ((Hcat_Lang == null)) {
                throw new global::System.ArgumentNullException("Hcat_Lang");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[4].Value = ((string)(Hcat_Lang));
            }
            this.Adapter.UpdateCommand.Parameters[5].Value = ((long)(Hcat_WijzigentoegestaanJN));
            this.Adapter.UpdateCommand.Parameters[6].Value = ((System.DateTime)(Hcat_Mutatiedatum));
            if ((Hcat_Opmerking == null)) {
                this.Adapter.UpdateCommand.Parameters[7].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[7].Value = ((string)(Hcat_Opmerking));
            }
            this.Adapter.UpdateCommand.Parameters[8].Value = ((long)(Original_Hcat_Id));
            if ((Original_Hcat_StatusId.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[9].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[10].Value = ((long)(Original_Hcat_StatusId.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[9].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[10].Value = global::System.DBNull.Value;
            }
            if ((Original_Hcat_DispStatus == null)) {
                this.Adapter.UpdateCommand.Parameters[11].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[12].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[11].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[12].Value = ((string)(Original_Hcat_DispStatus));
            }
            if ((Original_Hcat_Prefix == null)) {
                this.Adapter.UpdateCommand.Parameters[13].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[14].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[13].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[14].Value = ((string)(Original_Hcat_Prefix));
            }
            if ((Original_Hcat_Kort == null)) {
                throw new global::System.ArgumentNullException("Original_Hcat_Kort");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[15].Value = ((string)(Original_Hcat_Kort));
            }
            if ((Original_Hcat_Lang == null)) {
                throw new global::System.ArgumentNullException("Original_Hcat_Lang");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[16].Value = ((string)(Original_Hcat_Lang));
            }
            this.Adapter.UpdateCommand.Parameters[17].Value = ((long)(Original_Hcat_WijzigentoegestaanJN));
            this.Adapter.UpdateCommand.Parameters[18].Value = ((System.DateTime)(Original_Hcat_Mutatiedatum));
            if ((Original_Hcat_Opmerking == null)) {
                this.Adapter.UpdateCommand.Parameters[19].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[20].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[19].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[20].Value = ((string)(Original_Hcat_Opmerking));
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.UpdateCommand.Connection.State;
            if (((this.Adapter.UpdateCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.UpdateCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.UpdateCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.UpdateCommand.Connection.Close();
                }
            }
        }
    }
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class HoofdUitgavesoortTableAdapter : global::System.ComponentModel.Component {
        
        private global::System.Data.SQLite.SQLiteDataAdapter _adapter;
        
        private global::System.Data.SQLite.SQLiteConnection _connection;
        
        private global::System.Data.SQLite.SQLiteTransaction _transaction;
        
        private global::System.Data.SQLite.SQLiteCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public HoofdUitgavesoortTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected internal global::System.Data.SQLite.SQLiteDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal global::System.Data.SQLite.SQLiteConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::System.Data.SQLite.SQLiteCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal global::System.Data.SQLite.SQLiteTransaction Transaction {
            get {
                return this._transaction;
            }
            set {
                this._transaction = value;
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    this.CommandCollection[i].Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.DeleteCommand != null))) {
                    this.Adapter.DeleteCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.InsertCommand != null))) {
                    this.Adapter.InsertCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.UpdateCommand != null))) {
                    this.Adapter.UpdateCommand.Transaction = this._transaction;
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected global::System.Data.SQLite.SQLiteCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitAdapter() {
            this._adapter = new global::System.Data.SQLite.SQLiteDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "HoofdUitgavesoort";
            tableMapping.ColumnMappings.Add("Hus_Id", "Hus_Id");
            tableMapping.ColumnMappings.Add("Hus_StatusId", "Hus_StatusId");
            tableMapping.ColumnMappings.Add("Hus_DispStatus", "Hus_DispStatus");
            tableMapping.ColumnMappings.Add("Hus_Kort", "Hus_Kort");
            tableMapping.ColumnMappings.Add("Hus_Lang", "Hus_Lang");
            tableMapping.ColumnMappings.Add("Hus_WijzigentoegestaanJN", "Hus_WijzigentoegestaanJN");
            tableMapping.ColumnMappings.Add("Hus_Mutatiedatum", "Hus_Mutatiedatum");
            tableMapping.ColumnMappings.Add("Hus_Opmerking", "Hus_Opmerking");
            this._adapter.TableMappings.Add(tableMapping);
            this._adapter.DeleteCommand = new global::System.Data.SQLite.SQLiteCommand();
            this._adapter.DeleteCommand.Connection = this.Connection;
            this._adapter.DeleteCommand.CommandText = @"DELETE FROM [main].[sqlite_default_schema].[HoofdUitgavesoort] WHERE (([Hus_Id] = @Original_Hus_Id) AND ((@IsNull_Hus_StatusId = 1 AND [Hus_StatusId] IS NULL) OR ([Hus_StatusId] = @Original_Hus_StatusId)) AND ((@IsNull_Hus_DispStatus = 1 AND [Hus_DispStatus] IS NULL) OR ([Hus_DispStatus] = @Original_Hus_DispStatus)) AND ([Hus_Kort] = @Original_Hus_Kort) AND ([Hus_Lang] = @Original_Hus_Lang) AND ((@IsNull_Hus_WijzigentoegestaanJN = 1 AND [Hus_WijzigentoegestaanJN] IS NULL) OR ([Hus_WijzigentoegestaanJN] = @Original_Hus_WijzigentoegestaanJN)) AND ([Hus_Mutatiedatum] = @Original_Hus_Mutatiedatum) AND ((@IsNull_Hus_Opmerking = 1 AND [Hus_Opmerking] IS NULL) OR ([Hus_Opmerking] = @Original_Hus_Opmerking)))";
            this._adapter.DeleteCommand.CommandType = global::System.Data.CommandType.Text;
            global::System.Data.SQLite.SQLiteParameter param = new global::System.Data.SQLite.SQLiteParameter();
            param.ParameterName = "@Original_Hus_Id";
            param.DbType = global::System.Data.DbType.Int64;
            param.DbType = global::System.Data.DbType.Int64;
            param.SourceColumn = "Hus_Id";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::System.Data.SQLite.SQLiteParameter();
            param.ParameterName = "@IsNull_Hus_StatusId";
            param.DbType = global::System.Data.DbType.Int32;
            param.DbType = global::System.Data.DbType.Int32;
            param.SourceColumn = "Hus_StatusId";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::System.Data.SQLite.SQLiteParameter();
            param.ParameterName = "@Original_Hus_StatusId";
            param.DbType = global::System.Data.DbType.Int64;
            param.DbType = global::System.Data.DbType.Int64;
            param.SourceColumn = "Hus_StatusId";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::System.Data.SQLite.SQLiteParameter();
            param.ParameterName = "@IsNull_Hus_DispStatus";
            param.DbType = global::System.Data.DbType.Int32;
            param.DbType = global::System.Data.DbType.Int32;
            param.SourceColumn = "Hus_DispStatus";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::System.Data.SQLite.SQLiteParameter();
            param.ParameterName = "@Original_Hus_DispStatus";
            param.DbType = global::System.Data.DbType.AnsiString;
            param.DbType = global::System.Data.DbType.AnsiString;
            param.SourceColumn = "Hus_DispStatus";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::System.Data.SQLite.SQLiteParameter();
            param.ParameterName = "@Original_Hus_Kort";
            param.DbType = global::System.Data.DbType.AnsiString;
            param.DbType = global::System.Data.DbType.AnsiString;
            param.SourceColumn = "Hus_Kort";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::System.Data.SQLite.SQLiteParameter();
            param.ParameterName = "@Original_Hus_Lang";
            param.DbType = global::System.Data.DbType.AnsiString;
            param.DbType = global::System.Data.DbType.AnsiString;
            param.SourceColumn = "Hus_Lang";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::System.Data.SQLite.SQLiteParameter();
            param.ParameterName = "@IsNull_Hus_WijzigentoegestaanJN";
            param.DbType = global::System.Data.DbType.Int32;
            param.DbType = global::System.Data.DbType.Int32;
            param.SourceColumn = "Hus_WijzigentoegestaanJN";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::System.Data.SQLite.SQLiteParameter();
            param.ParameterName = "@Original_Hus_WijzigentoegestaanJN";
            param.DbType = global::System.Data.DbType.Int64;
            param.DbType = global::System.Data.DbType.Int64;
            param.SourceColumn = "Hus_WijzigentoegestaanJN";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::System.Data.SQLite.SQLiteParameter();
            param.ParameterName = "@Original_Hus_Mutatiedatum";
            param.DbType = global::System.Data.DbType.DateTime;
            param.DbType = global::System.Data.DbType.DateTime;
            param.SourceColumn = "Hus_Mutatiedatum";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::System.Data.SQLite.SQLiteParameter();
            param.ParameterName = "@IsNull_Hus_Opmerking";
            param.DbType = global::System.Data.DbType.Int32;
            param.DbType = global::System.Data.DbType.Int32;
            param.SourceColumn = "Hus_Opmerking";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::System.Data.SQLite.SQLiteParameter();
            param.ParameterName = "@Original_Hus_Opmerking";
            param.DbType = global::System.Data.DbType.AnsiString;
            param.DbType = global::System.Data.DbType.AnsiString;
            param.SourceColumn = "Hus_Opmerking";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            this._adapter.InsertCommand = new global::System.Data.SQLite.SQLiteCommand();
            this._adapter.InsertCommand.Connection = this.Connection;
            this._adapter.InsertCommand.CommandText = @"INSERT INTO [main].[sqlite_default_schema].[HoofdUitgavesoort] ([Hus_StatusId], [Hus_DispStatus], [Hus_Kort], [Hus_Lang], [Hus_WijzigentoegestaanJN], [Hus_Mutatiedatum], [Hus_Opmerking]) VALUES (@Hus_StatusId, @Hus_DispStatus, @Hus_Kort, @Hus_Lang, @Hus_WijzigentoegestaanJN, @Hus_Mutatiedatum, @Hus_Opmerking)";
            this._adapter.InsertCommand.CommandType = global::System.Data.CommandType.Text;
            param = new global::System.Data.SQLite.SQLiteParameter();
            param.ParameterName = "@Hus_StatusId";
            param.DbType = global::System.Data.DbType.Int64;
            param.DbType = global::System.Data.DbType.Int64;
            param.SourceColumn = "Hus_StatusId";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::System.Data.SQLite.SQLiteParameter();
            param.ParameterName = "@Hus_DispStatus";
            param.DbType = global::System.Data.DbType.AnsiString;
            param.DbType = global::System.Data.DbType.AnsiString;
            param.SourceColumn = "Hus_DispStatus";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::System.Data.SQLite.SQLiteParameter();
            param.ParameterName = "@Hus_Kort";
            param.DbType = global::System.Data.DbType.AnsiString;
            param.DbType = global::System.Data.DbType.AnsiString;
            param.SourceColumn = "Hus_Kort";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::System.Data.SQLite.SQLiteParameter();
            param.ParameterName = "@Hus_Lang";
            param.DbType = global::System.Data.DbType.AnsiString;
            param.DbType = global::System.Data.DbType.AnsiString;
            param.SourceColumn = "Hus_Lang";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::System.Data.SQLite.SQLiteParameter();
            param.ParameterName = "@Hus_WijzigentoegestaanJN";
            param.DbType = global::System.Data.DbType.Int64;
            param.DbType = global::System.Data.DbType.Int64;
            param.SourceColumn = "Hus_WijzigentoegestaanJN";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::System.Data.SQLite.SQLiteParameter();
            param.ParameterName = "@Hus_Mutatiedatum";
            param.DbType = global::System.Data.DbType.DateTime;
            param.DbType = global::System.Data.DbType.DateTime;
            param.SourceColumn = "Hus_Mutatiedatum";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::System.Data.SQLite.SQLiteParameter();
            param.ParameterName = "@Hus_Opmerking";
            param.DbType = global::System.Data.DbType.AnsiString;
            param.DbType = global::System.Data.DbType.AnsiString;
            param.SourceColumn = "Hus_Opmerking";
            this._adapter.InsertCommand.Parameters.Add(param);
            this._adapter.UpdateCommand = new global::System.Data.SQLite.SQLiteCommand();
            this._adapter.UpdateCommand.Connection = this.Connection;
            this._adapter.UpdateCommand.CommandText = @"UPDATE [main].[sqlite_default_schema].[HoofdUitgavesoort] SET [Hus_StatusId] = @Hus_StatusId, [Hus_DispStatus] = @Hus_DispStatus, [Hus_Kort] = @Hus_Kort, [Hus_Lang] = @Hus_Lang, [Hus_WijzigentoegestaanJN] = @Hus_WijzigentoegestaanJN, [Hus_Mutatiedatum] = @Hus_Mutatiedatum, [Hus_Opmerking] = @Hus_Opmerking WHERE (([Hus_Id] = @Original_Hus_Id) AND ((@IsNull_Hus_StatusId = 1 AND [Hus_StatusId] IS NULL) OR ([Hus_StatusId] = @Original_Hus_StatusId)) AND ((@IsNull_Hus_DispStatus = 1 AND [Hus_DispStatus] IS NULL) OR ([Hus_DispStatus] = @Original_Hus_DispStatus)) AND ([Hus_Kort] = @Original_Hus_Kort) AND ([Hus_Lang] = @Original_Hus_Lang) AND ((@IsNull_Hus_WijzigentoegestaanJN = 1 AND [Hus_WijzigentoegestaanJN] IS NULL) OR ([Hus_WijzigentoegestaanJN] = @Original_Hus_WijzigentoegestaanJN)) AND ([Hus_Mutatiedatum] = @Original_Hus_Mutatiedatum) AND ((@IsNull_Hus_Opmerking = 1 AND [Hus_Opmerking] IS NULL) OR ([Hus_Opmerking] = @Original_Hus_Opmerking)))";
            this._adapter.UpdateCommand.CommandType = global::System.Data.CommandType.Text;
            param = new global::System.Data.SQLite.SQLiteParameter();
            param.ParameterName = "@Hus_StatusId";
            param.DbType = global::System.Data.DbType.Int64;
            param.DbType = global::System.Data.DbType.Int64;
            param.SourceColumn = "Hus_StatusId";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::System.Data.SQLite.SQLiteParameter();
            param.ParameterName = "@Hus_DispStatus";
            param.DbType = global::System.Data.DbType.AnsiString;
            param.DbType = global::System.Data.DbType.AnsiString;
            param.SourceColumn = "Hus_DispStatus";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::System.Data.SQLite.SQLiteParameter();
            param.ParameterName = "@Hus_Kort";
            param.DbType = global::System.Data.DbType.AnsiString;
            param.DbType = global::System.Data.DbType.AnsiString;
            param.SourceColumn = "Hus_Kort";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::System.Data.SQLite.SQLiteParameter();
            param.ParameterName = "@Hus_Lang";
            param.DbType = global::System.Data.DbType.AnsiString;
            param.DbType = global::System.Data.DbType.AnsiString;
            param.SourceColumn = "Hus_Lang";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::System.Data.SQLite.SQLiteParameter();
            param.ParameterName = "@Hus_WijzigentoegestaanJN";
            param.DbType = global::System.Data.DbType.Int64;
            param.DbType = global::System.Data.DbType.Int64;
            param.SourceColumn = "Hus_WijzigentoegestaanJN";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::System.Data.SQLite.SQLiteParameter();
            param.ParameterName = "@Hus_Mutatiedatum";
            param.DbType = global::System.Data.DbType.DateTime;
            param.DbType = global::System.Data.DbType.DateTime;
            param.SourceColumn = "Hus_Mutatiedatum";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::System.Data.SQLite.SQLiteParameter();
            param.ParameterName = "@Hus_Opmerking";
            param.DbType = global::System.Data.DbType.AnsiString;
            param.DbType = global::System.Data.DbType.AnsiString;
            param.SourceColumn = "Hus_Opmerking";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::System.Data.SQLite.SQLiteParameter();
            param.ParameterName = "@Original_Hus_Id";
            param.DbType = global::System.Data.DbType.Int64;
            param.DbType = global::System.Data.DbType.Int64;
            param.SourceColumn = "Hus_Id";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::System.Data.SQLite.SQLiteParameter();
            param.ParameterName = "@IsNull_Hus_StatusId";
            param.DbType = global::System.Data.DbType.Int32;
            param.DbType = global::System.Data.DbType.Int32;
            param.SourceColumn = "Hus_StatusId";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::System.Data.SQLite.SQLiteParameter();
            param.ParameterName = "@Original_Hus_StatusId";
            param.DbType = global::System.Data.DbType.Int64;
            param.DbType = global::System.Data.DbType.Int64;
            param.SourceColumn = "Hus_StatusId";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::System.Data.SQLite.SQLiteParameter();
            param.ParameterName = "@IsNull_Hus_DispStatus";
            param.DbType = global::System.Data.DbType.Int32;
            param.DbType = global::System.Data.DbType.Int32;
            param.SourceColumn = "Hus_DispStatus";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::System.Data.SQLite.SQLiteParameter();
            param.ParameterName = "@Original_Hus_DispStatus";
            param.DbType = global::System.Data.DbType.AnsiString;
            param.DbType = global::System.Data.DbType.AnsiString;
            param.SourceColumn = "Hus_DispStatus";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::System.Data.SQLite.SQLiteParameter();
            param.ParameterName = "@Original_Hus_Kort";
            param.DbType = global::System.Data.DbType.AnsiString;
            param.DbType = global::System.Data.DbType.AnsiString;
            param.SourceColumn = "Hus_Kort";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::System.Data.SQLite.SQLiteParameter();
            param.ParameterName = "@Original_Hus_Lang";
            param.DbType = global::System.Data.DbType.AnsiString;
            param.DbType = global::System.Data.DbType.AnsiString;
            param.SourceColumn = "Hus_Lang";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::System.Data.SQLite.SQLiteParameter();
            param.ParameterName = "@IsNull_Hus_WijzigentoegestaanJN";
            param.DbType = global::System.Data.DbType.Int32;
            param.DbType = global::System.Data.DbType.Int32;
            param.SourceColumn = "Hus_WijzigentoegestaanJN";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::System.Data.SQLite.SQLiteParameter();
            param.ParameterName = "@Original_Hus_WijzigentoegestaanJN";
            param.DbType = global::System.Data.DbType.Int64;
            param.DbType = global::System.Data.DbType.Int64;
            param.SourceColumn = "Hus_WijzigentoegestaanJN";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::System.Data.SQLite.SQLiteParameter();
            param.ParameterName = "@Original_Hus_Mutatiedatum";
            param.DbType = global::System.Data.DbType.DateTime;
            param.DbType = global::System.Data.DbType.DateTime;
            param.SourceColumn = "Hus_Mutatiedatum";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::System.Data.SQLite.SQLiteParameter();
            param.ParameterName = "@IsNull_Hus_Opmerking";
            param.DbType = global::System.Data.DbType.Int32;
            param.DbType = global::System.Data.DbType.Int32;
            param.SourceColumn = "Hus_Opmerking";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::System.Data.SQLite.SQLiteParameter();
            param.ParameterName = "@Original_Hus_Opmerking";
            param.DbType = global::System.Data.DbType.AnsiString;
            param.DbType = global::System.Data.DbType.AnsiString;
            param.SourceColumn = "Hus_Opmerking";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitConnection() {
            this._connection = new global::System.Data.SQLite.SQLiteConnection();
            this._connection.ConnectionString = global::Cmbap.Properties.Settings.Default.Cmbap_dataConnectionString;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitCommandCollection() {
            this._commandCollection = new global::System.Data.SQLite.SQLiteCommand[1];
            this._commandCollection[0] = new global::System.Data.SQLite.SQLiteCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "SELECT [Hus_Id], [Hus_StatusId], [Hus_DispStatus], [Hus_Kort], [Hus_Lang], [Hus_W" +
                "ijzigentoegestaanJN], [Hus_Mutatiedatum], [Hus_Opmerking] FROM [HoofdUitgavesoor" +
                "t]";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(_Cmbap_dataDataSet.HoofdUitgavesoortDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual _Cmbap_dataDataSet.HoofdUitgavesoortDataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            _Cmbap_dataDataSet.HoofdUitgavesoortDataTable dataTable = new _Cmbap_dataDataSet.HoofdUitgavesoortDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(_Cmbap_dataDataSet.HoofdUitgavesoortDataTable dataTable) {
            return this.Adapter.Update(dataTable);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(_Cmbap_dataDataSet dataSet) {
            return this.Adapter.Update(dataSet, "HoofdUitgavesoort");
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow dataRow) {
            return this.Adapter.Update(new global::System.Data.DataRow[] {
                        dataRow});
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow[] dataRows) {
            return this.Adapter.Update(dataRows);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Delete, true)]
        public virtual int Delete(long Original_Hus_Id, global::System.Nullable<long> Original_Hus_StatusId, string Original_Hus_DispStatus, string Original_Hus_Kort, string Original_Hus_Lang, global::System.Nullable<long> Original_Hus_WijzigentoegestaanJN, System.DateTime Original_Hus_Mutatiedatum, string Original_Hus_Opmerking) {
            this.Adapter.DeleteCommand.Parameters[0].Value = ((long)(Original_Hus_Id));
            if ((Original_Hus_StatusId.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[1].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[2].Value = ((long)(Original_Hus_StatusId.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[1].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[2].Value = global::System.DBNull.Value;
            }
            if ((Original_Hus_DispStatus == null)) {
                this.Adapter.DeleteCommand.Parameters[3].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[4].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[3].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[4].Value = ((string)(Original_Hus_DispStatus));
            }
            if ((Original_Hus_Kort == null)) {
                throw new global::System.ArgumentNullException("Original_Hus_Kort");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[5].Value = ((string)(Original_Hus_Kort));
            }
            if ((Original_Hus_Lang == null)) {
                throw new global::System.ArgumentNullException("Original_Hus_Lang");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[6].Value = ((string)(Original_Hus_Lang));
            }
            if ((Original_Hus_WijzigentoegestaanJN.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[7].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[8].Value = ((long)(Original_Hus_WijzigentoegestaanJN.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[7].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[8].Value = global::System.DBNull.Value;
            }
            this.Adapter.DeleteCommand.Parameters[9].Value = ((System.DateTime)(Original_Hus_Mutatiedatum));
            if ((Original_Hus_Opmerking == null)) {
                this.Adapter.DeleteCommand.Parameters[10].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[11].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[10].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[11].Value = ((string)(Original_Hus_Opmerking));
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.DeleteCommand.Connection.State;
            if (((this.Adapter.DeleteCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.DeleteCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.DeleteCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.DeleteCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Insert, true)]
        public virtual int Insert(global::System.Nullable<long> Hus_StatusId, string Hus_DispStatus, string Hus_Kort, string Hus_Lang, global::System.Nullable<long> Hus_WijzigentoegestaanJN, System.DateTime Hus_Mutatiedatum, string Hus_Opmerking) {
            if ((Hus_StatusId.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[0].Value = ((long)(Hus_StatusId.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[0].Value = global::System.DBNull.Value;
            }
            if ((Hus_DispStatus == null)) {
                this.Adapter.InsertCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[1].Value = ((string)(Hus_DispStatus));
            }
            if ((Hus_Kort == null)) {
                throw new global::System.ArgumentNullException("Hus_Kort");
            }
            else {
                this.Adapter.InsertCommand.Parameters[2].Value = ((string)(Hus_Kort));
            }
            if ((Hus_Lang == null)) {
                throw new global::System.ArgumentNullException("Hus_Lang");
            }
            else {
                this.Adapter.InsertCommand.Parameters[3].Value = ((string)(Hus_Lang));
            }
            if ((Hus_WijzigentoegestaanJN.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[4].Value = ((long)(Hus_WijzigentoegestaanJN.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[4].Value = global::System.DBNull.Value;
            }
            this.Adapter.InsertCommand.Parameters[5].Value = ((System.DateTime)(Hus_Mutatiedatum));
            if ((Hus_Opmerking == null)) {
                this.Adapter.InsertCommand.Parameters[6].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[6].Value = ((string)(Hus_Opmerking));
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.InsertCommand.Connection.State;
            if (((this.Adapter.InsertCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.InsertCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.InsertCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.InsertCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(global::System.Nullable<long> Hus_StatusId, string Hus_DispStatus, string Hus_Kort, string Hus_Lang, global::System.Nullable<long> Hus_WijzigentoegestaanJN, System.DateTime Hus_Mutatiedatum, string Hus_Opmerking, long Original_Hus_Id, global::System.Nullable<long> Original_Hus_StatusId, string Original_Hus_DispStatus, string Original_Hus_Kort, string Original_Hus_Lang, global::System.Nullable<long> Original_Hus_WijzigentoegestaanJN, System.DateTime Original_Hus_Mutatiedatum, string Original_Hus_Opmerking) {
            if ((Hus_StatusId.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[0].Value = ((long)(Hus_StatusId.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[0].Value = global::System.DBNull.Value;
            }
            if ((Hus_DispStatus == null)) {
                this.Adapter.UpdateCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[1].Value = ((string)(Hus_DispStatus));
            }
            if ((Hus_Kort == null)) {
                throw new global::System.ArgumentNullException("Hus_Kort");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[2].Value = ((string)(Hus_Kort));
            }
            if ((Hus_Lang == null)) {
                throw new global::System.ArgumentNullException("Hus_Lang");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[3].Value = ((string)(Hus_Lang));
            }
            if ((Hus_WijzigentoegestaanJN.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[4].Value = ((long)(Hus_WijzigentoegestaanJN.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[4].Value = global::System.DBNull.Value;
            }
            this.Adapter.UpdateCommand.Parameters[5].Value = ((System.DateTime)(Hus_Mutatiedatum));
            if ((Hus_Opmerking == null)) {
                this.Adapter.UpdateCommand.Parameters[6].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[6].Value = ((string)(Hus_Opmerking));
            }
            this.Adapter.UpdateCommand.Parameters[7].Value = ((long)(Original_Hus_Id));
            if ((Original_Hus_StatusId.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[8].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[9].Value = ((long)(Original_Hus_StatusId.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[8].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[9].Value = global::System.DBNull.Value;
            }
            if ((Original_Hus_DispStatus == null)) {
                this.Adapter.UpdateCommand.Parameters[10].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[11].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[10].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[11].Value = ((string)(Original_Hus_DispStatus));
            }
            if ((Original_Hus_Kort == null)) {
                throw new global::System.ArgumentNullException("Original_Hus_Kort");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[12].Value = ((string)(Original_Hus_Kort));
            }
            if ((Original_Hus_Lang == null)) {
                throw new global::System.ArgumentNullException("Original_Hus_Lang");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[13].Value = ((string)(Original_Hus_Lang));
            }
            if ((Original_Hus_WijzigentoegestaanJN.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[14].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[15].Value = ((long)(Original_Hus_WijzigentoegestaanJN.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[14].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[15].Value = global::System.DBNull.Value;
            }
            this.Adapter.UpdateCommand.Parameters[16].Value = ((System.DateTime)(Original_Hus_Mutatiedatum));
            if ((Original_Hus_Opmerking == null)) {
                this.Adapter.UpdateCommand.Parameters[17].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[18].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[17].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[18].Value = ((string)(Original_Hus_Opmerking));
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.UpdateCommand.Connection.State;
            if (((this.Adapter.UpdateCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.UpdateCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.UpdateCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.UpdateCommand.Connection.Close();
                }
            }
        }
    }
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class InstellingenTableAdapter : global::System.ComponentModel.Component {
        
        private global::System.Data.SQLite.SQLiteDataAdapter _adapter;
        
        private global::System.Data.SQLite.SQLiteConnection _connection;
        
        private global::System.Data.SQLite.SQLiteTransaction _transaction;
        
        private global::System.Data.SQLite.SQLiteCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public InstellingenTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected internal global::System.Data.SQLite.SQLiteDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal global::System.Data.SQLite.SQLiteConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::System.Data.SQLite.SQLiteCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal global::System.Data.SQLite.SQLiteTransaction Transaction {
            get {
                return this._transaction;
            }
            set {
                this._transaction = value;
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    this.CommandCollection[i].Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.DeleteCommand != null))) {
                    this.Adapter.DeleteCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.InsertCommand != null))) {
                    this.Adapter.InsertCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.UpdateCommand != null))) {
                    this.Adapter.UpdateCommand.Transaction = this._transaction;
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected global::System.Data.SQLite.SQLiteCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitAdapter() {
            this._adapter = new global::System.Data.SQLite.SQLiteDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "Instellingen";
            tableMapping.ColumnMappings.Add("Instl_Id", "Instl_Id");
            tableMapping.ColumnMappings.Add("Instl_Systemsetting", "Instl_Systemsetting");
            tableMapping.ColumnMappings.Add("Instl_StatusId", "Instl_StatusId");
            tableMapping.ColumnMappings.Add("Instl_DispStatus", "Instl_DispStatus");
            tableMapping.ColumnMappings.Add("Instl_Naam", "Instl_Naam");
            tableMapping.ColumnMappings.Add("Instl_Gegtype", "Instl_Gegtype");
            tableMapping.ColumnMappings.Add("Instl_Actief", "Instl_Actief");
            tableMapping.ColumnMappings.Add("Instl_String", "Instl_String");
            tableMapping.ColumnMappings.Add("Instl_JN", "Instl_JN");
            tableMapping.ColumnMappings.Add("Instl_Integer", "Instl_Integer");
            tableMapping.ColumnMappings.Add("Instl_Real", "Instl_Real");
            tableMapping.ColumnMappings.Add("Instl_Memo", "Instl_Memo");
            tableMapping.ColumnMappings.Add("Instl_Datum", "Instl_Datum");
            tableMapping.ColumnMappings.Add("Instl_Tijd", "Instl_Tijd");
            tableMapping.ColumnMappings.Add("Instl_Mutatiedatum", "Instl_Mutatiedatum");
            tableMapping.ColumnMappings.Add("Instl_Opmerking", "Instl_Opmerking");
            this._adapter.TableMappings.Add(tableMapping);
            this._adapter.DeleteCommand = new global::System.Data.SQLite.SQLiteCommand();
            this._adapter.DeleteCommand.Connection = this.Connection;
            this._adapter.DeleteCommand.CommandText = "DELETE FROM [main].[sqlite_default_schema].[Instellingen] WHERE (([Instl_Id] = @O" +
                "riginal_Instl_Id) AND ((@IsNull_Instl_Systemsetting = 1 AND [Instl_Systemsetting" +
                "] IS NULL) OR ([Instl_Systemsetting] = @Original_Instl_Systemsetting)) AND ([Ins" +
                "tl_StatusId] = @Original_Instl_StatusId) AND ((@IsNull_Instl_DispStatus = 1 AND " +
                "[Instl_DispStatus] IS NULL) OR ([Instl_DispStatus] = @Original_Instl_DispStatus)" +
                ") AND ((@IsNull_Instl_Naam = 1 AND [Instl_Naam] IS NULL) OR ([Instl_Naam] = @Ori" +
                "ginal_Instl_Naam)) AND ((@IsNull_Instl_Gegtype = 1 AND [Instl_Gegtype] IS NULL) " +
                "OR ([Instl_Gegtype] = @Original_Instl_Gegtype)) AND ((@IsNull_Instl_Actief = 1 A" +
                "ND [Instl_Actief] IS NULL) OR ([Instl_Actief] = @Original_Instl_Actief)) AND ((@" +
                "IsNull_Instl_String = 1 AND [Instl_String] IS NULL) OR ([Instl_String] = @Origin" +
                "al_Instl_String)) AND ((@IsNull_Instl_JN = 1 AND [Instl_JN] IS NULL) OR ([Instl_" +
                "JN] = @Original_Instl_JN)) AND ((@IsNull_Instl_Integer = 1 AND [Instl_Integer] I" +
                "S NULL) OR ([Instl_Integer] = @Original_Instl_Integer)) AND ((@IsNull_Instl_Real" +
                " = 1 AND [Instl_Real] IS NULL) OR ([Instl_Real] = @Original_Instl_Real)) AND ((@" +
                "IsNull_Instl_Memo = 1 AND [Instl_Memo] IS NULL) OR ([Instl_Memo] = @Original_Ins" +
                "tl_Memo)) AND ((@IsNull_Instl_Datum = 1 AND [Instl_Datum] IS NULL) OR ([Instl_Da" +
                "tum] = @Original_Instl_Datum)) AND ((@IsNull_Instl_Tijd = 1 AND [Instl_Tijd] IS " +
                "NULL) OR ([Instl_Tijd] = @Original_Instl_Tijd)) AND ([Instl_Mutatiedatum] = @Ori" +
                "ginal_Instl_Mutatiedatum) AND ((@IsNull_Instl_Opmerking = 1 AND [Instl_Opmerking" +
                "] IS NULL) OR ([Instl_Opmerking] = @Original_Instl_Opmerking)))";
            this._adapter.DeleteCommand.CommandType = global::System.Data.CommandType.Text;
            global::System.Data.SQLite.SQLiteParameter param = new global::System.Data.SQLite.SQLiteParameter();
            param.ParameterName = "@Original_Instl_Id";
            param.DbType = global::System.Data.DbType.Int64;
            param.DbType = global::System.Data.DbType.Int64;
            param.SourceColumn = "Instl_Id";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::System.Data.SQLite.SQLiteParameter();
            param.ParameterName = "@IsNull_Instl_Systemsetting";
            param.DbType = global::System.Data.DbType.Int32;
            param.DbType = global::System.Data.DbType.Int32;
            param.SourceColumn = "Instl_Systemsetting";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::System.Data.SQLite.SQLiteParameter();
            param.ParameterName = "@Original_Instl_Systemsetting";
            param.DbType = global::System.Data.DbType.Int64;
            param.DbType = global::System.Data.DbType.Int64;
            param.SourceColumn = "Instl_Systemsetting";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::System.Data.SQLite.SQLiteParameter();
            param.ParameterName = "@Original_Instl_StatusId";
            param.DbType = global::System.Data.DbType.Int64;
            param.DbType = global::System.Data.DbType.Int64;
            param.SourceColumn = "Instl_StatusId";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::System.Data.SQLite.SQLiteParameter();
            param.ParameterName = "@IsNull_Instl_DispStatus";
            param.DbType = global::System.Data.DbType.Int32;
            param.DbType = global::System.Data.DbType.Int32;
            param.SourceColumn = "Instl_DispStatus";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::System.Data.SQLite.SQLiteParameter();
            param.ParameterName = "@Original_Instl_DispStatus";
            param.DbType = global::System.Data.DbType.AnsiString;
            param.DbType = global::System.Data.DbType.AnsiString;
            param.SourceColumn = "Instl_DispStatus";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::System.Data.SQLite.SQLiteParameter();
            param.ParameterName = "@IsNull_Instl_Naam";
            param.DbType = global::System.Data.DbType.Int32;
            param.DbType = global::System.Data.DbType.Int32;
            param.SourceColumn = "Instl_Naam";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::System.Data.SQLite.SQLiteParameter();
            param.ParameterName = "@Original_Instl_Naam";
            param.DbType = global::System.Data.DbType.AnsiStringFixedLength;
            param.DbType = global::System.Data.DbType.AnsiStringFixedLength;
            param.SourceColumn = "Instl_Naam";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::System.Data.SQLite.SQLiteParameter();
            param.ParameterName = "@IsNull_Instl_Gegtype";
            param.DbType = global::System.Data.DbType.Int32;
            param.DbType = global::System.Data.DbType.Int32;
            param.SourceColumn = "Instl_Gegtype";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::System.Data.SQLite.SQLiteParameter();
            param.ParameterName = "@Original_Instl_Gegtype";
            param.DbType = global::System.Data.DbType.Int16;
            param.DbType = global::System.Data.DbType.Int16;
            param.SourceColumn = "Instl_Gegtype";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::System.Data.SQLite.SQLiteParameter();
            param.ParameterName = "@IsNull_Instl_Actief";
            param.DbType = global::System.Data.DbType.Int32;
            param.DbType = global::System.Data.DbType.Int32;
            param.SourceColumn = "Instl_Actief";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::System.Data.SQLite.SQLiteParameter();
            param.ParameterName = "@Original_Instl_Actief";
            param.DbType = global::System.Data.DbType.Int64;
            param.DbType = global::System.Data.DbType.Int64;
            param.SourceColumn = "Instl_Actief";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::System.Data.SQLite.SQLiteParameter();
            param.ParameterName = "@IsNull_Instl_String";
            param.DbType = global::System.Data.DbType.Int32;
            param.DbType = global::System.Data.DbType.Int32;
            param.SourceColumn = "Instl_String";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::System.Data.SQLite.SQLiteParameter();
            param.ParameterName = "@Original_Instl_String";
            param.DbType = global::System.Data.DbType.AnsiStringFixedLength;
            param.DbType = global::System.Data.DbType.AnsiStringFixedLength;
            param.SourceColumn = "Instl_String";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::System.Data.SQLite.SQLiteParameter();
            param.ParameterName = "@IsNull_Instl_JN";
            param.DbType = global::System.Data.DbType.Int32;
            param.DbType = global::System.Data.DbType.Int32;
            param.SourceColumn = "Instl_JN";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::System.Data.SQLite.SQLiteParameter();
            param.ParameterName = "@Original_Instl_JN";
            param.DbType = global::System.Data.DbType.Int64;
            param.DbType = global::System.Data.DbType.Int64;
            param.SourceColumn = "Instl_JN";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::System.Data.SQLite.SQLiteParameter();
            param.ParameterName = "@IsNull_Instl_Integer";
            param.DbType = global::System.Data.DbType.Int32;
            param.DbType = global::System.Data.DbType.Int32;
            param.SourceColumn = "Instl_Integer";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::System.Data.SQLite.SQLiteParameter();
            param.ParameterName = "@Original_Instl_Integer";
            param.DbType = global::System.Data.DbType.Int64;
            param.DbType = global::System.Data.DbType.Int64;
            param.SourceColumn = "Instl_Integer";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::System.Data.SQLite.SQLiteParameter();
            param.ParameterName = "@IsNull_Instl_Real";
            param.DbType = global::System.Data.DbType.Int32;
            param.DbType = global::System.Data.DbType.Int32;
            param.SourceColumn = "Instl_Real";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::System.Data.SQLite.SQLiteParameter();
            param.ParameterName = "@Original_Instl_Real";
            param.DbType = global::System.Data.DbType.Double;
            param.DbType = global::System.Data.DbType.Double;
            param.SourceColumn = "Instl_Real";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::System.Data.SQLite.SQLiteParameter();
            param.ParameterName = "@IsNull_Instl_Memo";
            param.DbType = global::System.Data.DbType.Int32;
            param.DbType = global::System.Data.DbType.Int32;
            param.SourceColumn = "Instl_Memo";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::System.Data.SQLite.SQLiteParameter();
            param.ParameterName = "@Original_Instl_Memo";
            param.DbType = global::System.Data.DbType.AnsiString;
            param.DbType = global::System.Data.DbType.AnsiString;
            param.SourceColumn = "Instl_Memo";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::System.Data.SQLite.SQLiteParameter();
            param.ParameterName = "@IsNull_Instl_Datum";
            param.DbType = global::System.Data.DbType.Int32;
            param.DbType = global::System.Data.DbType.Int32;
            param.SourceColumn = "Instl_Datum";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::System.Data.SQLite.SQLiteParameter();
            param.ParameterName = "@Original_Instl_Datum";
            param.DbType = global::System.Data.DbType.DateTime;
            param.DbType = global::System.Data.DbType.DateTime;
            param.SourceColumn = "Instl_Datum";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::System.Data.SQLite.SQLiteParameter();
            param.ParameterName = "@IsNull_Instl_Tijd";
            param.DbType = global::System.Data.DbType.Int32;
            param.DbType = global::System.Data.DbType.Int32;
            param.SourceColumn = "Instl_Tijd";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::System.Data.SQLite.SQLiteParameter();
            param.ParameterName = "@Original_Instl_Tijd";
            param.DbType = global::System.Data.DbType.DateTime;
            param.DbType = global::System.Data.DbType.DateTime;
            param.SourceColumn = "Instl_Tijd";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::System.Data.SQLite.SQLiteParameter();
            param.ParameterName = "@Original_Instl_Mutatiedatum";
            param.DbType = global::System.Data.DbType.DateTime;
            param.DbType = global::System.Data.DbType.DateTime;
            param.SourceColumn = "Instl_Mutatiedatum";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::System.Data.SQLite.SQLiteParameter();
            param.ParameterName = "@IsNull_Instl_Opmerking";
            param.DbType = global::System.Data.DbType.Int32;
            param.DbType = global::System.Data.DbType.Int32;
            param.SourceColumn = "Instl_Opmerking";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::System.Data.SQLite.SQLiteParameter();
            param.ParameterName = "@Original_Instl_Opmerking";
            param.DbType = global::System.Data.DbType.AnsiString;
            param.DbType = global::System.Data.DbType.AnsiString;
            param.SourceColumn = "Instl_Opmerking";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            this._adapter.InsertCommand = new global::System.Data.SQLite.SQLiteCommand();
            this._adapter.InsertCommand.Connection = this.Connection;
            this._adapter.InsertCommand.CommandText = @"INSERT INTO [main].[sqlite_default_schema].[Instellingen] ([Instl_Systemsetting], [Instl_StatusId], [Instl_DispStatus], [Instl_Naam], [Instl_Gegtype], [Instl_Actief], [Instl_String], [Instl_JN], [Instl_Integer], [Instl_Real], [Instl_Memo], [Instl_Datum], [Instl_Tijd], [Instl_Mutatiedatum], [Instl_Opmerking]) VALUES (@Instl_Systemsetting, @Instl_StatusId, @Instl_DispStatus, @Instl_Naam, @Instl_Gegtype, @Instl_Actief, @Instl_String, @Instl_JN, @Instl_Integer, @Instl_Real, @Instl_Memo, @Instl_Datum, @Instl_Tijd, @Instl_Mutatiedatum, @Instl_Opmerking)";
            this._adapter.InsertCommand.CommandType = global::System.Data.CommandType.Text;
            param = new global::System.Data.SQLite.SQLiteParameter();
            param.ParameterName = "@Instl_Systemsetting";
            param.DbType = global::System.Data.DbType.Int64;
            param.DbType = global::System.Data.DbType.Int64;
            param.SourceColumn = "Instl_Systemsetting";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::System.Data.SQLite.SQLiteParameter();
            param.ParameterName = "@Instl_StatusId";
            param.DbType = global::System.Data.DbType.Int64;
            param.DbType = global::System.Data.DbType.Int64;
            param.SourceColumn = "Instl_StatusId";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::System.Data.SQLite.SQLiteParameter();
            param.ParameterName = "@Instl_DispStatus";
            param.DbType = global::System.Data.DbType.AnsiString;
            param.DbType = global::System.Data.DbType.AnsiString;
            param.SourceColumn = "Instl_DispStatus";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::System.Data.SQLite.SQLiteParameter();
            param.ParameterName = "@Instl_Naam";
            param.DbType = global::System.Data.DbType.AnsiStringFixedLength;
            param.DbType = global::System.Data.DbType.AnsiStringFixedLength;
            param.SourceColumn = "Instl_Naam";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::System.Data.SQLite.SQLiteParameter();
            param.ParameterName = "@Instl_Gegtype";
            param.DbType = global::System.Data.DbType.Int16;
            param.DbType = global::System.Data.DbType.Int16;
            param.SourceColumn = "Instl_Gegtype";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::System.Data.SQLite.SQLiteParameter();
            param.ParameterName = "@Instl_Actief";
            param.DbType = global::System.Data.DbType.Int64;
            param.DbType = global::System.Data.DbType.Int64;
            param.SourceColumn = "Instl_Actief";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::System.Data.SQLite.SQLiteParameter();
            param.ParameterName = "@Instl_String";
            param.DbType = global::System.Data.DbType.AnsiStringFixedLength;
            param.DbType = global::System.Data.DbType.AnsiStringFixedLength;
            param.SourceColumn = "Instl_String";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::System.Data.SQLite.SQLiteParameter();
            param.ParameterName = "@Instl_JN";
            param.DbType = global::System.Data.DbType.Int64;
            param.DbType = global::System.Data.DbType.Int64;
            param.SourceColumn = "Instl_JN";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::System.Data.SQLite.SQLiteParameter();
            param.ParameterName = "@Instl_Integer";
            param.DbType = global::System.Data.DbType.Int64;
            param.DbType = global::System.Data.DbType.Int64;
            param.SourceColumn = "Instl_Integer";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::System.Data.SQLite.SQLiteParameter();
            param.ParameterName = "@Instl_Real";
            param.DbType = global::System.Data.DbType.Double;
            param.DbType = global::System.Data.DbType.Double;
            param.SourceColumn = "Instl_Real";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::System.Data.SQLite.SQLiteParameter();
            param.ParameterName = "@Instl_Memo";
            param.DbType = global::System.Data.DbType.AnsiString;
            param.DbType = global::System.Data.DbType.AnsiString;
            param.SourceColumn = "Instl_Memo";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::System.Data.SQLite.SQLiteParameter();
            param.ParameterName = "@Instl_Datum";
            param.DbType = global::System.Data.DbType.DateTime;
            param.DbType = global::System.Data.DbType.DateTime;
            param.SourceColumn = "Instl_Datum";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::System.Data.SQLite.SQLiteParameter();
            param.ParameterName = "@Instl_Tijd";
            param.DbType = global::System.Data.DbType.DateTime;
            param.DbType = global::System.Data.DbType.DateTime;
            param.SourceColumn = "Instl_Tijd";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::System.Data.SQLite.SQLiteParameter();
            param.ParameterName = "@Instl_Mutatiedatum";
            param.DbType = global::System.Data.DbType.DateTime;
            param.DbType = global::System.Data.DbType.DateTime;
            param.SourceColumn = "Instl_Mutatiedatum";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::System.Data.SQLite.SQLiteParameter();
            param.ParameterName = "@Instl_Opmerking";
            param.DbType = global::System.Data.DbType.AnsiString;
            param.DbType = global::System.Data.DbType.AnsiString;
            param.SourceColumn = "Instl_Opmerking";
            this._adapter.InsertCommand.Parameters.Add(param);
            this._adapter.UpdateCommand = new global::System.Data.SQLite.SQLiteCommand();
            this._adapter.UpdateCommand.Connection = this.Connection;
            this._adapter.UpdateCommand.CommandText = "UPDATE [main].[sqlite_default_schema].[Instellingen] SET [Instl_Systemsetting] = " +
                "@Instl_Systemsetting, [Instl_StatusId] = @Instl_StatusId, [Instl_DispStatus] = @" +
                "Instl_DispStatus, [Instl_Naam] = @Instl_Naam, [Instl_Gegtype] = @Instl_Gegtype, " +
                "[Instl_Actief] = @Instl_Actief, [Instl_String] = @Instl_String, [Instl_JN] = @In" +
                "stl_JN, [Instl_Integer] = @Instl_Integer, [Instl_Real] = @Instl_Real, [Instl_Mem" +
                "o] = @Instl_Memo, [Instl_Datum] = @Instl_Datum, [Instl_Tijd] = @Instl_Tijd, [Ins" +
                "tl_Mutatiedatum] = @Instl_Mutatiedatum, [Instl_Opmerking] = @Instl_Opmerking WHE" +
                "RE (([Instl_Id] = @Original_Instl_Id) AND ((@IsNull_Instl_Systemsetting = 1 AND " +
                "[Instl_Systemsetting] IS NULL) OR ([Instl_Systemsetting] = @Original_Instl_Syste" +
                "msetting)) AND ([Instl_StatusId] = @Original_Instl_StatusId) AND ((@IsNull_Instl" +
                "_DispStatus = 1 AND [Instl_DispStatus] IS NULL) OR ([Instl_DispStatus] = @Origin" +
                "al_Instl_DispStatus)) AND ((@IsNull_Instl_Naam = 1 AND [Instl_Naam] IS NULL) OR " +
                "([Instl_Naam] = @Original_Instl_Naam)) AND ((@IsNull_Instl_Gegtype = 1 AND [Inst" +
                "l_Gegtype] IS NULL) OR ([Instl_Gegtype] = @Original_Instl_Gegtype)) AND ((@IsNul" +
                "l_Instl_Actief = 1 AND [Instl_Actief] IS NULL) OR ([Instl_Actief] = @Original_In" +
                "stl_Actief)) AND ((@IsNull_Instl_String = 1 AND [Instl_String] IS NULL) OR ([Ins" +
                "tl_String] = @Original_Instl_String)) AND ((@IsNull_Instl_JN = 1 AND [Instl_JN] " +
                "IS NULL) OR ([Instl_JN] = @Original_Instl_JN)) AND ((@IsNull_Instl_Integer = 1 A" +
                "ND [Instl_Integer] IS NULL) OR ([Instl_Integer] = @Original_Instl_Integer)) AND " +
                "((@IsNull_Instl_Real = 1 AND [Instl_Real] IS NULL) OR ([Instl_Real] = @Original_" +
                "Instl_Real)) AND ((@IsNull_Instl_Memo = 1 AND [Instl_Memo] IS NULL) OR ([Instl_M" +
                "emo] = @Original_Instl_Memo)) AND ((@IsNull_Instl_Datum = 1 AND [Instl_Datum] IS" +
                " NULL) OR ([Instl_Datum] = @Original_Instl_Datum)) AND ((@IsNull_Instl_Tijd = 1 " +
                "AND [Instl_Tijd] IS NULL) OR ([Instl_Tijd] = @Original_Instl_Tijd)) AND ([Instl_" +
                "Mutatiedatum] = @Original_Instl_Mutatiedatum) AND ((@IsNull_Instl_Opmerking = 1 " +
                "AND [Instl_Opmerking] IS NULL) OR ([Instl_Opmerking] = @Original_Instl_Opmerking" +
                ")))";
            this._adapter.UpdateCommand.CommandType = global::System.Data.CommandType.Text;
            param = new global::System.Data.SQLite.SQLiteParameter();
            param.ParameterName = "@Instl_Systemsetting";
            param.DbType = global::System.Data.DbType.Int64;
            param.DbType = global::System.Data.DbType.Int64;
            param.SourceColumn = "Instl_Systemsetting";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::System.Data.SQLite.SQLiteParameter();
            param.ParameterName = "@Instl_StatusId";
            param.DbType = global::System.Data.DbType.Int64;
            param.DbType = global::System.Data.DbType.Int64;
            param.SourceColumn = "Instl_StatusId";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::System.Data.SQLite.SQLiteParameter();
            param.ParameterName = "@Instl_DispStatus";
            param.DbType = global::System.Data.DbType.AnsiString;
            param.DbType = global::System.Data.DbType.AnsiString;
            param.SourceColumn = "Instl_DispStatus";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::System.Data.SQLite.SQLiteParameter();
            param.ParameterName = "@Instl_Naam";
            param.DbType = global::System.Data.DbType.AnsiStringFixedLength;
            param.DbType = global::System.Data.DbType.AnsiStringFixedLength;
            param.SourceColumn = "Instl_Naam";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::System.Data.SQLite.SQLiteParameter();
            param.ParameterName = "@Instl_Gegtype";
            param.DbType = global::System.Data.DbType.Int16;
            param.DbType = global::System.Data.DbType.Int16;
            param.SourceColumn = "Instl_Gegtype";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::System.Data.SQLite.SQLiteParameter();
            param.ParameterName = "@Instl_Actief";
            param.DbType = global::System.Data.DbType.Int64;
            param.DbType = global::System.Data.DbType.Int64;
            param.SourceColumn = "Instl_Actief";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::System.Data.SQLite.SQLiteParameter();
            param.ParameterName = "@Instl_String";
            param.DbType = global::System.Data.DbType.AnsiStringFixedLength;
            param.DbType = global::System.Data.DbType.AnsiStringFixedLength;
            param.SourceColumn = "Instl_String";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::System.Data.SQLite.SQLiteParameter();
            param.ParameterName = "@Instl_JN";
            param.DbType = global::System.Data.DbType.Int64;
            param.DbType = global::System.Data.DbType.Int64;
            param.SourceColumn = "Instl_JN";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::System.Data.SQLite.SQLiteParameter();
            param.ParameterName = "@Instl_Integer";
            param.DbType = global::System.Data.DbType.Int64;
            param.DbType = global::System.Data.DbType.Int64;
            param.SourceColumn = "Instl_Integer";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::System.Data.SQLite.SQLiteParameter();
            param.ParameterName = "@Instl_Real";
            param.DbType = global::System.Data.DbType.Double;
            param.DbType = global::System.Data.DbType.Double;
            param.SourceColumn = "Instl_Real";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::System.Data.SQLite.SQLiteParameter();
            param.ParameterName = "@Instl_Memo";
            param.DbType = global::System.Data.DbType.AnsiString;
            param.DbType = global::System.Data.DbType.AnsiString;
            param.SourceColumn = "Instl_Memo";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::System.Data.SQLite.SQLiteParameter();
            param.ParameterName = "@Instl_Datum";
            param.DbType = global::System.Data.DbType.DateTime;
            param.DbType = global::System.Data.DbType.DateTime;
            param.SourceColumn = "Instl_Datum";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::System.Data.SQLite.SQLiteParameter();
            param.ParameterName = "@Instl_Tijd";
            param.DbType = global::System.Data.DbType.DateTime;
            param.DbType = global::System.Data.DbType.DateTime;
            param.SourceColumn = "Instl_Tijd";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::System.Data.SQLite.SQLiteParameter();
            param.ParameterName = "@Instl_Mutatiedatum";
            param.DbType = global::System.Data.DbType.DateTime;
            param.DbType = global::System.Data.DbType.DateTime;
            param.SourceColumn = "Instl_Mutatiedatum";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::System.Data.SQLite.SQLiteParameter();
            param.ParameterName = "@Instl_Opmerking";
            param.DbType = global::System.Data.DbType.AnsiString;
            param.DbType = global::System.Data.DbType.AnsiString;
            param.SourceColumn = "Instl_Opmerking";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::System.Data.SQLite.SQLiteParameter();
            param.ParameterName = "@Original_Instl_Id";
            param.DbType = global::System.Data.DbType.Int64;
            param.DbType = global::System.Data.DbType.Int64;
            param.SourceColumn = "Instl_Id";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::System.Data.SQLite.SQLiteParameter();
            param.ParameterName = "@IsNull_Instl_Systemsetting";
            param.DbType = global::System.Data.DbType.Int32;
            param.DbType = global::System.Data.DbType.Int32;
            param.SourceColumn = "Instl_Systemsetting";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::System.Data.SQLite.SQLiteParameter();
            param.ParameterName = "@Original_Instl_Systemsetting";
            param.DbType = global::System.Data.DbType.Int64;
            param.DbType = global::System.Data.DbType.Int64;
            param.SourceColumn = "Instl_Systemsetting";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::System.Data.SQLite.SQLiteParameter();
            param.ParameterName = "@Original_Instl_StatusId";
            param.DbType = global::System.Data.DbType.Int64;
            param.DbType = global::System.Data.DbType.Int64;
            param.SourceColumn = "Instl_StatusId";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::System.Data.SQLite.SQLiteParameter();
            param.ParameterName = "@IsNull_Instl_DispStatus";
            param.DbType = global::System.Data.DbType.Int32;
            param.DbType = global::System.Data.DbType.Int32;
            param.SourceColumn = "Instl_DispStatus";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::System.Data.SQLite.SQLiteParameter();
            param.ParameterName = "@Original_Instl_DispStatus";
            param.DbType = global::System.Data.DbType.AnsiString;
            param.DbType = global::System.Data.DbType.AnsiString;
            param.SourceColumn = "Instl_DispStatus";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::System.Data.SQLite.SQLiteParameter();
            param.ParameterName = "@IsNull_Instl_Naam";
            param.DbType = global::System.Data.DbType.Int32;
            param.DbType = global::System.Data.DbType.Int32;
            param.SourceColumn = "Instl_Naam";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::System.Data.SQLite.SQLiteParameter();
            param.ParameterName = "@Original_Instl_Naam";
            param.DbType = global::System.Data.DbType.AnsiStringFixedLength;
            param.DbType = global::System.Data.DbType.AnsiStringFixedLength;
            param.SourceColumn = "Instl_Naam";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::System.Data.SQLite.SQLiteParameter();
            param.ParameterName = "@IsNull_Instl_Gegtype";
            param.DbType = global::System.Data.DbType.Int32;
            param.DbType = global::System.Data.DbType.Int32;
            param.SourceColumn = "Instl_Gegtype";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::System.Data.SQLite.SQLiteParameter();
            param.ParameterName = "@Original_Instl_Gegtype";
            param.DbType = global::System.Data.DbType.Int16;
            param.DbType = global::System.Data.DbType.Int16;
            param.SourceColumn = "Instl_Gegtype";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::System.Data.SQLite.SQLiteParameter();
            param.ParameterName = "@IsNull_Instl_Actief";
            param.DbType = global::System.Data.DbType.Int32;
            param.DbType = global::System.Data.DbType.Int32;
            param.SourceColumn = "Instl_Actief";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::System.Data.SQLite.SQLiteParameter();
            param.ParameterName = "@Original_Instl_Actief";
            param.DbType = global::System.Data.DbType.Int64;
            param.DbType = global::System.Data.DbType.Int64;
            param.SourceColumn = "Instl_Actief";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::System.Data.SQLite.SQLiteParameter();
            param.ParameterName = "@IsNull_Instl_String";
            param.DbType = global::System.Data.DbType.Int32;
            param.DbType = global::System.Data.DbType.Int32;
            param.SourceColumn = "Instl_String";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::System.Data.SQLite.SQLiteParameter();
            param.ParameterName = "@Original_Instl_String";
            param.DbType = global::System.Data.DbType.AnsiStringFixedLength;
            param.DbType = global::System.Data.DbType.AnsiStringFixedLength;
            param.SourceColumn = "Instl_String";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::System.Data.SQLite.SQLiteParameter();
            param.ParameterName = "@IsNull_Instl_JN";
            param.DbType = global::System.Data.DbType.Int32;
            param.DbType = global::System.Data.DbType.Int32;
            param.SourceColumn = "Instl_JN";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::System.Data.SQLite.SQLiteParameter();
            param.ParameterName = "@Original_Instl_JN";
            param.DbType = global::System.Data.DbType.Int64;
            param.DbType = global::System.Data.DbType.Int64;
            param.SourceColumn = "Instl_JN";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::System.Data.SQLite.SQLiteParameter();
            param.ParameterName = "@IsNull_Instl_Integer";
            param.DbType = global::System.Data.DbType.Int32;
            param.DbType = global::System.Data.DbType.Int32;
            param.SourceColumn = "Instl_Integer";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::System.Data.SQLite.SQLiteParameter();
            param.ParameterName = "@Original_Instl_Integer";
            param.DbType = global::System.Data.DbType.Int64;
            param.DbType = global::System.Data.DbType.Int64;
            param.SourceColumn = "Instl_Integer";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::System.Data.SQLite.SQLiteParameter();
            param.ParameterName = "@IsNull_Instl_Real";
            param.DbType = global::System.Data.DbType.Int32;
            param.DbType = global::System.Data.DbType.Int32;
            param.SourceColumn = "Instl_Real";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::System.Data.SQLite.SQLiteParameter();
            param.ParameterName = "@Original_Instl_Real";
            param.DbType = global::System.Data.DbType.Double;
            param.DbType = global::System.Data.DbType.Double;
            param.SourceColumn = "Instl_Real";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::System.Data.SQLite.SQLiteParameter();
            param.ParameterName = "@IsNull_Instl_Memo";
            param.DbType = global::System.Data.DbType.Int32;
            param.DbType = global::System.Data.DbType.Int32;
            param.SourceColumn = "Instl_Memo";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::System.Data.SQLite.SQLiteParameter();
            param.ParameterName = "@Original_Instl_Memo";
            param.DbType = global::System.Data.DbType.AnsiString;
            param.DbType = global::System.Data.DbType.AnsiString;
            param.SourceColumn = "Instl_Memo";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::System.Data.SQLite.SQLiteParameter();
            param.ParameterName = "@IsNull_Instl_Datum";
            param.DbType = global::System.Data.DbType.Int32;
            param.DbType = global::System.Data.DbType.Int32;
            param.SourceColumn = "Instl_Datum";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::System.Data.SQLite.SQLiteParameter();
            param.ParameterName = "@Original_Instl_Datum";
            param.DbType = global::System.Data.DbType.DateTime;
            param.DbType = global::System.Data.DbType.DateTime;
            param.SourceColumn = "Instl_Datum";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::System.Data.SQLite.SQLiteParameter();
            param.ParameterName = "@IsNull_Instl_Tijd";
            param.DbType = global::System.Data.DbType.Int32;
            param.DbType = global::System.Data.DbType.Int32;
            param.SourceColumn = "Instl_Tijd";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::System.Data.SQLite.SQLiteParameter();
            param.ParameterName = "@Original_Instl_Tijd";
            param.DbType = global::System.Data.DbType.DateTime;
            param.DbType = global::System.Data.DbType.DateTime;
            param.SourceColumn = "Instl_Tijd";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::System.Data.SQLite.SQLiteParameter();
            param.ParameterName = "@Original_Instl_Mutatiedatum";
            param.DbType = global::System.Data.DbType.DateTime;
            param.DbType = global::System.Data.DbType.DateTime;
            param.SourceColumn = "Instl_Mutatiedatum";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::System.Data.SQLite.SQLiteParameter();
            param.ParameterName = "@IsNull_Instl_Opmerking";
            param.DbType = global::System.Data.DbType.Int32;
            param.DbType = global::System.Data.DbType.Int32;
            param.SourceColumn = "Instl_Opmerking";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::System.Data.SQLite.SQLiteParameter();
            param.ParameterName = "@Original_Instl_Opmerking";
            param.DbType = global::System.Data.DbType.AnsiString;
            param.DbType = global::System.Data.DbType.AnsiString;
            param.SourceColumn = "Instl_Opmerking";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitConnection() {
            this._connection = new global::System.Data.SQLite.SQLiteConnection();
            this._connection.ConnectionString = global::Cmbap.Properties.Settings.Default.Cmbap_dataConnectionString;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitCommandCollection() {
            this._commandCollection = new global::System.Data.SQLite.SQLiteCommand[1];
            this._commandCollection[0] = new global::System.Data.SQLite.SQLiteCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = @"SELECT [Instl_Id], [Instl_Systemsetting], [Instl_StatusId], [Instl_DispStatus], [Instl_Naam], [Instl_Gegtype], [Instl_Actief], [Instl_String], [Instl_JN], [Instl_Integer], [Instl_Real], [Instl_Memo], [Instl_Datum], [Instl_Tijd], [Instl_Mutatiedatum], [Instl_Opmerking] FROM [Instellingen]";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(_Cmbap_dataDataSet.InstellingenDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual _Cmbap_dataDataSet.InstellingenDataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            _Cmbap_dataDataSet.InstellingenDataTable dataTable = new _Cmbap_dataDataSet.InstellingenDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(_Cmbap_dataDataSet.InstellingenDataTable dataTable) {
            return this.Adapter.Update(dataTable);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(_Cmbap_dataDataSet dataSet) {
            return this.Adapter.Update(dataSet, "Instellingen");
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow dataRow) {
            return this.Adapter.Update(new global::System.Data.DataRow[] {
                        dataRow});
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow[] dataRows) {
            return this.Adapter.Update(dataRows);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Delete, true)]
        public virtual int Delete(
                    long Original_Instl_Id, 
                    global::System.Nullable<long> Original_Instl_Systemsetting, 
                    long Original_Instl_StatusId, 
                    string Original_Instl_DispStatus, 
                    string Original_Instl_Naam, 
                    global::System.Nullable<short> Original_Instl_Gegtype, 
                    global::System.Nullable<long> Original_Instl_Actief, 
                    string Original_Instl_String, 
                    global::System.Nullable<long> Original_Instl_JN, 
                    global::System.Nullable<long> Original_Instl_Integer, 
                    global::System.Nullable<double> Original_Instl_Real, 
                    string Original_Instl_Memo, 
                    global::System.Nullable<global::System.DateTime> Original_Instl_Datum, 
                    global::System.Nullable<global::System.DateTime> Original_Instl_Tijd, 
                    System.DateTime Original_Instl_Mutatiedatum, 
                    string Original_Instl_Opmerking) {
            this.Adapter.DeleteCommand.Parameters[0].Value = ((long)(Original_Instl_Id));
            if ((Original_Instl_Systemsetting.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[1].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[2].Value = ((long)(Original_Instl_Systemsetting.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[1].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[2].Value = global::System.DBNull.Value;
            }
            this.Adapter.DeleteCommand.Parameters[3].Value = ((long)(Original_Instl_StatusId));
            if ((Original_Instl_DispStatus == null)) {
                this.Adapter.DeleteCommand.Parameters[4].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[5].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[4].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[5].Value = ((string)(Original_Instl_DispStatus));
            }
            if ((Original_Instl_Naam == null)) {
                this.Adapter.DeleteCommand.Parameters[6].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[7].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[6].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[7].Value = ((string)(Original_Instl_Naam));
            }
            if ((Original_Instl_Gegtype.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[8].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[9].Value = ((short)(Original_Instl_Gegtype.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[8].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[9].Value = global::System.DBNull.Value;
            }
            if ((Original_Instl_Actief.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[10].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[11].Value = ((long)(Original_Instl_Actief.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[10].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[11].Value = global::System.DBNull.Value;
            }
            if ((Original_Instl_String == null)) {
                this.Adapter.DeleteCommand.Parameters[12].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[13].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[12].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[13].Value = ((string)(Original_Instl_String));
            }
            if ((Original_Instl_JN.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[14].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[15].Value = ((long)(Original_Instl_JN.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[14].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[15].Value = global::System.DBNull.Value;
            }
            if ((Original_Instl_Integer.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[16].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[17].Value = ((long)(Original_Instl_Integer.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[16].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[17].Value = global::System.DBNull.Value;
            }
            if ((Original_Instl_Real.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[18].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[19].Value = ((double)(Original_Instl_Real.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[18].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[19].Value = global::System.DBNull.Value;
            }
            if ((Original_Instl_Memo == null)) {
                this.Adapter.DeleteCommand.Parameters[20].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[21].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[20].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[21].Value = ((string)(Original_Instl_Memo));
            }
            if ((Original_Instl_Datum.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[22].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[23].Value = ((System.DateTime)(Original_Instl_Datum.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[22].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[23].Value = global::System.DBNull.Value;
            }
            if ((Original_Instl_Tijd.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[24].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[25].Value = ((System.DateTime)(Original_Instl_Tijd.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[24].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[25].Value = global::System.DBNull.Value;
            }
            this.Adapter.DeleteCommand.Parameters[26].Value = ((System.DateTime)(Original_Instl_Mutatiedatum));
            if ((Original_Instl_Opmerking == null)) {
                this.Adapter.DeleteCommand.Parameters[27].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[28].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[27].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[28].Value = ((string)(Original_Instl_Opmerking));
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.DeleteCommand.Connection.State;
            if (((this.Adapter.DeleteCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.DeleteCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.DeleteCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.DeleteCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Insert, true)]
        public virtual int Insert(global::System.Nullable<long> Instl_Systemsetting, long Instl_StatusId, string Instl_DispStatus, string Instl_Naam, global::System.Nullable<short> Instl_Gegtype, global::System.Nullable<long> Instl_Actief, string Instl_String, global::System.Nullable<long> Instl_JN, global::System.Nullable<long> Instl_Integer, global::System.Nullable<double> Instl_Real, string Instl_Memo, global::System.Nullable<global::System.DateTime> Instl_Datum, global::System.Nullable<global::System.DateTime> Instl_Tijd, System.DateTime Instl_Mutatiedatum, string Instl_Opmerking) {
            if ((Instl_Systemsetting.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[0].Value = ((long)(Instl_Systemsetting.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[0].Value = global::System.DBNull.Value;
            }
            this.Adapter.InsertCommand.Parameters[1].Value = ((long)(Instl_StatusId));
            if ((Instl_DispStatus == null)) {
                this.Adapter.InsertCommand.Parameters[2].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[2].Value = ((string)(Instl_DispStatus));
            }
            if ((Instl_Naam == null)) {
                this.Adapter.InsertCommand.Parameters[3].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[3].Value = ((string)(Instl_Naam));
            }
            if ((Instl_Gegtype.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[4].Value = ((short)(Instl_Gegtype.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[4].Value = global::System.DBNull.Value;
            }
            if ((Instl_Actief.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[5].Value = ((long)(Instl_Actief.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[5].Value = global::System.DBNull.Value;
            }
            if ((Instl_String == null)) {
                this.Adapter.InsertCommand.Parameters[6].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[6].Value = ((string)(Instl_String));
            }
            if ((Instl_JN.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[7].Value = ((long)(Instl_JN.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[7].Value = global::System.DBNull.Value;
            }
            if ((Instl_Integer.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[8].Value = ((long)(Instl_Integer.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[8].Value = global::System.DBNull.Value;
            }
            if ((Instl_Real.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[9].Value = ((double)(Instl_Real.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[9].Value = global::System.DBNull.Value;
            }
            if ((Instl_Memo == null)) {
                this.Adapter.InsertCommand.Parameters[10].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[10].Value = ((string)(Instl_Memo));
            }
            if ((Instl_Datum.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[11].Value = ((System.DateTime)(Instl_Datum.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[11].Value = global::System.DBNull.Value;
            }
            if ((Instl_Tijd.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[12].Value = ((System.DateTime)(Instl_Tijd.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[12].Value = global::System.DBNull.Value;
            }
            this.Adapter.InsertCommand.Parameters[13].Value = ((System.DateTime)(Instl_Mutatiedatum));
            if ((Instl_Opmerking == null)) {
                this.Adapter.InsertCommand.Parameters[14].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[14].Value = ((string)(Instl_Opmerking));
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.InsertCommand.Connection.State;
            if (((this.Adapter.InsertCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.InsertCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.InsertCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.InsertCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(
                    global::System.Nullable<long> Instl_Systemsetting, 
                    long Instl_StatusId, 
                    string Instl_DispStatus, 
                    string Instl_Naam, 
                    global::System.Nullable<short> Instl_Gegtype, 
                    global::System.Nullable<long> Instl_Actief, 
                    string Instl_String, 
                    global::System.Nullable<long> Instl_JN, 
                    global::System.Nullable<long> Instl_Integer, 
                    global::System.Nullable<double> Instl_Real, 
                    string Instl_Memo, 
                    global::System.Nullable<global::System.DateTime> Instl_Datum, 
                    global::System.Nullable<global::System.DateTime> Instl_Tijd, 
                    System.DateTime Instl_Mutatiedatum, 
                    string Instl_Opmerking, 
                    long Original_Instl_Id, 
                    global::System.Nullable<long> Original_Instl_Systemsetting, 
                    long Original_Instl_StatusId, 
                    string Original_Instl_DispStatus, 
                    string Original_Instl_Naam, 
                    global::System.Nullable<short> Original_Instl_Gegtype, 
                    global::System.Nullable<long> Original_Instl_Actief, 
                    string Original_Instl_String, 
                    global::System.Nullable<long> Original_Instl_JN, 
                    global::System.Nullable<long> Original_Instl_Integer, 
                    global::System.Nullable<double> Original_Instl_Real, 
                    string Original_Instl_Memo, 
                    global::System.Nullable<global::System.DateTime> Original_Instl_Datum, 
                    global::System.Nullable<global::System.DateTime> Original_Instl_Tijd, 
                    System.DateTime Original_Instl_Mutatiedatum, 
                    string Original_Instl_Opmerking) {
            if ((Instl_Systemsetting.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[0].Value = ((long)(Instl_Systemsetting.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[0].Value = global::System.DBNull.Value;
            }
            this.Adapter.UpdateCommand.Parameters[1].Value = ((long)(Instl_StatusId));
            if ((Instl_DispStatus == null)) {
                this.Adapter.UpdateCommand.Parameters[2].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[2].Value = ((string)(Instl_DispStatus));
            }
            if ((Instl_Naam == null)) {
                this.Adapter.UpdateCommand.Parameters[3].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[3].Value = ((string)(Instl_Naam));
            }
            if ((Instl_Gegtype.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[4].Value = ((short)(Instl_Gegtype.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[4].Value = global::System.DBNull.Value;
            }
            if ((Instl_Actief.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[5].Value = ((long)(Instl_Actief.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[5].Value = global::System.DBNull.Value;
            }
            if ((Instl_String == null)) {
                this.Adapter.UpdateCommand.Parameters[6].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[6].Value = ((string)(Instl_String));
            }
            if ((Instl_JN.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[7].Value = ((long)(Instl_JN.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[7].Value = global::System.DBNull.Value;
            }
            if ((Instl_Integer.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[8].Value = ((long)(Instl_Integer.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[8].Value = global::System.DBNull.Value;
            }
            if ((Instl_Real.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[9].Value = ((double)(Instl_Real.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[9].Value = global::System.DBNull.Value;
            }
            if ((Instl_Memo == null)) {
                this.Adapter.UpdateCommand.Parameters[10].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[10].Value = ((string)(Instl_Memo));
            }
            if ((Instl_Datum.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[11].Value = ((System.DateTime)(Instl_Datum.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[11].Value = global::System.DBNull.Value;
            }
            if ((Instl_Tijd.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[12].Value = ((System.DateTime)(Instl_Tijd.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[12].Value = global::System.DBNull.Value;
            }
            this.Adapter.UpdateCommand.Parameters[13].Value = ((System.DateTime)(Instl_Mutatiedatum));
            if ((Instl_Opmerking == null)) {
                this.Adapter.UpdateCommand.Parameters[14].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[14].Value = ((string)(Instl_Opmerking));
            }
            this.Adapter.UpdateCommand.Parameters[15].Value = ((long)(Original_Instl_Id));
            if ((Original_Instl_Systemsetting.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[16].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[17].Value = ((long)(Original_Instl_Systemsetting.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[16].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[17].Value = global::System.DBNull.Value;
            }
            this.Adapter.UpdateCommand.Parameters[18].Value = ((long)(Original_Instl_StatusId));
            if ((Original_Instl_DispStatus == null)) {
                this.Adapter.UpdateCommand.Parameters[19].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[20].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[19].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[20].Value = ((string)(Original_Instl_DispStatus));
            }
            if ((Original_Instl_Naam == null)) {
                this.Adapter.UpdateCommand.Parameters[21].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[22].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[21].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[22].Value = ((string)(Original_Instl_Naam));
            }
            if ((Original_Instl_Gegtype.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[23].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[24].Value = ((short)(Original_Instl_Gegtype.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[23].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[24].Value = global::System.DBNull.Value;
            }
            if ((Original_Instl_Actief.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[25].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[26].Value = ((long)(Original_Instl_Actief.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[25].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[26].Value = global::System.DBNull.Value;
            }
            if ((Original_Instl_String == null)) {
                this.Adapter.UpdateCommand.Parameters[27].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[28].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[27].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[28].Value = ((string)(Original_Instl_String));
            }
            if ((Original_Instl_JN.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[29].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[30].Value = ((long)(Original_Instl_JN.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[29].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[30].Value = global::System.DBNull.Value;
            }
            if ((Original_Instl_Integer.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[31].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[32].Value = ((long)(Original_Instl_Integer.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[31].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[32].Value = global::System.DBNull.Value;
            }
            if ((Original_Instl_Real.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[33].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[34].Value = ((double)(Original_Instl_Real.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[33].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[34].Value = global::System.DBNull.Value;
            }
            if ((Original_Instl_Memo == null)) {
                this.Adapter.UpdateCommand.Parameters[35].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[36].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[35].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[36].Value = ((string)(Original_Instl_Memo));
            }
            if ((Original_Instl_Datum.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[37].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[38].Value = ((System.DateTime)(Original_Instl_Datum.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[37].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[38].Value = global::System.DBNull.Value;
            }
            if ((Original_Instl_Tijd.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[39].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[40].Value = ((System.DateTime)(Original_Instl_Tijd.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[39].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[40].Value = global::System.DBNull.Value;
            }
            this.Adapter.UpdateCommand.Parameters[41].Value = ((System.DateTime)(Original_Instl_Mutatiedatum));
            if ((Original_Instl_Opmerking == null)) {
                this.Adapter.UpdateCommand.Parameters[42].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[43].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[42].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[43].Value = ((string)(Original_Instl_Opmerking));
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.UpdateCommand.Connection.State;
            if (((this.Adapter.UpdateCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.UpdateCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.UpdateCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.UpdateCommand.Connection.Close();
                }
            }
        }
    }
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class JaargegevensTableAdapter : global::System.ComponentModel.Component {
        
        private global::System.Data.SQLite.SQLiteDataAdapter _adapter;
        
        private global::System.Data.SQLite.SQLiteConnection _connection;
        
        private global::System.Data.SQLite.SQLiteTransaction _transaction;
        
        private global::System.Data.SQLite.SQLiteCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public JaargegevensTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected internal global::System.Data.SQLite.SQLiteDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal global::System.Data.SQLite.SQLiteConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::System.Data.SQLite.SQLiteCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal global::System.Data.SQLite.SQLiteTransaction Transaction {
            get {
                return this._transaction;
            }
            set {
                this._transaction = value;
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    this.CommandCollection[i].Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.DeleteCommand != null))) {
                    this.Adapter.DeleteCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.InsertCommand != null))) {
                    this.Adapter.InsertCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.UpdateCommand != null))) {
                    this.Adapter.UpdateCommand.Transaction = this._transaction;
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected global::System.Data.SQLite.SQLiteCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitAdapter() {
            this._adapter = new global::System.Data.SQLite.SQLiteDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "Jaargegevens";
            tableMapping.ColumnMappings.Add("Jgeg_Id", "Jgeg_Id");
            tableMapping.ColumnMappings.Add("Jgeg_StatusId", "Jgeg_StatusId");
            tableMapping.ColumnMappings.Add("Jgeg_DispStatus", "Jgeg_DispStatus");
            tableMapping.ColumnMappings.Add("Jgeg_Omschrijving", "Jgeg_Omschrijving");
            tableMapping.ColumnMappings.Add("Jgeg_Begindatum", "Jgeg_Begindatum");
            tableMapping.ColumnMappings.Add("Jgeg_Einddatum", "Jgeg_Einddatum");
            tableMapping.ColumnMappings.Add("Jgeg_Mutatiedatum", "Jgeg_Mutatiedatum");
            tableMapping.ColumnMappings.Add("Jgeg_Opmerking", "Jgeg_Opmerking");
            this._adapter.TableMappings.Add(tableMapping);
            this._adapter.DeleteCommand = new global::System.Data.SQLite.SQLiteCommand();
            this._adapter.DeleteCommand.Connection = this.Connection;
            this._adapter.DeleteCommand.CommandText = @"DELETE FROM [main].[sqlite_default_schema].[Jaargegevens] WHERE (([Jgeg_Id] = @Original_Jgeg_Id) AND ((@IsNull_Jgeg_StatusId = 1 AND [Jgeg_StatusId] IS NULL) OR ([Jgeg_StatusId] = @Original_Jgeg_StatusId)) AND ((@IsNull_Jgeg_DispStatus = 1 AND [Jgeg_DispStatus] IS NULL) OR ([Jgeg_DispStatus] = @Original_Jgeg_DispStatus)) AND ([Jgeg_Omschrijving] = @Original_Jgeg_Omschrijving) AND ([Jgeg_Begindatum] = @Original_Jgeg_Begindatum) AND ([Jgeg_Einddatum] = @Original_Jgeg_Einddatum) AND ([Jgeg_Mutatiedatum] = @Original_Jgeg_Mutatiedatum) AND ((@IsNull_Jgeg_Opmerking = 1 AND [Jgeg_Opmerking] IS NULL) OR ([Jgeg_Opmerking] = @Original_Jgeg_Opmerking)))";
            this._adapter.DeleteCommand.CommandType = global::System.Data.CommandType.Text;
            global::System.Data.SQLite.SQLiteParameter param = new global::System.Data.SQLite.SQLiteParameter();
            param.ParameterName = "@Original_Jgeg_Id";
            param.DbType = global::System.Data.DbType.Int64;
            param.DbType = global::System.Data.DbType.Int64;
            param.SourceColumn = "Jgeg_Id";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::System.Data.SQLite.SQLiteParameter();
            param.ParameterName = "@IsNull_Jgeg_StatusId";
            param.DbType = global::System.Data.DbType.Int32;
            param.DbType = global::System.Data.DbType.Int32;
            param.SourceColumn = "Jgeg_StatusId";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::System.Data.SQLite.SQLiteParameter();
            param.ParameterName = "@Original_Jgeg_StatusId";
            param.DbType = global::System.Data.DbType.Int64;
            param.DbType = global::System.Data.DbType.Int64;
            param.SourceColumn = "Jgeg_StatusId";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::System.Data.SQLite.SQLiteParameter();
            param.ParameterName = "@IsNull_Jgeg_DispStatus";
            param.DbType = global::System.Data.DbType.Int32;
            param.DbType = global::System.Data.DbType.Int32;
            param.SourceColumn = "Jgeg_DispStatus";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::System.Data.SQLite.SQLiteParameter();
            param.ParameterName = "@Original_Jgeg_DispStatus";
            param.DbType = global::System.Data.DbType.AnsiString;
            param.DbType = global::System.Data.DbType.AnsiString;
            param.SourceColumn = "Jgeg_DispStatus";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::System.Data.SQLite.SQLiteParameter();
            param.ParameterName = "@Original_Jgeg_Omschrijving";
            param.DbType = global::System.Data.DbType.AnsiString;
            param.DbType = global::System.Data.DbType.AnsiString;
            param.SourceColumn = "Jgeg_Omschrijving";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::System.Data.SQLite.SQLiteParameter();
            param.ParameterName = "@Original_Jgeg_Begindatum";
            param.DbType = global::System.Data.DbType.DateTime;
            param.DbType = global::System.Data.DbType.DateTime;
            param.SourceColumn = "Jgeg_Begindatum";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::System.Data.SQLite.SQLiteParameter();
            param.ParameterName = "@Original_Jgeg_Einddatum";
            param.DbType = global::System.Data.DbType.DateTime;
            param.DbType = global::System.Data.DbType.DateTime;
            param.SourceColumn = "Jgeg_Einddatum";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::System.Data.SQLite.SQLiteParameter();
            param.ParameterName = "@Original_Jgeg_Mutatiedatum";
            param.DbType = global::System.Data.DbType.DateTime;
            param.DbType = global::System.Data.DbType.DateTime;
            param.SourceColumn = "Jgeg_Mutatiedatum";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::System.Data.SQLite.SQLiteParameter();
            param.ParameterName = "@IsNull_Jgeg_Opmerking";
            param.DbType = global::System.Data.DbType.Int32;
            param.DbType = global::System.Data.DbType.Int32;
            param.SourceColumn = "Jgeg_Opmerking";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::System.Data.SQLite.SQLiteParameter();
            param.ParameterName = "@Original_Jgeg_Opmerking";
            param.DbType = global::System.Data.DbType.AnsiString;
            param.DbType = global::System.Data.DbType.AnsiString;
            param.SourceColumn = "Jgeg_Opmerking";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            this._adapter.InsertCommand = new global::System.Data.SQLite.SQLiteCommand();
            this._adapter.InsertCommand.Connection = this.Connection;
            this._adapter.InsertCommand.CommandText = @"INSERT INTO [main].[sqlite_default_schema].[Jaargegevens] ([Jgeg_StatusId], [Jgeg_DispStatus], [Jgeg_Omschrijving], [Jgeg_Begindatum], [Jgeg_Einddatum], [Jgeg_Mutatiedatum], [Jgeg_Opmerking]) VALUES (@Jgeg_StatusId, @Jgeg_DispStatus, @Jgeg_Omschrijving, @Jgeg_Begindatum, @Jgeg_Einddatum, @Jgeg_Mutatiedatum, @Jgeg_Opmerking)";
            this._adapter.InsertCommand.CommandType = global::System.Data.CommandType.Text;
            param = new global::System.Data.SQLite.SQLiteParameter();
            param.ParameterName = "@Jgeg_StatusId";
            param.DbType = global::System.Data.DbType.Int64;
            param.DbType = global::System.Data.DbType.Int64;
            param.SourceColumn = "Jgeg_StatusId";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::System.Data.SQLite.SQLiteParameter();
            param.ParameterName = "@Jgeg_DispStatus";
            param.DbType = global::System.Data.DbType.AnsiString;
            param.DbType = global::System.Data.DbType.AnsiString;
            param.SourceColumn = "Jgeg_DispStatus";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::System.Data.SQLite.SQLiteParameter();
            param.ParameterName = "@Jgeg_Omschrijving";
            param.DbType = global::System.Data.DbType.AnsiString;
            param.DbType = global::System.Data.DbType.AnsiString;
            param.SourceColumn = "Jgeg_Omschrijving";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::System.Data.SQLite.SQLiteParameter();
            param.ParameterName = "@Jgeg_Begindatum";
            param.DbType = global::System.Data.DbType.DateTime;
            param.DbType = global::System.Data.DbType.DateTime;
            param.SourceColumn = "Jgeg_Begindatum";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::System.Data.SQLite.SQLiteParameter();
            param.ParameterName = "@Jgeg_Einddatum";
            param.DbType = global::System.Data.DbType.DateTime;
            param.DbType = global::System.Data.DbType.DateTime;
            param.SourceColumn = "Jgeg_Einddatum";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::System.Data.SQLite.SQLiteParameter();
            param.ParameterName = "@Jgeg_Mutatiedatum";
            param.DbType = global::System.Data.DbType.DateTime;
            param.DbType = global::System.Data.DbType.DateTime;
            param.SourceColumn = "Jgeg_Mutatiedatum";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::System.Data.SQLite.SQLiteParameter();
            param.ParameterName = "@Jgeg_Opmerking";
            param.DbType = global::System.Data.DbType.AnsiString;
            param.DbType = global::System.Data.DbType.AnsiString;
            param.SourceColumn = "Jgeg_Opmerking";
            this._adapter.InsertCommand.Parameters.Add(param);
            this._adapter.UpdateCommand = new global::System.Data.SQLite.SQLiteCommand();
            this._adapter.UpdateCommand.Connection = this.Connection;
            this._adapter.UpdateCommand.CommandText = @"UPDATE [main].[sqlite_default_schema].[Jaargegevens] SET [Jgeg_StatusId] = @Jgeg_StatusId, [Jgeg_DispStatus] = @Jgeg_DispStatus, [Jgeg_Omschrijving] = @Jgeg_Omschrijving, [Jgeg_Begindatum] = @Jgeg_Begindatum, [Jgeg_Einddatum] = @Jgeg_Einddatum, [Jgeg_Mutatiedatum] = @Jgeg_Mutatiedatum, [Jgeg_Opmerking] = @Jgeg_Opmerking WHERE (([Jgeg_Id] = @Original_Jgeg_Id) AND ((@IsNull_Jgeg_StatusId = 1 AND [Jgeg_StatusId] IS NULL) OR ([Jgeg_StatusId] = @Original_Jgeg_StatusId)) AND ((@IsNull_Jgeg_DispStatus = 1 AND [Jgeg_DispStatus] IS NULL) OR ([Jgeg_DispStatus] = @Original_Jgeg_DispStatus)) AND ([Jgeg_Omschrijving] = @Original_Jgeg_Omschrijving) AND ([Jgeg_Begindatum] = @Original_Jgeg_Begindatum) AND ([Jgeg_Einddatum] = @Original_Jgeg_Einddatum) AND ([Jgeg_Mutatiedatum] = @Original_Jgeg_Mutatiedatum) AND ((@IsNull_Jgeg_Opmerking = 1 AND [Jgeg_Opmerking] IS NULL) OR ([Jgeg_Opmerking] = @Original_Jgeg_Opmerking)))";
            this._adapter.UpdateCommand.CommandType = global::System.Data.CommandType.Text;
            param = new global::System.Data.SQLite.SQLiteParameter();
            param.ParameterName = "@Jgeg_StatusId";
            param.DbType = global::System.Data.DbType.Int64;
            param.DbType = global::System.Data.DbType.Int64;
            param.SourceColumn = "Jgeg_StatusId";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::System.Data.SQLite.SQLiteParameter();
            param.ParameterName = "@Jgeg_DispStatus";
            param.DbType = global::System.Data.DbType.AnsiString;
            param.DbType = global::System.Data.DbType.AnsiString;
            param.SourceColumn = "Jgeg_DispStatus";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::System.Data.SQLite.SQLiteParameter();
            param.ParameterName = "@Jgeg_Omschrijving";
            param.DbType = global::System.Data.DbType.AnsiString;
            param.DbType = global::System.Data.DbType.AnsiString;
            param.SourceColumn = "Jgeg_Omschrijving";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::System.Data.SQLite.SQLiteParameter();
            param.ParameterName = "@Jgeg_Begindatum";
            param.DbType = global::System.Data.DbType.DateTime;
            param.DbType = global::System.Data.DbType.DateTime;
            param.SourceColumn = "Jgeg_Begindatum";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::System.Data.SQLite.SQLiteParameter();
            param.ParameterName = "@Jgeg_Einddatum";
            param.DbType = global::System.Data.DbType.DateTime;
            param.DbType = global::System.Data.DbType.DateTime;
            param.SourceColumn = "Jgeg_Einddatum";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::System.Data.SQLite.SQLiteParameter();
            param.ParameterName = "@Jgeg_Mutatiedatum";
            param.DbType = global::System.Data.DbType.DateTime;
            param.DbType = global::System.Data.DbType.DateTime;
            param.SourceColumn = "Jgeg_Mutatiedatum";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::System.Data.SQLite.SQLiteParameter();
            param.ParameterName = "@Jgeg_Opmerking";
            param.DbType = global::System.Data.DbType.AnsiString;
            param.DbType = global::System.Data.DbType.AnsiString;
            param.SourceColumn = "Jgeg_Opmerking";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::System.Data.SQLite.SQLiteParameter();
            param.ParameterName = "@Original_Jgeg_Id";
            param.DbType = global::System.Data.DbType.Int64;
            param.DbType = global::System.Data.DbType.Int64;
            param.SourceColumn = "Jgeg_Id";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::System.Data.SQLite.SQLiteParameter();
            param.ParameterName = "@IsNull_Jgeg_StatusId";
            param.DbType = global::System.Data.DbType.Int32;
            param.DbType = global::System.Data.DbType.Int32;
            param.SourceColumn = "Jgeg_StatusId";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::System.Data.SQLite.SQLiteParameter();
            param.ParameterName = "@Original_Jgeg_StatusId";
            param.DbType = global::System.Data.DbType.Int64;
            param.DbType = global::System.Data.DbType.Int64;
            param.SourceColumn = "Jgeg_StatusId";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::System.Data.SQLite.SQLiteParameter();
            param.ParameterName = "@IsNull_Jgeg_DispStatus";
            param.DbType = global::System.Data.DbType.Int32;
            param.DbType = global::System.Data.DbType.Int32;
            param.SourceColumn = "Jgeg_DispStatus";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::System.Data.SQLite.SQLiteParameter();
            param.ParameterName = "@Original_Jgeg_DispStatus";
            param.DbType = global::System.Data.DbType.AnsiString;
            param.DbType = global::System.Data.DbType.AnsiString;
            param.SourceColumn = "Jgeg_DispStatus";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::System.Data.SQLite.SQLiteParameter();
            param.ParameterName = "@Original_Jgeg_Omschrijving";
            param.DbType = global::System.Data.DbType.AnsiString;
            param.DbType = global::System.Data.DbType.AnsiString;
            param.SourceColumn = "Jgeg_Omschrijving";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::System.Data.SQLite.SQLiteParameter();
            param.ParameterName = "@Original_Jgeg_Begindatum";
            param.DbType = global::System.Data.DbType.DateTime;
            param.DbType = global::System.Data.DbType.DateTime;
            param.SourceColumn = "Jgeg_Begindatum";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::System.Data.SQLite.SQLiteParameter();
            param.ParameterName = "@Original_Jgeg_Einddatum";
            param.DbType = global::System.Data.DbType.DateTime;
            param.DbType = global::System.Data.DbType.DateTime;
            param.SourceColumn = "Jgeg_Einddatum";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::System.Data.SQLite.SQLiteParameter();
            param.ParameterName = "@Original_Jgeg_Mutatiedatum";
            param.DbType = global::System.Data.DbType.DateTime;
            param.DbType = global::System.Data.DbType.DateTime;
            param.SourceColumn = "Jgeg_Mutatiedatum";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::System.Data.SQLite.SQLiteParameter();
            param.ParameterName = "@IsNull_Jgeg_Opmerking";
            param.DbType = global::System.Data.DbType.Int32;
            param.DbType = global::System.Data.DbType.Int32;
            param.SourceColumn = "Jgeg_Opmerking";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::System.Data.SQLite.SQLiteParameter();
            param.ParameterName = "@Original_Jgeg_Opmerking";
            param.DbType = global::System.Data.DbType.AnsiString;
            param.DbType = global::System.Data.DbType.AnsiString;
            param.SourceColumn = "Jgeg_Opmerking";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitConnection() {
            this._connection = new global::System.Data.SQLite.SQLiteConnection();
            this._connection.ConnectionString = global::Cmbap.Properties.Settings.Default.Cmbap_dataConnectionString;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitCommandCollection() {
            this._commandCollection = new global::System.Data.SQLite.SQLiteCommand[1];
            this._commandCollection[0] = new global::System.Data.SQLite.SQLiteCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "SELECT Jgeg_Id, Jgeg_StatusId, Jgeg_DispStatus, Jgeg_Omschrijving, Jgeg_Begindatu" +
                "m, Jgeg_Einddatum, Jgeg_Mutatiedatum, Jgeg_Opmerking\r\nFROM     Jaargegevens\r\nWHE" +
                "RE  (Jgeg_StatusId <> 180009)";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(_Cmbap_dataDataSet.JaargegevensDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual _Cmbap_dataDataSet.JaargegevensDataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            _Cmbap_dataDataSet.JaargegevensDataTable dataTable = new _Cmbap_dataDataSet.JaargegevensDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(_Cmbap_dataDataSet.JaargegevensDataTable dataTable) {
            return this.Adapter.Update(dataTable);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(_Cmbap_dataDataSet dataSet) {
            return this.Adapter.Update(dataSet, "Jaargegevens");
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow dataRow) {
            return this.Adapter.Update(new global::System.Data.DataRow[] {
                        dataRow});
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow[] dataRows) {
            return this.Adapter.Update(dataRows);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Delete, true)]
        public virtual int Delete(long Original_Jgeg_Id, global::System.Nullable<long> Original_Jgeg_StatusId, string Original_Jgeg_DispStatus, string Original_Jgeg_Omschrijving, System.DateTime Original_Jgeg_Begindatum, System.DateTime Original_Jgeg_Einddatum, System.DateTime Original_Jgeg_Mutatiedatum, string Original_Jgeg_Opmerking) {
            this.Adapter.DeleteCommand.Parameters[0].Value = ((long)(Original_Jgeg_Id));
            if ((Original_Jgeg_StatusId.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[1].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[2].Value = ((long)(Original_Jgeg_StatusId.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[1].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[2].Value = global::System.DBNull.Value;
            }
            if ((Original_Jgeg_DispStatus == null)) {
                this.Adapter.DeleteCommand.Parameters[3].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[4].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[3].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[4].Value = ((string)(Original_Jgeg_DispStatus));
            }
            if ((Original_Jgeg_Omschrijving == null)) {
                throw new global::System.ArgumentNullException("Original_Jgeg_Omschrijving");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[5].Value = ((string)(Original_Jgeg_Omschrijving));
            }
            this.Adapter.DeleteCommand.Parameters[6].Value = ((System.DateTime)(Original_Jgeg_Begindatum));
            this.Adapter.DeleteCommand.Parameters[7].Value = ((System.DateTime)(Original_Jgeg_Einddatum));
            this.Adapter.DeleteCommand.Parameters[8].Value = ((System.DateTime)(Original_Jgeg_Mutatiedatum));
            if ((Original_Jgeg_Opmerking == null)) {
                this.Adapter.DeleteCommand.Parameters[9].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[10].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[9].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[10].Value = ((string)(Original_Jgeg_Opmerking));
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.DeleteCommand.Connection.State;
            if (((this.Adapter.DeleteCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.DeleteCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.DeleteCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.DeleteCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Insert, true)]
        public virtual int Insert(global::System.Nullable<long> Jgeg_StatusId, string Jgeg_DispStatus, string Jgeg_Omschrijving, System.DateTime Jgeg_Begindatum, System.DateTime Jgeg_Einddatum, System.DateTime Jgeg_Mutatiedatum, string Jgeg_Opmerking) {
            if ((Jgeg_StatusId.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[0].Value = ((long)(Jgeg_StatusId.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[0].Value = global::System.DBNull.Value;
            }
            if ((Jgeg_DispStatus == null)) {
                this.Adapter.InsertCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[1].Value = ((string)(Jgeg_DispStatus));
            }
            if ((Jgeg_Omschrijving == null)) {
                throw new global::System.ArgumentNullException("Jgeg_Omschrijving");
            }
            else {
                this.Adapter.InsertCommand.Parameters[2].Value = ((string)(Jgeg_Omschrijving));
            }
            this.Adapter.InsertCommand.Parameters[3].Value = ((System.DateTime)(Jgeg_Begindatum));
            this.Adapter.InsertCommand.Parameters[4].Value = ((System.DateTime)(Jgeg_Einddatum));
            this.Adapter.InsertCommand.Parameters[5].Value = ((System.DateTime)(Jgeg_Mutatiedatum));
            if ((Jgeg_Opmerking == null)) {
                this.Adapter.InsertCommand.Parameters[6].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[6].Value = ((string)(Jgeg_Opmerking));
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.InsertCommand.Connection.State;
            if (((this.Adapter.InsertCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.InsertCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.InsertCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.InsertCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(global::System.Nullable<long> Jgeg_StatusId, string Jgeg_DispStatus, string Jgeg_Omschrijving, System.DateTime Jgeg_Begindatum, System.DateTime Jgeg_Einddatum, System.DateTime Jgeg_Mutatiedatum, string Jgeg_Opmerking, long Original_Jgeg_Id, global::System.Nullable<long> Original_Jgeg_StatusId, string Original_Jgeg_DispStatus, string Original_Jgeg_Omschrijving, System.DateTime Original_Jgeg_Begindatum, System.DateTime Original_Jgeg_Einddatum, System.DateTime Original_Jgeg_Mutatiedatum, string Original_Jgeg_Opmerking) {
            if ((Jgeg_StatusId.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[0].Value = ((long)(Jgeg_StatusId.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[0].Value = global::System.DBNull.Value;
            }
            if ((Jgeg_DispStatus == null)) {
                this.Adapter.UpdateCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[1].Value = ((string)(Jgeg_DispStatus));
            }
            if ((Jgeg_Omschrijving == null)) {
                throw new global::System.ArgumentNullException("Jgeg_Omschrijving");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[2].Value = ((string)(Jgeg_Omschrijving));
            }
            this.Adapter.UpdateCommand.Parameters[3].Value = ((System.DateTime)(Jgeg_Begindatum));
            this.Adapter.UpdateCommand.Parameters[4].Value = ((System.DateTime)(Jgeg_Einddatum));
            this.Adapter.UpdateCommand.Parameters[5].Value = ((System.DateTime)(Jgeg_Mutatiedatum));
            if ((Jgeg_Opmerking == null)) {
                this.Adapter.UpdateCommand.Parameters[6].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[6].Value = ((string)(Jgeg_Opmerking));
            }
            this.Adapter.UpdateCommand.Parameters[7].Value = ((long)(Original_Jgeg_Id));
            if ((Original_Jgeg_StatusId.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[8].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[9].Value = ((long)(Original_Jgeg_StatusId.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[8].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[9].Value = global::System.DBNull.Value;
            }
            if ((Original_Jgeg_DispStatus == null)) {
                this.Adapter.UpdateCommand.Parameters[10].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[11].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[10].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[11].Value = ((string)(Original_Jgeg_DispStatus));
            }
            if ((Original_Jgeg_Omschrijving == null)) {
                throw new global::System.ArgumentNullException("Original_Jgeg_Omschrijving");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[12].Value = ((string)(Original_Jgeg_Omschrijving));
            }
            this.Adapter.UpdateCommand.Parameters[13].Value = ((System.DateTime)(Original_Jgeg_Begindatum));
            this.Adapter.UpdateCommand.Parameters[14].Value = ((System.DateTime)(Original_Jgeg_Einddatum));
            this.Adapter.UpdateCommand.Parameters[15].Value = ((System.DateTime)(Original_Jgeg_Mutatiedatum));
            if ((Original_Jgeg_Opmerking == null)) {
                this.Adapter.UpdateCommand.Parameters[16].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[17].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[16].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[17].Value = ((string)(Original_Jgeg_Opmerking));
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.UpdateCommand.Connection.State;
            if (((this.Adapter.UpdateCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.UpdateCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.UpdateCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.UpdateCommand.Connection.Close();
                }
            }
        }
    }
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class JaarsaldoTableAdapter : global::System.ComponentModel.Component {
        
        private global::System.Data.SQLite.SQLiteDataAdapter _adapter;
        
        private global::System.Data.SQLite.SQLiteConnection _connection;
        
        private global::System.Data.SQLite.SQLiteTransaction _transaction;
        
        private global::System.Data.SQLite.SQLiteCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public JaarsaldoTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected internal global::System.Data.SQLite.SQLiteDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal global::System.Data.SQLite.SQLiteConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::System.Data.SQLite.SQLiteCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal global::System.Data.SQLite.SQLiteTransaction Transaction {
            get {
                return this._transaction;
            }
            set {
                this._transaction = value;
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    this.CommandCollection[i].Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.DeleteCommand != null))) {
                    this.Adapter.DeleteCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.InsertCommand != null))) {
                    this.Adapter.InsertCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.UpdateCommand != null))) {
                    this.Adapter.UpdateCommand.Transaction = this._transaction;
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected global::System.Data.SQLite.SQLiteCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitAdapter() {
            this._adapter = new global::System.Data.SQLite.SQLiteDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "Jaarsaldo";
            tableMapping.ColumnMappings.Add("Jsal_Id", "Jsal_Id");
            tableMapping.ColumnMappings.Add("Jsal_StatusId", "Jsal_StatusId");
            tableMapping.ColumnMappings.Add("Jsal_DispStatus", "Jsal_DispStatus");
            tableMapping.ColumnMappings.Add("Jsal_JgegId", "Jsal_JgegId");
            tableMapping.ColumnMappings.Add("Jsal_BgnrId", "Jsal_BgnrId");
            tableMapping.ColumnMappings.Add("Jsal_Beginsaldo", "Jsal_Beginsaldo");
            tableMapping.ColumnMappings.Add("Jsal_Eindsaldo", "Jsal_Eindsaldo");
            tableMapping.ColumnMappings.Add("Jsal_Mutatiedatum", "Jsal_Mutatiedatum");
            tableMapping.ColumnMappings.Add("Jsal_Opmerking", "Jsal_Opmerking");
            this._adapter.TableMappings.Add(tableMapping);
            this._adapter.DeleteCommand = new global::System.Data.SQLite.SQLiteCommand();
            this._adapter.DeleteCommand.Connection = this.Connection;
            this._adapter.DeleteCommand.CommandText = @"DELETE FROM [main].[sqlite_default_schema].[Jaarsaldo] WHERE (([Jsal_Id] = @Original_Jsal_Id) AND ([Jsal_StatusId] = @Original_Jsal_StatusId) AND ([Jsal_DispStatus] = @Original_Jsal_DispStatus) AND ([Jsal_JgegId] = @Original_Jsal_JgegId) AND ([Jsal_BgnrId] = @Original_Jsal_BgnrId) AND ([Jsal_Beginsaldo] = @Original_Jsal_Beginsaldo) AND ([Jsal_Eindsaldo] = @Original_Jsal_Eindsaldo) AND ([Jsal_Mutatiedatum] = @Original_Jsal_Mutatiedatum) AND ((@IsNull_Jsal_Opmerking = 1 AND [Jsal_Opmerking] IS NULL) OR ([Jsal_Opmerking] = @Original_Jsal_Opmerking)))";
            this._adapter.DeleteCommand.CommandType = global::System.Data.CommandType.Text;
            global::System.Data.SQLite.SQLiteParameter param = new global::System.Data.SQLite.SQLiteParameter();
            param.ParameterName = "@Original_Jsal_Id";
            param.DbType = global::System.Data.DbType.Int64;
            param.DbType = global::System.Data.DbType.Int64;
            param.SourceColumn = "Jsal_Id";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::System.Data.SQLite.SQLiteParameter();
            param.ParameterName = "@Original_Jsal_StatusId";
            param.DbType = global::System.Data.DbType.Int64;
            param.DbType = global::System.Data.DbType.Int64;
            param.SourceColumn = "Jsal_StatusId";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::System.Data.SQLite.SQLiteParameter();
            param.ParameterName = "@Original_Jsal_DispStatus";
            param.DbType = global::System.Data.DbType.AnsiString;
            param.DbType = global::System.Data.DbType.AnsiString;
            param.SourceColumn = "Jsal_DispStatus";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::System.Data.SQLite.SQLiteParameter();
            param.ParameterName = "@Original_Jsal_JgegId";
            param.DbType = global::System.Data.DbType.Int64;
            param.DbType = global::System.Data.DbType.Int64;
            param.SourceColumn = "Jsal_JgegId";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::System.Data.SQLite.SQLiteParameter();
            param.ParameterName = "@Original_Jsal_BgnrId";
            param.DbType = global::System.Data.DbType.Int64;
            param.DbType = global::System.Data.DbType.Int64;
            param.SourceColumn = "Jsal_BgnrId";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::System.Data.SQLite.SQLiteParameter();
            param.ParameterName = "@Original_Jsal_Beginsaldo";
            param.DbType = global::System.Data.DbType.Decimal;
            param.DbType = global::System.Data.DbType.Decimal;
            param.SourceColumn = "Jsal_Beginsaldo";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::System.Data.SQLite.SQLiteParameter();
            param.ParameterName = "@Original_Jsal_Eindsaldo";
            param.DbType = global::System.Data.DbType.Decimal;
            param.DbType = global::System.Data.DbType.Decimal;
            param.SourceColumn = "Jsal_Eindsaldo";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::System.Data.SQLite.SQLiteParameter();
            param.ParameterName = "@Original_Jsal_Mutatiedatum";
            param.DbType = global::System.Data.DbType.DateTime;
            param.DbType = global::System.Data.DbType.DateTime;
            param.SourceColumn = "Jsal_Mutatiedatum";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::System.Data.SQLite.SQLiteParameter();
            param.ParameterName = "@IsNull_Jsal_Opmerking";
            param.DbType = global::System.Data.DbType.Int32;
            param.DbType = global::System.Data.DbType.Int32;
            param.SourceColumn = "Jsal_Opmerking";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::System.Data.SQLite.SQLiteParameter();
            param.ParameterName = "@Original_Jsal_Opmerking";
            param.DbType = global::System.Data.DbType.AnsiString;
            param.DbType = global::System.Data.DbType.AnsiString;
            param.SourceColumn = "Jsal_Opmerking";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            this._adapter.InsertCommand = new global::System.Data.SQLite.SQLiteCommand();
            this._adapter.InsertCommand.Connection = this.Connection;
            this._adapter.InsertCommand.CommandText = @"INSERT INTO [main].[sqlite_default_schema].[Jaarsaldo] ([Jsal_StatusId], [Jsal_DispStatus], [Jsal_JgegId], [Jsal_BgnrId], [Jsal_Beginsaldo], [Jsal_Eindsaldo], [Jsal_Mutatiedatum], [Jsal_Opmerking]) VALUES (@Jsal_StatusId, @Jsal_DispStatus, @Jsal_JgegId, @Jsal_BgnrId, @Jsal_Beginsaldo, @Jsal_Eindsaldo, @Jsal_Mutatiedatum, @Jsal_Opmerking)";
            this._adapter.InsertCommand.CommandType = global::System.Data.CommandType.Text;
            param = new global::System.Data.SQLite.SQLiteParameter();
            param.ParameterName = "@Jsal_StatusId";
            param.DbType = global::System.Data.DbType.Int64;
            param.DbType = global::System.Data.DbType.Int64;
            param.SourceColumn = "Jsal_StatusId";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::System.Data.SQLite.SQLiteParameter();
            param.ParameterName = "@Jsal_DispStatus";
            param.DbType = global::System.Data.DbType.AnsiString;
            param.DbType = global::System.Data.DbType.AnsiString;
            param.SourceColumn = "Jsal_DispStatus";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::System.Data.SQLite.SQLiteParameter();
            param.ParameterName = "@Jsal_JgegId";
            param.DbType = global::System.Data.DbType.Int64;
            param.DbType = global::System.Data.DbType.Int64;
            param.SourceColumn = "Jsal_JgegId";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::System.Data.SQLite.SQLiteParameter();
            param.ParameterName = "@Jsal_BgnrId";
            param.DbType = global::System.Data.DbType.Int64;
            param.DbType = global::System.Data.DbType.Int64;
            param.SourceColumn = "Jsal_BgnrId";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::System.Data.SQLite.SQLiteParameter();
            param.ParameterName = "@Jsal_Beginsaldo";
            param.DbType = global::System.Data.DbType.Decimal;
            param.DbType = global::System.Data.DbType.Decimal;
            param.SourceColumn = "Jsal_Beginsaldo";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::System.Data.SQLite.SQLiteParameter();
            param.ParameterName = "@Jsal_Eindsaldo";
            param.DbType = global::System.Data.DbType.Decimal;
            param.DbType = global::System.Data.DbType.Decimal;
            param.SourceColumn = "Jsal_Eindsaldo";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::System.Data.SQLite.SQLiteParameter();
            param.ParameterName = "@Jsal_Mutatiedatum";
            param.DbType = global::System.Data.DbType.DateTime;
            param.DbType = global::System.Data.DbType.DateTime;
            param.SourceColumn = "Jsal_Mutatiedatum";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::System.Data.SQLite.SQLiteParameter();
            param.ParameterName = "@Jsal_Opmerking";
            param.DbType = global::System.Data.DbType.AnsiString;
            param.DbType = global::System.Data.DbType.AnsiString;
            param.SourceColumn = "Jsal_Opmerking";
            this._adapter.InsertCommand.Parameters.Add(param);
            this._adapter.UpdateCommand = new global::System.Data.SQLite.SQLiteCommand();
            this._adapter.UpdateCommand.Connection = this.Connection;
            this._adapter.UpdateCommand.CommandText = @"UPDATE [main].[sqlite_default_schema].[Jaarsaldo] SET [Jsal_StatusId] = @Jsal_StatusId, [Jsal_DispStatus] = @Jsal_DispStatus, [Jsal_JgegId] = @Jsal_JgegId, [Jsal_BgnrId] = @Jsal_BgnrId, [Jsal_Beginsaldo] = @Jsal_Beginsaldo, [Jsal_Eindsaldo] = @Jsal_Eindsaldo, [Jsal_Mutatiedatum] = @Jsal_Mutatiedatum, [Jsal_Opmerking] = @Jsal_Opmerking WHERE (([Jsal_Id] = @Original_Jsal_Id) AND ([Jsal_StatusId] = @Original_Jsal_StatusId) AND ([Jsal_DispStatus] = @Original_Jsal_DispStatus) AND ([Jsal_JgegId] = @Original_Jsal_JgegId) AND ([Jsal_BgnrId] = @Original_Jsal_BgnrId) AND ([Jsal_Beginsaldo] = @Original_Jsal_Beginsaldo) AND ([Jsal_Eindsaldo] = @Original_Jsal_Eindsaldo) AND ([Jsal_Mutatiedatum] = @Original_Jsal_Mutatiedatum) AND ((@IsNull_Jsal_Opmerking = 1 AND [Jsal_Opmerking] IS NULL) OR ([Jsal_Opmerking] = @Original_Jsal_Opmerking)))";
            this._adapter.UpdateCommand.CommandType = global::System.Data.CommandType.Text;
            param = new global::System.Data.SQLite.SQLiteParameter();
            param.ParameterName = "@Jsal_StatusId";
            param.DbType = global::System.Data.DbType.Int64;
            param.DbType = global::System.Data.DbType.Int64;
            param.SourceColumn = "Jsal_StatusId";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::System.Data.SQLite.SQLiteParameter();
            param.ParameterName = "@Jsal_DispStatus";
            param.DbType = global::System.Data.DbType.AnsiString;
            param.DbType = global::System.Data.DbType.AnsiString;
            param.SourceColumn = "Jsal_DispStatus";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::System.Data.SQLite.SQLiteParameter();
            param.ParameterName = "@Jsal_JgegId";
            param.DbType = global::System.Data.DbType.Int64;
            param.DbType = global::System.Data.DbType.Int64;
            param.SourceColumn = "Jsal_JgegId";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::System.Data.SQLite.SQLiteParameter();
            param.ParameterName = "@Jsal_BgnrId";
            param.DbType = global::System.Data.DbType.Int64;
            param.DbType = global::System.Data.DbType.Int64;
            param.SourceColumn = "Jsal_BgnrId";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::System.Data.SQLite.SQLiteParameter();
            param.ParameterName = "@Jsal_Beginsaldo";
            param.DbType = global::System.Data.DbType.Decimal;
            param.DbType = global::System.Data.DbType.Decimal;
            param.SourceColumn = "Jsal_Beginsaldo";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::System.Data.SQLite.SQLiteParameter();
            param.ParameterName = "@Jsal_Eindsaldo";
            param.DbType = global::System.Data.DbType.Decimal;
            param.DbType = global::System.Data.DbType.Decimal;
            param.SourceColumn = "Jsal_Eindsaldo";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::System.Data.SQLite.SQLiteParameter();
            param.ParameterName = "@Jsal_Mutatiedatum";
            param.DbType = global::System.Data.DbType.DateTime;
            param.DbType = global::System.Data.DbType.DateTime;
            param.SourceColumn = "Jsal_Mutatiedatum";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::System.Data.SQLite.SQLiteParameter();
            param.ParameterName = "@Jsal_Opmerking";
            param.DbType = global::System.Data.DbType.AnsiString;
            param.DbType = global::System.Data.DbType.AnsiString;
            param.SourceColumn = "Jsal_Opmerking";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::System.Data.SQLite.SQLiteParameter();
            param.ParameterName = "@Original_Jsal_Id";
            param.DbType = global::System.Data.DbType.Int64;
            param.DbType = global::System.Data.DbType.Int64;
            param.SourceColumn = "Jsal_Id";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::System.Data.SQLite.SQLiteParameter();
            param.ParameterName = "@Original_Jsal_StatusId";
            param.DbType = global::System.Data.DbType.Int64;
            param.DbType = global::System.Data.DbType.Int64;
            param.SourceColumn = "Jsal_StatusId";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::System.Data.SQLite.SQLiteParameter();
            param.ParameterName = "@Original_Jsal_DispStatus";
            param.DbType = global::System.Data.DbType.AnsiString;
            param.DbType = global::System.Data.DbType.AnsiString;
            param.SourceColumn = "Jsal_DispStatus";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::System.Data.SQLite.SQLiteParameter();
            param.ParameterName = "@Original_Jsal_JgegId";
            param.DbType = global::System.Data.DbType.Int64;
            param.DbType = global::System.Data.DbType.Int64;
            param.SourceColumn = "Jsal_JgegId";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::System.Data.SQLite.SQLiteParameter();
            param.ParameterName = "@Original_Jsal_BgnrId";
            param.DbType = global::System.Data.DbType.Int64;
            param.DbType = global::System.Data.DbType.Int64;
            param.SourceColumn = "Jsal_BgnrId";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::System.Data.SQLite.SQLiteParameter();
            param.ParameterName = "@Original_Jsal_Beginsaldo";
            param.DbType = global::System.Data.DbType.Decimal;
            param.DbType = global::System.Data.DbType.Decimal;
            param.SourceColumn = "Jsal_Beginsaldo";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::System.Data.SQLite.SQLiteParameter();
            param.ParameterName = "@Original_Jsal_Eindsaldo";
            param.DbType = global::System.Data.DbType.Decimal;
            param.DbType = global::System.Data.DbType.Decimal;
            param.SourceColumn = "Jsal_Eindsaldo";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::System.Data.SQLite.SQLiteParameter();
            param.ParameterName = "@Original_Jsal_Mutatiedatum";
            param.DbType = global::System.Data.DbType.DateTime;
            param.DbType = global::System.Data.DbType.DateTime;
            param.SourceColumn = "Jsal_Mutatiedatum";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::System.Data.SQLite.SQLiteParameter();
            param.ParameterName = "@IsNull_Jsal_Opmerking";
            param.DbType = global::System.Data.DbType.Int32;
            param.DbType = global::System.Data.DbType.Int32;
            param.SourceColumn = "Jsal_Opmerking";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::System.Data.SQLite.SQLiteParameter();
            param.ParameterName = "@Original_Jsal_Opmerking";
            param.DbType = global::System.Data.DbType.AnsiString;
            param.DbType = global::System.Data.DbType.AnsiString;
            param.SourceColumn = "Jsal_Opmerking";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitConnection() {
            this._connection = new global::System.Data.SQLite.SQLiteConnection();
            this._connection.ConnectionString = global::Cmbap.Properties.Settings.Default.Cmbap_dataConnectionString;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitCommandCollection() {
            this._commandCollection = new global::System.Data.SQLite.SQLiteCommand[1];
            this._commandCollection[0] = new global::System.Data.SQLite.SQLiteCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "SELECT [Jsal_Id], [Jsal_StatusId], [Jsal_DispStatus], [Jsal_JgegId], [Jsal_BgnrId" +
                "], [Jsal_Beginsaldo], [Jsal_Eindsaldo], [Jsal_Mutatiedatum], [Jsal_Opmerking] FR" +
                "OM [Jaarsaldo]";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(_Cmbap_dataDataSet.JaarsaldoDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual _Cmbap_dataDataSet.JaarsaldoDataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            _Cmbap_dataDataSet.JaarsaldoDataTable dataTable = new _Cmbap_dataDataSet.JaarsaldoDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(_Cmbap_dataDataSet.JaarsaldoDataTable dataTable) {
            return this.Adapter.Update(dataTable);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(_Cmbap_dataDataSet dataSet) {
            return this.Adapter.Update(dataSet, "Jaarsaldo");
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow dataRow) {
            return this.Adapter.Update(new global::System.Data.DataRow[] {
                        dataRow});
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow[] dataRows) {
            return this.Adapter.Update(dataRows);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Delete, true)]
        public virtual int Delete(long Original_Jsal_Id, long Original_Jsal_StatusId, string Original_Jsal_DispStatus, long Original_Jsal_JgegId, long Original_Jsal_BgnrId, decimal Original_Jsal_Beginsaldo, decimal Original_Jsal_Eindsaldo, System.DateTime Original_Jsal_Mutatiedatum, string Original_Jsal_Opmerking) {
            this.Adapter.DeleteCommand.Parameters[0].Value = ((long)(Original_Jsal_Id));
            this.Adapter.DeleteCommand.Parameters[1].Value = ((long)(Original_Jsal_StatusId));
            if ((Original_Jsal_DispStatus == null)) {
                throw new global::System.ArgumentNullException("Original_Jsal_DispStatus");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[2].Value = ((string)(Original_Jsal_DispStatus));
            }
            this.Adapter.DeleteCommand.Parameters[3].Value = ((long)(Original_Jsal_JgegId));
            this.Adapter.DeleteCommand.Parameters[4].Value = ((long)(Original_Jsal_BgnrId));
            this.Adapter.DeleteCommand.Parameters[5].Value = ((decimal)(Original_Jsal_Beginsaldo));
            this.Adapter.DeleteCommand.Parameters[6].Value = ((decimal)(Original_Jsal_Eindsaldo));
            this.Adapter.DeleteCommand.Parameters[7].Value = ((System.DateTime)(Original_Jsal_Mutatiedatum));
            if ((Original_Jsal_Opmerking == null)) {
                this.Adapter.DeleteCommand.Parameters[8].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[9].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[8].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[9].Value = ((string)(Original_Jsal_Opmerking));
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.DeleteCommand.Connection.State;
            if (((this.Adapter.DeleteCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.DeleteCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.DeleteCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.DeleteCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Insert, true)]
        public virtual int Insert(long Jsal_StatusId, string Jsal_DispStatus, long Jsal_JgegId, long Jsal_BgnrId, decimal Jsal_Beginsaldo, decimal Jsal_Eindsaldo, System.DateTime Jsal_Mutatiedatum, string Jsal_Opmerking) {
            this.Adapter.InsertCommand.Parameters[0].Value = ((long)(Jsal_StatusId));
            if ((Jsal_DispStatus == null)) {
                throw new global::System.ArgumentNullException("Jsal_DispStatus");
            }
            else {
                this.Adapter.InsertCommand.Parameters[1].Value = ((string)(Jsal_DispStatus));
            }
            this.Adapter.InsertCommand.Parameters[2].Value = ((long)(Jsal_JgegId));
            this.Adapter.InsertCommand.Parameters[3].Value = ((long)(Jsal_BgnrId));
            this.Adapter.InsertCommand.Parameters[4].Value = ((decimal)(Jsal_Beginsaldo));
            this.Adapter.InsertCommand.Parameters[5].Value = ((decimal)(Jsal_Eindsaldo));
            this.Adapter.InsertCommand.Parameters[6].Value = ((System.DateTime)(Jsal_Mutatiedatum));
            if ((Jsal_Opmerking == null)) {
                this.Adapter.InsertCommand.Parameters[7].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[7].Value = ((string)(Jsal_Opmerking));
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.InsertCommand.Connection.State;
            if (((this.Adapter.InsertCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.InsertCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.InsertCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.InsertCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(
                    long Jsal_StatusId, 
                    string Jsal_DispStatus, 
                    long Jsal_JgegId, 
                    long Jsal_BgnrId, 
                    decimal Jsal_Beginsaldo, 
                    decimal Jsal_Eindsaldo, 
                    System.DateTime Jsal_Mutatiedatum, 
                    string Jsal_Opmerking, 
                    long Original_Jsal_Id, 
                    long Original_Jsal_StatusId, 
                    string Original_Jsal_DispStatus, 
                    long Original_Jsal_JgegId, 
                    long Original_Jsal_BgnrId, 
                    decimal Original_Jsal_Beginsaldo, 
                    decimal Original_Jsal_Eindsaldo, 
                    System.DateTime Original_Jsal_Mutatiedatum, 
                    string Original_Jsal_Opmerking) {
            this.Adapter.UpdateCommand.Parameters[0].Value = ((long)(Jsal_StatusId));
            if ((Jsal_DispStatus == null)) {
                throw new global::System.ArgumentNullException("Jsal_DispStatus");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[1].Value = ((string)(Jsal_DispStatus));
            }
            this.Adapter.UpdateCommand.Parameters[2].Value = ((long)(Jsal_JgegId));
            this.Adapter.UpdateCommand.Parameters[3].Value = ((long)(Jsal_BgnrId));
            this.Adapter.UpdateCommand.Parameters[4].Value = ((decimal)(Jsal_Beginsaldo));
            this.Adapter.UpdateCommand.Parameters[5].Value = ((decimal)(Jsal_Eindsaldo));
            this.Adapter.UpdateCommand.Parameters[6].Value = ((System.DateTime)(Jsal_Mutatiedatum));
            if ((Jsal_Opmerking == null)) {
                this.Adapter.UpdateCommand.Parameters[7].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[7].Value = ((string)(Jsal_Opmerking));
            }
            this.Adapter.UpdateCommand.Parameters[8].Value = ((long)(Original_Jsal_Id));
            this.Adapter.UpdateCommand.Parameters[9].Value = ((long)(Original_Jsal_StatusId));
            if ((Original_Jsal_DispStatus == null)) {
                throw new global::System.ArgumentNullException("Original_Jsal_DispStatus");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[10].Value = ((string)(Original_Jsal_DispStatus));
            }
            this.Adapter.UpdateCommand.Parameters[11].Value = ((long)(Original_Jsal_JgegId));
            this.Adapter.UpdateCommand.Parameters[12].Value = ((long)(Original_Jsal_BgnrId));
            this.Adapter.UpdateCommand.Parameters[13].Value = ((decimal)(Original_Jsal_Beginsaldo));
            this.Adapter.UpdateCommand.Parameters[14].Value = ((decimal)(Original_Jsal_Eindsaldo));
            this.Adapter.UpdateCommand.Parameters[15].Value = ((System.DateTime)(Original_Jsal_Mutatiedatum));
            if ((Original_Jsal_Opmerking == null)) {
                this.Adapter.UpdateCommand.Parameters[16].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[17].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[16].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[17].Value = ((string)(Original_Jsal_Opmerking));
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.UpdateCommand.Connection.State;
            if (((this.Adapter.UpdateCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.UpdateCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.UpdateCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.UpdateCommand.Connection.Close();
                }
            }
        }
    }
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class Klant_BegunstigdeTableAdapter : global::System.ComponentModel.Component {
        
        private global::System.Data.SQLite.SQLiteDataAdapter _adapter;
        
        private global::System.Data.SQLite.SQLiteConnection _connection;
        
        private global::System.Data.SQLite.SQLiteTransaction _transaction;
        
        private global::System.Data.SQLite.SQLiteCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public Klant_BegunstigdeTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected internal global::System.Data.SQLite.SQLiteDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal global::System.Data.SQLite.SQLiteConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::System.Data.SQLite.SQLiteCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal global::System.Data.SQLite.SQLiteTransaction Transaction {
            get {
                return this._transaction;
            }
            set {
                this._transaction = value;
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    this.CommandCollection[i].Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.DeleteCommand != null))) {
                    this.Adapter.DeleteCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.InsertCommand != null))) {
                    this.Adapter.InsertCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.UpdateCommand != null))) {
                    this.Adapter.UpdateCommand.Transaction = this._transaction;
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected global::System.Data.SQLite.SQLiteCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitAdapter() {
            this._adapter = new global::System.Data.SQLite.SQLiteDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "Klant_Begunstigde";
            tableMapping.ColumnMappings.Add("KlBg_Id", "KlBg_Id");
            tableMapping.ColumnMappings.Add("KlBg_StatusId", "KlBg_StatusId");
            tableMapping.ColumnMappings.Add("KlBg_DispStatus", "KlBg_DispStatus");
            tableMapping.ColumnMappings.Add("KlBg_KlantJN", "KlBg_KlantJN");
            tableMapping.ColumnMappings.Add("KlBg_BegunstigdeJN", "KlBg_BegunstigdeJN");
            tableMapping.ColumnMappings.Add("KlBg_SysteemKlBgJN", "KlBg_SysteemKlBgJN");
            tableMapping.ColumnMappings.Add("KlBg_Scipio_Lokaalnr", "KlBg_Scipio_Lokaalnr");
            tableMapping.ColumnMappings.Add("KlBg_DebNr", "KlBg_DebNr");
            tableMapping.ColumnMappings.Add("KlBg_CredNr", "KlBg_CredNr");
            tableMapping.ColumnMappings.Add("KlBg_Voorvoegsel", "KlBg_Voorvoegsel");
            tableMapping.ColumnMappings.Add("KlBg_Voorletters", "KlBg_Voorletters");
            tableMapping.ColumnMappings.Add("KlBg_Tussenvoegsel", "KlBg_Tussenvoegsel");
            tableMapping.ColumnMappings.Add("KlBg_Achternaam", "KlBg_Achternaam");
            tableMapping.ColumnMappings.Add("KlBg_VVTA", "KlBg_VVTA");
            tableMapping.ColumnMappings.Add("KlBg_AVVT", "KlBg_AVVT");
            tableMapping.ColumnMappings.Add("KlBg_Straatnaam", "KlBg_Straatnaam");
            tableMapping.ColumnMappings.Add("KlBg_Huisnummer", "KlBg_Huisnummer");
            tableMapping.ColumnMappings.Add("KlBg_Huisnummertoevoeging", "KlBg_Huisnummertoevoeging");
            tableMapping.ColumnMappings.Add("KlBg_Adres", "KlBg_Adres");
            tableMapping.ColumnMappings.Add("KlBg_Postcode", "KlBg_Postcode");
            tableMapping.ColumnMappings.Add("KlBg_Woonplaats", "KlBg_Woonplaats");
            tableMapping.ColumnMappings.Add("KlBg_Telefoonnummer", "KlBg_Telefoonnummer");
            tableMapping.ColumnMappings.Add("KlBg_Emailadres", "KlBg_Emailadres");
            tableMapping.ColumnMappings.Add("KlBg_Extra_informatie", "KlBg_Extra_informatie");
            tableMapping.ColumnMappings.Add("KlBg_SysteemKlBgDispJN", "KlBg_SysteemKlBgDispJN");
            tableMapping.ColumnMappings.Add("KlBg_KlDispJN", "KlBg_KlDispJN");
            tableMapping.ColumnMappings.Add("KlBg_BgDispJN", "KlBg_BgDispJN");
            tableMapping.ColumnMappings.Add("KlBg_Mutatiedatum", "KlBg_Mutatiedatum");
            tableMapping.ColumnMappings.Add("KlBg_Opmerking", "KlBg_Opmerking");
            this._adapter.TableMappings.Add(tableMapping);
            this._adapter.DeleteCommand = new global::System.Data.SQLite.SQLiteCommand();
            this._adapter.DeleteCommand.Connection = this.Connection;
            this._adapter.DeleteCommand.CommandText = "DELETE FROM [main].[sqlite_default_schema].[Klant_Begunstigde] WHERE (([KlBg_Id] " +
                "= @Original_KlBg_Id) AND ([KlBg_StatusId] = @Original_KlBg_StatusId) AND ((@IsNu" +
                "ll_KlBg_DispStatus = 1 AND [KlBg_DispStatus] IS NULL) OR ([KlBg_DispStatus] = @O" +
                "riginal_KlBg_DispStatus)) AND ([KlBg_KlantJN] = @Original_KlBg_KlantJN) AND ([Kl" +
                "Bg_BegunstigdeJN] = @Original_KlBg_BegunstigdeJN) AND ((@IsNull_KlBg_SysteemKlBg" +
                "JN = 1 AND [KlBg_SysteemKlBgJN] IS NULL) OR ([KlBg_SysteemKlBgJN] = @Original_Kl" +
                "Bg_SysteemKlBgJN)) AND ((@IsNull_KlBg_Scipio_Lokaalnr = 1 AND [KlBg_Scipio_Lokaa" +
                "lnr] IS NULL) OR ([KlBg_Scipio_Lokaalnr] = @Original_KlBg_Scipio_Lokaalnr)) AND " +
                "((@IsNull_KlBg_DebNr = 1 AND [KlBg_DebNr] IS NULL) OR ([KlBg_DebNr] = @Original_" +
                "KlBg_DebNr)) AND ((@IsNull_KlBg_CredNr = 1 AND [KlBg_CredNr] IS NULL) OR ([KlBg_" +
                "CredNr] = @Original_KlBg_CredNr)) AND ((@IsNull_KlBg_Voorvoegsel = 1 AND [KlBg_V" +
                "oorvoegsel] IS NULL) OR ([KlBg_Voorvoegsel] = @Original_KlBg_Voorvoegsel)) AND (" +
                "(@IsNull_KlBg_Voorletters = 1 AND [KlBg_Voorletters] IS NULL) OR ([KlBg_Voorlett" +
                "ers] = @Original_KlBg_Voorletters)) AND ((@IsNull_KlBg_Tussenvoegsel = 1 AND [Kl" +
                "Bg_Tussenvoegsel] IS NULL) OR ([KlBg_Tussenvoegsel] = @Original_KlBg_Tussenvoegs" +
                "el)) AND ((@IsNull_KlBg_Achternaam = 1 AND [KlBg_Achternaam] IS NULL) OR ([KlBg_" +
                "Achternaam] = @Original_KlBg_Achternaam)) AND ([KlBg_VVTA] = @Original_KlBg_VVTA" +
                ") AND ([KlBg_AVVT] = @Original_KlBg_AVVT) AND ((@IsNull_KlBg_Straatnaam = 1 AND " +
                "[KlBg_Straatnaam] IS NULL) OR ([KlBg_Straatnaam] = @Original_KlBg_Straatnaam)) A" +
                "ND ((@IsNull_KlBg_Huisnummer = 1 AND [KlBg_Huisnummer] IS NULL) OR ([KlBg_Huisnu" +
                "mmer] = @Original_KlBg_Huisnummer)) AND ((@IsNull_KlBg_Huisnummertoevoeging = 1 " +
                "AND [KlBg_Huisnummertoevoeging] IS NULL) OR ([KlBg_Huisnummertoevoeging] = @Orig" +
                "inal_KlBg_Huisnummertoevoeging)) AND ((@IsNull_KlBg_Adres = 1 AND [KlBg_Adres] I" +
                "S NULL) OR ([KlBg_Adres] = @Original_KlBg_Adres)) AND ((@IsNull_KlBg_Postcode = " +
                "1 AND [KlBg_Postcode] IS NULL) OR ([KlBg_Postcode] = @Original_KlBg_Postcode)) A" +
                "ND ((@IsNull_KlBg_Woonplaats = 1 AND [KlBg_Woonplaats] IS NULL) OR ([KlBg_Woonpl" +
                "aats] = @Original_KlBg_Woonplaats)) AND ((@IsNull_KlBg_Telefoonnummer = 1 AND [K" +
                "lBg_Telefoonnummer] IS NULL) OR ([KlBg_Telefoonnummer] = @Original_KlBg_Telefoon" +
                "nummer)) AND ((@IsNull_KlBg_Emailadres = 1 AND [KlBg_Emailadres] IS NULL) OR ([K" +
                "lBg_Emailadres] = @Original_KlBg_Emailadres)) AND ((@IsNull_KlBg_Extra_informati" +
                "e = 1 AND [KlBg_Extra_informatie] IS NULL) OR ([KlBg_Extra_informatie] = @Origin" +
                "al_KlBg_Extra_informatie)) AND ([KlBg_SysteemKlBgDispJN] = @Original_KlBg_Systee" +
                "mKlBgDispJN) AND ([KlBg_KlDispJN] = @Original_KlBg_KlDispJN) AND ([KlBg_BgDispJN" +
                "] = @Original_KlBg_BgDispJN) AND ((@IsNull_KlBg_Mutatiedatum = 1 AND [KlBg_Mutat" +
                "iedatum] IS NULL) OR ([KlBg_Mutatiedatum] = @Original_KlBg_Mutatiedatum)) AND ((" +
                "@IsNull_KlBg_Opmerking = 1 AND [KlBg_Opmerking] IS NULL) OR ([KlBg_Opmerking] = " +
                "@Original_KlBg_Opmerking)))";
            this._adapter.DeleteCommand.CommandType = global::System.Data.CommandType.Text;
            global::System.Data.SQLite.SQLiteParameter param = new global::System.Data.SQLite.SQLiteParameter();
            param.ParameterName = "@Original_KlBg_Id";
            param.DbType = global::System.Data.DbType.Int64;
            param.DbType = global::System.Data.DbType.Int64;
            param.SourceColumn = "KlBg_Id";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::System.Data.SQLite.SQLiteParameter();
            param.ParameterName = "@Original_KlBg_StatusId";
            param.DbType = global::System.Data.DbType.Int64;
            param.DbType = global::System.Data.DbType.Int64;
            param.SourceColumn = "KlBg_StatusId";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::System.Data.SQLite.SQLiteParameter();
            param.ParameterName = "@IsNull_KlBg_DispStatus";
            param.DbType = global::System.Data.DbType.Int32;
            param.DbType = global::System.Data.DbType.Int32;
            param.SourceColumn = "KlBg_DispStatus";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::System.Data.SQLite.SQLiteParameter();
            param.ParameterName = "@Original_KlBg_DispStatus";
            param.DbType = global::System.Data.DbType.AnsiString;
            param.DbType = global::System.Data.DbType.AnsiString;
            param.SourceColumn = "KlBg_DispStatus";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::System.Data.SQLite.SQLiteParameter();
            param.ParameterName = "@Original_KlBg_KlantJN";
            param.DbType = global::System.Data.DbType.Int64;
            param.DbType = global::System.Data.DbType.Int64;
            param.SourceColumn = "KlBg_KlantJN";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::System.Data.SQLite.SQLiteParameter();
            param.ParameterName = "@Original_KlBg_BegunstigdeJN";
            param.DbType = global::System.Data.DbType.Int64;
            param.DbType = global::System.Data.DbType.Int64;
            param.SourceColumn = "KlBg_BegunstigdeJN";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::System.Data.SQLite.SQLiteParameter();
            param.ParameterName = "@IsNull_KlBg_SysteemKlBgJN";
            param.DbType = global::System.Data.DbType.Int32;
            param.DbType = global::System.Data.DbType.Int32;
            param.SourceColumn = "KlBg_SysteemKlBgJN";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::System.Data.SQLite.SQLiteParameter();
            param.ParameterName = "@Original_KlBg_SysteemKlBgJN";
            param.DbType = global::System.Data.DbType.Int64;
            param.DbType = global::System.Data.DbType.Int64;
            param.SourceColumn = "KlBg_SysteemKlBgJN";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::System.Data.SQLite.SQLiteParameter();
            param.ParameterName = "@IsNull_KlBg_Scipio_Lokaalnr";
            param.DbType = global::System.Data.DbType.Int32;
            param.DbType = global::System.Data.DbType.Int32;
            param.SourceColumn = "KlBg_Scipio_Lokaalnr";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::System.Data.SQLite.SQLiteParameter();
            param.ParameterName = "@Original_KlBg_Scipio_Lokaalnr";
            param.DbType = global::System.Data.DbType.Int64;
            param.DbType = global::System.Data.DbType.Int64;
            param.SourceColumn = "KlBg_Scipio_Lokaalnr";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::System.Data.SQLite.SQLiteParameter();
            param.ParameterName = "@IsNull_KlBg_DebNr";
            param.DbType = global::System.Data.DbType.Int32;
            param.DbType = global::System.Data.DbType.Int32;
            param.SourceColumn = "KlBg_DebNr";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::System.Data.SQLite.SQLiteParameter();
            param.ParameterName = "@Original_KlBg_DebNr";
            param.DbType = global::System.Data.DbType.AnsiString;
            param.DbType = global::System.Data.DbType.AnsiString;
            param.SourceColumn = "KlBg_DebNr";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::System.Data.SQLite.SQLiteParameter();
            param.ParameterName = "@IsNull_KlBg_CredNr";
            param.DbType = global::System.Data.DbType.Int32;
            param.DbType = global::System.Data.DbType.Int32;
            param.SourceColumn = "KlBg_CredNr";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::System.Data.SQLite.SQLiteParameter();
            param.ParameterName = "@Original_KlBg_CredNr";
            param.DbType = global::System.Data.DbType.AnsiString;
            param.DbType = global::System.Data.DbType.AnsiString;
            param.SourceColumn = "KlBg_CredNr";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::System.Data.SQLite.SQLiteParameter();
            param.ParameterName = "@IsNull_KlBg_Voorvoegsel";
            param.DbType = global::System.Data.DbType.Int32;
            param.DbType = global::System.Data.DbType.Int32;
            param.SourceColumn = "KlBg_Voorvoegsel";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::System.Data.SQLite.SQLiteParameter();
            param.ParameterName = "@Original_KlBg_Voorvoegsel";
            param.DbType = global::System.Data.DbType.AnsiString;
            param.DbType = global::System.Data.DbType.AnsiString;
            param.SourceColumn = "KlBg_Voorvoegsel";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::System.Data.SQLite.SQLiteParameter();
            param.ParameterName = "@IsNull_KlBg_Voorletters";
            param.DbType = global::System.Data.DbType.Int32;
            param.DbType = global::System.Data.DbType.Int32;
            param.SourceColumn = "KlBg_Voorletters";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::System.Data.SQLite.SQLiteParameter();
            param.ParameterName = "@Original_KlBg_Voorletters";
            param.DbType = global::System.Data.DbType.AnsiString;
            param.DbType = global::System.Data.DbType.AnsiString;
            param.SourceColumn = "KlBg_Voorletters";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::System.Data.SQLite.SQLiteParameter();
            param.ParameterName = "@IsNull_KlBg_Tussenvoegsel";
            param.DbType = global::System.Data.DbType.Int32;
            param.DbType = global::System.Data.DbType.Int32;
            param.SourceColumn = "KlBg_Tussenvoegsel";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::System.Data.SQLite.SQLiteParameter();
            param.ParameterName = "@Original_KlBg_Tussenvoegsel";
            param.DbType = global::System.Data.DbType.AnsiString;
            param.DbType = global::System.Data.DbType.AnsiString;
            param.SourceColumn = "KlBg_Tussenvoegsel";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::System.Data.SQLite.SQLiteParameter();
            param.ParameterName = "@IsNull_KlBg_Achternaam";
            param.DbType = global::System.Data.DbType.Int32;
            param.DbType = global::System.Data.DbType.Int32;
            param.SourceColumn = "KlBg_Achternaam";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::System.Data.SQLite.SQLiteParameter();
            param.ParameterName = "@Original_KlBg_Achternaam";
            param.DbType = global::System.Data.DbType.AnsiString;
            param.DbType = global::System.Data.DbType.AnsiString;
            param.SourceColumn = "KlBg_Achternaam";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::System.Data.SQLite.SQLiteParameter();
            param.ParameterName = "@Original_KlBg_VVTA";
            param.DbType = global::System.Data.DbType.AnsiString;
            param.DbType = global::System.Data.DbType.AnsiString;
            param.SourceColumn = "KlBg_VVTA";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::System.Data.SQLite.SQLiteParameter();
            param.ParameterName = "@Original_KlBg_AVVT";
            param.DbType = global::System.Data.DbType.AnsiString;
            param.DbType = global::System.Data.DbType.AnsiString;
            param.SourceColumn = "KlBg_AVVT";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::System.Data.SQLite.SQLiteParameter();
            param.ParameterName = "@IsNull_KlBg_Straatnaam";
            param.DbType = global::System.Data.DbType.Int32;
            param.DbType = global::System.Data.DbType.Int32;
            param.SourceColumn = "KlBg_Straatnaam";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::System.Data.SQLite.SQLiteParameter();
            param.ParameterName = "@Original_KlBg_Straatnaam";
            param.DbType = global::System.Data.DbType.AnsiString;
            param.DbType = global::System.Data.DbType.AnsiString;
            param.SourceColumn = "KlBg_Straatnaam";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::System.Data.SQLite.SQLiteParameter();
            param.ParameterName = "@IsNull_KlBg_Huisnummer";
            param.DbType = global::System.Data.DbType.Int32;
            param.DbType = global::System.Data.DbType.Int32;
            param.SourceColumn = "KlBg_Huisnummer";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::System.Data.SQLite.SQLiteParameter();
            param.ParameterName = "@Original_KlBg_Huisnummer";
            param.DbType = global::System.Data.DbType.AnsiString;
            param.DbType = global::System.Data.DbType.AnsiString;
            param.SourceColumn = "KlBg_Huisnummer";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::System.Data.SQLite.SQLiteParameter();
            param.ParameterName = "@IsNull_KlBg_Huisnummertoevoeging";
            param.DbType = global::System.Data.DbType.Int32;
            param.DbType = global::System.Data.DbType.Int32;
            param.SourceColumn = "KlBg_Huisnummertoevoeging";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::System.Data.SQLite.SQLiteParameter();
            param.ParameterName = "@Original_KlBg_Huisnummertoevoeging";
            param.DbType = global::System.Data.DbType.AnsiString;
            param.DbType = global::System.Data.DbType.AnsiString;
            param.SourceColumn = "KlBg_Huisnummertoevoeging";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::System.Data.SQLite.SQLiteParameter();
            param.ParameterName = "@IsNull_KlBg_Adres";
            param.DbType = global::System.Data.DbType.Int32;
            param.DbType = global::System.Data.DbType.Int32;
            param.SourceColumn = "KlBg_Adres";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::System.Data.SQLite.SQLiteParameter();
            param.ParameterName = "@Original_KlBg_Adres";
            param.DbType = global::System.Data.DbType.AnsiString;
            param.DbType = global::System.Data.DbType.AnsiString;
            param.SourceColumn = "KlBg_Adres";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::System.Data.SQLite.SQLiteParameter();
            param.ParameterName = "@IsNull_KlBg_Postcode";
            param.DbType = global::System.Data.DbType.Int32;
            param.DbType = global::System.Data.DbType.Int32;
            param.SourceColumn = "KlBg_Postcode";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::System.Data.SQLite.SQLiteParameter();
            param.ParameterName = "@Original_KlBg_Postcode";
            param.DbType = global::System.Data.DbType.AnsiString;
            param.DbType = global::System.Data.DbType.AnsiString;
            param.SourceColumn = "KlBg_Postcode";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::System.Data.SQLite.SQLiteParameter();
            param.ParameterName = "@IsNull_KlBg_Woonplaats";
            param.DbType = global::System.Data.DbType.Int32;
            param.DbType = global::System.Data.DbType.Int32;
            param.SourceColumn = "KlBg_Woonplaats";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::System.Data.SQLite.SQLiteParameter();
            param.ParameterName = "@Original_KlBg_Woonplaats";
            param.DbType = global::System.Data.DbType.AnsiString;
            param.DbType = global::System.Data.DbType.AnsiString;
            param.SourceColumn = "KlBg_Woonplaats";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::System.Data.SQLite.SQLiteParameter();
            param.ParameterName = "@IsNull_KlBg_Telefoonnummer";
            param.DbType = global::System.Data.DbType.Int32;
            param.DbType = global::System.Data.DbType.Int32;
            param.SourceColumn = "KlBg_Telefoonnummer";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::System.Data.SQLite.SQLiteParameter();
            param.ParameterName = "@Original_KlBg_Telefoonnummer";
            param.DbType = global::System.Data.DbType.AnsiString;
            param.DbType = global::System.Data.DbType.AnsiString;
            param.SourceColumn = "KlBg_Telefoonnummer";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::System.Data.SQLite.SQLiteParameter();
            param.ParameterName = "@IsNull_KlBg_Emailadres";
            param.DbType = global::System.Data.DbType.Int32;
            param.DbType = global::System.Data.DbType.Int32;
            param.SourceColumn = "KlBg_Emailadres";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::System.Data.SQLite.SQLiteParameter();
            param.ParameterName = "@Original_KlBg_Emailadres";
            param.DbType = global::System.Data.DbType.AnsiString;
            param.DbType = global::System.Data.DbType.AnsiString;
            param.SourceColumn = "KlBg_Emailadres";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::System.Data.SQLite.SQLiteParameter();
            param.ParameterName = "@IsNull_KlBg_Extra_informatie";
            param.DbType = global::System.Data.DbType.Int32;
            param.DbType = global::System.Data.DbType.Int32;
            param.SourceColumn = "KlBg_Extra_informatie";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::System.Data.SQLite.SQLiteParameter();
            param.ParameterName = "@Original_KlBg_Extra_informatie";
            param.DbType = global::System.Data.DbType.AnsiString;
            param.DbType = global::System.Data.DbType.AnsiString;
            param.SourceColumn = "KlBg_Extra_informatie";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::System.Data.SQLite.SQLiteParameter();
            param.ParameterName = "@Original_KlBg_SysteemKlBgDispJN";
            param.DbType = global::System.Data.DbType.AnsiString;
            param.DbType = global::System.Data.DbType.AnsiString;
            param.SourceColumn = "KlBg_SysteemKlBgDispJN";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::System.Data.SQLite.SQLiteParameter();
            param.ParameterName = "@Original_KlBg_KlDispJN";
            param.DbType = global::System.Data.DbType.AnsiString;
            param.DbType = global::System.Data.DbType.AnsiString;
            param.SourceColumn = "KlBg_KlDispJN";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::System.Data.SQLite.SQLiteParameter();
            param.ParameterName = "@Original_KlBg_BgDispJN";
            param.DbType = global::System.Data.DbType.AnsiString;
            param.DbType = global::System.Data.DbType.AnsiString;
            param.SourceColumn = "KlBg_BgDispJN";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::System.Data.SQLite.SQLiteParameter();
            param.ParameterName = "@IsNull_KlBg_Mutatiedatum";
            param.DbType = global::System.Data.DbType.Int32;
            param.DbType = global::System.Data.DbType.Int32;
            param.SourceColumn = "KlBg_Mutatiedatum";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::System.Data.SQLite.SQLiteParameter();
            param.ParameterName = "@Original_KlBg_Mutatiedatum";
            param.DbType = global::System.Data.DbType.DateTime;
            param.DbType = global::System.Data.DbType.DateTime;
            param.SourceColumn = "KlBg_Mutatiedatum";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::System.Data.SQLite.SQLiteParameter();
            param.ParameterName = "@IsNull_KlBg_Opmerking";
            param.DbType = global::System.Data.DbType.Int32;
            param.DbType = global::System.Data.DbType.Int32;
            param.SourceColumn = "KlBg_Opmerking";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::System.Data.SQLite.SQLiteParameter();
            param.ParameterName = "@Original_KlBg_Opmerking";
            param.DbType = global::System.Data.DbType.AnsiString;
            param.DbType = global::System.Data.DbType.AnsiString;
            param.SourceColumn = "KlBg_Opmerking";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            this._adapter.InsertCommand = new global::System.Data.SQLite.SQLiteCommand();
            this._adapter.InsertCommand.Connection = this.Connection;
            this._adapter.InsertCommand.CommandText = @"INSERT INTO [main].[sqlite_default_schema].[Klant_Begunstigde] ([KlBg_StatusId], [KlBg_DispStatus], [KlBg_KlantJN], [KlBg_BegunstigdeJN], [KlBg_SysteemKlBgJN], [KlBg_Scipio_Lokaalnr], [KlBg_DebNr], [KlBg_CredNr], [KlBg_Voorvoegsel], [KlBg_Voorletters], [KlBg_Tussenvoegsel], [KlBg_Achternaam], [KlBg_VVTA], [KlBg_AVVT], [KlBg_Straatnaam], [KlBg_Huisnummer], [KlBg_Huisnummertoevoeging], [KlBg_Adres], [KlBg_Postcode], [KlBg_Woonplaats], [KlBg_Telefoonnummer], [KlBg_Emailadres], [KlBg_Extra_informatie], [KlBg_SysteemKlBgDispJN], [KlBg_KlDispJN], [KlBg_BgDispJN], [KlBg_Mutatiedatum], [KlBg_Opmerking]) VALUES (@KlBg_StatusId, @KlBg_DispStatus, @KlBg_KlantJN, @KlBg_BegunstigdeJN, @KlBg_SysteemKlBgJN, @KlBg_Scipio_Lokaalnr, @KlBg_DebNr, @KlBg_CredNr, @KlBg_Voorvoegsel, @KlBg_Voorletters, @KlBg_Tussenvoegsel, @KlBg_Achternaam, @KlBg_VVTA, @KlBg_AVVT, @KlBg_Straatnaam, @KlBg_Huisnummer, @KlBg_Huisnummertoevoeging, @KlBg_Adres, @KlBg_Postcode, @KlBg_Woonplaats, @KlBg_Telefoonnummer, @KlBg_Emailadres, @KlBg_Extra_informatie, @KlBg_SysteemKlBgDispJN, @KlBg_KlDispJN, @KlBg_BgDispJN, @KlBg_Mutatiedatum, @KlBg_Opmerking)";
            this._adapter.InsertCommand.CommandType = global::System.Data.CommandType.Text;
            param = new global::System.Data.SQLite.SQLiteParameter();
            param.ParameterName = "@KlBg_StatusId";
            param.DbType = global::System.Data.DbType.Int64;
            param.DbType = global::System.Data.DbType.Int64;
            param.SourceColumn = "KlBg_StatusId";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::System.Data.SQLite.SQLiteParameter();
            param.ParameterName = "@KlBg_DispStatus";
            param.DbType = global::System.Data.DbType.AnsiString;
            param.DbType = global::System.Data.DbType.AnsiString;
            param.SourceColumn = "KlBg_DispStatus";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::System.Data.SQLite.SQLiteParameter();
            param.ParameterName = "@KlBg_KlantJN";
            param.DbType = global::System.Data.DbType.Int64;
            param.DbType = global::System.Data.DbType.Int64;
            param.SourceColumn = "KlBg_KlantJN";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::System.Data.SQLite.SQLiteParameter();
            param.ParameterName = "@KlBg_BegunstigdeJN";
            param.DbType = global::System.Data.DbType.Int64;
            param.DbType = global::System.Data.DbType.Int64;
            param.SourceColumn = "KlBg_BegunstigdeJN";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::System.Data.SQLite.SQLiteParameter();
            param.ParameterName = "@KlBg_SysteemKlBgJN";
            param.DbType = global::System.Data.DbType.Int64;
            param.DbType = global::System.Data.DbType.Int64;
            param.SourceColumn = "KlBg_SysteemKlBgJN";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::System.Data.SQLite.SQLiteParameter();
            param.ParameterName = "@KlBg_Scipio_Lokaalnr";
            param.DbType = global::System.Data.DbType.Int64;
            param.DbType = global::System.Data.DbType.Int64;
            param.SourceColumn = "KlBg_Scipio_Lokaalnr";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::System.Data.SQLite.SQLiteParameter();
            param.ParameterName = "@KlBg_DebNr";
            param.DbType = global::System.Data.DbType.AnsiString;
            param.DbType = global::System.Data.DbType.AnsiString;
            param.SourceColumn = "KlBg_DebNr";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::System.Data.SQLite.SQLiteParameter();
            param.ParameterName = "@KlBg_CredNr";
            param.DbType = global::System.Data.DbType.AnsiString;
            param.DbType = global::System.Data.DbType.AnsiString;
            param.SourceColumn = "KlBg_CredNr";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::System.Data.SQLite.SQLiteParameter();
            param.ParameterName = "@KlBg_Voorvoegsel";
            param.DbType = global::System.Data.DbType.AnsiString;
            param.DbType = global::System.Data.DbType.AnsiString;
            param.SourceColumn = "KlBg_Voorvoegsel";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::System.Data.SQLite.SQLiteParameter();
            param.ParameterName = "@KlBg_Voorletters";
            param.DbType = global::System.Data.DbType.AnsiString;
            param.DbType = global::System.Data.DbType.AnsiString;
            param.SourceColumn = "KlBg_Voorletters";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::System.Data.SQLite.SQLiteParameter();
            param.ParameterName = "@KlBg_Tussenvoegsel";
            param.DbType = global::System.Data.DbType.AnsiString;
            param.DbType = global::System.Data.DbType.AnsiString;
            param.SourceColumn = "KlBg_Tussenvoegsel";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::System.Data.SQLite.SQLiteParameter();
            param.ParameterName = "@KlBg_Achternaam";
            param.DbType = global::System.Data.DbType.AnsiString;
            param.DbType = global::System.Data.DbType.AnsiString;
            param.SourceColumn = "KlBg_Achternaam";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::System.Data.SQLite.SQLiteParameter();
            param.ParameterName = "@KlBg_VVTA";
            param.DbType = global::System.Data.DbType.AnsiString;
            param.DbType = global::System.Data.DbType.AnsiString;
            param.SourceColumn = "KlBg_VVTA";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::System.Data.SQLite.SQLiteParameter();
            param.ParameterName = "@KlBg_AVVT";
            param.DbType = global::System.Data.DbType.AnsiString;
            param.DbType = global::System.Data.DbType.AnsiString;
            param.SourceColumn = "KlBg_AVVT";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::System.Data.SQLite.SQLiteParameter();
            param.ParameterName = "@KlBg_Straatnaam";
            param.DbType = global::System.Data.DbType.AnsiString;
            param.DbType = global::System.Data.DbType.AnsiString;
            param.SourceColumn = "KlBg_Straatnaam";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::System.Data.SQLite.SQLiteParameter();
            param.ParameterName = "@KlBg_Huisnummer";
            param.DbType = global::System.Data.DbType.AnsiString;
            param.DbType = global::System.Data.DbType.AnsiString;
            param.SourceColumn = "KlBg_Huisnummer";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::System.Data.SQLite.SQLiteParameter();
            param.ParameterName = "@KlBg_Huisnummertoevoeging";
            param.DbType = global::System.Data.DbType.AnsiString;
            param.DbType = global::System.Data.DbType.AnsiString;
            param.SourceColumn = "KlBg_Huisnummertoevoeging";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::System.Data.SQLite.SQLiteParameter();
            param.ParameterName = "@KlBg_Adres";
            param.DbType = global::System.Data.DbType.AnsiString;
            param.DbType = global::System.Data.DbType.AnsiString;
            param.SourceColumn = "KlBg_Adres";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::System.Data.SQLite.SQLiteParameter();
            param.ParameterName = "@KlBg_Postcode";
            param.DbType = global::System.Data.DbType.AnsiString;
            param.DbType = global::System.Data.DbType.AnsiString;
            param.SourceColumn = "KlBg_Postcode";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::System.Data.SQLite.SQLiteParameter();
            param.ParameterName = "@KlBg_Woonplaats";
            param.DbType = global::System.Data.DbType.AnsiString;
            param.DbType = global::System.Data.DbType.AnsiString;
            param.SourceColumn = "KlBg_Woonplaats";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::System.Data.SQLite.SQLiteParameter();
            param.ParameterName = "@KlBg_Telefoonnummer";
            param.DbType = global::System.Data.DbType.AnsiString;
            param.DbType = global::System.Data.DbType.AnsiString;
            param.SourceColumn = "KlBg_Telefoonnummer";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::System.Data.SQLite.SQLiteParameter();
            param.ParameterName = "@KlBg_Emailadres";
            param.DbType = global::System.Data.DbType.AnsiString;
            param.DbType = global::System.Data.DbType.AnsiString;
            param.SourceColumn = "KlBg_Emailadres";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::System.Data.SQLite.SQLiteParameter();
            param.ParameterName = "@KlBg_Extra_informatie";
            param.DbType = global::System.Data.DbType.AnsiString;
            param.DbType = global::System.Data.DbType.AnsiString;
            param.SourceColumn = "KlBg_Extra_informatie";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::System.Data.SQLite.SQLiteParameter();
            param.ParameterName = "@KlBg_SysteemKlBgDispJN";
            param.DbType = global::System.Data.DbType.AnsiString;
            param.DbType = global::System.Data.DbType.AnsiString;
            param.SourceColumn = "KlBg_SysteemKlBgDispJN";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::System.Data.SQLite.SQLiteParameter();
            param.ParameterName = "@KlBg_KlDispJN";
            param.DbType = global::System.Data.DbType.AnsiString;
            param.DbType = global::System.Data.DbType.AnsiString;
            param.SourceColumn = "KlBg_KlDispJN";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::System.Data.SQLite.SQLiteParameter();
            param.ParameterName = "@KlBg_BgDispJN";
            param.DbType = global::System.Data.DbType.AnsiString;
            param.DbType = global::System.Data.DbType.AnsiString;
            param.SourceColumn = "KlBg_BgDispJN";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::System.Data.SQLite.SQLiteParameter();
            param.ParameterName = "@KlBg_Mutatiedatum";
            param.DbType = global::System.Data.DbType.DateTime;
            param.DbType = global::System.Data.DbType.DateTime;
            param.SourceColumn = "KlBg_Mutatiedatum";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::System.Data.SQLite.SQLiteParameter();
            param.ParameterName = "@KlBg_Opmerking";
            param.DbType = global::System.Data.DbType.AnsiString;
            param.DbType = global::System.Data.DbType.AnsiString;
            param.SourceColumn = "KlBg_Opmerking";
            this._adapter.InsertCommand.Parameters.Add(param);
            this._adapter.UpdateCommand = new global::System.Data.SQLite.SQLiteCommand();
            this._adapter.UpdateCommand.Connection = this.Connection;
            this._adapter.UpdateCommand.CommandText = "UPDATE [main].[sqlite_default_schema].[Klant_Begunstigde] SET [KlBg_StatusId] = @" +
                "KlBg_StatusId, [KlBg_DispStatus] = @KlBg_DispStatus, [KlBg_KlantJN] = @KlBg_Klan" +
                "tJN, [KlBg_BegunstigdeJN] = @KlBg_BegunstigdeJN, [KlBg_SysteemKlBgJN] = @KlBg_Sy" +
                "steemKlBgJN, [KlBg_Scipio_Lokaalnr] = @KlBg_Scipio_Lokaalnr, [KlBg_DebNr] = @KlB" +
                "g_DebNr, [KlBg_CredNr] = @KlBg_CredNr, [KlBg_Voorvoegsel] = @KlBg_Voorvoegsel, [" +
                "KlBg_Voorletters] = @KlBg_Voorletters, [KlBg_Tussenvoegsel] = @KlBg_Tussenvoegse" +
                "l, [KlBg_Achternaam] = @KlBg_Achternaam, [KlBg_VVTA] = @KlBg_VVTA, [KlBg_AVVT] =" +
                " @KlBg_AVVT, [KlBg_Straatnaam] = @KlBg_Straatnaam, [KlBg_Huisnummer] = @KlBg_Hui" +
                "snummer, [KlBg_Huisnummertoevoeging] = @KlBg_Huisnummertoevoeging, [KlBg_Adres] " +
                "= @KlBg_Adres, [KlBg_Postcode] = @KlBg_Postcode, [KlBg_Woonplaats] = @KlBg_Woonp" +
                "laats, [KlBg_Telefoonnummer] = @KlBg_Telefoonnummer, [KlBg_Emailadres] = @KlBg_E" +
                "mailadres, [KlBg_Extra_informatie] = @KlBg_Extra_informatie, [KlBg_SysteemKlBgDi" +
                "spJN] = @KlBg_SysteemKlBgDispJN, [KlBg_KlDispJN] = @KlBg_KlDispJN, [KlBg_BgDispJ" +
                "N] = @KlBg_BgDispJN, [KlBg_Mutatiedatum] = @KlBg_Mutatiedatum, [KlBg_Opmerking] " +
                "= @KlBg_Opmerking WHERE (([KlBg_Id] = @Original_KlBg_Id) AND ([KlBg_StatusId] = " +
                "@Original_KlBg_StatusId) AND ((@IsNull_KlBg_DispStatus = 1 AND [KlBg_DispStatus]" +
                " IS NULL) OR ([KlBg_DispStatus] = @Original_KlBg_DispStatus)) AND ([KlBg_KlantJN" +
                "] = @Original_KlBg_KlantJN) AND ([KlBg_BegunstigdeJN] = @Original_KlBg_Begunstig" +
                "deJN) AND ((@IsNull_KlBg_SysteemKlBgJN = 1 AND [KlBg_SysteemKlBgJN] IS NULL) OR " +
                "([KlBg_SysteemKlBgJN] = @Original_KlBg_SysteemKlBgJN)) AND ((@IsNull_KlBg_Scipio" +
                "_Lokaalnr = 1 AND [KlBg_Scipio_Lokaalnr] IS NULL) OR ([KlBg_Scipio_Lokaalnr] = @" +
                "Original_KlBg_Scipio_Lokaalnr)) AND ((@IsNull_KlBg_DebNr = 1 AND [KlBg_DebNr] IS" +
                " NULL) OR ([KlBg_DebNr] = @Original_KlBg_DebNr)) AND ((@IsNull_KlBg_CredNr = 1 A" +
                "ND [KlBg_CredNr] IS NULL) OR ([KlBg_CredNr] = @Original_KlBg_CredNr)) AND ((@IsN" +
                "ull_KlBg_Voorvoegsel = 1 AND [KlBg_Voorvoegsel] IS NULL) OR ([KlBg_Voorvoegsel] " +
                "= @Original_KlBg_Voorvoegsel)) AND ((@IsNull_KlBg_Voorletters = 1 AND [KlBg_Voor" +
                "letters] IS NULL) OR ([KlBg_Voorletters] = @Original_KlBg_Voorletters)) AND ((@I" +
                "sNull_KlBg_Tussenvoegsel = 1 AND [KlBg_Tussenvoegsel] IS NULL) OR ([KlBg_Tussenv" +
                "oegsel] = @Original_KlBg_Tussenvoegsel)) AND ((@IsNull_KlBg_Achternaam = 1 AND [" +
                "KlBg_Achternaam] IS NULL) OR ([KlBg_Achternaam] = @Original_KlBg_Achternaam)) AN" +
                "D ([KlBg_VVTA] = @Original_KlBg_VVTA) AND ([KlBg_AVVT] = @Original_KlBg_AVVT) AN" +
                "D ((@IsNull_KlBg_Straatnaam = 1 AND [KlBg_Straatnaam] IS NULL) OR ([KlBg_Straatn" +
                "aam] = @Original_KlBg_Straatnaam)) AND ((@IsNull_KlBg_Huisnummer = 1 AND [KlBg_H" +
                "uisnummer] IS NULL) OR ([KlBg_Huisnummer] = @Original_KlBg_Huisnummer)) AND ((@I" +
                "sNull_KlBg_Huisnummertoevoeging = 1 AND [KlBg_Huisnummertoevoeging] IS NULL) OR " +
                "([KlBg_Huisnummertoevoeging] = @Original_KlBg_Huisnummertoevoeging)) AND ((@IsNu" +
                "ll_KlBg_Adres = 1 AND [KlBg_Adres] IS NULL) OR ([KlBg_Adres] = @Original_KlBg_Ad" +
                "res)) AND ((@IsNull_KlBg_Postcode = 1 AND [KlBg_Postcode] IS NULL) OR ([KlBg_Pos" +
                "tcode] = @Original_KlBg_Postcode)) AND ((@IsNull_KlBg_Woonplaats = 1 AND [KlBg_W" +
                "oonplaats] IS NULL) OR ([KlBg_Woonplaats] = @Original_KlBg_Woonplaats)) AND ((@I" +
                "sNull_KlBg_Telefoonnummer = 1 AND [KlBg_Telefoonnummer] IS NULL) OR ([KlBg_Telef" +
                "oonnummer] = @Original_KlBg_Telefoonnummer)) AND ((@IsNull_KlBg_Emailadres = 1 A" +
                "ND [KlBg_Emailadres] IS NULL) OR ([KlBg_Emailadres] = @Original_KlBg_Emailadres)" +
                ") AND ((@IsNull_KlBg_Extra_informatie = 1 AND [KlBg_Extra_informatie] IS NULL) O" +
                "R ([KlBg_Extra_informatie] = @Original_KlBg_Extra_informatie)) AND ([KlBg_Systee" +
                "mKlBgDispJN] = @Original_KlBg_SysteemKlBgDispJN) AND ([KlBg_KlDispJN] = @Origina" +
                "l_KlBg_KlDispJN) AND ([KlBg_BgDispJN] = @Original_KlBg_BgDispJN) AND ((@IsNull_K" +
                "lBg_Mutatiedatum = 1 AND [KlBg_Mutatiedatum] IS NULL) OR ([KlBg_Mutatiedatum] = " +
                "@Original_KlBg_Mutatiedatum)) AND ((@IsNull_KlBg_Opmerking = 1 AND [KlBg_Opmerki" +
                "ng] IS NULL) OR ([KlBg_Opmerking] = @Original_KlBg_Opmerking)))";
            this._adapter.UpdateCommand.CommandType = global::System.Data.CommandType.Text;
            param = new global::System.Data.SQLite.SQLiteParameter();
            param.ParameterName = "@KlBg_StatusId";
            param.DbType = global::System.Data.DbType.Int64;
            param.DbType = global::System.Data.DbType.Int64;
            param.SourceColumn = "KlBg_StatusId";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::System.Data.SQLite.SQLiteParameter();
            param.ParameterName = "@KlBg_DispStatus";
            param.DbType = global::System.Data.DbType.AnsiString;
            param.DbType = global::System.Data.DbType.AnsiString;
            param.SourceColumn = "KlBg_DispStatus";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::System.Data.SQLite.SQLiteParameter();
            param.ParameterName = "@KlBg_KlantJN";
            param.DbType = global::System.Data.DbType.Int64;
            param.DbType = global::System.Data.DbType.Int64;
            param.SourceColumn = "KlBg_KlantJN";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::System.Data.SQLite.SQLiteParameter();
            param.ParameterName = "@KlBg_BegunstigdeJN";
            param.DbType = global::System.Data.DbType.Int64;
            param.DbType = global::System.Data.DbType.Int64;
            param.SourceColumn = "KlBg_BegunstigdeJN";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::System.Data.SQLite.SQLiteParameter();
            param.ParameterName = "@KlBg_SysteemKlBgJN";
            param.DbType = global::System.Data.DbType.Int64;
            param.DbType = global::System.Data.DbType.Int64;
            param.SourceColumn = "KlBg_SysteemKlBgJN";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::System.Data.SQLite.SQLiteParameter();
            param.ParameterName = "@KlBg_Scipio_Lokaalnr";
            param.DbType = global::System.Data.DbType.Int64;
            param.DbType = global::System.Data.DbType.Int64;
            param.SourceColumn = "KlBg_Scipio_Lokaalnr";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::System.Data.SQLite.SQLiteParameter();
            param.ParameterName = "@KlBg_DebNr";
            param.DbType = global::System.Data.DbType.AnsiString;
            param.DbType = global::System.Data.DbType.AnsiString;
            param.SourceColumn = "KlBg_DebNr";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::System.Data.SQLite.SQLiteParameter();
            param.ParameterName = "@KlBg_CredNr";
            param.DbType = global::System.Data.DbType.AnsiString;
            param.DbType = global::System.Data.DbType.AnsiString;
            param.SourceColumn = "KlBg_CredNr";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::System.Data.SQLite.SQLiteParameter();
            param.ParameterName = "@KlBg_Voorvoegsel";
            param.DbType = global::System.Data.DbType.AnsiString;
            param.DbType = global::System.Data.DbType.AnsiString;
            param.SourceColumn = "KlBg_Voorvoegsel";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::System.Data.SQLite.SQLiteParameter();
            param.ParameterName = "@KlBg_Voorletters";
            param.DbType = global::System.Data.DbType.AnsiString;
            param.DbType = global::System.Data.DbType.AnsiString;
            param.SourceColumn = "KlBg_Voorletters";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::System.Data.SQLite.SQLiteParameter();
            param.ParameterName = "@KlBg_Tussenvoegsel";
            param.DbType = global::System.Data.DbType.AnsiString;
            param.DbType = global::System.Data.DbType.AnsiString;
            param.SourceColumn = "KlBg_Tussenvoegsel";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::System.Data.SQLite.SQLiteParameter();
            param.ParameterName = "@KlBg_Achternaam";
            param.DbType = global::System.Data.DbType.AnsiString;
            param.DbType = global::System.Data.DbType.AnsiString;
            param.SourceColumn = "KlBg_Achternaam";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::System.Data.SQLite.SQLiteParameter();
            param.ParameterName = "@KlBg_VVTA";
            param.DbType = global::System.Data.DbType.AnsiString;
            param.DbType = global::System.Data.DbType.AnsiString;
            param.SourceColumn = "KlBg_VVTA";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::System.Data.SQLite.SQLiteParameter();
            param.ParameterName = "@KlBg_AVVT";
            param.DbType = global::System.Data.DbType.AnsiString;
            param.DbType = global::System.Data.DbType.AnsiString;
            param.SourceColumn = "KlBg_AVVT";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::System.Data.SQLite.SQLiteParameter();
            param.ParameterName = "@KlBg_Straatnaam";
            param.DbType = global::System.Data.DbType.AnsiString;
            param.DbType = global::System.Data.DbType.AnsiString;
            param.SourceColumn = "KlBg_Straatnaam";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::System.Data.SQLite.SQLiteParameter();
            param.ParameterName = "@KlBg_Huisnummer";
            param.DbType = global::System.Data.DbType.AnsiString;
            param.DbType = global::System.Data.DbType.AnsiString;
            param.SourceColumn = "KlBg_Huisnummer";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::System.Data.SQLite.SQLiteParameter();
            param.ParameterName = "@KlBg_Huisnummertoevoeging";
            param.DbType = global::System.Data.DbType.AnsiString;
            param.DbType = global::System.Data.DbType.AnsiString;
            param.SourceColumn = "KlBg_Huisnummertoevoeging";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::System.Data.SQLite.SQLiteParameter();
            param.ParameterName = "@KlBg_Adres";
            param.DbType = global::System.Data.DbType.AnsiString;
            param.DbType = global::System.Data.DbType.AnsiString;
            param.SourceColumn = "KlBg_Adres";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::System.Data.SQLite.SQLiteParameter();
            param.ParameterName = "@KlBg_Postcode";
            param.DbType = global::System.Data.DbType.AnsiString;
            param.DbType = global::System.Data.DbType.AnsiString;
            param.SourceColumn = "KlBg_Postcode";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::System.Data.SQLite.SQLiteParameter();
            param.ParameterName = "@KlBg_Woonplaats";
            param.DbType = global::System.Data.DbType.AnsiString;
            param.DbType = global::System.Data.DbType.AnsiString;
            param.SourceColumn = "KlBg_Woonplaats";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::System.Data.SQLite.SQLiteParameter();
            param.ParameterName = "@KlBg_Telefoonnummer";
            param.DbType = global::System.Data.DbType.AnsiString;
            param.DbType = global::System.Data.DbType.AnsiString;
            param.SourceColumn = "KlBg_Telefoonnummer";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::System.Data.SQLite.SQLiteParameter();
            param.ParameterName = "@KlBg_Emailadres";
            param.DbType = global::System.Data.DbType.AnsiString;
            param.DbType = global::System.Data.DbType.AnsiString;
            param.SourceColumn = "KlBg_Emailadres";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::System.Data.SQLite.SQLiteParameter();
            param.ParameterName = "@KlBg_Extra_informatie";
            param.DbType = global::System.Data.DbType.AnsiString;
            param.DbType = global::System.Data.DbType.AnsiString;
            param.SourceColumn = "KlBg_Extra_informatie";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::System.Data.SQLite.SQLiteParameter();
            param.ParameterName = "@KlBg_SysteemKlBgDispJN";
            param.DbType = global::System.Data.DbType.AnsiString;
            param.DbType = global::System.Data.DbType.AnsiString;
            param.SourceColumn = "KlBg_SysteemKlBgDispJN";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::System.Data.SQLite.SQLiteParameter();
            param.ParameterName = "@KlBg_KlDispJN";
            param.DbType = global::System.Data.DbType.AnsiString;
            param.DbType = global::System.Data.DbType.AnsiString;
            param.SourceColumn = "KlBg_KlDispJN";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::System.Data.SQLite.SQLiteParameter();
            param.ParameterName = "@KlBg_BgDispJN";
            param.DbType = global::System.Data.DbType.AnsiString;
            param.DbType = global::System.Data.DbType.AnsiString;
            param.SourceColumn = "KlBg_BgDispJN";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::System.Data.SQLite.SQLiteParameter();
            param.ParameterName = "@KlBg_Mutatiedatum";
            param.DbType = global::System.Data.DbType.DateTime;
            param.DbType = global::System.Data.DbType.DateTime;
            param.SourceColumn = "KlBg_Mutatiedatum";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::System.Data.SQLite.SQLiteParameter();
            param.ParameterName = "@KlBg_Opmerking";
            param.DbType = global::System.Data.DbType.AnsiString;
            param.DbType = global::System.Data.DbType.AnsiString;
            param.SourceColumn = "KlBg_Opmerking";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::System.Data.SQLite.SQLiteParameter();
            param.ParameterName = "@Original_KlBg_Id";
            param.DbType = global::System.Data.DbType.Int64;
            param.DbType = global::System.Data.DbType.Int64;
            param.SourceColumn = "KlBg_Id";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::System.Data.SQLite.SQLiteParameter();
            param.ParameterName = "@Original_KlBg_StatusId";
            param.DbType = global::System.Data.DbType.Int64;
            param.DbType = global::System.Data.DbType.Int64;
            param.SourceColumn = "KlBg_StatusId";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::System.Data.SQLite.SQLiteParameter();
            param.ParameterName = "@IsNull_KlBg_DispStatus";
            param.DbType = global::System.Data.DbType.Int32;
            param.DbType = global::System.Data.DbType.Int32;
            param.SourceColumn = "KlBg_DispStatus";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::System.Data.SQLite.SQLiteParameter();
            param.ParameterName = "@Original_KlBg_DispStatus";
            param.DbType = global::System.Data.DbType.AnsiString;
            param.DbType = global::System.Data.DbType.AnsiString;
            param.SourceColumn = "KlBg_DispStatus";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::System.Data.SQLite.SQLiteParameter();
            param.ParameterName = "@Original_KlBg_KlantJN";
            param.DbType = global::System.Data.DbType.Int64;
            param.DbType = global::System.Data.DbType.Int64;
            param.SourceColumn = "KlBg_KlantJN";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::System.Data.SQLite.SQLiteParameter();
            param.ParameterName = "@Original_KlBg_BegunstigdeJN";
            param.DbType = global::System.Data.DbType.Int64;
            param.DbType = global::System.Data.DbType.Int64;
            param.SourceColumn = "KlBg_BegunstigdeJN";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::System.Data.SQLite.SQLiteParameter();
            param.ParameterName = "@IsNull_KlBg_SysteemKlBgJN";
            param.DbType = global::System.Data.DbType.Int32;
            param.DbType = global::System.Data.DbType.Int32;
            param.SourceColumn = "KlBg_SysteemKlBgJN";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::System.Data.SQLite.SQLiteParameter();
            param.ParameterName = "@Original_KlBg_SysteemKlBgJN";
            param.DbType = global::System.Data.DbType.Int64;
            param.DbType = global::System.Data.DbType.Int64;
            param.SourceColumn = "KlBg_SysteemKlBgJN";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::System.Data.SQLite.SQLiteParameter();
            param.ParameterName = "@IsNull_KlBg_Scipio_Lokaalnr";
            param.DbType = global::System.Data.DbType.Int32;
            param.DbType = global::System.Data.DbType.Int32;
            param.SourceColumn = "KlBg_Scipio_Lokaalnr";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::System.Data.SQLite.SQLiteParameter();
            param.ParameterName = "@Original_KlBg_Scipio_Lokaalnr";
            param.DbType = global::System.Data.DbType.Int64;
            param.DbType = global::System.Data.DbType.Int64;
            param.SourceColumn = "KlBg_Scipio_Lokaalnr";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::System.Data.SQLite.SQLiteParameter();
            param.ParameterName = "@IsNull_KlBg_DebNr";
            param.DbType = global::System.Data.DbType.Int32;
            param.DbType = global::System.Data.DbType.Int32;
            param.SourceColumn = "KlBg_DebNr";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::System.Data.SQLite.SQLiteParameter();
            param.ParameterName = "@Original_KlBg_DebNr";
            param.DbType = global::System.Data.DbType.AnsiString;
            param.DbType = global::System.Data.DbType.AnsiString;
            param.SourceColumn = "KlBg_DebNr";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::System.Data.SQLite.SQLiteParameter();
            param.ParameterName = "@IsNull_KlBg_CredNr";
            param.DbType = global::System.Data.DbType.Int32;
            param.DbType = global::System.Data.DbType.Int32;
            param.SourceColumn = "KlBg_CredNr";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::System.Data.SQLite.SQLiteParameter();
            param.ParameterName = "@Original_KlBg_CredNr";
            param.DbType = global::System.Data.DbType.AnsiString;
            param.DbType = global::System.Data.DbType.AnsiString;
            param.SourceColumn = "KlBg_CredNr";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::System.Data.SQLite.SQLiteParameter();
            param.ParameterName = "@IsNull_KlBg_Voorvoegsel";
            param.DbType = global::System.Data.DbType.Int32;
            param.DbType = global::System.Data.DbType.Int32;
            param.SourceColumn = "KlBg_Voorvoegsel";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::System.Data.SQLite.SQLiteParameter();
            param.ParameterName = "@Original_KlBg_Voorvoegsel";
            param.DbType = global::System.Data.DbType.AnsiString;
            param.DbType = global::System.Data.DbType.AnsiString;
            param.SourceColumn = "KlBg_Voorvoegsel";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::System.Data.SQLite.SQLiteParameter();
            param.ParameterName = "@IsNull_KlBg_Voorletters";
            param.DbType = global::System.Data.DbType.Int32;
            param.DbType = global::System.Data.DbType.Int32;
            param.SourceColumn = "KlBg_Voorletters";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::System.Data.SQLite.SQLiteParameter();
            param.ParameterName = "@Original_KlBg_Voorletters";
            param.DbType = global::System.Data.DbType.AnsiString;
            param.DbType = global::System.Data.DbType.AnsiString;
            param.SourceColumn = "KlBg_Voorletters";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::System.Data.SQLite.SQLiteParameter();
            param.ParameterName = "@IsNull_KlBg_Tussenvoegsel";
            param.DbType = global::System.Data.DbType.Int32;
            param.DbType = global::System.Data.DbType.Int32;
            param.SourceColumn = "KlBg_Tussenvoegsel";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::System.Data.SQLite.SQLiteParameter();
            param.ParameterName = "@Original_KlBg_Tussenvoegsel";
            param.DbType = global::System.Data.DbType.AnsiString;
            param.DbType = global::System.Data.DbType.AnsiString;
            param.SourceColumn = "KlBg_Tussenvoegsel";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::System.Data.SQLite.SQLiteParameter();
            param.ParameterName = "@IsNull_KlBg_Achternaam";
            param.DbType = global::System.Data.DbType.Int32;
            param.DbType = global::System.Data.DbType.Int32;
            param.SourceColumn = "KlBg_Achternaam";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::System.Data.SQLite.SQLiteParameter();
            param.ParameterName = "@Original_KlBg_Achternaam";
            param.DbType = global::System.Data.DbType.AnsiString;
            param.DbType = global::System.Data.DbType.AnsiString;
            param.SourceColumn = "KlBg_Achternaam";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::System.Data.SQLite.SQLiteParameter();
            param.ParameterName = "@Original_KlBg_VVTA";
            param.DbType = global::System.Data.DbType.AnsiString;
            param.DbType = global::System.Data.DbType.AnsiString;
            param.SourceColumn = "KlBg_VVTA";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::System.Data.SQLite.SQLiteParameter();
            param.ParameterName = "@Original_KlBg_AVVT";
            param.DbType = global::System.Data.DbType.AnsiString;
            param.DbType = global::System.Data.DbType.AnsiString;
            param.SourceColumn = "KlBg_AVVT";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::System.Data.SQLite.SQLiteParameter();
            param.ParameterName = "@IsNull_KlBg_Straatnaam";
            param.DbType = global::System.Data.DbType.Int32;
            param.DbType = global::System.Data.DbType.Int32;
            param.SourceColumn = "KlBg_Straatnaam";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::System.Data.SQLite.SQLiteParameter();
            param.ParameterName = "@Original_KlBg_Straatnaam";
            param.DbType = global::System.Data.DbType.AnsiString;
            param.DbType = global::System.Data.DbType.AnsiString;
            param.SourceColumn = "KlBg_Straatnaam";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::System.Data.SQLite.SQLiteParameter();
            param.ParameterName = "@IsNull_KlBg_Huisnummer";
            param.DbType = global::System.Data.DbType.Int32;
            param.DbType = global::System.Data.DbType.Int32;
            param.SourceColumn = "KlBg_Huisnummer";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::System.Data.SQLite.SQLiteParameter();
            param.ParameterName = "@Original_KlBg_Huisnummer";
            param.DbType = global::System.Data.DbType.AnsiString;
            param.DbType = global::System.Data.DbType.AnsiString;
            param.SourceColumn = "KlBg_Huisnummer";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::System.Data.SQLite.SQLiteParameter();
            param.ParameterName = "@IsNull_KlBg_Huisnummertoevoeging";
            param.DbType = global::System.Data.DbType.Int32;
            param.DbType = global::System.Data.DbType.Int32;
            param.SourceColumn = "KlBg_Huisnummertoevoeging";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::System.Data.SQLite.SQLiteParameter();
            param.ParameterName = "@Original_KlBg_Huisnummertoevoeging";
            param.DbType = global::System.Data.DbType.AnsiString;
            param.DbType = global::System.Data.DbType.AnsiString;
            param.SourceColumn = "KlBg_Huisnummertoevoeging";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::System.Data.SQLite.SQLiteParameter();
            param.ParameterName = "@IsNull_KlBg_Adres";
            param.DbType = global::System.Data.DbType.Int32;
            param.DbType = global::System.Data.DbType.Int32;
            param.SourceColumn = "KlBg_Adres";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::System.Data.SQLite.SQLiteParameter();
            param.ParameterName = "@Original_KlBg_Adres";
            param.DbType = global::System.Data.DbType.AnsiString;
            param.DbType = global::System.Data.DbType.AnsiString;
            param.SourceColumn = "KlBg_Adres";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::System.Data.SQLite.SQLiteParameter();
            param.ParameterName = "@IsNull_KlBg_Postcode";
            param.DbType = global::System.Data.DbType.Int32;
            param.DbType = global::System.Data.DbType.Int32;
            param.SourceColumn = "KlBg_Postcode";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::System.Data.SQLite.SQLiteParameter();
            param.ParameterName = "@Original_KlBg_Postcode";
            param.DbType = global::System.Data.DbType.AnsiString;
            param.DbType = global::System.Data.DbType.AnsiString;
            param.SourceColumn = "KlBg_Postcode";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::System.Data.SQLite.SQLiteParameter();
            param.ParameterName = "@IsNull_KlBg_Woonplaats";
            param.DbType = global::System.Data.DbType.Int32;
            param.DbType = global::System.Data.DbType.Int32;
            param.SourceColumn = "KlBg_Woonplaats";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::System.Data.SQLite.SQLiteParameter();
            param.ParameterName = "@Original_KlBg_Woonplaats";
            param.DbType = global::System.Data.DbType.AnsiString;
            param.DbType = global::System.Data.DbType.AnsiString;
            param.SourceColumn = "KlBg_Woonplaats";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::System.Data.SQLite.SQLiteParameter();
            param.ParameterName = "@IsNull_KlBg_Telefoonnummer";
            param.DbType = global::System.Data.DbType.Int32;
            param.DbType = global::System.Data.DbType.Int32;
            param.SourceColumn = "KlBg_Telefoonnummer";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::System.Data.SQLite.SQLiteParameter();
            param.ParameterName = "@Original_KlBg_Telefoonnummer";
            param.DbType = global::System.Data.DbType.AnsiString;
            param.DbType = global::System.Data.DbType.AnsiString;
            param.SourceColumn = "KlBg_Telefoonnummer";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::System.Data.SQLite.SQLiteParameter();
            param.ParameterName = "@IsNull_KlBg_Emailadres";
            param.DbType = global::System.Data.DbType.Int32;
            param.DbType = global::System.Data.DbType.Int32;
            param.SourceColumn = "KlBg_Emailadres";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::System.Data.SQLite.SQLiteParameter();
            param.ParameterName = "@Original_KlBg_Emailadres";
            param.DbType = global::System.Data.DbType.AnsiString;
            param.DbType = global::System.Data.DbType.AnsiString;
            param.SourceColumn = "KlBg_Emailadres";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::System.Data.SQLite.SQLiteParameter();
            param.ParameterName = "@IsNull_KlBg_Extra_informatie";
            param.DbType = global::System.Data.DbType.Int32;
            param.DbType = global::System.Data.DbType.Int32;
            param.SourceColumn = "KlBg_Extra_informatie";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::System.Data.SQLite.SQLiteParameter();
            param.ParameterName = "@Original_KlBg_Extra_informatie";
            param.DbType = global::System.Data.DbType.AnsiString;
            param.DbType = global::System.Data.DbType.AnsiString;
            param.SourceColumn = "KlBg_Extra_informatie";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::System.Data.SQLite.SQLiteParameter();
            param.ParameterName = "@Original_KlBg_SysteemKlBgDispJN";
            param.DbType = global::System.Data.DbType.AnsiString;
            param.DbType = global::System.Data.DbType.AnsiString;
            param.SourceColumn = "KlBg_SysteemKlBgDispJN";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::System.Data.SQLite.SQLiteParameter();
            param.ParameterName = "@Original_KlBg_KlDispJN";
            param.DbType = global::System.Data.DbType.AnsiString;
            param.DbType = global::System.Data.DbType.AnsiString;
            param.SourceColumn = "KlBg_KlDispJN";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::System.Data.SQLite.SQLiteParameter();
            param.ParameterName = "@Original_KlBg_BgDispJN";
            param.DbType = global::System.Data.DbType.AnsiString;
            param.DbType = global::System.Data.DbType.AnsiString;
            param.SourceColumn = "KlBg_BgDispJN";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::System.Data.SQLite.SQLiteParameter();
            param.ParameterName = "@IsNull_KlBg_Mutatiedatum";
            param.DbType = global::System.Data.DbType.Int32;
            param.DbType = global::System.Data.DbType.Int32;
            param.SourceColumn = "KlBg_Mutatiedatum";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::System.Data.SQLite.SQLiteParameter();
            param.ParameterName = "@Original_KlBg_Mutatiedatum";
            param.DbType = global::System.Data.DbType.DateTime;
            param.DbType = global::System.Data.DbType.DateTime;
            param.SourceColumn = "KlBg_Mutatiedatum";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::System.Data.SQLite.SQLiteParameter();
            param.ParameterName = "@IsNull_KlBg_Opmerking";
            param.DbType = global::System.Data.DbType.Int32;
            param.DbType = global::System.Data.DbType.Int32;
            param.SourceColumn = "KlBg_Opmerking";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::System.Data.SQLite.SQLiteParameter();
            param.ParameterName = "@Original_KlBg_Opmerking";
            param.DbType = global::System.Data.DbType.AnsiString;
            param.DbType = global::System.Data.DbType.AnsiString;
            param.SourceColumn = "KlBg_Opmerking";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitConnection() {
            this._connection = new global::System.Data.SQLite.SQLiteConnection();
            this._connection.ConnectionString = global::Cmbap.Properties.Settings.Default.Cmbap_dataConnectionString;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitCommandCollection() {
            this._commandCollection = new global::System.Data.SQLite.SQLiteCommand[1];
            this._commandCollection[0] = new global::System.Data.SQLite.SQLiteCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = @"SELECT [KlBg_Id], [KlBg_StatusId], [KlBg_DispStatus], [KlBg_KlantJN], [KlBg_BegunstigdeJN], [KlBg_SysteemKlBgJN], [KlBg_Scipio_Lokaalnr], [KlBg_DebNr], [KlBg_CredNr], [KlBg_Voorvoegsel], [KlBg_Voorletters], [KlBg_Tussenvoegsel], [KlBg_Achternaam], [KlBg_VVTA], [KlBg_AVVT], [KlBg_Straatnaam], [KlBg_Huisnummer], [KlBg_Huisnummertoevoeging], [KlBg_Adres], [KlBg_Postcode], [KlBg_Woonplaats], [KlBg_Telefoonnummer], [KlBg_Emailadres], [KlBg_Extra_informatie], [KlBg_SysteemKlBgDispJN], [KlBg_KlDispJN], [KlBg_BgDispJN], [KlBg_Mutatiedatum], [KlBg_Opmerking] FROM [Klant_Begunstigde]";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(_Cmbap_dataDataSet.Klant_BegunstigdeDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual _Cmbap_dataDataSet.Klant_BegunstigdeDataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            _Cmbap_dataDataSet.Klant_BegunstigdeDataTable dataTable = new _Cmbap_dataDataSet.Klant_BegunstigdeDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(_Cmbap_dataDataSet.Klant_BegunstigdeDataTable dataTable) {
            return this.Adapter.Update(dataTable);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(_Cmbap_dataDataSet dataSet) {
            return this.Adapter.Update(dataSet, "Klant_Begunstigde");
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow dataRow) {
            return this.Adapter.Update(new global::System.Data.DataRow[] {
                        dataRow});
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow[] dataRows) {
            return this.Adapter.Update(dataRows);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Delete, true)]
        public virtual int Delete(
                    long Original_KlBg_Id, 
                    long Original_KlBg_StatusId, 
                    string Original_KlBg_DispStatus, 
                    long Original_KlBg_KlantJN, 
                    long Original_KlBg_BegunstigdeJN, 
                    global::System.Nullable<long> Original_KlBg_SysteemKlBgJN, 
                    global::System.Nullable<long> Original_KlBg_Scipio_Lokaalnr, 
                    string Original_KlBg_DebNr, 
                    string Original_KlBg_CredNr, 
                    string Original_KlBg_Voorvoegsel, 
                    string Original_KlBg_Voorletters, 
                    string Original_KlBg_Tussenvoegsel, 
                    string Original_KlBg_Achternaam, 
                    string Original_KlBg_VVTA, 
                    string Original_KlBg_AVVT, 
                    string Original_KlBg_Straatnaam, 
                    string Original_KlBg_Huisnummer, 
                    string Original_KlBg_Huisnummertoevoeging, 
                    string Original_KlBg_Adres, 
                    string Original_KlBg_Postcode, 
                    string Original_KlBg_Woonplaats, 
                    string Original_KlBg_Telefoonnummer, 
                    string Original_KlBg_Emailadres, 
                    string Original_KlBg_Extra_informatie, 
                    string Original_KlBg_SysteemKlBgDispJN, 
                    string Original_KlBg_KlDispJN, 
                    string Original_KlBg_BgDispJN, 
                    global::System.Nullable<global::System.DateTime> Original_KlBg_Mutatiedatum, 
                    string Original_KlBg_Opmerking) {
            this.Adapter.DeleteCommand.Parameters[0].Value = ((long)(Original_KlBg_Id));
            this.Adapter.DeleteCommand.Parameters[1].Value = ((long)(Original_KlBg_StatusId));
            if ((Original_KlBg_DispStatus == null)) {
                this.Adapter.DeleteCommand.Parameters[2].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[3].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[2].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[3].Value = ((string)(Original_KlBg_DispStatus));
            }
            this.Adapter.DeleteCommand.Parameters[4].Value = ((long)(Original_KlBg_KlantJN));
            this.Adapter.DeleteCommand.Parameters[5].Value = ((long)(Original_KlBg_BegunstigdeJN));
            if ((Original_KlBg_SysteemKlBgJN.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[6].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[7].Value = ((long)(Original_KlBg_SysteemKlBgJN.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[6].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[7].Value = global::System.DBNull.Value;
            }
            if ((Original_KlBg_Scipio_Lokaalnr.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[8].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[9].Value = ((long)(Original_KlBg_Scipio_Lokaalnr.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[8].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[9].Value = global::System.DBNull.Value;
            }
            if ((Original_KlBg_DebNr == null)) {
                this.Adapter.DeleteCommand.Parameters[10].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[11].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[10].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[11].Value = ((string)(Original_KlBg_DebNr));
            }
            if ((Original_KlBg_CredNr == null)) {
                this.Adapter.DeleteCommand.Parameters[12].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[13].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[12].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[13].Value = ((string)(Original_KlBg_CredNr));
            }
            if ((Original_KlBg_Voorvoegsel == null)) {
                this.Adapter.DeleteCommand.Parameters[14].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[15].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[14].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[15].Value = ((string)(Original_KlBg_Voorvoegsel));
            }
            if ((Original_KlBg_Voorletters == null)) {
                this.Adapter.DeleteCommand.Parameters[16].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[17].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[16].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[17].Value = ((string)(Original_KlBg_Voorletters));
            }
            if ((Original_KlBg_Tussenvoegsel == null)) {
                this.Adapter.DeleteCommand.Parameters[18].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[19].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[18].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[19].Value = ((string)(Original_KlBg_Tussenvoegsel));
            }
            if ((Original_KlBg_Achternaam == null)) {
                this.Adapter.DeleteCommand.Parameters[20].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[21].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[20].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[21].Value = ((string)(Original_KlBg_Achternaam));
            }
            if ((Original_KlBg_VVTA == null)) {
                throw new global::System.ArgumentNullException("Original_KlBg_VVTA");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[22].Value = ((string)(Original_KlBg_VVTA));
            }
            if ((Original_KlBg_AVVT == null)) {
                throw new global::System.ArgumentNullException("Original_KlBg_AVVT");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[23].Value = ((string)(Original_KlBg_AVVT));
            }
            if ((Original_KlBg_Straatnaam == null)) {
                this.Adapter.DeleteCommand.Parameters[24].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[25].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[24].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[25].Value = ((string)(Original_KlBg_Straatnaam));
            }
            if ((Original_KlBg_Huisnummer == null)) {
                this.Adapter.DeleteCommand.Parameters[26].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[27].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[26].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[27].Value = ((string)(Original_KlBg_Huisnummer));
            }
            if ((Original_KlBg_Huisnummertoevoeging == null)) {
                this.Adapter.DeleteCommand.Parameters[28].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[29].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[28].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[29].Value = ((string)(Original_KlBg_Huisnummertoevoeging));
            }
            if ((Original_KlBg_Adres == null)) {
                this.Adapter.DeleteCommand.Parameters[30].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[31].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[30].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[31].Value = ((string)(Original_KlBg_Adres));
            }
            if ((Original_KlBg_Postcode == null)) {
                this.Adapter.DeleteCommand.Parameters[32].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[33].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[32].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[33].Value = ((string)(Original_KlBg_Postcode));
            }
            if ((Original_KlBg_Woonplaats == null)) {
                this.Adapter.DeleteCommand.Parameters[34].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[35].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[34].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[35].Value = ((string)(Original_KlBg_Woonplaats));
            }
            if ((Original_KlBg_Telefoonnummer == null)) {
                this.Adapter.DeleteCommand.Parameters[36].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[37].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[36].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[37].Value = ((string)(Original_KlBg_Telefoonnummer));
            }
            if ((Original_KlBg_Emailadres == null)) {
                this.Adapter.DeleteCommand.Parameters[38].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[39].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[38].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[39].Value = ((string)(Original_KlBg_Emailadres));
            }
            if ((Original_KlBg_Extra_informatie == null)) {
                this.Adapter.DeleteCommand.Parameters[40].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[41].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[40].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[41].Value = ((string)(Original_KlBg_Extra_informatie));
            }
            if ((Original_KlBg_SysteemKlBgDispJN == null)) {
                throw new global::System.ArgumentNullException("Original_KlBg_SysteemKlBgDispJN");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[42].Value = ((string)(Original_KlBg_SysteemKlBgDispJN));
            }
            if ((Original_KlBg_KlDispJN == null)) {
                throw new global::System.ArgumentNullException("Original_KlBg_KlDispJN");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[43].Value = ((string)(Original_KlBg_KlDispJN));
            }
            if ((Original_KlBg_BgDispJN == null)) {
                throw new global::System.ArgumentNullException("Original_KlBg_BgDispJN");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[44].Value = ((string)(Original_KlBg_BgDispJN));
            }
            if ((Original_KlBg_Mutatiedatum.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[45].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[46].Value = ((System.DateTime)(Original_KlBg_Mutatiedatum.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[45].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[46].Value = global::System.DBNull.Value;
            }
            if ((Original_KlBg_Opmerking == null)) {
                this.Adapter.DeleteCommand.Parameters[47].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[48].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[47].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[48].Value = ((string)(Original_KlBg_Opmerking));
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.DeleteCommand.Connection.State;
            if (((this.Adapter.DeleteCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.DeleteCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.DeleteCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.DeleteCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Insert, true)]
        public virtual int Insert(
                    long KlBg_StatusId, 
                    string KlBg_DispStatus, 
                    long KlBg_KlantJN, 
                    long KlBg_BegunstigdeJN, 
                    global::System.Nullable<long> KlBg_SysteemKlBgJN, 
                    global::System.Nullable<long> KlBg_Scipio_Lokaalnr, 
                    string KlBg_DebNr, 
                    string KlBg_CredNr, 
                    string KlBg_Voorvoegsel, 
                    string KlBg_Voorletters, 
                    string KlBg_Tussenvoegsel, 
                    string KlBg_Achternaam, 
                    string KlBg_VVTA, 
                    string KlBg_AVVT, 
                    string KlBg_Straatnaam, 
                    string KlBg_Huisnummer, 
                    string KlBg_Huisnummertoevoeging, 
                    string KlBg_Adres, 
                    string KlBg_Postcode, 
                    string KlBg_Woonplaats, 
                    string KlBg_Telefoonnummer, 
                    string KlBg_Emailadres, 
                    string KlBg_Extra_informatie, 
                    string KlBg_SysteemKlBgDispJN, 
                    string KlBg_KlDispJN, 
                    string KlBg_BgDispJN, 
                    global::System.Nullable<global::System.DateTime> KlBg_Mutatiedatum, 
                    string KlBg_Opmerking) {
            this.Adapter.InsertCommand.Parameters[0].Value = ((long)(KlBg_StatusId));
            if ((KlBg_DispStatus == null)) {
                this.Adapter.InsertCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[1].Value = ((string)(KlBg_DispStatus));
            }
            this.Adapter.InsertCommand.Parameters[2].Value = ((long)(KlBg_KlantJN));
            this.Adapter.InsertCommand.Parameters[3].Value = ((long)(KlBg_BegunstigdeJN));
            if ((KlBg_SysteemKlBgJN.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[4].Value = ((long)(KlBg_SysteemKlBgJN.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[4].Value = global::System.DBNull.Value;
            }
            if ((KlBg_Scipio_Lokaalnr.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[5].Value = ((long)(KlBg_Scipio_Lokaalnr.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[5].Value = global::System.DBNull.Value;
            }
            if ((KlBg_DebNr == null)) {
                this.Adapter.InsertCommand.Parameters[6].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[6].Value = ((string)(KlBg_DebNr));
            }
            if ((KlBg_CredNr == null)) {
                this.Adapter.InsertCommand.Parameters[7].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[7].Value = ((string)(KlBg_CredNr));
            }
            if ((KlBg_Voorvoegsel == null)) {
                this.Adapter.InsertCommand.Parameters[8].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[8].Value = ((string)(KlBg_Voorvoegsel));
            }
            if ((KlBg_Voorletters == null)) {
                this.Adapter.InsertCommand.Parameters[9].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[9].Value = ((string)(KlBg_Voorletters));
            }
            if ((KlBg_Tussenvoegsel == null)) {
                this.Adapter.InsertCommand.Parameters[10].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[10].Value = ((string)(KlBg_Tussenvoegsel));
            }
            if ((KlBg_Achternaam == null)) {
                this.Adapter.InsertCommand.Parameters[11].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[11].Value = ((string)(KlBg_Achternaam));
            }
            if ((KlBg_VVTA == null)) {
                throw new global::System.ArgumentNullException("KlBg_VVTA");
            }
            else {
                this.Adapter.InsertCommand.Parameters[12].Value = ((string)(KlBg_VVTA));
            }
            if ((KlBg_AVVT == null)) {
                throw new global::System.ArgumentNullException("KlBg_AVVT");
            }
            else {
                this.Adapter.InsertCommand.Parameters[13].Value = ((string)(KlBg_AVVT));
            }
            if ((KlBg_Straatnaam == null)) {
                this.Adapter.InsertCommand.Parameters[14].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[14].Value = ((string)(KlBg_Straatnaam));
            }
            if ((KlBg_Huisnummer == null)) {
                this.Adapter.InsertCommand.Parameters[15].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[15].Value = ((string)(KlBg_Huisnummer));
            }
            if ((KlBg_Huisnummertoevoeging == null)) {
                this.Adapter.InsertCommand.Parameters[16].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[16].Value = ((string)(KlBg_Huisnummertoevoeging));
            }
            if ((KlBg_Adres == null)) {
                this.Adapter.InsertCommand.Parameters[17].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[17].Value = ((string)(KlBg_Adres));
            }
            if ((KlBg_Postcode == null)) {
                this.Adapter.InsertCommand.Parameters[18].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[18].Value = ((string)(KlBg_Postcode));
            }
            if ((KlBg_Woonplaats == null)) {
                this.Adapter.InsertCommand.Parameters[19].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[19].Value = ((string)(KlBg_Woonplaats));
            }
            if ((KlBg_Telefoonnummer == null)) {
                this.Adapter.InsertCommand.Parameters[20].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[20].Value = ((string)(KlBg_Telefoonnummer));
            }
            if ((KlBg_Emailadres == null)) {
                this.Adapter.InsertCommand.Parameters[21].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[21].Value = ((string)(KlBg_Emailadres));
            }
            if ((KlBg_Extra_informatie == null)) {
                this.Adapter.InsertCommand.Parameters[22].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[22].Value = ((string)(KlBg_Extra_informatie));
            }
            if ((KlBg_SysteemKlBgDispJN == null)) {
                throw new global::System.ArgumentNullException("KlBg_SysteemKlBgDispJN");
            }
            else {
                this.Adapter.InsertCommand.Parameters[23].Value = ((string)(KlBg_SysteemKlBgDispJN));
            }
            if ((KlBg_KlDispJN == null)) {
                throw new global::System.ArgumentNullException("KlBg_KlDispJN");
            }
            else {
                this.Adapter.InsertCommand.Parameters[24].Value = ((string)(KlBg_KlDispJN));
            }
            if ((KlBg_BgDispJN == null)) {
                throw new global::System.ArgumentNullException("KlBg_BgDispJN");
            }
            else {
                this.Adapter.InsertCommand.Parameters[25].Value = ((string)(KlBg_BgDispJN));
            }
            if ((KlBg_Mutatiedatum.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[26].Value = ((System.DateTime)(KlBg_Mutatiedatum.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[26].Value = global::System.DBNull.Value;
            }
            if ((KlBg_Opmerking == null)) {
                this.Adapter.InsertCommand.Parameters[27].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[27].Value = ((string)(KlBg_Opmerking));
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.InsertCommand.Connection.State;
            if (((this.Adapter.InsertCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.InsertCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.InsertCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.InsertCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(
                    long KlBg_StatusId, 
                    string KlBg_DispStatus, 
                    long KlBg_KlantJN, 
                    long KlBg_BegunstigdeJN, 
                    global::System.Nullable<long> KlBg_SysteemKlBgJN, 
                    global::System.Nullable<long> KlBg_Scipio_Lokaalnr, 
                    string KlBg_DebNr, 
                    string KlBg_CredNr, 
                    string KlBg_Voorvoegsel, 
                    string KlBg_Voorletters, 
                    string KlBg_Tussenvoegsel, 
                    string KlBg_Achternaam, 
                    string KlBg_VVTA, 
                    string KlBg_AVVT, 
                    string KlBg_Straatnaam, 
                    string KlBg_Huisnummer, 
                    string KlBg_Huisnummertoevoeging, 
                    string KlBg_Adres, 
                    string KlBg_Postcode, 
                    string KlBg_Woonplaats, 
                    string KlBg_Telefoonnummer, 
                    string KlBg_Emailadres, 
                    string KlBg_Extra_informatie, 
                    string KlBg_SysteemKlBgDispJN, 
                    string KlBg_KlDispJN, 
                    string KlBg_BgDispJN, 
                    global::System.Nullable<global::System.DateTime> KlBg_Mutatiedatum, 
                    string KlBg_Opmerking, 
                    long Original_KlBg_Id, 
                    long Original_KlBg_StatusId, 
                    string Original_KlBg_DispStatus, 
                    long Original_KlBg_KlantJN, 
                    long Original_KlBg_BegunstigdeJN, 
                    global::System.Nullable<long> Original_KlBg_SysteemKlBgJN, 
                    global::System.Nullable<long> Original_KlBg_Scipio_Lokaalnr, 
                    string Original_KlBg_DebNr, 
                    string Original_KlBg_CredNr, 
                    string Original_KlBg_Voorvoegsel, 
                    string Original_KlBg_Voorletters, 
                    string Original_KlBg_Tussenvoegsel, 
                    string Original_KlBg_Achternaam, 
                    string Original_KlBg_VVTA, 
                    string Original_KlBg_AVVT, 
                    string Original_KlBg_Straatnaam, 
                    string Original_KlBg_Huisnummer, 
                    string Original_KlBg_Huisnummertoevoeging, 
                    string Original_KlBg_Adres, 
                    string Original_KlBg_Postcode, 
                    string Original_KlBg_Woonplaats, 
                    string Original_KlBg_Telefoonnummer, 
                    string Original_KlBg_Emailadres, 
                    string Original_KlBg_Extra_informatie, 
                    string Original_KlBg_SysteemKlBgDispJN, 
                    string Original_KlBg_KlDispJN, 
                    string Original_KlBg_BgDispJN, 
                    global::System.Nullable<global::System.DateTime> Original_KlBg_Mutatiedatum, 
                    string Original_KlBg_Opmerking) {
            this.Adapter.UpdateCommand.Parameters[0].Value = ((long)(KlBg_StatusId));
            if ((KlBg_DispStatus == null)) {
                this.Adapter.UpdateCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[1].Value = ((string)(KlBg_DispStatus));
            }
            this.Adapter.UpdateCommand.Parameters[2].Value = ((long)(KlBg_KlantJN));
            this.Adapter.UpdateCommand.Parameters[3].Value = ((long)(KlBg_BegunstigdeJN));
            if ((KlBg_SysteemKlBgJN.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[4].Value = ((long)(KlBg_SysteemKlBgJN.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[4].Value = global::System.DBNull.Value;
            }
            if ((KlBg_Scipio_Lokaalnr.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[5].Value = ((long)(KlBg_Scipio_Lokaalnr.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[5].Value = global::System.DBNull.Value;
            }
            if ((KlBg_DebNr == null)) {
                this.Adapter.UpdateCommand.Parameters[6].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[6].Value = ((string)(KlBg_DebNr));
            }
            if ((KlBg_CredNr == null)) {
                this.Adapter.UpdateCommand.Parameters[7].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[7].Value = ((string)(KlBg_CredNr));
            }
            if ((KlBg_Voorvoegsel == null)) {
                this.Adapter.UpdateCommand.Parameters[8].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[8].Value = ((string)(KlBg_Voorvoegsel));
            }
            if ((KlBg_Voorletters == null)) {
                this.Adapter.UpdateCommand.Parameters[9].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[9].Value = ((string)(KlBg_Voorletters));
            }
            if ((KlBg_Tussenvoegsel == null)) {
                this.Adapter.UpdateCommand.Parameters[10].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[10].Value = ((string)(KlBg_Tussenvoegsel));
            }
            if ((KlBg_Achternaam == null)) {
                this.Adapter.UpdateCommand.Parameters[11].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[11].Value = ((string)(KlBg_Achternaam));
            }
            if ((KlBg_VVTA == null)) {
                throw new global::System.ArgumentNullException("KlBg_VVTA");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[12].Value = ((string)(KlBg_VVTA));
            }
            if ((KlBg_AVVT == null)) {
                throw new global::System.ArgumentNullException("KlBg_AVVT");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[13].Value = ((string)(KlBg_AVVT));
            }
            if ((KlBg_Straatnaam == null)) {
                this.Adapter.UpdateCommand.Parameters[14].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[14].Value = ((string)(KlBg_Straatnaam));
            }
            if ((KlBg_Huisnummer == null)) {
                this.Adapter.UpdateCommand.Parameters[15].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[15].Value = ((string)(KlBg_Huisnummer));
            }
            if ((KlBg_Huisnummertoevoeging == null)) {
                this.Adapter.UpdateCommand.Parameters[16].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[16].Value = ((string)(KlBg_Huisnummertoevoeging));
            }
            if ((KlBg_Adres == null)) {
                this.Adapter.UpdateCommand.Parameters[17].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[17].Value = ((string)(KlBg_Adres));
            }
            if ((KlBg_Postcode == null)) {
                this.Adapter.UpdateCommand.Parameters[18].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[18].Value = ((string)(KlBg_Postcode));
            }
            if ((KlBg_Woonplaats == null)) {
                this.Adapter.UpdateCommand.Parameters[19].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[19].Value = ((string)(KlBg_Woonplaats));
            }
            if ((KlBg_Telefoonnummer == null)) {
                this.Adapter.UpdateCommand.Parameters[20].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[20].Value = ((string)(KlBg_Telefoonnummer));
            }
            if ((KlBg_Emailadres == null)) {
                this.Adapter.UpdateCommand.Parameters[21].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[21].Value = ((string)(KlBg_Emailadres));
            }
            if ((KlBg_Extra_informatie == null)) {
                this.Adapter.UpdateCommand.Parameters[22].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[22].Value = ((string)(KlBg_Extra_informatie));
            }
            if ((KlBg_SysteemKlBgDispJN == null)) {
                throw new global::System.ArgumentNullException("KlBg_SysteemKlBgDispJN");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[23].Value = ((string)(KlBg_SysteemKlBgDispJN));
            }
            if ((KlBg_KlDispJN == null)) {
                throw new global::System.ArgumentNullException("KlBg_KlDispJN");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[24].Value = ((string)(KlBg_KlDispJN));
            }
            if ((KlBg_BgDispJN == null)) {
                throw new global::System.ArgumentNullException("KlBg_BgDispJN");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[25].Value = ((string)(KlBg_BgDispJN));
            }
            if ((KlBg_Mutatiedatum.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[26].Value = ((System.DateTime)(KlBg_Mutatiedatum.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[26].Value = global::System.DBNull.Value;
            }
            if ((KlBg_Opmerking == null)) {
                this.Adapter.UpdateCommand.Parameters[27].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[27].Value = ((string)(KlBg_Opmerking));
            }
            this.Adapter.UpdateCommand.Parameters[28].Value = ((long)(Original_KlBg_Id));
            this.Adapter.UpdateCommand.Parameters[29].Value = ((long)(Original_KlBg_StatusId));
            if ((Original_KlBg_DispStatus == null)) {
                this.Adapter.UpdateCommand.Parameters[30].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[31].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[30].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[31].Value = ((string)(Original_KlBg_DispStatus));
            }
            this.Adapter.UpdateCommand.Parameters[32].Value = ((long)(Original_KlBg_KlantJN));
            this.Adapter.UpdateCommand.Parameters[33].Value = ((long)(Original_KlBg_BegunstigdeJN));
            if ((Original_KlBg_SysteemKlBgJN.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[34].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[35].Value = ((long)(Original_KlBg_SysteemKlBgJN.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[34].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[35].Value = global::System.DBNull.Value;
            }
            if ((Original_KlBg_Scipio_Lokaalnr.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[36].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[37].Value = ((long)(Original_KlBg_Scipio_Lokaalnr.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[36].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[37].Value = global::System.DBNull.Value;
            }
            if ((Original_KlBg_DebNr == null)) {
                this.Adapter.UpdateCommand.Parameters[38].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[39].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[38].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[39].Value = ((string)(Original_KlBg_DebNr));
            }
            if ((Original_KlBg_CredNr == null)) {
                this.Adapter.UpdateCommand.Parameters[40].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[41].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[40].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[41].Value = ((string)(Original_KlBg_CredNr));
            }
            if ((Original_KlBg_Voorvoegsel == null)) {
                this.Adapter.UpdateCommand.Parameters[42].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[43].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[42].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[43].Value = ((string)(Original_KlBg_Voorvoegsel));
            }
            if ((Original_KlBg_Voorletters == null)) {
                this.Adapter.UpdateCommand.Parameters[44].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[45].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[44].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[45].Value = ((string)(Original_KlBg_Voorletters));
            }
            if ((Original_KlBg_Tussenvoegsel == null)) {
                this.Adapter.UpdateCommand.Parameters[46].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[47].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[46].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[47].Value = ((string)(Original_KlBg_Tussenvoegsel));
            }
            if ((Original_KlBg_Achternaam == null)) {
                this.Adapter.UpdateCommand.Parameters[48].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[49].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[48].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[49].Value = ((string)(Original_KlBg_Achternaam));
            }
            if ((Original_KlBg_VVTA == null)) {
                throw new global::System.ArgumentNullException("Original_KlBg_VVTA");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[50].Value = ((string)(Original_KlBg_VVTA));
            }
            if ((Original_KlBg_AVVT == null)) {
                throw new global::System.ArgumentNullException("Original_KlBg_AVVT");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[51].Value = ((string)(Original_KlBg_AVVT));
            }
            if ((Original_KlBg_Straatnaam == null)) {
                this.Adapter.UpdateCommand.Parameters[52].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[53].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[52].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[53].Value = ((string)(Original_KlBg_Straatnaam));
            }
            if ((Original_KlBg_Huisnummer == null)) {
                this.Adapter.UpdateCommand.Parameters[54].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[55].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[54].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[55].Value = ((string)(Original_KlBg_Huisnummer));
            }
            if ((Original_KlBg_Huisnummertoevoeging == null)) {
                this.Adapter.UpdateCommand.Parameters[56].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[57].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[56].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[57].Value = ((string)(Original_KlBg_Huisnummertoevoeging));
            }
            if ((Original_KlBg_Adres == null)) {
                this.Adapter.UpdateCommand.Parameters[58].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[59].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[58].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[59].Value = ((string)(Original_KlBg_Adres));
            }
            if ((Original_KlBg_Postcode == null)) {
                this.Adapter.UpdateCommand.Parameters[60].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[61].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[60].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[61].Value = ((string)(Original_KlBg_Postcode));
            }
            if ((Original_KlBg_Woonplaats == null)) {
                this.Adapter.UpdateCommand.Parameters[62].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[63].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[62].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[63].Value = ((string)(Original_KlBg_Woonplaats));
            }
            if ((Original_KlBg_Telefoonnummer == null)) {
                this.Adapter.UpdateCommand.Parameters[64].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[65].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[64].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[65].Value = ((string)(Original_KlBg_Telefoonnummer));
            }
            if ((Original_KlBg_Emailadres == null)) {
                this.Adapter.UpdateCommand.Parameters[66].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[67].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[66].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[67].Value = ((string)(Original_KlBg_Emailadres));
            }
            if ((Original_KlBg_Extra_informatie == null)) {
                this.Adapter.UpdateCommand.Parameters[68].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[69].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[68].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[69].Value = ((string)(Original_KlBg_Extra_informatie));
            }
            if ((Original_KlBg_SysteemKlBgDispJN == null)) {
                throw new global::System.ArgumentNullException("Original_KlBg_SysteemKlBgDispJN");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[70].Value = ((string)(Original_KlBg_SysteemKlBgDispJN));
            }
            if ((Original_KlBg_KlDispJN == null)) {
                throw new global::System.ArgumentNullException("Original_KlBg_KlDispJN");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[71].Value = ((string)(Original_KlBg_KlDispJN));
            }
            if ((Original_KlBg_BgDispJN == null)) {
                throw new global::System.ArgumentNullException("Original_KlBg_BgDispJN");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[72].Value = ((string)(Original_KlBg_BgDispJN));
            }
            if ((Original_KlBg_Mutatiedatum.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[73].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[74].Value = ((System.DateTime)(Original_KlBg_Mutatiedatum.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[73].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[74].Value = global::System.DBNull.Value;
            }
            if ((Original_KlBg_Opmerking == null)) {
                this.Adapter.UpdateCommand.Parameters[75].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[76].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[75].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[76].Value = ((string)(Original_KlBg_Opmerking));
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.UpdateCommand.Connection.State;
            if (((this.Adapter.UpdateCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.UpdateCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.UpdateCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.UpdateCommand.Connection.Close();
                }
            }
        }
    }
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class Licentie_controleTableAdapter : global::System.ComponentModel.Component {
        
        private global::System.Data.SQLite.SQLiteDataAdapter _adapter;
        
        private global::System.Data.SQLite.SQLiteConnection _connection;
        
        private global::System.Data.SQLite.SQLiteTransaction _transaction;
        
        private global::System.Data.SQLite.SQLiteCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public Licentie_controleTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected internal global::System.Data.SQLite.SQLiteDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal global::System.Data.SQLite.SQLiteConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::System.Data.SQLite.SQLiteCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal global::System.Data.SQLite.SQLiteTransaction Transaction {
            get {
                return this._transaction;
            }
            set {
                this._transaction = value;
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    this.CommandCollection[i].Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.DeleteCommand != null))) {
                    this.Adapter.DeleteCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.InsertCommand != null))) {
                    this.Adapter.InsertCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.UpdateCommand != null))) {
                    this.Adapter.UpdateCommand.Transaction = this._transaction;
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected global::System.Data.SQLite.SQLiteCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitAdapter() {
            this._adapter = new global::System.Data.SQLite.SQLiteDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "Licentie_controle";
            tableMapping.ColumnMappings.Add("Licctrl_Id", "Licctrl_Id");
            tableMapping.ColumnMappings.Add("Licctrl_StatusId", "Licctrl_StatusId");
            tableMapping.ColumnMappings.Add("Licctrl_DispStatus", "Licctrl_DispStatus");
            tableMapping.ColumnMappings.Add("Licctrl_Programma", "Licctrl_Programma");
            tableMapping.ColumnMappings.Add("Licctrl_Nr", "Licctrl_Nr");
            tableMapping.ColumnMappings.Add("Licctrl_Code", "Licctrl_Code");
            tableMapping.ColumnMappings.Add("Licctrl_Type", "Licctrl_Type");
            tableMapping.ColumnMappings.Add("Licctrl_Usermode", "Licctrl_Usermode");
            tableMapping.ColumnMappings.Add("Licctrl_ControleCode", "Licctrl_ControleCode");
            tableMapping.ColumnMappings.Add("Licctrl_Mutatiedatum", "Licctrl_Mutatiedatum");
            this._adapter.TableMappings.Add(tableMapping);
            this._adapter.DeleteCommand = new global::System.Data.SQLite.SQLiteCommand();
            this._adapter.DeleteCommand.Connection = this.Connection;
            this._adapter.DeleteCommand.CommandText = @"DELETE FROM [main].[sqlite_default_schema].[Licentie_controle] WHERE (([Licctrl_Id] = @Original_Licctrl_Id) AND ((@IsNull_Licctrl_StatusId = 1 AND [Licctrl_StatusId] IS NULL) OR ([Licctrl_StatusId] = @Original_Licctrl_StatusId)) AND ((@IsNull_Licctrl_DispStatus = 1 AND [Licctrl_DispStatus] IS NULL) OR ([Licctrl_DispStatus] = @Original_Licctrl_DispStatus)) AND ([Licctrl_Programma] = @Original_Licctrl_Programma) AND ([Licctrl_Nr] = @Original_Licctrl_Nr) AND ((@IsNull_Licctrl_Code = 1 AND [Licctrl_Code] IS NULL) OR ([Licctrl_Code] = @Original_Licctrl_Code)) AND ([Licctrl_Type] = @Original_Licctrl_Type) AND ([Licctrl_Usermode] = @Original_Licctrl_Usermode) AND ((@IsNull_Licctrl_ControleCode = 1 AND [Licctrl_ControleCode] IS NULL) OR ([Licctrl_ControleCode] = @Original_Licctrl_ControleCode)) AND ([Licctrl_Mutatiedatum] = @Original_Licctrl_Mutatiedatum))";
            this._adapter.DeleteCommand.CommandType = global::System.Data.CommandType.Text;
            global::System.Data.SQLite.SQLiteParameter param = new global::System.Data.SQLite.SQLiteParameter();
            param.ParameterName = "@Original_Licctrl_Id";
            param.DbType = global::System.Data.DbType.Int64;
            param.DbType = global::System.Data.DbType.Int64;
            param.SourceColumn = "Licctrl_Id";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::System.Data.SQLite.SQLiteParameter();
            param.ParameterName = "@IsNull_Licctrl_StatusId";
            param.DbType = global::System.Data.DbType.Int32;
            param.DbType = global::System.Data.DbType.Int32;
            param.SourceColumn = "Licctrl_StatusId";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::System.Data.SQLite.SQLiteParameter();
            param.ParameterName = "@Original_Licctrl_StatusId";
            param.DbType = global::System.Data.DbType.Int64;
            param.DbType = global::System.Data.DbType.Int64;
            param.SourceColumn = "Licctrl_StatusId";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::System.Data.SQLite.SQLiteParameter();
            param.ParameterName = "@IsNull_Licctrl_DispStatus";
            param.DbType = global::System.Data.DbType.Int32;
            param.DbType = global::System.Data.DbType.Int32;
            param.SourceColumn = "Licctrl_DispStatus";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::System.Data.SQLite.SQLiteParameter();
            param.ParameterName = "@Original_Licctrl_DispStatus";
            param.DbType = global::System.Data.DbType.AnsiString;
            param.DbType = global::System.Data.DbType.AnsiString;
            param.SourceColumn = "Licctrl_DispStatus";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::System.Data.SQLite.SQLiteParameter();
            param.ParameterName = "@Original_Licctrl_Programma";
            param.DbType = global::System.Data.DbType.AnsiString;
            param.DbType = global::System.Data.DbType.AnsiString;
            param.SourceColumn = "Licctrl_Programma";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::System.Data.SQLite.SQLiteParameter();
            param.ParameterName = "@Original_Licctrl_Nr";
            param.DbType = global::System.Data.DbType.Int64;
            param.DbType = global::System.Data.DbType.Int64;
            param.SourceColumn = "Licctrl_Nr";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::System.Data.SQLite.SQLiteParameter();
            param.ParameterName = "@IsNull_Licctrl_Code";
            param.DbType = global::System.Data.DbType.Int32;
            param.DbType = global::System.Data.DbType.Int32;
            param.SourceColumn = "Licctrl_Code";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::System.Data.SQLite.SQLiteParameter();
            param.ParameterName = "@Original_Licctrl_Code";
            param.DbType = global::System.Data.DbType.AnsiString;
            param.DbType = global::System.Data.DbType.AnsiString;
            param.SourceColumn = "Licctrl_Code";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::System.Data.SQLite.SQLiteParameter();
            param.ParameterName = "@Original_Licctrl_Type";
            param.DbType = global::System.Data.DbType.Object;
            param.DbType = global::System.Data.DbType.Object;
            param.SourceColumn = "Licctrl_Type";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::System.Data.SQLite.SQLiteParameter();
            param.ParameterName = "@Original_Licctrl_Usermode";
            param.DbType = global::System.Data.DbType.Int64;
            param.DbType = global::System.Data.DbType.Int64;
            param.SourceColumn = "Licctrl_Usermode";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::System.Data.SQLite.SQLiteParameter();
            param.ParameterName = "@IsNull_Licctrl_ControleCode";
            param.DbType = global::System.Data.DbType.Int32;
            param.DbType = global::System.Data.DbType.Int32;
            param.SourceColumn = "Licctrl_ControleCode";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::System.Data.SQLite.SQLiteParameter();
            param.ParameterName = "@Original_Licctrl_ControleCode";
            param.DbType = global::System.Data.DbType.AnsiString;
            param.DbType = global::System.Data.DbType.AnsiString;
            param.SourceColumn = "Licctrl_ControleCode";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::System.Data.SQLite.SQLiteParameter();
            param.ParameterName = "@Original_Licctrl_Mutatiedatum";
            param.DbType = global::System.Data.DbType.DateTime;
            param.DbType = global::System.Data.DbType.DateTime;
            param.SourceColumn = "Licctrl_Mutatiedatum";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            this._adapter.InsertCommand = new global::System.Data.SQLite.SQLiteCommand();
            this._adapter.InsertCommand.Connection = this.Connection;
            this._adapter.InsertCommand.CommandText = @"INSERT INTO [main].[sqlite_default_schema].[Licentie_controle] ([Licctrl_StatusId], [Licctrl_DispStatus], [Licctrl_Programma], [Licctrl_Nr], [Licctrl_Code], [Licctrl_Type], [Licctrl_Usermode], [Licctrl_ControleCode], [Licctrl_Mutatiedatum]) VALUES (@Licctrl_StatusId, @Licctrl_DispStatus, @Licctrl_Programma, @Licctrl_Nr, @Licctrl_Code, @Licctrl_Type, @Licctrl_Usermode, @Licctrl_ControleCode, @Licctrl_Mutatiedatum)";
            this._adapter.InsertCommand.CommandType = global::System.Data.CommandType.Text;
            param = new global::System.Data.SQLite.SQLiteParameter();
            param.ParameterName = "@Licctrl_StatusId";
            param.DbType = global::System.Data.DbType.Int64;
            param.DbType = global::System.Data.DbType.Int64;
            param.SourceColumn = "Licctrl_StatusId";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::System.Data.SQLite.SQLiteParameter();
            param.ParameterName = "@Licctrl_DispStatus";
            param.DbType = global::System.Data.DbType.AnsiString;
            param.DbType = global::System.Data.DbType.AnsiString;
            param.SourceColumn = "Licctrl_DispStatus";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::System.Data.SQLite.SQLiteParameter();
            param.ParameterName = "@Licctrl_Programma";
            param.DbType = global::System.Data.DbType.AnsiString;
            param.DbType = global::System.Data.DbType.AnsiString;
            param.SourceColumn = "Licctrl_Programma";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::System.Data.SQLite.SQLiteParameter();
            param.ParameterName = "@Licctrl_Nr";
            param.DbType = global::System.Data.DbType.Int64;
            param.DbType = global::System.Data.DbType.Int64;
            param.SourceColumn = "Licctrl_Nr";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::System.Data.SQLite.SQLiteParameter();
            param.ParameterName = "@Licctrl_Code";
            param.DbType = global::System.Data.DbType.AnsiString;
            param.DbType = global::System.Data.DbType.AnsiString;
            param.SourceColumn = "Licctrl_Code";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::System.Data.SQLite.SQLiteParameter();
            param.ParameterName = "@Licctrl_Type";
            param.DbType = global::System.Data.DbType.Object;
            param.DbType = global::System.Data.DbType.Object;
            param.SourceColumn = "Licctrl_Type";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::System.Data.SQLite.SQLiteParameter();
            param.ParameterName = "@Licctrl_Usermode";
            param.DbType = global::System.Data.DbType.Int64;
            param.DbType = global::System.Data.DbType.Int64;
            param.SourceColumn = "Licctrl_Usermode";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::System.Data.SQLite.SQLiteParameter();
            param.ParameterName = "@Licctrl_ControleCode";
            param.DbType = global::System.Data.DbType.AnsiString;
            param.DbType = global::System.Data.DbType.AnsiString;
            param.SourceColumn = "Licctrl_ControleCode";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::System.Data.SQLite.SQLiteParameter();
            param.ParameterName = "@Licctrl_Mutatiedatum";
            param.DbType = global::System.Data.DbType.DateTime;
            param.DbType = global::System.Data.DbType.DateTime;
            param.SourceColumn = "Licctrl_Mutatiedatum";
            this._adapter.InsertCommand.Parameters.Add(param);
            this._adapter.UpdateCommand = new global::System.Data.SQLite.SQLiteCommand();
            this._adapter.UpdateCommand.Connection = this.Connection;
            this._adapter.UpdateCommand.CommandText = @"UPDATE [main].[sqlite_default_schema].[Licentie_controle] SET [Licctrl_StatusId] = @Licctrl_StatusId, [Licctrl_DispStatus] = @Licctrl_DispStatus, [Licctrl_Programma] = @Licctrl_Programma, [Licctrl_Nr] = @Licctrl_Nr, [Licctrl_Code] = @Licctrl_Code, [Licctrl_Type] = @Licctrl_Type, [Licctrl_Usermode] = @Licctrl_Usermode, [Licctrl_ControleCode] = @Licctrl_ControleCode, [Licctrl_Mutatiedatum] = @Licctrl_Mutatiedatum WHERE (([Licctrl_Id] = @Original_Licctrl_Id) AND ((@IsNull_Licctrl_StatusId = 1 AND [Licctrl_StatusId] IS NULL) OR ([Licctrl_StatusId] = @Original_Licctrl_StatusId)) AND ((@IsNull_Licctrl_DispStatus = 1 AND [Licctrl_DispStatus] IS NULL) OR ([Licctrl_DispStatus] = @Original_Licctrl_DispStatus)) AND ([Licctrl_Programma] = @Original_Licctrl_Programma) AND ([Licctrl_Nr] = @Original_Licctrl_Nr) AND ((@IsNull_Licctrl_Code = 1 AND [Licctrl_Code] IS NULL) OR ([Licctrl_Code] = @Original_Licctrl_Code)) AND ([Licctrl_Type] = @Original_Licctrl_Type) AND ([Licctrl_Usermode] = @Original_Licctrl_Usermode) AND ((@IsNull_Licctrl_ControleCode = 1 AND [Licctrl_ControleCode] IS NULL) OR ([Licctrl_ControleCode] = @Original_Licctrl_ControleCode)) AND ([Licctrl_Mutatiedatum] = @Original_Licctrl_Mutatiedatum))";
            this._adapter.UpdateCommand.CommandType = global::System.Data.CommandType.Text;
            param = new global::System.Data.SQLite.SQLiteParameter();
            param.ParameterName = "@Licctrl_StatusId";
            param.DbType = global::System.Data.DbType.Int64;
            param.DbType = global::System.Data.DbType.Int64;
            param.SourceColumn = "Licctrl_StatusId";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::System.Data.SQLite.SQLiteParameter();
            param.ParameterName = "@Licctrl_DispStatus";
            param.DbType = global::System.Data.DbType.AnsiString;
            param.DbType = global::System.Data.DbType.AnsiString;
            param.SourceColumn = "Licctrl_DispStatus";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::System.Data.SQLite.SQLiteParameter();
            param.ParameterName = "@Licctrl_Programma";
            param.DbType = global::System.Data.DbType.AnsiString;
            param.DbType = global::System.Data.DbType.AnsiString;
            param.SourceColumn = "Licctrl_Programma";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::System.Data.SQLite.SQLiteParameter();
            param.ParameterName = "@Licctrl_Nr";
            param.DbType = global::System.Data.DbType.Int64;
            param.DbType = global::System.Data.DbType.Int64;
            param.SourceColumn = "Licctrl_Nr";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::System.Data.SQLite.SQLiteParameter();
            param.ParameterName = "@Licctrl_Code";
            param.DbType = global::System.Data.DbType.AnsiString;
            param.DbType = global::System.Data.DbType.AnsiString;
            param.SourceColumn = "Licctrl_Code";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::System.Data.SQLite.SQLiteParameter();
            param.ParameterName = "@Licctrl_Type";
            param.DbType = global::System.Data.DbType.Object;
            param.DbType = global::System.Data.DbType.Object;
            param.SourceColumn = "Licctrl_Type";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::System.Data.SQLite.SQLiteParameter();
            param.ParameterName = "@Licctrl_Usermode";
            param.DbType = global::System.Data.DbType.Int64;
            param.DbType = global::System.Data.DbType.Int64;
            param.SourceColumn = "Licctrl_Usermode";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::System.Data.SQLite.SQLiteParameter();
            param.ParameterName = "@Licctrl_ControleCode";
            param.DbType = global::System.Data.DbType.AnsiString;
            param.DbType = global::System.Data.DbType.AnsiString;
            param.SourceColumn = "Licctrl_ControleCode";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::System.Data.SQLite.SQLiteParameter();
            param.ParameterName = "@Licctrl_Mutatiedatum";
            param.DbType = global::System.Data.DbType.DateTime;
            param.DbType = global::System.Data.DbType.DateTime;
            param.SourceColumn = "Licctrl_Mutatiedatum";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::System.Data.SQLite.SQLiteParameter();
            param.ParameterName = "@Original_Licctrl_Id";
            param.DbType = global::System.Data.DbType.Int64;
            param.DbType = global::System.Data.DbType.Int64;
            param.SourceColumn = "Licctrl_Id";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::System.Data.SQLite.SQLiteParameter();
            param.ParameterName = "@IsNull_Licctrl_StatusId";
            param.DbType = global::System.Data.DbType.Int32;
            param.DbType = global::System.Data.DbType.Int32;
            param.SourceColumn = "Licctrl_StatusId";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::System.Data.SQLite.SQLiteParameter();
            param.ParameterName = "@Original_Licctrl_StatusId";
            param.DbType = global::System.Data.DbType.Int64;
            param.DbType = global::System.Data.DbType.Int64;
            param.SourceColumn = "Licctrl_StatusId";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::System.Data.SQLite.SQLiteParameter();
            param.ParameterName = "@IsNull_Licctrl_DispStatus";
            param.DbType = global::System.Data.DbType.Int32;
            param.DbType = global::System.Data.DbType.Int32;
            param.SourceColumn = "Licctrl_DispStatus";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::System.Data.SQLite.SQLiteParameter();
            param.ParameterName = "@Original_Licctrl_DispStatus";
            param.DbType = global::System.Data.DbType.AnsiString;
            param.DbType = global::System.Data.DbType.AnsiString;
            param.SourceColumn = "Licctrl_DispStatus";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::System.Data.SQLite.SQLiteParameter();
            param.ParameterName = "@Original_Licctrl_Programma";
            param.DbType = global::System.Data.DbType.AnsiString;
            param.DbType = global::System.Data.DbType.AnsiString;
            param.SourceColumn = "Licctrl_Programma";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::System.Data.SQLite.SQLiteParameter();
            param.ParameterName = "@Original_Licctrl_Nr";
            param.DbType = global::System.Data.DbType.Int64;
            param.DbType = global::System.Data.DbType.Int64;
            param.SourceColumn = "Licctrl_Nr";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::System.Data.SQLite.SQLiteParameter();
            param.ParameterName = "@IsNull_Licctrl_Code";
            param.DbType = global::System.Data.DbType.Int32;
            param.DbType = global::System.Data.DbType.Int32;
            param.SourceColumn = "Licctrl_Code";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::System.Data.SQLite.SQLiteParameter();
            param.ParameterName = "@Original_Licctrl_Code";
            param.DbType = global::System.Data.DbType.AnsiString;
            param.DbType = global::System.Data.DbType.AnsiString;
            param.SourceColumn = "Licctrl_Code";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::System.Data.SQLite.SQLiteParameter();
            param.ParameterName = "@Original_Licctrl_Type";
            param.DbType = global::System.Data.DbType.Object;
            param.DbType = global::System.Data.DbType.Object;
            param.SourceColumn = "Licctrl_Type";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::System.Data.SQLite.SQLiteParameter();
            param.ParameterName = "@Original_Licctrl_Usermode";
            param.DbType = global::System.Data.DbType.Int64;
            param.DbType = global::System.Data.DbType.Int64;
            param.SourceColumn = "Licctrl_Usermode";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::System.Data.SQLite.SQLiteParameter();
            param.ParameterName = "@IsNull_Licctrl_ControleCode";
            param.DbType = global::System.Data.DbType.Int32;
            param.DbType = global::System.Data.DbType.Int32;
            param.SourceColumn = "Licctrl_ControleCode";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::System.Data.SQLite.SQLiteParameter();
            param.ParameterName = "@Original_Licctrl_ControleCode";
            param.DbType = global::System.Data.DbType.AnsiString;
            param.DbType = global::System.Data.DbType.AnsiString;
            param.SourceColumn = "Licctrl_ControleCode";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::System.Data.SQLite.SQLiteParameter();
            param.ParameterName = "@Original_Licctrl_Mutatiedatum";
            param.DbType = global::System.Data.DbType.DateTime;
            param.DbType = global::System.Data.DbType.DateTime;
            param.SourceColumn = "Licctrl_Mutatiedatum";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitConnection() {
            this._connection = new global::System.Data.SQLite.SQLiteConnection();
            this._connection.ConnectionString = global::Cmbap.Properties.Settings.Default.Cmbap_dataConnectionString;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitCommandCollection() {
            this._commandCollection = new global::System.Data.SQLite.SQLiteCommand[1];
            this._commandCollection[0] = new global::System.Data.SQLite.SQLiteCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "SELECT [Licctrl_Id], [Licctrl_StatusId], [Licctrl_DispStatus], [Licctrl_Programma" +
                "], [Licctrl_Nr], [Licctrl_Code], [Licctrl_Type], [Licctrl_Usermode], [Licctrl_Co" +
                "ntroleCode], [Licctrl_Mutatiedatum] FROM [Licentie_controle]";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(_Cmbap_dataDataSet.Licentie_controleDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual _Cmbap_dataDataSet.Licentie_controleDataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            _Cmbap_dataDataSet.Licentie_controleDataTable dataTable = new _Cmbap_dataDataSet.Licentie_controleDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(_Cmbap_dataDataSet.Licentie_controleDataTable dataTable) {
            return this.Adapter.Update(dataTable);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(_Cmbap_dataDataSet dataSet) {
            return this.Adapter.Update(dataSet, "Licentie_controle");
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow dataRow) {
            return this.Adapter.Update(new global::System.Data.DataRow[] {
                        dataRow});
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow[] dataRows) {
            return this.Adapter.Update(dataRows);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Delete, true)]
        public virtual int Delete(long Original_Licctrl_Id, global::System.Nullable<long> Original_Licctrl_StatusId, string Original_Licctrl_DispStatus, string Original_Licctrl_Programma, long Original_Licctrl_Nr, string Original_Licctrl_Code, object Original_Licctrl_Type, long Original_Licctrl_Usermode, string Original_Licctrl_ControleCode, System.DateTime Original_Licctrl_Mutatiedatum) {
            this.Adapter.DeleteCommand.Parameters[0].Value = ((long)(Original_Licctrl_Id));
            if ((Original_Licctrl_StatusId.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[1].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[2].Value = ((long)(Original_Licctrl_StatusId.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[1].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[2].Value = global::System.DBNull.Value;
            }
            if ((Original_Licctrl_DispStatus == null)) {
                this.Adapter.DeleteCommand.Parameters[3].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[4].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[3].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[4].Value = ((string)(Original_Licctrl_DispStatus));
            }
            if ((Original_Licctrl_Programma == null)) {
                throw new global::System.ArgumentNullException("Original_Licctrl_Programma");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[5].Value = ((string)(Original_Licctrl_Programma));
            }
            this.Adapter.DeleteCommand.Parameters[6].Value = ((long)(Original_Licctrl_Nr));
            if ((Original_Licctrl_Code == null)) {
                this.Adapter.DeleteCommand.Parameters[7].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[8].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[7].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[8].Value = ((string)(Original_Licctrl_Code));
            }
            if ((Original_Licctrl_Type == null)) {
                throw new global::System.ArgumentNullException("Original_Licctrl_Type");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[9].Value = ((object)(Original_Licctrl_Type));
            }
            this.Adapter.DeleteCommand.Parameters[10].Value = ((long)(Original_Licctrl_Usermode));
            if ((Original_Licctrl_ControleCode == null)) {
                this.Adapter.DeleteCommand.Parameters[11].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[12].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[11].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[12].Value = ((string)(Original_Licctrl_ControleCode));
            }
            this.Adapter.DeleteCommand.Parameters[13].Value = ((System.DateTime)(Original_Licctrl_Mutatiedatum));
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.DeleteCommand.Connection.State;
            if (((this.Adapter.DeleteCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.DeleteCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.DeleteCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.DeleteCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Insert, true)]
        public virtual int Insert(global::System.Nullable<long> Licctrl_StatusId, string Licctrl_DispStatus, string Licctrl_Programma, long Licctrl_Nr, string Licctrl_Code, object Licctrl_Type, long Licctrl_Usermode, string Licctrl_ControleCode, System.DateTime Licctrl_Mutatiedatum) {
            if ((Licctrl_StatusId.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[0].Value = ((long)(Licctrl_StatusId.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[0].Value = global::System.DBNull.Value;
            }
            if ((Licctrl_DispStatus == null)) {
                this.Adapter.InsertCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[1].Value = ((string)(Licctrl_DispStatus));
            }
            if ((Licctrl_Programma == null)) {
                throw new global::System.ArgumentNullException("Licctrl_Programma");
            }
            else {
                this.Adapter.InsertCommand.Parameters[2].Value = ((string)(Licctrl_Programma));
            }
            this.Adapter.InsertCommand.Parameters[3].Value = ((long)(Licctrl_Nr));
            if ((Licctrl_Code == null)) {
                this.Adapter.InsertCommand.Parameters[4].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[4].Value = ((string)(Licctrl_Code));
            }
            if ((Licctrl_Type == null)) {
                throw new global::System.ArgumentNullException("Licctrl_Type");
            }
            else {
                this.Adapter.InsertCommand.Parameters[5].Value = ((object)(Licctrl_Type));
            }
            this.Adapter.InsertCommand.Parameters[6].Value = ((long)(Licctrl_Usermode));
            if ((Licctrl_ControleCode == null)) {
                this.Adapter.InsertCommand.Parameters[7].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[7].Value = ((string)(Licctrl_ControleCode));
            }
            this.Adapter.InsertCommand.Parameters[8].Value = ((System.DateTime)(Licctrl_Mutatiedatum));
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.InsertCommand.Connection.State;
            if (((this.Adapter.InsertCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.InsertCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.InsertCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.InsertCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(
                    global::System.Nullable<long> Licctrl_StatusId, 
                    string Licctrl_DispStatus, 
                    string Licctrl_Programma, 
                    long Licctrl_Nr, 
                    string Licctrl_Code, 
                    object Licctrl_Type, 
                    long Licctrl_Usermode, 
                    string Licctrl_ControleCode, 
                    System.DateTime Licctrl_Mutatiedatum, 
                    long Original_Licctrl_Id, 
                    global::System.Nullable<long> Original_Licctrl_StatusId, 
                    string Original_Licctrl_DispStatus, 
                    string Original_Licctrl_Programma, 
                    long Original_Licctrl_Nr, 
                    string Original_Licctrl_Code, 
                    object Original_Licctrl_Type, 
                    long Original_Licctrl_Usermode, 
                    string Original_Licctrl_ControleCode, 
                    System.DateTime Original_Licctrl_Mutatiedatum) {
            if ((Licctrl_StatusId.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[0].Value = ((long)(Licctrl_StatusId.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[0].Value = global::System.DBNull.Value;
            }
            if ((Licctrl_DispStatus == null)) {
                this.Adapter.UpdateCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[1].Value = ((string)(Licctrl_DispStatus));
            }
            if ((Licctrl_Programma == null)) {
                throw new global::System.ArgumentNullException("Licctrl_Programma");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[2].Value = ((string)(Licctrl_Programma));
            }
            this.Adapter.UpdateCommand.Parameters[3].Value = ((long)(Licctrl_Nr));
            if ((Licctrl_Code == null)) {
                this.Adapter.UpdateCommand.Parameters[4].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[4].Value = ((string)(Licctrl_Code));
            }
            if ((Licctrl_Type == null)) {
                throw new global::System.ArgumentNullException("Licctrl_Type");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[5].Value = ((object)(Licctrl_Type));
            }
            this.Adapter.UpdateCommand.Parameters[6].Value = ((long)(Licctrl_Usermode));
            if ((Licctrl_ControleCode == null)) {
                this.Adapter.UpdateCommand.Parameters[7].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[7].Value = ((string)(Licctrl_ControleCode));
            }
            this.Adapter.UpdateCommand.Parameters[8].Value = ((System.DateTime)(Licctrl_Mutatiedatum));
            this.Adapter.UpdateCommand.Parameters[9].Value = ((long)(Original_Licctrl_Id));
            if ((Original_Licctrl_StatusId.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[10].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[11].Value = ((long)(Original_Licctrl_StatusId.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[10].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[11].Value = global::System.DBNull.Value;
            }
            if ((Original_Licctrl_DispStatus == null)) {
                this.Adapter.UpdateCommand.Parameters[12].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[13].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[12].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[13].Value = ((string)(Original_Licctrl_DispStatus));
            }
            if ((Original_Licctrl_Programma == null)) {
                throw new global::System.ArgumentNullException("Original_Licctrl_Programma");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[14].Value = ((string)(Original_Licctrl_Programma));
            }
            this.Adapter.UpdateCommand.Parameters[15].Value = ((long)(Original_Licctrl_Nr));
            if ((Original_Licctrl_Code == null)) {
                this.Adapter.UpdateCommand.Parameters[16].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[17].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[16].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[17].Value = ((string)(Original_Licctrl_Code));
            }
            if ((Original_Licctrl_Type == null)) {
                throw new global::System.ArgumentNullException("Original_Licctrl_Type");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[18].Value = ((object)(Original_Licctrl_Type));
            }
            this.Adapter.UpdateCommand.Parameters[19].Value = ((long)(Original_Licctrl_Usermode));
            if ((Original_Licctrl_ControleCode == null)) {
                this.Adapter.UpdateCommand.Parameters[20].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[21].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[20].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[21].Value = ((string)(Original_Licctrl_ControleCode));
            }
            this.Adapter.UpdateCommand.Parameters[22].Value = ((System.DateTime)(Original_Licctrl_Mutatiedatum));
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.UpdateCommand.Connection.State;
            if (((this.Adapter.UpdateCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.UpdateCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.UpdateCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.UpdateCommand.Connection.Close();
                }
            }
        }
    }
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class LogTableAdapter : global::System.ComponentModel.Component {
        
        private global::System.Data.SQLite.SQLiteDataAdapter _adapter;
        
        private global::System.Data.SQLite.SQLiteConnection _connection;
        
        private global::System.Data.SQLite.SQLiteTransaction _transaction;
        
        private global::System.Data.SQLite.SQLiteCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public LogTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected internal global::System.Data.SQLite.SQLiteDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal global::System.Data.SQLite.SQLiteConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::System.Data.SQLite.SQLiteCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal global::System.Data.SQLite.SQLiteTransaction Transaction {
            get {
                return this._transaction;
            }
            set {
                this._transaction = value;
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    this.CommandCollection[i].Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.DeleteCommand != null))) {
                    this.Adapter.DeleteCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.InsertCommand != null))) {
                    this.Adapter.InsertCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.UpdateCommand != null))) {
                    this.Adapter.UpdateCommand.Transaction = this._transaction;
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected global::System.Data.SQLite.SQLiteCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitAdapter() {
            this._adapter = new global::System.Data.SQLite.SQLiteDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "Log";
            tableMapping.ColumnMappings.Add("Log_Id", "Log_Id");
            tableMapping.ColumnMappings.Add("Log_StatusId", "Log_StatusId");
            tableMapping.ColumnMappings.Add("Log_DispStatus", "Log_DispStatus");
            tableMapping.ColumnMappings.Add("Log_Datum", "Log_Datum");
            tableMapping.ColumnMappings.Add("Log_Bestand", "Log_Bestand");
            tableMapping.ColumnMappings.Add("Log_Bestandsnr", "Log_Bestandsnr");
            tableMapping.ColumnMappings.Add("Log_RecordId", "Log_RecordId");
            tableMapping.ColumnMappings.Add("Log_Veldnaam", "Log_Veldnaam");
            tableMapping.ColumnMappings.Add("Log_Volgnr", "Log_Volgnr");
            tableMapping.ColumnMappings.Add("Log_Oude_tekst", "Log_Oude_tekst");
            tableMapping.ColumnMappings.Add("Log_Nieuwe_tekst", "Log_Nieuwe_tekst");
            tableMapping.ColumnMappings.Add("Log_Oude_numeriek", "Log_Oude_numeriek");
            tableMapping.ColumnMappings.Add("Log_Nieuwe_numeriek", "Log_Nieuwe_numeriek");
            tableMapping.ColumnMappings.Add("Log_Oude_real", "Log_Oude_real");
            tableMapping.ColumnMappings.Add("Log_Nieuwe_real", "Log_Nieuwe_real");
            tableMapping.ColumnMappings.Add("Log_Oude_currency", "Log_Oude_currency");
            tableMapping.ColumnMappings.Add("Log_Nieuwe_currency", "Log_Nieuwe_currency");
            tableMapping.ColumnMappings.Add("Log_Oude_datum", "Log_Oude_datum");
            tableMapping.ColumnMappings.Add("Log_Nieuwe_datum", "Log_Nieuwe_datum");
            tableMapping.ColumnMappings.Add("Log_Oude_JN", "Log_Oude_JN");
            tableMapping.ColumnMappings.Add("Log_Nieuwe_JN", "Log_Nieuwe_JN");
            tableMapping.ColumnMappings.Add("Log_Oude_memo", "Log_Oude_memo");
            tableMapping.ColumnMappings.Add("Log_Nieuwe_memo", "Log_Nieuwe_memo");
            tableMapping.ColumnMappings.Add("Log_Oude_record_datum", "Log_Oude_record_datum");
            tableMapping.ColumnMappings.Add("Log_Nieuwe_recorddatum", "Log_Nieuwe_recorddatum");
            tableMapping.ColumnMappings.Add("Log_Oude_user", "Log_Oude_user");
            tableMapping.ColumnMappings.Add("Log_Nieuwe_user", "Log_Nieuwe_user");
            tableMapping.ColumnMappings.Add("Log_DbFilesId", "Log_DbFilesId");
            this._adapter.TableMappings.Add(tableMapping);
            this._adapter.DeleteCommand = new global::System.Data.SQLite.SQLiteCommand();
            this._adapter.DeleteCommand.Connection = this.Connection;
            this._adapter.DeleteCommand.CommandText = "DELETE FROM [main].[sqlite_default_schema].[Log] WHERE (([Log_Id] = @Original_Log" +
                "_Id) AND ((@IsNull_Log_StatusId = 1 AND [Log_StatusId] IS NULL) OR ([Log_StatusI" +
                "d] = @Original_Log_StatusId)) AND ((@IsNull_Log_DispStatus = 1 AND [Log_DispStat" +
                "us] IS NULL) OR ([Log_DispStatus] = @Original_Log_DispStatus)) AND ([Log_Datum] " +
                "= @Original_Log_Datum) AND ([Log_Bestand] = @Original_Log_Bestand) AND ([Log_Bes" +
                "tandsnr] = @Original_Log_Bestandsnr) AND ([Log_RecordId] = @Original_Log_RecordI" +
                "d) AND ([Log_Veldnaam] = @Original_Log_Veldnaam) AND ([Log_Volgnr] = @Original_L" +
                "og_Volgnr) AND ((@IsNull_Log_Oude_tekst = 1 AND [Log_Oude_tekst] IS NULL) OR ([L" +
                "og_Oude_tekst] = @Original_Log_Oude_tekst)) AND ((@IsNull_Log_Nieuwe_tekst = 1 A" +
                "ND [Log_Nieuwe_tekst] IS NULL) OR ([Log_Nieuwe_tekst] = @Original_Log_Nieuwe_tek" +
                "st)) AND ((@IsNull_Log_Oude_numeriek = 1 AND [Log_Oude_numeriek] IS NULL) OR ([L" +
                "og_Oude_numeriek] = @Original_Log_Oude_numeriek)) AND ((@IsNull_Log_Nieuwe_numer" +
                "iek = 1 AND [Log_Nieuwe_numeriek] IS NULL) OR ([Log_Nieuwe_numeriek] = @Original" +
                "_Log_Nieuwe_numeriek)) AND ((@IsNull_Log_Oude_real = 1 AND [Log_Oude_real] IS NU" +
                "LL) OR ([Log_Oude_real] = @Original_Log_Oude_real)) AND ((@IsNull_Log_Nieuwe_rea" +
                "l = 1 AND [Log_Nieuwe_real] IS NULL) OR ([Log_Nieuwe_real] = @Original_Log_Nieuw" +
                "e_real)) AND ((@IsNull_Log_Oude_currency = 1 AND [Log_Oude_currency] IS NULL) OR" +
                " ([Log_Oude_currency] = @Original_Log_Oude_currency)) AND ((@IsNull_Log_Nieuwe_c" +
                "urrency = 1 AND [Log_Nieuwe_currency] IS NULL) OR ([Log_Nieuwe_currency] = @Orig" +
                "inal_Log_Nieuwe_currency)) AND ((@IsNull_Log_Oude_datum = 1 AND [Log_Oude_datum]" +
                " IS NULL) OR ([Log_Oude_datum] = @Original_Log_Oude_datum)) AND ((@IsNull_Log_Ni" +
                "euwe_datum = 1 AND [Log_Nieuwe_datum] IS NULL) OR ([Log_Nieuwe_datum] = @Origina" +
                "l_Log_Nieuwe_datum)) AND ((@IsNull_Log_Oude_JN = 1 AND [Log_Oude_JN] IS NULL) OR" +
                " ([Log_Oude_JN] = @Original_Log_Oude_JN)) AND ((@IsNull_Log_Nieuwe_JN = 1 AND [L" +
                "og_Nieuwe_JN] IS NULL) OR ([Log_Nieuwe_JN] = @Original_Log_Nieuwe_JN)) AND ((@Is" +
                "Null_Log_Oude_memo = 1 AND [Log_Oude_memo] IS NULL) OR ([Log_Oude_memo] = @Origi" +
                "nal_Log_Oude_memo)) AND ((@IsNull_Log_Nieuwe_memo = 1 AND [Log_Nieuwe_memo] IS N" +
                "ULL) OR ([Log_Nieuwe_memo] = @Original_Log_Nieuwe_memo)) AND ((@IsNull_Log_Oude_" +
                "record_datum = 1 AND [Log_Oude_record_datum] IS NULL) OR ([Log_Oude_record_datum" +
                "] = @Original_Log_Oude_record_datum)) AND ((@IsNull_Log_Nieuwe_recorddatum = 1 A" +
                "ND [Log_Nieuwe_recorddatum] IS NULL) OR ([Log_Nieuwe_recorddatum] = @Original_Lo" +
                "g_Nieuwe_recorddatum)) AND ((@IsNull_Log_Oude_user = 1 AND [Log_Oude_user] IS NU" +
                "LL) OR ([Log_Oude_user] = @Original_Log_Oude_user)) AND ((@IsNull_Log_Nieuwe_use" +
                "r = 1 AND [Log_Nieuwe_user] IS NULL) OR ([Log_Nieuwe_user] = @Original_Log_Nieuw" +
                "e_user)) AND ((@IsNull_Log_DbFilesId = 1 AND [Log_DbFilesId] IS NULL) OR ([Log_D" +
                "bFilesId] = @Original_Log_DbFilesId)))";
            this._adapter.DeleteCommand.CommandType = global::System.Data.CommandType.Text;
            global::System.Data.SQLite.SQLiteParameter param = new global::System.Data.SQLite.SQLiteParameter();
            param.ParameterName = "@Original_Log_Id";
            param.DbType = global::System.Data.DbType.Int64;
            param.DbType = global::System.Data.DbType.Int64;
            param.SourceColumn = "Log_Id";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::System.Data.SQLite.SQLiteParameter();
            param.ParameterName = "@IsNull_Log_StatusId";
            param.DbType = global::System.Data.DbType.Int32;
            param.DbType = global::System.Data.DbType.Int32;
            param.SourceColumn = "Log_StatusId";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::System.Data.SQLite.SQLiteParameter();
            param.ParameterName = "@Original_Log_StatusId";
            param.DbType = global::System.Data.DbType.Int64;
            param.DbType = global::System.Data.DbType.Int64;
            param.SourceColumn = "Log_StatusId";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::System.Data.SQLite.SQLiteParameter();
            param.ParameterName = "@IsNull_Log_DispStatus";
            param.DbType = global::System.Data.DbType.Int32;
            param.DbType = global::System.Data.DbType.Int32;
            param.SourceColumn = "Log_DispStatus";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::System.Data.SQLite.SQLiteParameter();
            param.ParameterName = "@Original_Log_DispStatus";
            param.DbType = global::System.Data.DbType.AnsiString;
            param.DbType = global::System.Data.DbType.AnsiString;
            param.SourceColumn = "Log_DispStatus";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::System.Data.SQLite.SQLiteParameter();
            param.ParameterName = "@Original_Log_Datum";
            param.DbType = global::System.Data.DbType.DateTime;
            param.DbType = global::System.Data.DbType.DateTime;
            param.SourceColumn = "Log_Datum";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::System.Data.SQLite.SQLiteParameter();
            param.ParameterName = "@Original_Log_Bestand";
            param.DbType = global::System.Data.DbType.AnsiStringFixedLength;
            param.DbType = global::System.Data.DbType.AnsiStringFixedLength;
            param.SourceColumn = "Log_Bestand";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::System.Data.SQLite.SQLiteParameter();
            param.ParameterName = "@Original_Log_Bestandsnr";
            param.DbType = global::System.Data.DbType.Int64;
            param.DbType = global::System.Data.DbType.Int64;
            param.SourceColumn = "Log_Bestandsnr";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::System.Data.SQLite.SQLiteParameter();
            param.ParameterName = "@Original_Log_RecordId";
            param.DbType = global::System.Data.DbType.Int64;
            param.DbType = global::System.Data.DbType.Int64;
            param.SourceColumn = "Log_RecordId";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::System.Data.SQLite.SQLiteParameter();
            param.ParameterName = "@Original_Log_Veldnaam";
            param.DbType = global::System.Data.DbType.AnsiStringFixedLength;
            param.DbType = global::System.Data.DbType.AnsiStringFixedLength;
            param.SourceColumn = "Log_Veldnaam";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::System.Data.SQLite.SQLiteParameter();
            param.ParameterName = "@Original_Log_Volgnr";
            param.DbType = global::System.Data.DbType.Int64;
            param.DbType = global::System.Data.DbType.Int64;
            param.SourceColumn = "Log_Volgnr";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::System.Data.SQLite.SQLiteParameter();
            param.ParameterName = "@IsNull_Log_Oude_tekst";
            param.DbType = global::System.Data.DbType.Int32;
            param.DbType = global::System.Data.DbType.Int32;
            param.SourceColumn = "Log_Oude_tekst";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::System.Data.SQLite.SQLiteParameter();
            param.ParameterName = "@Original_Log_Oude_tekst";
            param.DbType = global::System.Data.DbType.AnsiStringFixedLength;
            param.DbType = global::System.Data.DbType.AnsiStringFixedLength;
            param.SourceColumn = "Log_Oude_tekst";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::System.Data.SQLite.SQLiteParameter();
            param.ParameterName = "@IsNull_Log_Nieuwe_tekst";
            param.DbType = global::System.Data.DbType.Int32;
            param.DbType = global::System.Data.DbType.Int32;
            param.SourceColumn = "Log_Nieuwe_tekst";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::System.Data.SQLite.SQLiteParameter();
            param.ParameterName = "@Original_Log_Nieuwe_tekst";
            param.DbType = global::System.Data.DbType.AnsiStringFixedLength;
            param.DbType = global::System.Data.DbType.AnsiStringFixedLength;
            param.SourceColumn = "Log_Nieuwe_tekst";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::System.Data.SQLite.SQLiteParameter();
            param.ParameterName = "@IsNull_Log_Oude_numeriek";
            param.DbType = global::System.Data.DbType.Int32;
            param.DbType = global::System.Data.DbType.Int32;
            param.SourceColumn = "Log_Oude_numeriek";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::System.Data.SQLite.SQLiteParameter();
            param.ParameterName = "@Original_Log_Oude_numeriek";
            param.DbType = global::System.Data.DbType.Int64;
            param.DbType = global::System.Data.DbType.Int64;
            param.SourceColumn = "Log_Oude_numeriek";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::System.Data.SQLite.SQLiteParameter();
            param.ParameterName = "@IsNull_Log_Nieuwe_numeriek";
            param.DbType = global::System.Data.DbType.Int32;
            param.DbType = global::System.Data.DbType.Int32;
            param.SourceColumn = "Log_Nieuwe_numeriek";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::System.Data.SQLite.SQLiteParameter();
            param.ParameterName = "@Original_Log_Nieuwe_numeriek";
            param.DbType = global::System.Data.DbType.Int64;
            param.DbType = global::System.Data.DbType.Int64;
            param.SourceColumn = "Log_Nieuwe_numeriek";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::System.Data.SQLite.SQLiteParameter();
            param.ParameterName = "@IsNull_Log_Oude_real";
            param.DbType = global::System.Data.DbType.Int32;
            param.DbType = global::System.Data.DbType.Int32;
            param.SourceColumn = "Log_Oude_real";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::System.Data.SQLite.SQLiteParameter();
            param.ParameterName = "@Original_Log_Oude_real";
            param.DbType = global::System.Data.DbType.Decimal;
            param.DbType = global::System.Data.DbType.Decimal;
            param.SourceColumn = "Log_Oude_real";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::System.Data.SQLite.SQLiteParameter();
            param.ParameterName = "@IsNull_Log_Nieuwe_real";
            param.DbType = global::System.Data.DbType.Int32;
            param.DbType = global::System.Data.DbType.Int32;
            param.SourceColumn = "Log_Nieuwe_real";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::System.Data.SQLite.SQLiteParameter();
            param.ParameterName = "@Original_Log_Nieuwe_real";
            param.DbType = global::System.Data.DbType.Decimal;
            param.DbType = global::System.Data.DbType.Decimal;
            param.SourceColumn = "Log_Nieuwe_real";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::System.Data.SQLite.SQLiteParameter();
            param.ParameterName = "@IsNull_Log_Oude_currency";
            param.DbType = global::System.Data.DbType.Int32;
            param.DbType = global::System.Data.DbType.Int32;
            param.SourceColumn = "Log_Oude_currency";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::System.Data.SQLite.SQLiteParameter();
            param.ParameterName = "@Original_Log_Oude_currency";
            param.DbType = global::System.Data.DbType.Decimal;
            param.DbType = global::System.Data.DbType.Decimal;
            param.SourceColumn = "Log_Oude_currency";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::System.Data.SQLite.SQLiteParameter();
            param.ParameterName = "@IsNull_Log_Nieuwe_currency";
            param.DbType = global::System.Data.DbType.Int32;
            param.DbType = global::System.Data.DbType.Int32;
            param.SourceColumn = "Log_Nieuwe_currency";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::System.Data.SQLite.SQLiteParameter();
            param.ParameterName = "@Original_Log_Nieuwe_currency";
            param.DbType = global::System.Data.DbType.Decimal;
            param.DbType = global::System.Data.DbType.Decimal;
            param.SourceColumn = "Log_Nieuwe_currency";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::System.Data.SQLite.SQLiteParameter();
            param.ParameterName = "@IsNull_Log_Oude_datum";
            param.DbType = global::System.Data.DbType.Int32;
            param.DbType = global::System.Data.DbType.Int32;
            param.SourceColumn = "Log_Oude_datum";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::System.Data.SQLite.SQLiteParameter();
            param.ParameterName = "@Original_Log_Oude_datum";
            param.DbType = global::System.Data.DbType.DateTime;
            param.DbType = global::System.Data.DbType.DateTime;
            param.SourceColumn = "Log_Oude_datum";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::System.Data.SQLite.SQLiteParameter();
            param.ParameterName = "@IsNull_Log_Nieuwe_datum";
            param.DbType = global::System.Data.DbType.Int32;
            param.DbType = global::System.Data.DbType.Int32;
            param.SourceColumn = "Log_Nieuwe_datum";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::System.Data.SQLite.SQLiteParameter();
            param.ParameterName = "@Original_Log_Nieuwe_datum";
            param.DbType = global::System.Data.DbType.DateTime;
            param.DbType = global::System.Data.DbType.DateTime;
            param.SourceColumn = "Log_Nieuwe_datum";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::System.Data.SQLite.SQLiteParameter();
            param.ParameterName = "@IsNull_Log_Oude_JN";
            param.DbType = global::System.Data.DbType.Int32;
            param.DbType = global::System.Data.DbType.Int32;
            param.SourceColumn = "Log_Oude_JN";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::System.Data.SQLite.SQLiteParameter();
            param.ParameterName = "@Original_Log_Oude_JN";
            param.DbType = global::System.Data.DbType.Int64;
            param.DbType = global::System.Data.DbType.Int64;
            param.SourceColumn = "Log_Oude_JN";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::System.Data.SQLite.SQLiteParameter();
            param.ParameterName = "@IsNull_Log_Nieuwe_JN";
            param.DbType = global::System.Data.DbType.Int32;
            param.DbType = global::System.Data.DbType.Int32;
            param.SourceColumn = "Log_Nieuwe_JN";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::System.Data.SQLite.SQLiteParameter();
            param.ParameterName = "@Original_Log_Nieuwe_JN";
            param.DbType = global::System.Data.DbType.Int64;
            param.DbType = global::System.Data.DbType.Int64;
            param.SourceColumn = "Log_Nieuwe_JN";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::System.Data.SQLite.SQLiteParameter();
            param.ParameterName = "@IsNull_Log_Oude_memo";
            param.DbType = global::System.Data.DbType.Int32;
            param.DbType = global::System.Data.DbType.Int32;
            param.SourceColumn = "Log_Oude_memo";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::System.Data.SQLite.SQLiteParameter();
            param.ParameterName = "@Original_Log_Oude_memo";
            param.DbType = global::System.Data.DbType.String;
            param.SourceColumn = "Log_Oude_memo";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::System.Data.SQLite.SQLiteParameter();
            param.ParameterName = "@IsNull_Log_Nieuwe_memo";
            param.DbType = global::System.Data.DbType.Int32;
            param.DbType = global::System.Data.DbType.Int32;
            param.SourceColumn = "Log_Nieuwe_memo";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::System.Data.SQLite.SQLiteParameter();
            param.ParameterName = "@Original_Log_Nieuwe_memo";
            param.DbType = global::System.Data.DbType.String;
            param.SourceColumn = "Log_Nieuwe_memo";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::System.Data.SQLite.SQLiteParameter();
            param.ParameterName = "@IsNull_Log_Oude_record_datum";
            param.DbType = global::System.Data.DbType.Int32;
            param.DbType = global::System.Data.DbType.Int32;
            param.SourceColumn = "Log_Oude_record_datum";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::System.Data.SQLite.SQLiteParameter();
            param.ParameterName = "@Original_Log_Oude_record_datum";
            param.DbType = global::System.Data.DbType.DateTime;
            param.DbType = global::System.Data.DbType.DateTime;
            param.SourceColumn = "Log_Oude_record_datum";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::System.Data.SQLite.SQLiteParameter();
            param.ParameterName = "@IsNull_Log_Nieuwe_recorddatum";
            param.DbType = global::System.Data.DbType.Int32;
            param.DbType = global::System.Data.DbType.Int32;
            param.SourceColumn = "Log_Nieuwe_recorddatum";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::System.Data.SQLite.SQLiteParameter();
            param.ParameterName = "@Original_Log_Nieuwe_recorddatum";
            param.DbType = global::System.Data.DbType.DateTime;
            param.DbType = global::System.Data.DbType.DateTime;
            param.SourceColumn = "Log_Nieuwe_recorddatum";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::System.Data.SQLite.SQLiteParameter();
            param.ParameterName = "@IsNull_Log_Oude_user";
            param.DbType = global::System.Data.DbType.Int32;
            param.DbType = global::System.Data.DbType.Int32;
            param.SourceColumn = "Log_Oude_user";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::System.Data.SQLite.SQLiteParameter();
            param.ParameterName = "@Original_Log_Oude_user";
            param.DbType = global::System.Data.DbType.Int64;
            param.DbType = global::System.Data.DbType.Int64;
            param.SourceColumn = "Log_Oude_user";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::System.Data.SQLite.SQLiteParameter();
            param.ParameterName = "@IsNull_Log_Nieuwe_user";
            param.DbType = global::System.Data.DbType.Int32;
            param.DbType = global::System.Data.DbType.Int32;
            param.SourceColumn = "Log_Nieuwe_user";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::System.Data.SQLite.SQLiteParameter();
            param.ParameterName = "@Original_Log_Nieuwe_user";
            param.DbType = global::System.Data.DbType.Int64;
            param.DbType = global::System.Data.DbType.Int64;
            param.SourceColumn = "Log_Nieuwe_user";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::System.Data.SQLite.SQLiteParameter();
            param.ParameterName = "@IsNull_Log_DbFilesId";
            param.DbType = global::System.Data.DbType.Int32;
            param.DbType = global::System.Data.DbType.Int32;
            param.SourceColumn = "Log_DbFilesId";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::System.Data.SQLite.SQLiteParameter();
            param.ParameterName = "@Original_Log_DbFilesId";
            param.DbType = global::System.Data.DbType.Int64;
            param.DbType = global::System.Data.DbType.Int64;
            param.SourceColumn = "Log_DbFilesId";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            this._adapter.InsertCommand = new global::System.Data.SQLite.SQLiteCommand();
            this._adapter.InsertCommand.Connection = this.Connection;
            this._adapter.InsertCommand.CommandText = @"INSERT INTO [main].[sqlite_default_schema].[Log] ([Log_StatusId], [Log_DispStatus], [Log_Datum], [Log_Bestand], [Log_Bestandsnr], [Log_RecordId], [Log_Veldnaam], [Log_Volgnr], [Log_Oude_tekst], [Log_Nieuwe_tekst], [Log_Oude_numeriek], [Log_Nieuwe_numeriek], [Log_Oude_real], [Log_Nieuwe_real], [Log_Oude_currency], [Log_Nieuwe_currency], [Log_Oude_datum], [Log_Nieuwe_datum], [Log_Oude_JN], [Log_Nieuwe_JN], [Log_Oude_memo], [Log_Nieuwe_memo], [Log_Oude_record_datum], [Log_Nieuwe_recorddatum], [Log_Oude_user], [Log_Nieuwe_user], [Log_DbFilesId]) VALUES (@Log_StatusId, @Log_DispStatus, @Log_Datum, @Log_Bestand, @Log_Bestandsnr, @Log_RecordId, @Log_Veldnaam, @Log_Volgnr, @Log_Oude_tekst, @Log_Nieuwe_tekst, @Log_Oude_numeriek, @Log_Nieuwe_numeriek, @Log_Oude_real, @Log_Nieuwe_real, @Log_Oude_currency, @Log_Nieuwe_currency, @Log_Oude_datum, @Log_Nieuwe_datum, @Log_Oude_JN, @Log_Nieuwe_JN, @Log_Oude_memo, @Log_Nieuwe_memo, @Log_Oude_record_datum, @Log_Nieuwe_recorddatum, @Log_Oude_user, @Log_Nieuwe_user, @Log_DbFilesId)";
            this._adapter.InsertCommand.CommandType = global::System.Data.CommandType.Text;
            param = new global::System.Data.SQLite.SQLiteParameter();
            param.ParameterName = "@Log_StatusId";
            param.DbType = global::System.Data.DbType.Int64;
            param.DbType = global::System.Data.DbType.Int64;
            param.SourceColumn = "Log_StatusId";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::System.Data.SQLite.SQLiteParameter();
            param.ParameterName = "@Log_DispStatus";
            param.DbType = global::System.Data.DbType.AnsiString;
            param.DbType = global::System.Data.DbType.AnsiString;
            param.SourceColumn = "Log_DispStatus";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::System.Data.SQLite.SQLiteParameter();
            param.ParameterName = "@Log_Datum";
            param.DbType = global::System.Data.DbType.DateTime;
            param.DbType = global::System.Data.DbType.DateTime;
            param.SourceColumn = "Log_Datum";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::System.Data.SQLite.SQLiteParameter();
            param.ParameterName = "@Log_Bestand";
            param.DbType = global::System.Data.DbType.AnsiStringFixedLength;
            param.DbType = global::System.Data.DbType.AnsiStringFixedLength;
            param.SourceColumn = "Log_Bestand";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::System.Data.SQLite.SQLiteParameter();
            param.ParameterName = "@Log_Bestandsnr";
            param.DbType = global::System.Data.DbType.Int64;
            param.DbType = global::System.Data.DbType.Int64;
            param.SourceColumn = "Log_Bestandsnr";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::System.Data.SQLite.SQLiteParameter();
            param.ParameterName = "@Log_RecordId";
            param.DbType = global::System.Data.DbType.Int64;
            param.DbType = global::System.Data.DbType.Int64;
            param.SourceColumn = "Log_RecordId";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::System.Data.SQLite.SQLiteParameter();
            param.ParameterName = "@Log_Veldnaam";
            param.DbType = global::System.Data.DbType.AnsiStringFixedLength;
            param.DbType = global::System.Data.DbType.AnsiStringFixedLength;
            param.SourceColumn = "Log_Veldnaam";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::System.Data.SQLite.SQLiteParameter();
            param.ParameterName = "@Log_Volgnr";
            param.DbType = global::System.Data.DbType.Int64;
            param.DbType = global::System.Data.DbType.Int64;
            param.SourceColumn = "Log_Volgnr";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::System.Data.SQLite.SQLiteParameter();
            param.ParameterName = "@Log_Oude_tekst";
            param.DbType = global::System.Data.DbType.AnsiStringFixedLength;
            param.DbType = global::System.Data.DbType.AnsiStringFixedLength;
            param.SourceColumn = "Log_Oude_tekst";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::System.Data.SQLite.SQLiteParameter();
            param.ParameterName = "@Log_Nieuwe_tekst";
            param.DbType = global::System.Data.DbType.AnsiStringFixedLength;
            param.DbType = global::System.Data.DbType.AnsiStringFixedLength;
            param.SourceColumn = "Log_Nieuwe_tekst";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::System.Data.SQLite.SQLiteParameter();
            param.ParameterName = "@Log_Oude_numeriek";
            param.DbType = global::System.Data.DbType.Int64;
            param.DbType = global::System.Data.DbType.Int64;
            param.SourceColumn = "Log_Oude_numeriek";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::System.Data.SQLite.SQLiteParameter();
            param.ParameterName = "@Log_Nieuwe_numeriek";
            param.DbType = global::System.Data.DbType.Int64;
            param.DbType = global::System.Data.DbType.Int64;
            param.SourceColumn = "Log_Nieuwe_numeriek";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::System.Data.SQLite.SQLiteParameter();
            param.ParameterName = "@Log_Oude_real";
            param.DbType = global::System.Data.DbType.Decimal;
            param.DbType = global::System.Data.DbType.Decimal;
            param.SourceColumn = "Log_Oude_real";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::System.Data.SQLite.SQLiteParameter();
            param.ParameterName = "@Log_Nieuwe_real";
            param.DbType = global::System.Data.DbType.Decimal;
            param.DbType = global::System.Data.DbType.Decimal;
            param.SourceColumn = "Log_Nieuwe_real";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::System.Data.SQLite.SQLiteParameter();
            param.ParameterName = "@Log_Oude_currency";
            param.DbType = global::System.Data.DbType.Decimal;
            param.DbType = global::System.Data.DbType.Decimal;
            param.SourceColumn = "Log_Oude_currency";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::System.Data.SQLite.SQLiteParameter();
            param.ParameterName = "@Log_Nieuwe_currency";
            param.DbType = global::System.Data.DbType.Decimal;
            param.DbType = global::System.Data.DbType.Decimal;
            param.SourceColumn = "Log_Nieuwe_currency";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::System.Data.SQLite.SQLiteParameter();
            param.ParameterName = "@Log_Oude_datum";
            param.DbType = global::System.Data.DbType.DateTime;
            param.DbType = global::System.Data.DbType.DateTime;
            param.SourceColumn = "Log_Oude_datum";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::System.Data.SQLite.SQLiteParameter();
            param.ParameterName = "@Log_Nieuwe_datum";
            param.DbType = global::System.Data.DbType.DateTime;
            param.DbType = global::System.Data.DbType.DateTime;
            param.SourceColumn = "Log_Nieuwe_datum";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::System.Data.SQLite.SQLiteParameter();
            param.ParameterName = "@Log_Oude_JN";
            param.DbType = global::System.Data.DbType.Int64;
            param.DbType = global::System.Data.DbType.Int64;
            param.SourceColumn = "Log_Oude_JN";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::System.Data.SQLite.SQLiteParameter();
            param.ParameterName = "@Log_Nieuwe_JN";
            param.DbType = global::System.Data.DbType.Int64;
            param.DbType = global::System.Data.DbType.Int64;
            param.SourceColumn = "Log_Nieuwe_JN";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::System.Data.SQLite.SQLiteParameter();
            param.ParameterName = "@Log_Oude_memo";
            param.DbType = global::System.Data.DbType.String;
            param.SourceColumn = "Log_Oude_memo";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::System.Data.SQLite.SQLiteParameter();
            param.ParameterName = "@Log_Nieuwe_memo";
            param.DbType = global::System.Data.DbType.String;
            param.SourceColumn = "Log_Nieuwe_memo";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::System.Data.SQLite.SQLiteParameter();
            param.ParameterName = "@Log_Oude_record_datum";
            param.DbType = global::System.Data.DbType.DateTime;
            param.DbType = global::System.Data.DbType.DateTime;
            param.SourceColumn = "Log_Oude_record_datum";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::System.Data.SQLite.SQLiteParameter();
            param.ParameterName = "@Log_Nieuwe_recorddatum";
            param.DbType = global::System.Data.DbType.DateTime;
            param.DbType = global::System.Data.DbType.DateTime;
            param.SourceColumn = "Log_Nieuwe_recorddatum";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::System.Data.SQLite.SQLiteParameter();
            param.ParameterName = "@Log_Oude_user";
            param.DbType = global::System.Data.DbType.Int64;
            param.DbType = global::System.Data.DbType.Int64;
            param.SourceColumn = "Log_Oude_user";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::System.Data.SQLite.SQLiteParameter();
            param.ParameterName = "@Log_Nieuwe_user";
            param.DbType = global::System.Data.DbType.Int64;
            param.DbType = global::System.Data.DbType.Int64;
            param.SourceColumn = "Log_Nieuwe_user";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::System.Data.SQLite.SQLiteParameter();
            param.ParameterName = "@Log_DbFilesId";
            param.DbType = global::System.Data.DbType.Int64;
            param.DbType = global::System.Data.DbType.Int64;
            param.SourceColumn = "Log_DbFilesId";
            this._adapter.InsertCommand.Parameters.Add(param);
            this._adapter.UpdateCommand = new global::System.Data.SQLite.SQLiteCommand();
            this._adapter.UpdateCommand.Connection = this.Connection;
            this._adapter.UpdateCommand.CommandText = "UPDATE [main].[sqlite_default_schema].[Log] SET [Log_StatusId] = @Log_StatusId, [" +
                "Log_DispStatus] = @Log_DispStatus, [Log_Datum] = @Log_Datum, [Log_Bestand] = @Lo" +
                "g_Bestand, [Log_Bestandsnr] = @Log_Bestandsnr, [Log_RecordId] = @Log_RecordId, [" +
                "Log_Veldnaam] = @Log_Veldnaam, [Log_Volgnr] = @Log_Volgnr, [Log_Oude_tekst] = @L" +
                "og_Oude_tekst, [Log_Nieuwe_tekst] = @Log_Nieuwe_tekst, [Log_Oude_numeriek] = @Lo" +
                "g_Oude_numeriek, [Log_Nieuwe_numeriek] = @Log_Nieuwe_numeriek, [Log_Oude_real] =" +
                " @Log_Oude_real, [Log_Nieuwe_real] = @Log_Nieuwe_real, [Log_Oude_currency] = @Lo" +
                "g_Oude_currency, [Log_Nieuwe_currency] = @Log_Nieuwe_currency, [Log_Oude_datum] " +
                "= @Log_Oude_datum, [Log_Nieuwe_datum] = @Log_Nieuwe_datum, [Log_Oude_JN] = @Log_" +
                "Oude_JN, [Log_Nieuwe_JN] = @Log_Nieuwe_JN, [Log_Oude_memo] = @Log_Oude_memo, [Lo" +
                "g_Nieuwe_memo] = @Log_Nieuwe_memo, [Log_Oude_record_datum] = @Log_Oude_record_da" +
                "tum, [Log_Nieuwe_recorddatum] = @Log_Nieuwe_recorddatum, [Log_Oude_user] = @Log_" +
                "Oude_user, [Log_Nieuwe_user] = @Log_Nieuwe_user, [Log_DbFilesId] = @Log_DbFilesI" +
                "d WHERE (([Log_Id] = @Original_Log_Id) AND ((@IsNull_Log_StatusId = 1 AND [Log_S" +
                "tatusId] IS NULL) OR ([Log_StatusId] = @Original_Log_StatusId)) AND ((@IsNull_Lo" +
                "g_DispStatus = 1 AND [Log_DispStatus] IS NULL) OR ([Log_DispStatus] = @Original_" +
                "Log_DispStatus)) AND ([Log_Datum] = @Original_Log_Datum) AND ([Log_Bestand] = @O" +
                "riginal_Log_Bestand) AND ([Log_Bestandsnr] = @Original_Log_Bestandsnr) AND ([Log" +
                "_RecordId] = @Original_Log_RecordId) AND ([Log_Veldnaam] = @Original_Log_Veldnaa" +
                "m) AND ([Log_Volgnr] = @Original_Log_Volgnr) AND ((@IsNull_Log_Oude_tekst = 1 AN" +
                "D [Log_Oude_tekst] IS NULL) OR ([Log_Oude_tekst] = @Original_Log_Oude_tekst)) AN" +
                "D ((@IsNull_Log_Nieuwe_tekst = 1 AND [Log_Nieuwe_tekst] IS NULL) OR ([Log_Nieuwe" +
                "_tekst] = @Original_Log_Nieuwe_tekst)) AND ((@IsNull_Log_Oude_numeriek = 1 AND [" +
                "Log_Oude_numeriek] IS NULL) OR ([Log_Oude_numeriek] = @Original_Log_Oude_numerie" +
                "k)) AND ((@IsNull_Log_Nieuwe_numeriek = 1 AND [Log_Nieuwe_numeriek] IS NULL) OR " +
                "([Log_Nieuwe_numeriek] = @Original_Log_Nieuwe_numeriek)) AND ((@IsNull_Log_Oude_" +
                "real = 1 AND [Log_Oude_real] IS NULL) OR ([Log_Oude_real] = @Original_Log_Oude_r" +
                "eal)) AND ((@IsNull_Log_Nieuwe_real = 1 AND [Log_Nieuwe_real] IS NULL) OR ([Log_" +
                "Nieuwe_real] = @Original_Log_Nieuwe_real)) AND ((@IsNull_Log_Oude_currency = 1 A" +
                "ND [Log_Oude_currency] IS NULL) OR ([Log_Oude_currency] = @Original_Log_Oude_cur" +
                "rency)) AND ((@IsNull_Log_Nieuwe_currency = 1 AND [Log_Nieuwe_currency] IS NULL)" +
                " OR ([Log_Nieuwe_currency] = @Original_Log_Nieuwe_currency)) AND ((@IsNull_Log_O" +
                "ude_datum = 1 AND [Log_Oude_datum] IS NULL) OR ([Log_Oude_datum] = @Original_Log" +
                "_Oude_datum)) AND ((@IsNull_Log_Nieuwe_datum = 1 AND [Log_Nieuwe_datum] IS NULL)" +
                " OR ([Log_Nieuwe_datum] = @Original_Log_Nieuwe_datum)) AND ((@IsNull_Log_Oude_JN" +
                " = 1 AND [Log_Oude_JN] IS NULL) OR ([Log_Oude_JN] = @Original_Log_Oude_JN)) AND " +
                "((@IsNull_Log_Nieuwe_JN = 1 AND [Log_Nieuwe_JN] IS NULL) OR ([Log_Nieuwe_JN] = @" +
                "Original_Log_Nieuwe_JN)) AND ((@IsNull_Log_Oude_memo = 1 AND [Log_Oude_memo] IS " +
                "NULL) OR ([Log_Oude_memo] = @Original_Log_Oude_memo)) AND ((@IsNull_Log_Nieuwe_m" +
                "emo = 1 AND [Log_Nieuwe_memo] IS NULL) OR ([Log_Nieuwe_memo] = @Original_Log_Nie" +
                "uwe_memo)) AND ((@IsNull_Log_Oude_record_datum = 1 AND [Log_Oude_record_datum] I" +
                "S NULL) OR ([Log_Oude_record_datum] = @Original_Log_Oude_record_datum)) AND ((@I" +
                "sNull_Log_Nieuwe_recorddatum = 1 AND [Log_Nieuwe_recorddatum] IS NULL) OR ([Log_" +
                "Nieuwe_recorddatum] = @Original_Log_Nieuwe_recorddatum)) AND ((@IsNull_Log_Oude_" +
                "user = 1 AND [Log_Oude_user] IS NULL) OR ([Log_Oude_user] = @Original_Log_Oude_u" +
                "ser)) AND ((@IsNull_Log_Nieuwe_user = 1 AND [Log_Nieuwe_user] IS NULL) OR ([Log_" +
                "Nieuwe_user] = @Original_Log_Nieuwe_user)) AND ((@IsNull_Log_DbFilesId = 1 AND [" +
                "Log_DbFilesId] IS NULL) OR ([Log_DbFilesId] = @Original_Log_DbFilesId)))";
            this._adapter.UpdateCommand.CommandType = global::System.Data.CommandType.Text;
            param = new global::System.Data.SQLite.SQLiteParameter();
            param.ParameterName = "@Log_StatusId";
            param.DbType = global::System.Data.DbType.Int64;
            param.DbType = global::System.Data.DbType.Int64;
            param.SourceColumn = "Log_StatusId";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::System.Data.SQLite.SQLiteParameter();
            param.ParameterName = "@Log_DispStatus";
            param.DbType = global::System.Data.DbType.AnsiString;
            param.DbType = global::System.Data.DbType.AnsiString;
            param.SourceColumn = "Log_DispStatus";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::System.Data.SQLite.SQLiteParameter();
            param.ParameterName = "@Log_Datum";
            param.DbType = global::System.Data.DbType.DateTime;
            param.DbType = global::System.Data.DbType.DateTime;
            param.SourceColumn = "Log_Datum";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::System.Data.SQLite.SQLiteParameter();
            param.ParameterName = "@Log_Bestand";
            param.DbType = global::System.Data.DbType.AnsiStringFixedLength;
            param.DbType = global::System.Data.DbType.AnsiStringFixedLength;
            param.SourceColumn = "Log_Bestand";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::System.Data.SQLite.SQLiteParameter();
            param.ParameterName = "@Log_Bestandsnr";
            param.DbType = global::System.Data.DbType.Int64;
            param.DbType = global::System.Data.DbType.Int64;
            param.SourceColumn = "Log_Bestandsnr";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::System.Data.SQLite.SQLiteParameter();
            param.ParameterName = "@Log_RecordId";
            param.DbType = global::System.Data.DbType.Int64;
            param.DbType = global::System.Data.DbType.Int64;
            param.SourceColumn = "Log_RecordId";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::System.Data.SQLite.SQLiteParameter();
            param.ParameterName = "@Log_Veldnaam";
            param.DbType = global::System.Data.DbType.AnsiStringFixedLength;
            param.DbType = global::System.Data.DbType.AnsiStringFixedLength;
            param.SourceColumn = "Log_Veldnaam";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::System.Data.SQLite.SQLiteParameter();
            param.ParameterName = "@Log_Volgnr";
            param.DbType = global::System.Data.DbType.Int64;
            param.DbType = global::System.Data.DbType.Int64;
            param.SourceColumn = "Log_Volgnr";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::System.Data.SQLite.SQLiteParameter();
            param.ParameterName = "@Log_Oude_tekst";
            param.DbType = global::System.Data.DbType.AnsiStringFixedLength;
            param.DbType = global::System.Data.DbType.AnsiStringFixedLength;
            param.SourceColumn = "Log_Oude_tekst";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::System.Data.SQLite.SQLiteParameter();
            param.ParameterName = "@Log_Nieuwe_tekst";
            param.DbType = global::System.Data.DbType.AnsiStringFixedLength;
            param.DbType = global::System.Data.DbType.AnsiStringFixedLength;
            param.SourceColumn = "Log_Nieuwe_tekst";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::System.Data.SQLite.SQLiteParameter();
            param.ParameterName = "@Log_Oude_numeriek";
            param.DbType = global::System.Data.DbType.Int64;
            param.DbType = global::System.Data.DbType.Int64;
            param.SourceColumn = "Log_Oude_numeriek";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::System.Data.SQLite.SQLiteParameter();
            param.ParameterName = "@Log_Nieuwe_numeriek";
            param.DbType = global::System.Data.DbType.Int64;
            param.DbType = global::System.Data.DbType.Int64;
            param.SourceColumn = "Log_Nieuwe_numeriek";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::System.Data.SQLite.SQLiteParameter();
            param.ParameterName = "@Log_Oude_real";
            param.DbType = global::System.Data.DbType.Decimal;
            param.DbType = global::System.Data.DbType.Decimal;
            param.SourceColumn = "Log_Oude_real";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::System.Data.SQLite.SQLiteParameter();
            param.ParameterName = "@Log_Nieuwe_real";
            param.DbType = global::System.Data.DbType.Decimal;
            param.DbType = global::System.Data.DbType.Decimal;
            param.SourceColumn = "Log_Nieuwe_real";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::System.Data.SQLite.SQLiteParameter();
            param.ParameterName = "@Log_Oude_currency";
            param.DbType = global::System.Data.DbType.Decimal;
            param.DbType = global::System.Data.DbType.Decimal;
            param.SourceColumn = "Log_Oude_currency";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::System.Data.SQLite.SQLiteParameter();
            param.ParameterName = "@Log_Nieuwe_currency";
            param.DbType = global::System.Data.DbType.Decimal;
            param.DbType = global::System.Data.DbType.Decimal;
            param.SourceColumn = "Log_Nieuwe_currency";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::System.Data.SQLite.SQLiteParameter();
            param.ParameterName = "@Log_Oude_datum";
            param.DbType = global::System.Data.DbType.DateTime;
            param.DbType = global::System.Data.DbType.DateTime;
            param.SourceColumn = "Log_Oude_datum";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::System.Data.SQLite.SQLiteParameter();
            param.ParameterName = "@Log_Nieuwe_datum";
            param.DbType = global::System.Data.DbType.DateTime;
            param.DbType = global::System.Data.DbType.DateTime;
            param.SourceColumn = "Log_Nieuwe_datum";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::System.Data.SQLite.SQLiteParameter();
            param.ParameterName = "@Log_Oude_JN";
            param.DbType = global::System.Data.DbType.Int64;
            param.DbType = global::System.Data.DbType.Int64;
            param.SourceColumn = "Log_Oude_JN";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::System.Data.SQLite.SQLiteParameter();
            param.ParameterName = "@Log_Nieuwe_JN";
            param.DbType = global::System.Data.DbType.Int64;
            param.DbType = global::System.Data.DbType.Int64;
            param.SourceColumn = "Log_Nieuwe_JN";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::System.Data.SQLite.SQLiteParameter();
            param.ParameterName = "@Log_Oude_memo";
            param.DbType = global::System.Data.DbType.String;
            param.SourceColumn = "Log_Oude_memo";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::System.Data.SQLite.SQLiteParameter();
            param.ParameterName = "@Log_Nieuwe_memo";
            param.DbType = global::System.Data.DbType.String;
            param.SourceColumn = "Log_Nieuwe_memo";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::System.Data.SQLite.SQLiteParameter();
            param.ParameterName = "@Log_Oude_record_datum";
            param.DbType = global::System.Data.DbType.DateTime;
            param.DbType = global::System.Data.DbType.DateTime;
            param.SourceColumn = "Log_Oude_record_datum";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::System.Data.SQLite.SQLiteParameter();
            param.ParameterName = "@Log_Nieuwe_recorddatum";
            param.DbType = global::System.Data.DbType.DateTime;
            param.DbType = global::System.Data.DbType.DateTime;
            param.SourceColumn = "Log_Nieuwe_recorddatum";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::System.Data.SQLite.SQLiteParameter();
            param.ParameterName = "@Log_Oude_user";
            param.DbType = global::System.Data.DbType.Int64;
            param.DbType = global::System.Data.DbType.Int64;
            param.SourceColumn = "Log_Oude_user";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::System.Data.SQLite.SQLiteParameter();
            param.ParameterName = "@Log_Nieuwe_user";
            param.DbType = global::System.Data.DbType.Int64;
            param.DbType = global::System.Data.DbType.Int64;
            param.SourceColumn = "Log_Nieuwe_user";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::System.Data.SQLite.SQLiteParameter();
            param.ParameterName = "@Log_DbFilesId";
            param.DbType = global::System.Data.DbType.Int64;
            param.DbType = global::System.Data.DbType.Int64;
            param.SourceColumn = "Log_DbFilesId";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::System.Data.SQLite.SQLiteParameter();
            param.ParameterName = "@Original_Log_Id";
            param.DbType = global::System.Data.DbType.Int64;
            param.DbType = global::System.Data.DbType.Int64;
            param.SourceColumn = "Log_Id";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::System.Data.SQLite.SQLiteParameter();
            param.ParameterName = "@IsNull_Log_StatusId";
            param.DbType = global::System.Data.DbType.Int32;
            param.DbType = global::System.Data.DbType.Int32;
            param.SourceColumn = "Log_StatusId";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::System.Data.SQLite.SQLiteParameter();
            param.ParameterName = "@Original_Log_StatusId";
            param.DbType = global::System.Data.DbType.Int64;
            param.DbType = global::System.Data.DbType.Int64;
            param.SourceColumn = "Log_StatusId";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::System.Data.SQLite.SQLiteParameter();
            param.ParameterName = "@IsNull_Log_DispStatus";
            param.DbType = global::System.Data.DbType.Int32;
            param.DbType = global::System.Data.DbType.Int32;
            param.SourceColumn = "Log_DispStatus";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::System.Data.SQLite.SQLiteParameter();
            param.ParameterName = "@Original_Log_DispStatus";
            param.DbType = global::System.Data.DbType.AnsiString;
            param.DbType = global::System.Data.DbType.AnsiString;
            param.SourceColumn = "Log_DispStatus";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::System.Data.SQLite.SQLiteParameter();
            param.ParameterName = "@Original_Log_Datum";
            param.DbType = global::System.Data.DbType.DateTime;
            param.DbType = global::System.Data.DbType.DateTime;
            param.SourceColumn = "Log_Datum";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::System.Data.SQLite.SQLiteParameter();
            param.ParameterName = "@Original_Log_Bestand";
            param.DbType = global::System.Data.DbType.AnsiStringFixedLength;
            param.DbType = global::System.Data.DbType.AnsiStringFixedLength;
            param.SourceColumn = "Log_Bestand";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::System.Data.SQLite.SQLiteParameter();
            param.ParameterName = "@Original_Log_Bestandsnr";
            param.DbType = global::System.Data.DbType.Int64;
            param.DbType = global::System.Data.DbType.Int64;
            param.SourceColumn = "Log_Bestandsnr";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::System.Data.SQLite.SQLiteParameter();
            param.ParameterName = "@Original_Log_RecordId";
            param.DbType = global::System.Data.DbType.Int64;
            param.DbType = global::System.Data.DbType.Int64;
            param.SourceColumn = "Log_RecordId";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::System.Data.SQLite.SQLiteParameter();
            param.ParameterName = "@Original_Log_Veldnaam";
            param.DbType = global::System.Data.DbType.AnsiStringFixedLength;
            param.DbType = global::System.Data.DbType.AnsiStringFixedLength;
            param.SourceColumn = "Log_Veldnaam";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::System.Data.SQLite.SQLiteParameter();
            param.ParameterName = "@Original_Log_Volgnr";
            param.DbType = global::System.Data.DbType.Int64;
            param.DbType = global::System.Data.DbType.Int64;
            param.SourceColumn = "Log_Volgnr";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::System.Data.SQLite.SQLiteParameter();
            param.ParameterName = "@IsNull_Log_Oude_tekst";
            param.DbType = global::System.Data.DbType.Int32;
            param.DbType = global::System.Data.DbType.Int32;
            param.SourceColumn = "Log_Oude_tekst";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::System.Data.SQLite.SQLiteParameter();
            param.ParameterName = "@Original_Log_Oude_tekst";
            param.DbType = global::System.Data.DbType.AnsiStringFixedLength;
            param.DbType = global::System.Data.DbType.AnsiStringFixedLength;
            param.SourceColumn = "Log_Oude_tekst";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::System.Data.SQLite.SQLiteParameter();
            param.ParameterName = "@IsNull_Log_Nieuwe_tekst";
            param.DbType = global::System.Data.DbType.Int32;
            param.DbType = global::System.Data.DbType.Int32;
            param.SourceColumn = "Log_Nieuwe_tekst";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::System.Data.SQLite.SQLiteParameter();
            param.ParameterName = "@Original_Log_Nieuwe_tekst";
            param.DbType = global::System.Data.DbType.AnsiStringFixedLength;
            param.DbType = global::System.Data.DbType.AnsiStringFixedLength;
            param.SourceColumn = "Log_Nieuwe_tekst";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::System.Data.SQLite.SQLiteParameter();
            param.ParameterName = "@IsNull_Log_Oude_numeriek";
            param.DbType = global::System.Data.DbType.Int32;
            param.DbType = global::System.Data.DbType.Int32;
            param.SourceColumn = "Log_Oude_numeriek";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::System.Data.SQLite.SQLiteParameter();
            param.ParameterName = "@Original_Log_Oude_numeriek";
            param.DbType = global::System.Data.DbType.Int64;
            param.DbType = global::System.Data.DbType.Int64;
            param.SourceColumn = "Log_Oude_numeriek";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::System.Data.SQLite.SQLiteParameter();
            param.ParameterName = "@IsNull_Log_Nieuwe_numeriek";
            param.DbType = global::System.Data.DbType.Int32;
            param.DbType = global::System.Data.DbType.Int32;
            param.SourceColumn = "Log_Nieuwe_numeriek";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::System.Data.SQLite.SQLiteParameter();
            param.ParameterName = "@Original_Log_Nieuwe_numeriek";
            param.DbType = global::System.Data.DbType.Int64;
            param.DbType = global::System.Data.DbType.Int64;
            param.SourceColumn = "Log_Nieuwe_numeriek";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::System.Data.SQLite.SQLiteParameter();
            param.ParameterName = "@IsNull_Log_Oude_real";
            param.DbType = global::System.Data.DbType.Int32;
            param.DbType = global::System.Data.DbType.Int32;
            param.SourceColumn = "Log_Oude_real";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::System.Data.SQLite.SQLiteParameter();
            param.ParameterName = "@Original_Log_Oude_real";
            param.DbType = global::System.Data.DbType.Decimal;
            param.DbType = global::System.Data.DbType.Decimal;
            param.SourceColumn = "Log_Oude_real";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::System.Data.SQLite.SQLiteParameter();
            param.ParameterName = "@IsNull_Log_Nieuwe_real";
            param.DbType = global::System.Data.DbType.Int32;
            param.DbType = global::System.Data.DbType.Int32;
            param.SourceColumn = "Log_Nieuwe_real";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::System.Data.SQLite.SQLiteParameter();
            param.ParameterName = "@Original_Log_Nieuwe_real";
            param.DbType = global::System.Data.DbType.Decimal;
            param.DbType = global::System.Data.DbType.Decimal;
            param.SourceColumn = "Log_Nieuwe_real";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::System.Data.SQLite.SQLiteParameter();
            param.ParameterName = "@IsNull_Log_Oude_currency";
            param.DbType = global::System.Data.DbType.Int32;
            param.DbType = global::System.Data.DbType.Int32;
            param.SourceColumn = "Log_Oude_currency";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::System.Data.SQLite.SQLiteParameter();
            param.ParameterName = "@Original_Log_Oude_currency";
            param.DbType = global::System.Data.DbType.Decimal;
            param.DbType = global::System.Data.DbType.Decimal;
            param.SourceColumn = "Log_Oude_currency";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::System.Data.SQLite.SQLiteParameter();
            param.ParameterName = "@IsNull_Log_Nieuwe_currency";
            param.DbType = global::System.Data.DbType.Int32;
            param.DbType = global::System.Data.DbType.Int32;
            param.SourceColumn = "Log_Nieuwe_currency";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::System.Data.SQLite.SQLiteParameter();
            param.ParameterName = "@Original_Log_Nieuwe_currency";
            param.DbType = global::System.Data.DbType.Decimal;
            param.DbType = global::System.Data.DbType.Decimal;
            param.SourceColumn = "Log_Nieuwe_currency";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::System.Data.SQLite.SQLiteParameter();
            param.ParameterName = "@IsNull_Log_Oude_datum";
            param.DbType = global::System.Data.DbType.Int32;
            param.DbType = global::System.Data.DbType.Int32;
            param.SourceColumn = "Log_Oude_datum";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::System.Data.SQLite.SQLiteParameter();
            param.ParameterName = "@Original_Log_Oude_datum";
            param.DbType = global::System.Data.DbType.DateTime;
            param.DbType = global::System.Data.DbType.DateTime;
            param.SourceColumn = "Log_Oude_datum";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::System.Data.SQLite.SQLiteParameter();
            param.ParameterName = "@IsNull_Log_Nieuwe_datum";
            param.DbType = global::System.Data.DbType.Int32;
            param.DbType = global::System.Data.DbType.Int32;
            param.SourceColumn = "Log_Nieuwe_datum";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::System.Data.SQLite.SQLiteParameter();
            param.ParameterName = "@Original_Log_Nieuwe_datum";
            param.DbType = global::System.Data.DbType.DateTime;
            param.DbType = global::System.Data.DbType.DateTime;
            param.SourceColumn = "Log_Nieuwe_datum";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::System.Data.SQLite.SQLiteParameter();
            param.ParameterName = "@IsNull_Log_Oude_JN";
            param.DbType = global::System.Data.DbType.Int32;
            param.DbType = global::System.Data.DbType.Int32;
            param.SourceColumn = "Log_Oude_JN";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::System.Data.SQLite.SQLiteParameter();
            param.ParameterName = "@Original_Log_Oude_JN";
            param.DbType = global::System.Data.DbType.Int64;
            param.DbType = global::System.Data.DbType.Int64;
            param.SourceColumn = "Log_Oude_JN";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::System.Data.SQLite.SQLiteParameter();
            param.ParameterName = "@IsNull_Log_Nieuwe_JN";
            param.DbType = global::System.Data.DbType.Int32;
            param.DbType = global::System.Data.DbType.Int32;
            param.SourceColumn = "Log_Nieuwe_JN";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::System.Data.SQLite.SQLiteParameter();
            param.ParameterName = "@Original_Log_Nieuwe_JN";
            param.DbType = global::System.Data.DbType.Int64;
            param.DbType = global::System.Data.DbType.Int64;
            param.SourceColumn = "Log_Nieuwe_JN";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::System.Data.SQLite.SQLiteParameter();
            param.ParameterName = "@IsNull_Log_Oude_memo";
            param.DbType = global::System.Data.DbType.Int32;
            param.DbType = global::System.Data.DbType.Int32;
            param.SourceColumn = "Log_Oude_memo";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::System.Data.SQLite.SQLiteParameter();
            param.ParameterName = "@Original_Log_Oude_memo";
            param.DbType = global::System.Data.DbType.String;
            param.SourceColumn = "Log_Oude_memo";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::System.Data.SQLite.SQLiteParameter();
            param.ParameterName = "@IsNull_Log_Nieuwe_memo";
            param.DbType = global::System.Data.DbType.Int32;
            param.DbType = global::System.Data.DbType.Int32;
            param.SourceColumn = "Log_Nieuwe_memo";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::System.Data.SQLite.SQLiteParameter();
            param.ParameterName = "@Original_Log_Nieuwe_memo";
            param.DbType = global::System.Data.DbType.String;
            param.SourceColumn = "Log_Nieuwe_memo";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::System.Data.SQLite.SQLiteParameter();
            param.ParameterName = "@IsNull_Log_Oude_record_datum";
            param.DbType = global::System.Data.DbType.Int32;
            param.DbType = global::System.Data.DbType.Int32;
            param.SourceColumn = "Log_Oude_record_datum";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::System.Data.SQLite.SQLiteParameter();
            param.ParameterName = "@Original_Log_Oude_record_datum";
            param.DbType = global::System.Data.DbType.DateTime;
            param.DbType = global::System.Data.DbType.DateTime;
            param.SourceColumn = "Log_Oude_record_datum";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::System.Data.SQLite.SQLiteParameter();
            param.ParameterName = "@IsNull_Log_Nieuwe_recorddatum";
            param.DbType = global::System.Data.DbType.Int32;
            param.DbType = global::System.Data.DbType.Int32;
            param.SourceColumn = "Log_Nieuwe_recorddatum";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::System.Data.SQLite.SQLiteParameter();
            param.ParameterName = "@Original_Log_Nieuwe_recorddatum";
            param.DbType = global::System.Data.DbType.DateTime;
            param.DbType = global::System.Data.DbType.DateTime;
            param.SourceColumn = "Log_Nieuwe_recorddatum";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::System.Data.SQLite.SQLiteParameter();
            param.ParameterName = "@IsNull_Log_Oude_user";
            param.DbType = global::System.Data.DbType.Int32;
            param.DbType = global::System.Data.DbType.Int32;
            param.SourceColumn = "Log_Oude_user";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::System.Data.SQLite.SQLiteParameter();
            param.ParameterName = "@Original_Log_Oude_user";
            param.DbType = global::System.Data.DbType.Int64;
            param.DbType = global::System.Data.DbType.Int64;
            param.SourceColumn = "Log_Oude_user";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::System.Data.SQLite.SQLiteParameter();
            param.ParameterName = "@IsNull_Log_Nieuwe_user";
            param.DbType = global::System.Data.DbType.Int32;
            param.DbType = global::System.Data.DbType.Int32;
            param.SourceColumn = "Log_Nieuwe_user";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::System.Data.SQLite.SQLiteParameter();
            param.ParameterName = "@Original_Log_Nieuwe_user";
            param.DbType = global::System.Data.DbType.Int64;
            param.DbType = global::System.Data.DbType.Int64;
            param.SourceColumn = "Log_Nieuwe_user";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::System.Data.SQLite.SQLiteParameter();
            param.ParameterName = "@IsNull_Log_DbFilesId";
            param.DbType = global::System.Data.DbType.Int32;
            param.DbType = global::System.Data.DbType.Int32;
            param.SourceColumn = "Log_DbFilesId";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::System.Data.SQLite.SQLiteParameter();
            param.ParameterName = "@Original_Log_DbFilesId";
            param.DbType = global::System.Data.DbType.Int64;
            param.DbType = global::System.Data.DbType.Int64;
            param.SourceColumn = "Log_DbFilesId";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitConnection() {
            this._connection = new global::System.Data.SQLite.SQLiteConnection();
            this._connection.ConnectionString = global::Cmbap.Properties.Settings.Default.Cmbap_dataConnectionString;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitCommandCollection() {
            this._commandCollection = new global::System.Data.SQLite.SQLiteCommand[1];
            this._commandCollection[0] = new global::System.Data.SQLite.SQLiteCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = @"SELECT [Log_Id], [Log_StatusId], [Log_DispStatus], [Log_Datum], [Log_Bestand], [Log_Bestandsnr], [Log_RecordId], [Log_Veldnaam], [Log_Volgnr], [Log_Oude_tekst], [Log_Nieuwe_tekst], [Log_Oude_numeriek], [Log_Nieuwe_numeriek], [Log_Oude_real], [Log_Nieuwe_real], [Log_Oude_currency], [Log_Nieuwe_currency], [Log_Oude_datum], [Log_Nieuwe_datum], [Log_Oude_JN], [Log_Nieuwe_JN], [Log_Oude_memo], [Log_Nieuwe_memo], [Log_Oude_record_datum], [Log_Nieuwe_recorddatum], [Log_Oude_user], [Log_Nieuwe_user], [Log_DbFilesId] FROM [Log]";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(_Cmbap_dataDataSet.LogDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual _Cmbap_dataDataSet.LogDataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            _Cmbap_dataDataSet.LogDataTable dataTable = new _Cmbap_dataDataSet.LogDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(_Cmbap_dataDataSet.LogDataTable dataTable) {
            return this.Adapter.Update(dataTable);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(_Cmbap_dataDataSet dataSet) {
            return this.Adapter.Update(dataSet, "Log");
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow dataRow) {
            return this.Adapter.Update(new global::System.Data.DataRow[] {
                        dataRow});
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow[] dataRows) {
            return this.Adapter.Update(dataRows);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Delete, true)]
        public virtual int Delete(
                    long Original_Log_Id, 
                    global::System.Nullable<long> Original_Log_StatusId, 
                    string Original_Log_DispStatus, 
                    System.DateTime Original_Log_Datum, 
                    string Original_Log_Bestand, 
                    long Original_Log_Bestandsnr, 
                    long Original_Log_RecordId, 
                    string Original_Log_Veldnaam, 
                    long Original_Log_Volgnr, 
                    string Original_Log_Oude_tekst, 
                    string Original_Log_Nieuwe_tekst, 
                    global::System.Nullable<long> Original_Log_Oude_numeriek, 
                    global::System.Nullable<long> Original_Log_Nieuwe_numeriek, 
                    global::System.Nullable<decimal> Original_Log_Oude_real, 
                    global::System.Nullable<decimal> Original_Log_Nieuwe_real, 
                    global::System.Nullable<decimal> Original_Log_Oude_currency, 
                    global::System.Nullable<decimal> Original_Log_Nieuwe_currency, 
                    global::System.Nullable<global::System.DateTime> Original_Log_Oude_datum, 
                    global::System.Nullable<global::System.DateTime> Original_Log_Nieuwe_datum, 
                    global::System.Nullable<long> Original_Log_Oude_JN, 
                    global::System.Nullable<long> Original_Log_Nieuwe_JN, 
                    string Original_Log_Oude_memo, 
                    string Original_Log_Nieuwe_memo, 
                    global::System.Nullable<global::System.DateTime> Original_Log_Oude_record_datum, 
                    global::System.Nullable<global::System.DateTime> Original_Log_Nieuwe_recorddatum, 
                    global::System.Nullable<long> Original_Log_Oude_user, 
                    global::System.Nullable<long> Original_Log_Nieuwe_user, 
                    global::System.Nullable<long> Original_Log_DbFilesId) {
            this.Adapter.DeleteCommand.Parameters[0].Value = ((long)(Original_Log_Id));
            if ((Original_Log_StatusId.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[1].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[2].Value = ((long)(Original_Log_StatusId.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[1].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[2].Value = global::System.DBNull.Value;
            }
            if ((Original_Log_DispStatus == null)) {
                this.Adapter.DeleteCommand.Parameters[3].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[4].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[3].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[4].Value = ((string)(Original_Log_DispStatus));
            }
            this.Adapter.DeleteCommand.Parameters[5].Value = ((System.DateTime)(Original_Log_Datum));
            if ((Original_Log_Bestand == null)) {
                throw new global::System.ArgumentNullException("Original_Log_Bestand");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[6].Value = ((string)(Original_Log_Bestand));
            }
            this.Adapter.DeleteCommand.Parameters[7].Value = ((long)(Original_Log_Bestandsnr));
            this.Adapter.DeleteCommand.Parameters[8].Value = ((long)(Original_Log_RecordId));
            if ((Original_Log_Veldnaam == null)) {
                throw new global::System.ArgumentNullException("Original_Log_Veldnaam");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[9].Value = ((string)(Original_Log_Veldnaam));
            }
            this.Adapter.DeleteCommand.Parameters[10].Value = ((long)(Original_Log_Volgnr));
            if ((Original_Log_Oude_tekst == null)) {
                this.Adapter.DeleteCommand.Parameters[11].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[12].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[11].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[12].Value = ((string)(Original_Log_Oude_tekst));
            }
            if ((Original_Log_Nieuwe_tekst == null)) {
                this.Adapter.DeleteCommand.Parameters[13].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[14].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[13].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[14].Value = ((string)(Original_Log_Nieuwe_tekst));
            }
            if ((Original_Log_Oude_numeriek.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[15].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[16].Value = ((long)(Original_Log_Oude_numeriek.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[15].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[16].Value = global::System.DBNull.Value;
            }
            if ((Original_Log_Nieuwe_numeriek.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[17].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[18].Value = ((long)(Original_Log_Nieuwe_numeriek.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[17].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[18].Value = global::System.DBNull.Value;
            }
            if ((Original_Log_Oude_real.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[19].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[20].Value = ((decimal)(Original_Log_Oude_real.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[19].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[20].Value = global::System.DBNull.Value;
            }
            if ((Original_Log_Nieuwe_real.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[21].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[22].Value = ((decimal)(Original_Log_Nieuwe_real.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[21].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[22].Value = global::System.DBNull.Value;
            }
            if ((Original_Log_Oude_currency.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[23].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[24].Value = ((decimal)(Original_Log_Oude_currency.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[23].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[24].Value = global::System.DBNull.Value;
            }
            if ((Original_Log_Nieuwe_currency.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[25].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[26].Value = ((decimal)(Original_Log_Nieuwe_currency.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[25].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[26].Value = global::System.DBNull.Value;
            }
            if ((Original_Log_Oude_datum.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[27].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[28].Value = ((System.DateTime)(Original_Log_Oude_datum.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[27].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[28].Value = global::System.DBNull.Value;
            }
            if ((Original_Log_Nieuwe_datum.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[29].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[30].Value = ((System.DateTime)(Original_Log_Nieuwe_datum.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[29].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[30].Value = global::System.DBNull.Value;
            }
            if ((Original_Log_Oude_JN.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[31].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[32].Value = ((long)(Original_Log_Oude_JN.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[31].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[32].Value = global::System.DBNull.Value;
            }
            if ((Original_Log_Nieuwe_JN.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[33].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[34].Value = ((long)(Original_Log_Nieuwe_JN.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[33].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[34].Value = global::System.DBNull.Value;
            }
            if ((Original_Log_Oude_memo == null)) {
                this.Adapter.DeleteCommand.Parameters[35].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[36].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[35].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[36].Value = ((string)(Original_Log_Oude_memo));
            }
            if ((Original_Log_Nieuwe_memo == null)) {
                this.Adapter.DeleteCommand.Parameters[37].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[38].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[37].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[38].Value = ((string)(Original_Log_Nieuwe_memo));
            }
            if ((Original_Log_Oude_record_datum.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[39].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[40].Value = ((System.DateTime)(Original_Log_Oude_record_datum.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[39].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[40].Value = global::System.DBNull.Value;
            }
            if ((Original_Log_Nieuwe_recorddatum.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[41].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[42].Value = ((System.DateTime)(Original_Log_Nieuwe_recorddatum.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[41].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[42].Value = global::System.DBNull.Value;
            }
            if ((Original_Log_Oude_user.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[43].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[44].Value = ((long)(Original_Log_Oude_user.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[43].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[44].Value = global::System.DBNull.Value;
            }
            if ((Original_Log_Nieuwe_user.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[45].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[46].Value = ((long)(Original_Log_Nieuwe_user.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[45].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[46].Value = global::System.DBNull.Value;
            }
            if ((Original_Log_DbFilesId.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[47].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[48].Value = ((long)(Original_Log_DbFilesId.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[47].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[48].Value = global::System.DBNull.Value;
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.DeleteCommand.Connection.State;
            if (((this.Adapter.DeleteCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.DeleteCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.DeleteCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.DeleteCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Insert, true)]
        public virtual int Insert(
                    global::System.Nullable<long> Log_StatusId, 
                    string Log_DispStatus, 
                    System.DateTime Log_Datum, 
                    string Log_Bestand, 
                    long Log_Bestandsnr, 
                    long Log_RecordId, 
                    string Log_Veldnaam, 
                    long Log_Volgnr, 
                    string Log_Oude_tekst, 
                    string Log_Nieuwe_tekst, 
                    global::System.Nullable<long> Log_Oude_numeriek, 
                    global::System.Nullable<long> Log_Nieuwe_numeriek, 
                    global::System.Nullable<decimal> Log_Oude_real, 
                    global::System.Nullable<decimal> Log_Nieuwe_real, 
                    global::System.Nullable<decimal> Log_Oude_currency, 
                    global::System.Nullable<decimal> Log_Nieuwe_currency, 
                    global::System.Nullable<global::System.DateTime> Log_Oude_datum, 
                    global::System.Nullable<global::System.DateTime> Log_Nieuwe_datum, 
                    global::System.Nullable<long> Log_Oude_JN, 
                    global::System.Nullable<long> Log_Nieuwe_JN, 
                    string Log_Oude_memo, 
                    string Log_Nieuwe_memo, 
                    global::System.Nullable<global::System.DateTime> Log_Oude_record_datum, 
                    global::System.Nullable<global::System.DateTime> Log_Nieuwe_recorddatum, 
                    global::System.Nullable<long> Log_Oude_user, 
                    global::System.Nullable<long> Log_Nieuwe_user, 
                    global::System.Nullable<long> Log_DbFilesId) {
            if ((Log_StatusId.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[0].Value = ((long)(Log_StatusId.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[0].Value = global::System.DBNull.Value;
            }
            if ((Log_DispStatus == null)) {
                this.Adapter.InsertCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[1].Value = ((string)(Log_DispStatus));
            }
            this.Adapter.InsertCommand.Parameters[2].Value = ((System.DateTime)(Log_Datum));
            if ((Log_Bestand == null)) {
                throw new global::System.ArgumentNullException("Log_Bestand");
            }
            else {
                this.Adapter.InsertCommand.Parameters[3].Value = ((string)(Log_Bestand));
            }
            this.Adapter.InsertCommand.Parameters[4].Value = ((long)(Log_Bestandsnr));
            this.Adapter.InsertCommand.Parameters[5].Value = ((long)(Log_RecordId));
            if ((Log_Veldnaam == null)) {
                throw new global::System.ArgumentNullException("Log_Veldnaam");
            }
            else {
                this.Adapter.InsertCommand.Parameters[6].Value = ((string)(Log_Veldnaam));
            }
            this.Adapter.InsertCommand.Parameters[7].Value = ((long)(Log_Volgnr));
            if ((Log_Oude_tekst == null)) {
                this.Adapter.InsertCommand.Parameters[8].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[8].Value = ((string)(Log_Oude_tekst));
            }
            if ((Log_Nieuwe_tekst == null)) {
                this.Adapter.InsertCommand.Parameters[9].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[9].Value = ((string)(Log_Nieuwe_tekst));
            }
            if ((Log_Oude_numeriek.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[10].Value = ((long)(Log_Oude_numeriek.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[10].Value = global::System.DBNull.Value;
            }
            if ((Log_Nieuwe_numeriek.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[11].Value = ((long)(Log_Nieuwe_numeriek.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[11].Value = global::System.DBNull.Value;
            }
            if ((Log_Oude_real.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[12].Value = ((decimal)(Log_Oude_real.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[12].Value = global::System.DBNull.Value;
            }
            if ((Log_Nieuwe_real.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[13].Value = ((decimal)(Log_Nieuwe_real.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[13].Value = global::System.DBNull.Value;
            }
            if ((Log_Oude_currency.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[14].Value = ((decimal)(Log_Oude_currency.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[14].Value = global::System.DBNull.Value;
            }
            if ((Log_Nieuwe_currency.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[15].Value = ((decimal)(Log_Nieuwe_currency.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[15].Value = global::System.DBNull.Value;
            }
            if ((Log_Oude_datum.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[16].Value = ((System.DateTime)(Log_Oude_datum.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[16].Value = global::System.DBNull.Value;
            }
            if ((Log_Nieuwe_datum.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[17].Value = ((System.DateTime)(Log_Nieuwe_datum.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[17].Value = global::System.DBNull.Value;
            }
            if ((Log_Oude_JN.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[18].Value = ((long)(Log_Oude_JN.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[18].Value = global::System.DBNull.Value;
            }
            if ((Log_Nieuwe_JN.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[19].Value = ((long)(Log_Nieuwe_JN.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[19].Value = global::System.DBNull.Value;
            }
            if ((Log_Oude_memo == null)) {
                this.Adapter.InsertCommand.Parameters[20].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[20].Value = ((string)(Log_Oude_memo));
            }
            if ((Log_Nieuwe_memo == null)) {
                this.Adapter.InsertCommand.Parameters[21].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[21].Value = ((string)(Log_Nieuwe_memo));
            }
            if ((Log_Oude_record_datum.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[22].Value = ((System.DateTime)(Log_Oude_record_datum.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[22].Value = global::System.DBNull.Value;
            }
            if ((Log_Nieuwe_recorddatum.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[23].Value = ((System.DateTime)(Log_Nieuwe_recorddatum.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[23].Value = global::System.DBNull.Value;
            }
            if ((Log_Oude_user.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[24].Value = ((long)(Log_Oude_user.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[24].Value = global::System.DBNull.Value;
            }
            if ((Log_Nieuwe_user.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[25].Value = ((long)(Log_Nieuwe_user.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[25].Value = global::System.DBNull.Value;
            }
            if ((Log_DbFilesId.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[26].Value = ((long)(Log_DbFilesId.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[26].Value = global::System.DBNull.Value;
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.InsertCommand.Connection.State;
            if (((this.Adapter.InsertCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.InsertCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.InsertCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.InsertCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(
                    global::System.Nullable<long> Log_StatusId, 
                    string Log_DispStatus, 
                    System.DateTime Log_Datum, 
                    string Log_Bestand, 
                    long Log_Bestandsnr, 
                    long Log_RecordId, 
                    string Log_Veldnaam, 
                    long Log_Volgnr, 
                    string Log_Oude_tekst, 
                    string Log_Nieuwe_tekst, 
                    global::System.Nullable<long> Log_Oude_numeriek, 
                    global::System.Nullable<long> Log_Nieuwe_numeriek, 
                    global::System.Nullable<decimal> Log_Oude_real, 
                    global::System.Nullable<decimal> Log_Nieuwe_real, 
                    global::System.Nullable<decimal> Log_Oude_currency, 
                    global::System.Nullable<decimal> Log_Nieuwe_currency, 
                    global::System.Nullable<global::System.DateTime> Log_Oude_datum, 
                    global::System.Nullable<global::System.DateTime> Log_Nieuwe_datum, 
                    global::System.Nullable<long> Log_Oude_JN, 
                    global::System.Nullable<long> Log_Nieuwe_JN, 
                    string Log_Oude_memo, 
                    string Log_Nieuwe_memo, 
                    global::System.Nullable<global::System.DateTime> Log_Oude_record_datum, 
                    global::System.Nullable<global::System.DateTime> Log_Nieuwe_recorddatum, 
                    global::System.Nullable<long> Log_Oude_user, 
                    global::System.Nullable<long> Log_Nieuwe_user, 
                    global::System.Nullable<long> Log_DbFilesId, 
                    long Original_Log_Id, 
                    global::System.Nullable<long> Original_Log_StatusId, 
                    string Original_Log_DispStatus, 
                    System.DateTime Original_Log_Datum, 
                    string Original_Log_Bestand, 
                    long Original_Log_Bestandsnr, 
                    long Original_Log_RecordId, 
                    string Original_Log_Veldnaam, 
                    long Original_Log_Volgnr, 
                    string Original_Log_Oude_tekst, 
                    string Original_Log_Nieuwe_tekst, 
                    global::System.Nullable<long> Original_Log_Oude_numeriek, 
                    global::System.Nullable<long> Original_Log_Nieuwe_numeriek, 
                    global::System.Nullable<decimal> Original_Log_Oude_real, 
                    global::System.Nullable<decimal> Original_Log_Nieuwe_real, 
                    global::System.Nullable<decimal> Original_Log_Oude_currency, 
                    global::System.Nullable<decimal> Original_Log_Nieuwe_currency, 
                    global::System.Nullable<global::System.DateTime> Original_Log_Oude_datum, 
                    global::System.Nullable<global::System.DateTime> Original_Log_Nieuwe_datum, 
                    global::System.Nullable<long> Original_Log_Oude_JN, 
                    global::System.Nullable<long> Original_Log_Nieuwe_JN, 
                    string Original_Log_Oude_memo, 
                    string Original_Log_Nieuwe_memo, 
                    global::System.Nullable<global::System.DateTime> Original_Log_Oude_record_datum, 
                    global::System.Nullable<global::System.DateTime> Original_Log_Nieuwe_recorddatum, 
                    global::System.Nullable<long> Original_Log_Oude_user, 
                    global::System.Nullable<long> Original_Log_Nieuwe_user, 
                    global::System.Nullable<long> Original_Log_DbFilesId) {
            if ((Log_StatusId.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[0].Value = ((long)(Log_StatusId.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[0].Value = global::System.DBNull.Value;
            }
            if ((Log_DispStatus == null)) {
                this.Adapter.UpdateCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[1].Value = ((string)(Log_DispStatus));
            }
            this.Adapter.UpdateCommand.Parameters[2].Value = ((System.DateTime)(Log_Datum));
            if ((Log_Bestand == null)) {
                throw new global::System.ArgumentNullException("Log_Bestand");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[3].Value = ((string)(Log_Bestand));
            }
            this.Adapter.UpdateCommand.Parameters[4].Value = ((long)(Log_Bestandsnr));
            this.Adapter.UpdateCommand.Parameters[5].Value = ((long)(Log_RecordId));
            if ((Log_Veldnaam == null)) {
                throw new global::System.ArgumentNullException("Log_Veldnaam");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[6].Value = ((string)(Log_Veldnaam));
            }
            this.Adapter.UpdateCommand.Parameters[7].Value = ((long)(Log_Volgnr));
            if ((Log_Oude_tekst == null)) {
                this.Adapter.UpdateCommand.Parameters[8].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[8].Value = ((string)(Log_Oude_tekst));
            }
            if ((Log_Nieuwe_tekst == null)) {
                this.Adapter.UpdateCommand.Parameters[9].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[9].Value = ((string)(Log_Nieuwe_tekst));
            }
            if ((Log_Oude_numeriek.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[10].Value = ((long)(Log_Oude_numeriek.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[10].Value = global::System.DBNull.Value;
            }
            if ((Log_Nieuwe_numeriek.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[11].Value = ((long)(Log_Nieuwe_numeriek.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[11].Value = global::System.DBNull.Value;
            }
            if ((Log_Oude_real.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[12].Value = ((decimal)(Log_Oude_real.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[12].Value = global::System.DBNull.Value;
            }
            if ((Log_Nieuwe_real.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[13].Value = ((decimal)(Log_Nieuwe_real.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[13].Value = global::System.DBNull.Value;
            }
            if ((Log_Oude_currency.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[14].Value = ((decimal)(Log_Oude_currency.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[14].Value = global::System.DBNull.Value;
            }
            if ((Log_Nieuwe_currency.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[15].Value = ((decimal)(Log_Nieuwe_currency.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[15].Value = global::System.DBNull.Value;
            }
            if ((Log_Oude_datum.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[16].Value = ((System.DateTime)(Log_Oude_datum.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[16].Value = global::System.DBNull.Value;
            }
            if ((Log_Nieuwe_datum.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[17].Value = ((System.DateTime)(Log_Nieuwe_datum.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[17].Value = global::System.DBNull.Value;
            }
            if ((Log_Oude_JN.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[18].Value = ((long)(Log_Oude_JN.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[18].Value = global::System.DBNull.Value;
            }
            if ((Log_Nieuwe_JN.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[19].Value = ((long)(Log_Nieuwe_JN.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[19].Value = global::System.DBNull.Value;
            }
            if ((Log_Oude_memo == null)) {
                this.Adapter.UpdateCommand.Parameters[20].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[20].Value = ((string)(Log_Oude_memo));
            }
            if ((Log_Nieuwe_memo == null)) {
                this.Adapter.UpdateCommand.Parameters[21].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[21].Value = ((string)(Log_Nieuwe_memo));
            }
            if ((Log_Oude_record_datum.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[22].Value = ((System.DateTime)(Log_Oude_record_datum.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[22].Value = global::System.DBNull.Value;
            }
            if ((Log_Nieuwe_recorddatum.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[23].Value = ((System.DateTime)(Log_Nieuwe_recorddatum.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[23].Value = global::System.DBNull.Value;
            }
            if ((Log_Oude_user.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[24].Value = ((long)(Log_Oude_user.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[24].Value = global::System.DBNull.Value;
            }
            if ((Log_Nieuwe_user.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[25].Value = ((long)(Log_Nieuwe_user.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[25].Value = global::System.DBNull.Value;
            }
            if ((Log_DbFilesId.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[26].Value = ((long)(Log_DbFilesId.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[26].Value = global::System.DBNull.Value;
            }
            this.Adapter.UpdateCommand.Parameters[27].Value = ((long)(Original_Log_Id));
            if ((Original_Log_StatusId.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[28].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[29].Value = ((long)(Original_Log_StatusId.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[28].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[29].Value = global::System.DBNull.Value;
            }
            if ((Original_Log_DispStatus == null)) {
                this.Adapter.UpdateCommand.Parameters[30].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[31].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[30].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[31].Value = ((string)(Original_Log_DispStatus));
            }
            this.Adapter.UpdateCommand.Parameters[32].Value = ((System.DateTime)(Original_Log_Datum));
            if ((Original_Log_Bestand == null)) {
                throw new global::System.ArgumentNullException("Original_Log_Bestand");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[33].Value = ((string)(Original_Log_Bestand));
            }
            this.Adapter.UpdateCommand.Parameters[34].Value = ((long)(Original_Log_Bestandsnr));
            this.Adapter.UpdateCommand.Parameters[35].Value = ((long)(Original_Log_RecordId));
            if ((Original_Log_Veldnaam == null)) {
                throw new global::System.ArgumentNullException("Original_Log_Veldnaam");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[36].Value = ((string)(Original_Log_Veldnaam));
            }
            this.Adapter.UpdateCommand.Parameters[37].Value = ((long)(Original_Log_Volgnr));
            if ((Original_Log_Oude_tekst == null)) {
                this.Adapter.UpdateCommand.Parameters[38].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[39].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[38].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[39].Value = ((string)(Original_Log_Oude_tekst));
            }
            if ((Original_Log_Nieuwe_tekst == null)) {
                this.Adapter.UpdateCommand.Parameters[40].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[41].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[40].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[41].Value = ((string)(Original_Log_Nieuwe_tekst));
            }
            if ((Original_Log_Oude_numeriek.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[42].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[43].Value = ((long)(Original_Log_Oude_numeriek.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[42].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[43].Value = global::System.DBNull.Value;
            }
            if ((Original_Log_Nieuwe_numeriek.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[44].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[45].Value = ((long)(Original_Log_Nieuwe_numeriek.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[44].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[45].Value = global::System.DBNull.Value;
            }
            if ((Original_Log_Oude_real.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[46].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[47].Value = ((decimal)(Original_Log_Oude_real.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[46].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[47].Value = global::System.DBNull.Value;
            }
            if ((Original_Log_Nieuwe_real.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[48].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[49].Value = ((decimal)(Original_Log_Nieuwe_real.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[48].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[49].Value = global::System.DBNull.Value;
            }
            if ((Original_Log_Oude_currency.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[50].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[51].Value = ((decimal)(Original_Log_Oude_currency.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[50].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[51].Value = global::System.DBNull.Value;
            }
            if ((Original_Log_Nieuwe_currency.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[52].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[53].Value = ((decimal)(Original_Log_Nieuwe_currency.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[52].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[53].Value = global::System.DBNull.Value;
            }
            if ((Original_Log_Oude_datum.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[54].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[55].Value = ((System.DateTime)(Original_Log_Oude_datum.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[54].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[55].Value = global::System.DBNull.Value;
            }
            if ((Original_Log_Nieuwe_datum.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[56].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[57].Value = ((System.DateTime)(Original_Log_Nieuwe_datum.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[56].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[57].Value = global::System.DBNull.Value;
            }
            if ((Original_Log_Oude_JN.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[58].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[59].Value = ((long)(Original_Log_Oude_JN.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[58].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[59].Value = global::System.DBNull.Value;
            }
            if ((Original_Log_Nieuwe_JN.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[60].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[61].Value = ((long)(Original_Log_Nieuwe_JN.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[60].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[61].Value = global::System.DBNull.Value;
            }
            if ((Original_Log_Oude_memo == null)) {
                this.Adapter.UpdateCommand.Parameters[62].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[63].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[62].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[63].Value = ((string)(Original_Log_Oude_memo));
            }
            if ((Original_Log_Nieuwe_memo == null)) {
                this.Adapter.UpdateCommand.Parameters[64].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[65].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[64].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[65].Value = ((string)(Original_Log_Nieuwe_memo));
            }
            if ((Original_Log_Oude_record_datum.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[66].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[67].Value = ((System.DateTime)(Original_Log_Oude_record_datum.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[66].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[67].Value = global::System.DBNull.Value;
            }
            if ((Original_Log_Nieuwe_recorddatum.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[68].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[69].Value = ((System.DateTime)(Original_Log_Nieuwe_recorddatum.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[68].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[69].Value = global::System.DBNull.Value;
            }
            if ((Original_Log_Oude_user.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[70].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[71].Value = ((long)(Original_Log_Oude_user.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[70].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[71].Value = global::System.DBNull.Value;
            }
            if ((Original_Log_Nieuwe_user.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[72].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[73].Value = ((long)(Original_Log_Nieuwe_user.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[72].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[73].Value = global::System.DBNull.Value;
            }
            if ((Original_Log_DbFilesId.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[74].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[75].Value = ((long)(Original_Log_DbFilesId.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[74].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[75].Value = global::System.DBNull.Value;
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.UpdateCommand.Connection.State;
            if (((this.Adapter.UpdateCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.UpdateCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.UpdateCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.UpdateCommand.Connection.Close();
                }
            }
        }
    }
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class ProductTableAdapter : global::System.ComponentModel.Component {
        
        private global::System.Data.SQLite.SQLiteDataAdapter _adapter;
        
        private global::System.Data.SQLite.SQLiteConnection _connection;
        
        private global::System.Data.SQLite.SQLiteTransaction _transaction;
        
        private global::System.Data.SQLite.SQLiteCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public ProductTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected internal global::System.Data.SQLite.SQLiteDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal global::System.Data.SQLite.SQLiteConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::System.Data.SQLite.SQLiteCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal global::System.Data.SQLite.SQLiteTransaction Transaction {
            get {
                return this._transaction;
            }
            set {
                this._transaction = value;
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    this.CommandCollection[i].Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.DeleteCommand != null))) {
                    this.Adapter.DeleteCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.InsertCommand != null))) {
                    this.Adapter.InsertCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.UpdateCommand != null))) {
                    this.Adapter.UpdateCommand.Transaction = this._transaction;
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected global::System.Data.SQLite.SQLiteCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitAdapter() {
            this._adapter = new global::System.Data.SQLite.SQLiteDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "Product";
            tableMapping.ColumnMappings.Add("Prod_Id", "Prod_Id");
            tableMapping.ColumnMappings.Add("Prod_StatusId", "Prod_StatusId");
            tableMapping.ColumnMappings.Add("Prod_DispStatus", "Prod_DispStatus");
            tableMapping.ColumnMappings.Add("Prod_Naamkort", "Prod_Naamkort");
            tableMapping.ColumnMappings.Add("Prod_Naamlang", "Prod_Naamlang");
            tableMapping.ColumnMappings.Add("Prod_Kleur", "Prod_Kleur");
            tableMapping.ColumnMappings.Add("Prod_Code", "Prod_Code");
            tableMapping.ColumnMappings.Add("Prod_Soort", "Prod_Soort");
            tableMapping.ColumnMappings.Add("Prod_ActiefJN", "Prod_ActiefJN");
            tableMapping.ColumnMappings.Add("Prod_DispActief", "Prod_DispActief");
            tableMapping.ColumnMappings.Add("Prod_Waarde", "Prod_Waarde");
            tableMapping.ColumnMappings.Add("Prod_Aantaleenhedenperproduct", "Prod_Aantaleenhedenperproduct");
            tableMapping.ColumnMappings.Add("Prod_Verzamelnaam", "Prod_Verzamelnaam");
            tableMapping.ColumnMappings.Add("Prod_WaardePerEenheid", "Prod_WaardePerEenheid");
            tableMapping.ColumnMappings.Add("Prod_Mutatiedatum", "Prod_Mutatiedatum");
            tableMapping.ColumnMappings.Add("Prod_Opmerking", "Prod_Opmerking");
            this._adapter.TableMappings.Add(tableMapping);
            this._adapter.DeleteCommand = new global::System.Data.SQLite.SQLiteCommand();
            this._adapter.DeleteCommand.Connection = this.Connection;
            this._adapter.DeleteCommand.CommandText = @"DELETE FROM [main].[sqlite_default_schema].[Product] WHERE (([Prod_Id] = @Original_Prod_Id) AND ([Prod_StatusId] = @Original_Prod_StatusId) AND ((@IsNull_Prod_DispStatus = 1 AND [Prod_DispStatus] IS NULL) OR ([Prod_DispStatus] = @Original_Prod_DispStatus)) AND ([Prod_Naamkort] = @Original_Prod_Naamkort) AND ([Prod_Naamlang] = @Original_Prod_Naamlang) AND ((@IsNull_Prod_Kleur = 1 AND [Prod_Kleur] IS NULL) OR ([Prod_Kleur] = @Original_Prod_Kleur)) AND ((@IsNull_Prod_Code = 1 AND [Prod_Code] IS NULL) OR ([Prod_Code] = @Original_Prod_Code)) AND ([Prod_Soort] = @Original_Prod_Soort) AND ([Prod_ActiefJN] = @Original_Prod_ActiefJN) AND ([Prod_DispActief] = @Original_Prod_DispActief) AND ([Prod_Waarde] = @Original_Prod_Waarde) AND ([Prod_Aantaleenhedenperproduct] = @Original_Prod_Aantaleenhedenperproduct) AND ([Prod_Verzamelnaam] = @Original_Prod_Verzamelnaam) AND ([Prod_WaardePerEenheid] = @Original_Prod_WaardePerEenheid) AND ([Prod_Mutatiedatum] = @Original_Prod_Mutatiedatum) AND ((@IsNull_Prod_Opmerking = 1 AND [Prod_Opmerking] IS NULL) OR ([Prod_Opmerking] = @Original_Prod_Opmerking)))";
            this._adapter.DeleteCommand.CommandType = global::System.Data.CommandType.Text;
            global::System.Data.SQLite.SQLiteParameter param = new global::System.Data.SQLite.SQLiteParameter();
            param.ParameterName = "@Original_Prod_Id";
            param.DbType = global::System.Data.DbType.Int64;
            param.DbType = global::System.Data.DbType.Int64;
            param.SourceColumn = "Prod_Id";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::System.Data.SQLite.SQLiteParameter();
            param.ParameterName = "@Original_Prod_StatusId";
            param.DbType = global::System.Data.DbType.Int64;
            param.DbType = global::System.Data.DbType.Int64;
            param.SourceColumn = "Prod_StatusId";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::System.Data.SQLite.SQLiteParameter();
            param.ParameterName = "@IsNull_Prod_DispStatus";
            param.DbType = global::System.Data.DbType.Int32;
            param.DbType = global::System.Data.DbType.Int32;
            param.SourceColumn = "Prod_DispStatus";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::System.Data.SQLite.SQLiteParameter();
            param.ParameterName = "@Original_Prod_DispStatus";
            param.DbType = global::System.Data.DbType.AnsiString;
            param.DbType = global::System.Data.DbType.AnsiString;
            param.SourceColumn = "Prod_DispStatus";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::System.Data.SQLite.SQLiteParameter();
            param.ParameterName = "@Original_Prod_Naamkort";
            param.DbType = global::System.Data.DbType.AnsiStringFixedLength;
            param.DbType = global::System.Data.DbType.AnsiStringFixedLength;
            param.SourceColumn = "Prod_Naamkort";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::System.Data.SQLite.SQLiteParameter();
            param.ParameterName = "@Original_Prod_Naamlang";
            param.DbType = global::System.Data.DbType.AnsiStringFixedLength;
            param.DbType = global::System.Data.DbType.AnsiStringFixedLength;
            param.SourceColumn = "Prod_Naamlang";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::System.Data.SQLite.SQLiteParameter();
            param.ParameterName = "@IsNull_Prod_Kleur";
            param.DbType = global::System.Data.DbType.Int32;
            param.DbType = global::System.Data.DbType.Int32;
            param.SourceColumn = "Prod_Kleur";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::System.Data.SQLite.SQLiteParameter();
            param.ParameterName = "@Original_Prod_Kleur";
            param.DbType = global::System.Data.DbType.AnsiStringFixedLength;
            param.DbType = global::System.Data.DbType.AnsiStringFixedLength;
            param.SourceColumn = "Prod_Kleur";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::System.Data.SQLite.SQLiteParameter();
            param.ParameterName = "@IsNull_Prod_Code";
            param.DbType = global::System.Data.DbType.Int32;
            param.DbType = global::System.Data.DbType.Int32;
            param.SourceColumn = "Prod_Code";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::System.Data.SQLite.SQLiteParameter();
            param.ParameterName = "@Original_Prod_Code";
            param.DbType = global::System.Data.DbType.AnsiStringFixedLength;
            param.DbType = global::System.Data.DbType.AnsiStringFixedLength;
            param.SourceColumn = "Prod_Code";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::System.Data.SQLite.SQLiteParameter();
            param.ParameterName = "@Original_Prod_Soort";
            param.DbType = global::System.Data.DbType.AnsiString;
            param.DbType = global::System.Data.DbType.AnsiString;
            param.SourceColumn = "Prod_Soort";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::System.Data.SQLite.SQLiteParameter();
            param.ParameterName = "@Original_Prod_ActiefJN";
            param.DbType = global::System.Data.DbType.Int64;
            param.DbType = global::System.Data.DbType.Int64;
            param.SourceColumn = "Prod_ActiefJN";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::System.Data.SQLite.SQLiteParameter();
            param.ParameterName = "@Original_Prod_DispActief";
            param.DbType = global::System.Data.DbType.AnsiString;
            param.DbType = global::System.Data.DbType.AnsiString;
            param.SourceColumn = "Prod_DispActief";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::System.Data.SQLite.SQLiteParameter();
            param.ParameterName = "@Original_Prod_Waarde";
            param.DbType = global::System.Data.DbType.Decimal;
            param.DbType = global::System.Data.DbType.Decimal;
            param.SourceColumn = "Prod_Waarde";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::System.Data.SQLite.SQLiteParameter();
            param.ParameterName = "@Original_Prod_Aantaleenhedenperproduct";
            param.DbType = global::System.Data.DbType.Byte;
            param.DbType = global::System.Data.DbType.Byte;
            param.SourceColumn = "Prod_Aantaleenhedenperproduct";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::System.Data.SQLite.SQLiteParameter();
            param.ParameterName = "@Original_Prod_Verzamelnaam";
            param.DbType = global::System.Data.DbType.AnsiString;
            param.DbType = global::System.Data.DbType.AnsiString;
            param.SourceColumn = "Prod_Verzamelnaam";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::System.Data.SQLite.SQLiteParameter();
            param.ParameterName = "@Original_Prod_WaardePerEenheid";
            param.DbType = global::System.Data.DbType.Decimal;
            param.DbType = global::System.Data.DbType.Decimal;
            param.SourceColumn = "Prod_WaardePerEenheid";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::System.Data.SQLite.SQLiteParameter();
            param.ParameterName = "@Original_Prod_Mutatiedatum";
            param.DbType = global::System.Data.DbType.DateTime;
            param.DbType = global::System.Data.DbType.DateTime;
            param.SourceColumn = "Prod_Mutatiedatum";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::System.Data.SQLite.SQLiteParameter();
            param.ParameterName = "@IsNull_Prod_Opmerking";
            param.DbType = global::System.Data.DbType.Int32;
            param.DbType = global::System.Data.DbType.Int32;
            param.SourceColumn = "Prod_Opmerking";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::System.Data.SQLite.SQLiteParameter();
            param.ParameterName = "@Original_Prod_Opmerking";
            param.DbType = global::System.Data.DbType.AnsiString;
            param.DbType = global::System.Data.DbType.AnsiString;
            param.SourceColumn = "Prod_Opmerking";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            this._adapter.InsertCommand = new global::System.Data.SQLite.SQLiteCommand();
            this._adapter.InsertCommand.Connection = this.Connection;
            this._adapter.InsertCommand.CommandText = @"INSERT INTO [main].[sqlite_default_schema].[Product] ([Prod_StatusId], [Prod_DispStatus], [Prod_Naamkort], [Prod_Naamlang], [Prod_Kleur], [Prod_Code], [Prod_Soort], [Prod_ActiefJN], [Prod_DispActief], [Prod_Waarde], [Prod_Aantaleenhedenperproduct], [Prod_Verzamelnaam], [Prod_WaardePerEenheid], [Prod_Mutatiedatum], [Prod_Opmerking]) VALUES (@Prod_StatusId, @Prod_DispStatus, @Prod_Naamkort, @Prod_Naamlang, @Prod_Kleur, @Prod_Code, @Prod_Soort, @Prod_ActiefJN, @Prod_DispActief, @Prod_Waarde, @Prod_Aantaleenhedenperproduct, @Prod_Verzamelnaam, @Prod_WaardePerEenheid, @Prod_Mutatiedatum, @Prod_Opmerking)";
            this._adapter.InsertCommand.CommandType = global::System.Data.CommandType.Text;
            param = new global::System.Data.SQLite.SQLiteParameter();
            param.ParameterName = "@Prod_StatusId";
            param.DbType = global::System.Data.DbType.Int64;
            param.DbType = global::System.Data.DbType.Int64;
            param.SourceColumn = "Prod_StatusId";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::System.Data.SQLite.SQLiteParameter();
            param.ParameterName = "@Prod_DispStatus";
            param.DbType = global::System.Data.DbType.AnsiString;
            param.DbType = global::System.Data.DbType.AnsiString;
            param.SourceColumn = "Prod_DispStatus";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::System.Data.SQLite.SQLiteParameter();
            param.ParameterName = "@Prod_Naamkort";
            param.DbType = global::System.Data.DbType.AnsiStringFixedLength;
            param.DbType = global::System.Data.DbType.AnsiStringFixedLength;
            param.SourceColumn = "Prod_Naamkort";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::System.Data.SQLite.SQLiteParameter();
            param.ParameterName = "@Prod_Naamlang";
            param.DbType = global::System.Data.DbType.AnsiStringFixedLength;
            param.DbType = global::System.Data.DbType.AnsiStringFixedLength;
            param.SourceColumn = "Prod_Naamlang";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::System.Data.SQLite.SQLiteParameter();
            param.ParameterName = "@Prod_Kleur";
            param.DbType = global::System.Data.DbType.AnsiStringFixedLength;
            param.DbType = global::System.Data.DbType.AnsiStringFixedLength;
            param.SourceColumn = "Prod_Kleur";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::System.Data.SQLite.SQLiteParameter();
            param.ParameterName = "@Prod_Code";
            param.DbType = global::System.Data.DbType.AnsiStringFixedLength;
            param.DbType = global::System.Data.DbType.AnsiStringFixedLength;
            param.SourceColumn = "Prod_Code";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::System.Data.SQLite.SQLiteParameter();
            param.ParameterName = "@Prod_Soort";
            param.DbType = global::System.Data.DbType.AnsiString;
            param.DbType = global::System.Data.DbType.AnsiString;
            param.SourceColumn = "Prod_Soort";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::System.Data.SQLite.SQLiteParameter();
            param.ParameterName = "@Prod_ActiefJN";
            param.DbType = global::System.Data.DbType.Int64;
            param.DbType = global::System.Data.DbType.Int64;
            param.SourceColumn = "Prod_ActiefJN";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::System.Data.SQLite.SQLiteParameter();
            param.ParameterName = "@Prod_DispActief";
            param.DbType = global::System.Data.DbType.AnsiString;
            param.DbType = global::System.Data.DbType.AnsiString;
            param.SourceColumn = "Prod_DispActief";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::System.Data.SQLite.SQLiteParameter();
            param.ParameterName = "@Prod_Waarde";
            param.DbType = global::System.Data.DbType.Decimal;
            param.DbType = global::System.Data.DbType.Decimal;
            param.SourceColumn = "Prod_Waarde";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::System.Data.SQLite.SQLiteParameter();
            param.ParameterName = "@Prod_Aantaleenhedenperproduct";
            param.DbType = global::System.Data.DbType.Byte;
            param.DbType = global::System.Data.DbType.Byte;
            param.SourceColumn = "Prod_Aantaleenhedenperproduct";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::System.Data.SQLite.SQLiteParameter();
            param.ParameterName = "@Prod_Verzamelnaam";
            param.DbType = global::System.Data.DbType.AnsiString;
            param.DbType = global::System.Data.DbType.AnsiString;
            param.SourceColumn = "Prod_Verzamelnaam";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::System.Data.SQLite.SQLiteParameter();
            param.ParameterName = "@Prod_WaardePerEenheid";
            param.DbType = global::System.Data.DbType.Decimal;
            param.DbType = global::System.Data.DbType.Decimal;
            param.SourceColumn = "Prod_WaardePerEenheid";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::System.Data.SQLite.SQLiteParameter();
            param.ParameterName = "@Prod_Mutatiedatum";
            param.DbType = global::System.Data.DbType.DateTime;
            param.DbType = global::System.Data.DbType.DateTime;
            param.SourceColumn = "Prod_Mutatiedatum";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::System.Data.SQLite.SQLiteParameter();
            param.ParameterName = "@Prod_Opmerking";
            param.DbType = global::System.Data.DbType.AnsiString;
            param.DbType = global::System.Data.DbType.AnsiString;
            param.SourceColumn = "Prod_Opmerking";
            this._adapter.InsertCommand.Parameters.Add(param);
            this._adapter.UpdateCommand = new global::System.Data.SQLite.SQLiteCommand();
            this._adapter.UpdateCommand.Connection = this.Connection;
            this._adapter.UpdateCommand.CommandText = "UPDATE [main].[sqlite_default_schema].[Product] SET [Prod_StatusId] = @Prod_Statu" +
                "sId, [Prod_DispStatus] = @Prod_DispStatus, [Prod_Naamkort] = @Prod_Naamkort, [Pr" +
                "od_Naamlang] = @Prod_Naamlang, [Prod_Kleur] = @Prod_Kleur, [Prod_Code] = @Prod_C" +
                "ode, [Prod_Soort] = @Prod_Soort, [Prod_ActiefJN] = @Prod_ActiefJN, [Prod_DispAct" +
                "ief] = @Prod_DispActief, [Prod_Waarde] = @Prod_Waarde, [Prod_Aantaleenhedenperpr" +
                "oduct] = @Prod_Aantaleenhedenperproduct, [Prod_Verzamelnaam] = @Prod_Verzamelnaa" +
                "m, [Prod_WaardePerEenheid] = @Prod_WaardePerEenheid, [Prod_Mutatiedatum] = @Prod" +
                "_Mutatiedatum, [Prod_Opmerking] = @Prod_Opmerking WHERE (([Prod_Id] = @Original_" +
                "Prod_Id) AND ([Prod_StatusId] = @Original_Prod_StatusId) AND ((@IsNull_Prod_Disp" +
                "Status = 1 AND [Prod_DispStatus] IS NULL) OR ([Prod_DispStatus] = @Original_Prod" +
                "_DispStatus)) AND ([Prod_Naamkort] = @Original_Prod_Naamkort) AND ([Prod_Naamlan" +
                "g] = @Original_Prod_Naamlang) AND ((@IsNull_Prod_Kleur = 1 AND [Prod_Kleur] IS N" +
                "ULL) OR ([Prod_Kleur] = @Original_Prod_Kleur)) AND ((@IsNull_Prod_Code = 1 AND [" +
                "Prod_Code] IS NULL) OR ([Prod_Code] = @Original_Prod_Code)) AND ([Prod_Soort] = " +
                "@Original_Prod_Soort) AND ([Prod_ActiefJN] = @Original_Prod_ActiefJN) AND ([Prod" +
                "_DispActief] = @Original_Prod_DispActief) AND ([Prod_Waarde] = @Original_Prod_Wa" +
                "arde) AND ([Prod_Aantaleenhedenperproduct] = @Original_Prod_Aantaleenhedenperpro" +
                "duct) AND ([Prod_Verzamelnaam] = @Original_Prod_Verzamelnaam) AND ([Prod_WaardeP" +
                "erEenheid] = @Original_Prod_WaardePerEenheid) AND ([Prod_Mutatiedatum] = @Origin" +
                "al_Prod_Mutatiedatum) AND ((@IsNull_Prod_Opmerking = 1 AND [Prod_Opmerking] IS N" +
                "ULL) OR ([Prod_Opmerking] = @Original_Prod_Opmerking)))";
            this._adapter.UpdateCommand.CommandType = global::System.Data.CommandType.Text;
            param = new global::System.Data.SQLite.SQLiteParameter();
            param.ParameterName = "@Prod_StatusId";
            param.DbType = global::System.Data.DbType.Int64;
            param.DbType = global::System.Data.DbType.Int64;
            param.SourceColumn = "Prod_StatusId";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::System.Data.SQLite.SQLiteParameter();
            param.ParameterName = "@Prod_DispStatus";
            param.DbType = global::System.Data.DbType.AnsiString;
            param.DbType = global::System.Data.DbType.AnsiString;
            param.SourceColumn = "Prod_DispStatus";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::System.Data.SQLite.SQLiteParameter();
            param.ParameterName = "@Prod_Naamkort";
            param.DbType = global::System.Data.DbType.AnsiStringFixedLength;
            param.DbType = global::System.Data.DbType.AnsiStringFixedLength;
            param.SourceColumn = "Prod_Naamkort";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::System.Data.SQLite.SQLiteParameter();
            param.ParameterName = "@Prod_Naamlang";
            param.DbType = global::System.Data.DbType.AnsiStringFixedLength;
            param.DbType = global::System.Data.DbType.AnsiStringFixedLength;
            param.SourceColumn = "Prod_Naamlang";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::System.Data.SQLite.SQLiteParameter();
            param.ParameterName = "@Prod_Kleur";
            param.DbType = global::System.Data.DbType.AnsiStringFixedLength;
            param.DbType = global::System.Data.DbType.AnsiStringFixedLength;
            param.SourceColumn = "Prod_Kleur";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::System.Data.SQLite.SQLiteParameter();
            param.ParameterName = "@Prod_Code";
            param.DbType = global::System.Data.DbType.AnsiStringFixedLength;
            param.DbType = global::System.Data.DbType.AnsiStringFixedLength;
            param.SourceColumn = "Prod_Code";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::System.Data.SQLite.SQLiteParameter();
            param.ParameterName = "@Prod_Soort";
            param.DbType = global::System.Data.DbType.AnsiString;
            param.DbType = global::System.Data.DbType.AnsiString;
            param.SourceColumn = "Prod_Soort";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::System.Data.SQLite.SQLiteParameter();
            param.ParameterName = "@Prod_ActiefJN";
            param.DbType = global::System.Data.DbType.Int64;
            param.DbType = global::System.Data.DbType.Int64;
            param.SourceColumn = "Prod_ActiefJN";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::System.Data.SQLite.SQLiteParameter();
            param.ParameterName = "@Prod_DispActief";
            param.DbType = global::System.Data.DbType.AnsiString;
            param.DbType = global::System.Data.DbType.AnsiString;
            param.SourceColumn = "Prod_DispActief";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::System.Data.SQLite.SQLiteParameter();
            param.ParameterName = "@Prod_Waarde";
            param.DbType = global::System.Data.DbType.Decimal;
            param.DbType = global::System.Data.DbType.Decimal;
            param.SourceColumn = "Prod_Waarde";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::System.Data.SQLite.SQLiteParameter();
            param.ParameterName = "@Prod_Aantaleenhedenperproduct";
            param.DbType = global::System.Data.DbType.Byte;
            param.DbType = global::System.Data.DbType.Byte;
            param.SourceColumn = "Prod_Aantaleenhedenperproduct";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::System.Data.SQLite.SQLiteParameter();
            param.ParameterName = "@Prod_Verzamelnaam";
            param.DbType = global::System.Data.DbType.AnsiString;
            param.DbType = global::System.Data.DbType.AnsiString;
            param.SourceColumn = "Prod_Verzamelnaam";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::System.Data.SQLite.SQLiteParameter();
            param.ParameterName = "@Prod_WaardePerEenheid";
            param.DbType = global::System.Data.DbType.Decimal;
            param.DbType = global::System.Data.DbType.Decimal;
            param.SourceColumn = "Prod_WaardePerEenheid";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::System.Data.SQLite.SQLiteParameter();
            param.ParameterName = "@Prod_Mutatiedatum";
            param.DbType = global::System.Data.DbType.DateTime;
            param.DbType = global::System.Data.DbType.DateTime;
            param.SourceColumn = "Prod_Mutatiedatum";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::System.Data.SQLite.SQLiteParameter();
            param.ParameterName = "@Prod_Opmerking";
            param.DbType = global::System.Data.DbType.AnsiString;
            param.DbType = global::System.Data.DbType.AnsiString;
            param.SourceColumn = "Prod_Opmerking";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::System.Data.SQLite.SQLiteParameter();
            param.ParameterName = "@Original_Prod_Id";
            param.DbType = global::System.Data.DbType.Int64;
            param.DbType = global::System.Data.DbType.Int64;
            param.SourceColumn = "Prod_Id";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::System.Data.SQLite.SQLiteParameter();
            param.ParameterName = "@Original_Prod_StatusId";
            param.DbType = global::System.Data.DbType.Int64;
            param.DbType = global::System.Data.DbType.Int64;
            param.SourceColumn = "Prod_StatusId";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::System.Data.SQLite.SQLiteParameter();
            param.ParameterName = "@IsNull_Prod_DispStatus";
            param.DbType = global::System.Data.DbType.Int32;
            param.DbType = global::System.Data.DbType.Int32;
            param.SourceColumn = "Prod_DispStatus";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::System.Data.SQLite.SQLiteParameter();
            param.ParameterName = "@Original_Prod_DispStatus";
            param.DbType = global::System.Data.DbType.AnsiString;
            param.DbType = global::System.Data.DbType.AnsiString;
            param.SourceColumn = "Prod_DispStatus";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::System.Data.SQLite.SQLiteParameter();
            param.ParameterName = "@Original_Prod_Naamkort";
            param.DbType = global::System.Data.DbType.AnsiStringFixedLength;
            param.DbType = global::System.Data.DbType.AnsiStringFixedLength;
            param.SourceColumn = "Prod_Naamkort";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::System.Data.SQLite.SQLiteParameter();
            param.ParameterName = "@Original_Prod_Naamlang";
            param.DbType = global::System.Data.DbType.AnsiStringFixedLength;
            param.DbType = global::System.Data.DbType.AnsiStringFixedLength;
            param.SourceColumn = "Prod_Naamlang";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::System.Data.SQLite.SQLiteParameter();
            param.ParameterName = "@IsNull_Prod_Kleur";
            param.DbType = global::System.Data.DbType.Int32;
            param.DbType = global::System.Data.DbType.Int32;
            param.SourceColumn = "Prod_Kleur";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::System.Data.SQLite.SQLiteParameter();
            param.ParameterName = "@Original_Prod_Kleur";
            param.DbType = global::System.Data.DbType.AnsiStringFixedLength;
            param.DbType = global::System.Data.DbType.AnsiStringFixedLength;
            param.SourceColumn = "Prod_Kleur";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::System.Data.SQLite.SQLiteParameter();
            param.ParameterName = "@IsNull_Prod_Code";
            param.DbType = global::System.Data.DbType.Int32;
            param.DbType = global::System.Data.DbType.Int32;
            param.SourceColumn = "Prod_Code";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::System.Data.SQLite.SQLiteParameter();
            param.ParameterName = "@Original_Prod_Code";
            param.DbType = global::System.Data.DbType.AnsiStringFixedLength;
            param.DbType = global::System.Data.DbType.AnsiStringFixedLength;
            param.SourceColumn = "Prod_Code";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::System.Data.SQLite.SQLiteParameter();
            param.ParameterName = "@Original_Prod_Soort";
            param.DbType = global::System.Data.DbType.AnsiString;
            param.DbType = global::System.Data.DbType.AnsiString;
            param.SourceColumn = "Prod_Soort";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::System.Data.SQLite.SQLiteParameter();
            param.ParameterName = "@Original_Prod_ActiefJN";
            param.DbType = global::System.Data.DbType.Int64;
            param.DbType = global::System.Data.DbType.Int64;
            param.SourceColumn = "Prod_ActiefJN";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::System.Data.SQLite.SQLiteParameter();
            param.ParameterName = "@Original_Prod_DispActief";
            param.DbType = global::System.Data.DbType.AnsiString;
            param.DbType = global::System.Data.DbType.AnsiString;
            param.SourceColumn = "Prod_DispActief";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::System.Data.SQLite.SQLiteParameter();
            param.ParameterName = "@Original_Prod_Waarde";
            param.DbType = global::System.Data.DbType.Decimal;
            param.DbType = global::System.Data.DbType.Decimal;
            param.SourceColumn = "Prod_Waarde";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::System.Data.SQLite.SQLiteParameter();
            param.ParameterName = "@Original_Prod_Aantaleenhedenperproduct";
            param.DbType = global::System.Data.DbType.Byte;
            param.DbType = global::System.Data.DbType.Byte;
            param.SourceColumn = "Prod_Aantaleenhedenperproduct";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::System.Data.SQLite.SQLiteParameter();
            param.ParameterName = "@Original_Prod_Verzamelnaam";
            param.DbType = global::System.Data.DbType.AnsiString;
            param.DbType = global::System.Data.DbType.AnsiString;
            param.SourceColumn = "Prod_Verzamelnaam";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::System.Data.SQLite.SQLiteParameter();
            param.ParameterName = "@Original_Prod_WaardePerEenheid";
            param.DbType = global::System.Data.DbType.Decimal;
            param.DbType = global::System.Data.DbType.Decimal;
            param.SourceColumn = "Prod_WaardePerEenheid";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::System.Data.SQLite.SQLiteParameter();
            param.ParameterName = "@Original_Prod_Mutatiedatum";
            param.DbType = global::System.Data.DbType.DateTime;
            param.DbType = global::System.Data.DbType.DateTime;
            param.SourceColumn = "Prod_Mutatiedatum";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::System.Data.SQLite.SQLiteParameter();
            param.ParameterName = "@IsNull_Prod_Opmerking";
            param.DbType = global::System.Data.DbType.Int32;
            param.DbType = global::System.Data.DbType.Int32;
            param.SourceColumn = "Prod_Opmerking";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::System.Data.SQLite.SQLiteParameter();
            param.ParameterName = "@Original_Prod_Opmerking";
            param.DbType = global::System.Data.DbType.AnsiString;
            param.DbType = global::System.Data.DbType.AnsiString;
            param.SourceColumn = "Prod_Opmerking";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitConnection() {
            this._connection = new global::System.Data.SQLite.SQLiteConnection();
            this._connection.ConnectionString = global::Cmbap.Properties.Settings.Default.Cmbap_dataConnectionString;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitCommandCollection() {
            this._commandCollection = new global::System.Data.SQLite.SQLiteCommand[3];
            this._commandCollection[0] = new global::System.Data.SQLite.SQLiteCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = @"SELECT [Prod_Id], [Prod_StatusId], [Prod_DispStatus], [Prod_Naamkort], [Prod_Naamlang], [Prod_Kleur], [Prod_Code], [Prod_Soort], [Prod_ActiefJN], [Prod_DispActief], [Prod_Waarde], [Prod_Aantaleenhedenperproduct], [Prod_Verzamelnaam], [Prod_WaardePerEenheid], [Prod_Mutatiedatum], [Prod_Opmerking] FROM [Product] WHERE Prod_StatusId<>170009";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
            this._commandCollection[1] = new global::System.Data.SQLite.SQLiteCommand();
            this._commandCollection[1].Connection = this.Connection;
            this._commandCollection[1].CommandText = @"SELECT Prod_Aantaleenhedenperproduct, Prod_ActiefJN, Prod_Code, Prod_DispActief, Prod_DispStatus, Prod_Id, Prod_Kleur, Prod_Mutatiedatum, Prod_Naamkort, Prod_Naamlang, Prod_Opmerking, Prod_Soort, Prod_StatusId, Prod_Verzamelnaam, Prod_Waarde, Prod_WaardePerEenheid FROM Product WHERE (Prod_StatusId <> 170009)";
            this._commandCollection[1].CommandType = global::System.Data.CommandType.Text;
            this._commandCollection[2] = new global::System.Data.SQLite.SQLiteCommand();
            this._commandCollection[2].Connection = this.Connection;
            this._commandCollection[2].CommandText = @"SELECT Prod_Aantaleenhedenperproduct, Prod_ActiefJN, Prod_Code, Prod_DispActief, Prod_DispStatus, Prod_Id, Prod_Kleur, Prod_Mutatiedatum, Prod_Naamkort, Prod_Naamlang, Prod_Opmerking, Prod_Soort, Prod_StatusId, Prod_Verzamelnaam, Prod_Waarde, Prod_WaardePerEenheid FROM Product WHERE (Prod_StatusId <> 170009)";
            this._commandCollection[2].CommandType = global::System.Data.CommandType.Text;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(_Cmbap_dataDataSet.ProductDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual _Cmbap_dataDataSet.ProductDataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            _Cmbap_dataDataSet.ProductDataTable dataTable = new _Cmbap_dataDataSet.ProductDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, false)]
        public virtual int FillBy(_Cmbap_dataDataSet.ProductDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[1];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, false)]
        public virtual int FillBy1(_Cmbap_dataDataSet.ProductDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[2];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(_Cmbap_dataDataSet.ProductDataTable dataTable) {
            return this.Adapter.Update(dataTable);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(_Cmbap_dataDataSet dataSet) {
            return this.Adapter.Update(dataSet, "Product");
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow dataRow) {
            return this.Adapter.Update(new global::System.Data.DataRow[] {
                        dataRow});
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow[] dataRows) {
            return this.Adapter.Update(dataRows);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Delete, true)]
        public virtual int Delete(
                    long Original_Prod_Id, 
                    long Original_Prod_StatusId, 
                    string Original_Prod_DispStatus, 
                    string Original_Prod_Naamkort, 
                    string Original_Prod_Naamlang, 
                    string Original_Prod_Kleur, 
                    string Original_Prod_Code, 
                    string Original_Prod_Soort, 
                    long Original_Prod_ActiefJN, 
                    string Original_Prod_DispActief, 
                    decimal Original_Prod_Waarde, 
                    byte Original_Prod_Aantaleenhedenperproduct, 
                    string Original_Prod_Verzamelnaam, 
                    decimal Original_Prod_WaardePerEenheid, 
                    System.DateTime Original_Prod_Mutatiedatum, 
                    string Original_Prod_Opmerking) {
            this.Adapter.DeleteCommand.Parameters[0].Value = ((long)(Original_Prod_Id));
            this.Adapter.DeleteCommand.Parameters[1].Value = ((long)(Original_Prod_StatusId));
            if ((Original_Prod_DispStatus == null)) {
                this.Adapter.DeleteCommand.Parameters[2].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[3].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[2].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[3].Value = ((string)(Original_Prod_DispStatus));
            }
            if ((Original_Prod_Naamkort == null)) {
                throw new global::System.ArgumentNullException("Original_Prod_Naamkort");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[4].Value = ((string)(Original_Prod_Naamkort));
            }
            if ((Original_Prod_Naamlang == null)) {
                throw new global::System.ArgumentNullException("Original_Prod_Naamlang");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[5].Value = ((string)(Original_Prod_Naamlang));
            }
            if ((Original_Prod_Kleur == null)) {
                this.Adapter.DeleteCommand.Parameters[6].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[7].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[6].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[7].Value = ((string)(Original_Prod_Kleur));
            }
            if ((Original_Prod_Code == null)) {
                this.Adapter.DeleteCommand.Parameters[8].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[9].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[8].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[9].Value = ((string)(Original_Prod_Code));
            }
            if ((Original_Prod_Soort == null)) {
                throw new global::System.ArgumentNullException("Original_Prod_Soort");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[10].Value = ((string)(Original_Prod_Soort));
            }
            this.Adapter.DeleteCommand.Parameters[11].Value = ((long)(Original_Prod_ActiefJN));
            if ((Original_Prod_DispActief == null)) {
                throw new global::System.ArgumentNullException("Original_Prod_DispActief");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[12].Value = ((string)(Original_Prod_DispActief));
            }
            this.Adapter.DeleteCommand.Parameters[13].Value = ((decimal)(Original_Prod_Waarde));
            this.Adapter.DeleteCommand.Parameters[14].Value = ((byte)(Original_Prod_Aantaleenhedenperproduct));
            if ((Original_Prod_Verzamelnaam == null)) {
                throw new global::System.ArgumentNullException("Original_Prod_Verzamelnaam");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[15].Value = ((string)(Original_Prod_Verzamelnaam));
            }
            this.Adapter.DeleteCommand.Parameters[16].Value = ((decimal)(Original_Prod_WaardePerEenheid));
            this.Adapter.DeleteCommand.Parameters[17].Value = ((System.DateTime)(Original_Prod_Mutatiedatum));
            if ((Original_Prod_Opmerking == null)) {
                this.Adapter.DeleteCommand.Parameters[18].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[19].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[18].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[19].Value = ((string)(Original_Prod_Opmerking));
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.DeleteCommand.Connection.State;
            if (((this.Adapter.DeleteCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.DeleteCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.DeleteCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.DeleteCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Insert, true)]
        public virtual int Insert(long Prod_StatusId, string Prod_DispStatus, string Prod_Naamkort, string Prod_Naamlang, string Prod_Kleur, string Prod_Code, string Prod_Soort, long Prod_ActiefJN, string Prod_DispActief, decimal Prod_Waarde, byte Prod_Aantaleenhedenperproduct, string Prod_Verzamelnaam, decimal Prod_WaardePerEenheid, System.DateTime Prod_Mutatiedatum, string Prod_Opmerking) {
            this.Adapter.InsertCommand.Parameters[0].Value = ((long)(Prod_StatusId));
            if ((Prod_DispStatus == null)) {
                this.Adapter.InsertCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[1].Value = ((string)(Prod_DispStatus));
            }
            if ((Prod_Naamkort == null)) {
                throw new global::System.ArgumentNullException("Prod_Naamkort");
            }
            else {
                this.Adapter.InsertCommand.Parameters[2].Value = ((string)(Prod_Naamkort));
            }
            if ((Prod_Naamlang == null)) {
                throw new global::System.ArgumentNullException("Prod_Naamlang");
            }
            else {
                this.Adapter.InsertCommand.Parameters[3].Value = ((string)(Prod_Naamlang));
            }
            if ((Prod_Kleur == null)) {
                this.Adapter.InsertCommand.Parameters[4].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[4].Value = ((string)(Prod_Kleur));
            }
            if ((Prod_Code == null)) {
                this.Adapter.InsertCommand.Parameters[5].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[5].Value = ((string)(Prod_Code));
            }
            if ((Prod_Soort == null)) {
                throw new global::System.ArgumentNullException("Prod_Soort");
            }
            else {
                this.Adapter.InsertCommand.Parameters[6].Value = ((string)(Prod_Soort));
            }
            this.Adapter.InsertCommand.Parameters[7].Value = ((long)(Prod_ActiefJN));
            if ((Prod_DispActief == null)) {
                throw new global::System.ArgumentNullException("Prod_DispActief");
            }
            else {
                this.Adapter.InsertCommand.Parameters[8].Value = ((string)(Prod_DispActief));
            }
            this.Adapter.InsertCommand.Parameters[9].Value = ((decimal)(Prod_Waarde));
            this.Adapter.InsertCommand.Parameters[10].Value = ((byte)(Prod_Aantaleenhedenperproduct));
            if ((Prod_Verzamelnaam == null)) {
                throw new global::System.ArgumentNullException("Prod_Verzamelnaam");
            }
            else {
                this.Adapter.InsertCommand.Parameters[11].Value = ((string)(Prod_Verzamelnaam));
            }
            this.Adapter.InsertCommand.Parameters[12].Value = ((decimal)(Prod_WaardePerEenheid));
            this.Adapter.InsertCommand.Parameters[13].Value = ((System.DateTime)(Prod_Mutatiedatum));
            if ((Prod_Opmerking == null)) {
                this.Adapter.InsertCommand.Parameters[14].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[14].Value = ((string)(Prod_Opmerking));
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.InsertCommand.Connection.State;
            if (((this.Adapter.InsertCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.InsertCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.InsertCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.InsertCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(
                    long Prod_StatusId, 
                    string Prod_DispStatus, 
                    string Prod_Naamkort, 
                    string Prod_Naamlang, 
                    string Prod_Kleur, 
                    string Prod_Code, 
                    string Prod_Soort, 
                    long Prod_ActiefJN, 
                    string Prod_DispActief, 
                    decimal Prod_Waarde, 
                    byte Prod_Aantaleenhedenperproduct, 
                    string Prod_Verzamelnaam, 
                    decimal Prod_WaardePerEenheid, 
                    System.DateTime Prod_Mutatiedatum, 
                    string Prod_Opmerking, 
                    long Original_Prod_Id, 
                    long Original_Prod_StatusId, 
                    string Original_Prod_DispStatus, 
                    string Original_Prod_Naamkort, 
                    string Original_Prod_Naamlang, 
                    string Original_Prod_Kleur, 
                    string Original_Prod_Code, 
                    string Original_Prod_Soort, 
                    long Original_Prod_ActiefJN, 
                    string Original_Prod_DispActief, 
                    decimal Original_Prod_Waarde, 
                    byte Original_Prod_Aantaleenhedenperproduct, 
                    string Original_Prod_Verzamelnaam, 
                    decimal Original_Prod_WaardePerEenheid, 
                    System.DateTime Original_Prod_Mutatiedatum, 
                    string Original_Prod_Opmerking) {
            this.Adapter.UpdateCommand.Parameters[0].Value = ((long)(Prod_StatusId));
            if ((Prod_DispStatus == null)) {
                this.Adapter.UpdateCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[1].Value = ((string)(Prod_DispStatus));
            }
            if ((Prod_Naamkort == null)) {
                throw new global::System.ArgumentNullException("Prod_Naamkort");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[2].Value = ((string)(Prod_Naamkort));
            }
            if ((Prod_Naamlang == null)) {
                throw new global::System.ArgumentNullException("Prod_Naamlang");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[3].Value = ((string)(Prod_Naamlang));
            }
            if ((Prod_Kleur == null)) {
                this.Adapter.UpdateCommand.Parameters[4].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[4].Value = ((string)(Prod_Kleur));
            }
            if ((Prod_Code == null)) {
                this.Adapter.UpdateCommand.Parameters[5].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[5].Value = ((string)(Prod_Code));
            }
            if ((Prod_Soort == null)) {
                throw new global::System.ArgumentNullException("Prod_Soort");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[6].Value = ((string)(Prod_Soort));
            }
            this.Adapter.UpdateCommand.Parameters[7].Value = ((long)(Prod_ActiefJN));
            if ((Prod_DispActief == null)) {
                throw new global::System.ArgumentNullException("Prod_DispActief");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[8].Value = ((string)(Prod_DispActief));
            }
            this.Adapter.UpdateCommand.Parameters[9].Value = ((decimal)(Prod_Waarde));
            this.Adapter.UpdateCommand.Parameters[10].Value = ((byte)(Prod_Aantaleenhedenperproduct));
            if ((Prod_Verzamelnaam == null)) {
                throw new global::System.ArgumentNullException("Prod_Verzamelnaam");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[11].Value = ((string)(Prod_Verzamelnaam));
            }
            this.Adapter.UpdateCommand.Parameters[12].Value = ((decimal)(Prod_WaardePerEenheid));
            this.Adapter.UpdateCommand.Parameters[13].Value = ((System.DateTime)(Prod_Mutatiedatum));
            if ((Prod_Opmerking == null)) {
                this.Adapter.UpdateCommand.Parameters[14].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[14].Value = ((string)(Prod_Opmerking));
            }
            this.Adapter.UpdateCommand.Parameters[15].Value = ((long)(Original_Prod_Id));
            this.Adapter.UpdateCommand.Parameters[16].Value = ((long)(Original_Prod_StatusId));
            if ((Original_Prod_DispStatus == null)) {
                this.Adapter.UpdateCommand.Parameters[17].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[18].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[17].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[18].Value = ((string)(Original_Prod_DispStatus));
            }
            if ((Original_Prod_Naamkort == null)) {
                throw new global::System.ArgumentNullException("Original_Prod_Naamkort");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[19].Value = ((string)(Original_Prod_Naamkort));
            }
            if ((Original_Prod_Naamlang == null)) {
                throw new global::System.ArgumentNullException("Original_Prod_Naamlang");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[20].Value = ((string)(Original_Prod_Naamlang));
            }
            if ((Original_Prod_Kleur == null)) {
                this.Adapter.UpdateCommand.Parameters[21].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[22].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[21].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[22].Value = ((string)(Original_Prod_Kleur));
            }
            if ((Original_Prod_Code == null)) {
                this.Adapter.UpdateCommand.Parameters[23].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[24].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[23].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[24].Value = ((string)(Original_Prod_Code));
            }
            if ((Original_Prod_Soort == null)) {
                throw new global::System.ArgumentNullException("Original_Prod_Soort");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[25].Value = ((string)(Original_Prod_Soort));
            }
            this.Adapter.UpdateCommand.Parameters[26].Value = ((long)(Original_Prod_ActiefJN));
            if ((Original_Prod_DispActief == null)) {
                throw new global::System.ArgumentNullException("Original_Prod_DispActief");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[27].Value = ((string)(Original_Prod_DispActief));
            }
            this.Adapter.UpdateCommand.Parameters[28].Value = ((decimal)(Original_Prod_Waarde));
            this.Adapter.UpdateCommand.Parameters[29].Value = ((byte)(Original_Prod_Aantaleenhedenperproduct));
            if ((Original_Prod_Verzamelnaam == null)) {
                throw new global::System.ArgumentNullException("Original_Prod_Verzamelnaam");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[30].Value = ((string)(Original_Prod_Verzamelnaam));
            }
            this.Adapter.UpdateCommand.Parameters[31].Value = ((decimal)(Original_Prod_WaardePerEenheid));
            this.Adapter.UpdateCommand.Parameters[32].Value = ((System.DateTime)(Original_Prod_Mutatiedatum));
            if ((Original_Prod_Opmerking == null)) {
                this.Adapter.UpdateCommand.Parameters[33].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[34].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[33].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[34].Value = ((string)(Original_Prod_Opmerking));
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.UpdateCommand.Connection.State;
            if (((this.Adapter.UpdateCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.UpdateCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.UpdateCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.UpdateCommand.Connection.Close();
                }
            }
        }
    }
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class ProgramerrorTableAdapter : global::System.ComponentModel.Component {
        
        private global::System.Data.SQLite.SQLiteDataAdapter _adapter;
        
        private global::System.Data.SQLite.SQLiteConnection _connection;
        
        private global::System.Data.SQLite.SQLiteTransaction _transaction;
        
        private global::System.Data.SQLite.SQLiteCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public ProgramerrorTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected internal global::System.Data.SQLite.SQLiteDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal global::System.Data.SQLite.SQLiteConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::System.Data.SQLite.SQLiteCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal global::System.Data.SQLite.SQLiteTransaction Transaction {
            get {
                return this._transaction;
            }
            set {
                this._transaction = value;
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    this.CommandCollection[i].Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.DeleteCommand != null))) {
                    this.Adapter.DeleteCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.InsertCommand != null))) {
                    this.Adapter.InsertCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.UpdateCommand != null))) {
                    this.Adapter.UpdateCommand.Transaction = this._transaction;
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected global::System.Data.SQLite.SQLiteCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitAdapter() {
            this._adapter = new global::System.Data.SQLite.SQLiteDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "Programerror";
            tableMapping.ColumnMappings.Add("PE_Id", "PE_Id");
            tableMapping.ColumnMappings.Add("PE_ProgrammaId", "PE_ProgrammaId");
            tableMapping.ColumnMappings.Add("PE_ErrorcodeId", "PE_ErrorcodeId");
            tableMapping.ColumnMappings.Add("PE_PrgErrNr", "PE_PrgErrNr");
            tableMapping.ColumnMappings.Add("PE_Omschrijving", "PE_Omschrijving");
            tableMapping.ColumnMappings.Add("PE_Oplossing", "PE_Oplossing");
            tableMapping.ColumnMappings.Add("PE_Afhandeling", "PE_Afhandeling");
            tableMapping.ColumnMappings.Add("PE_Mutatiedatum", "PE_Mutatiedatum");
            this._adapter.TableMappings.Add(tableMapping);
            this._adapter.DeleteCommand = new global::System.Data.SQLite.SQLiteCommand();
            this._adapter.DeleteCommand.Connection = this.Connection;
            this._adapter.DeleteCommand.CommandText = @"DELETE FROM [main].[sqlite_default_schema].[Programerror] WHERE (([PE_Id] = @Original_PE_Id) AND ([PE_ProgrammaId] = @Original_PE_ProgrammaId) AND ([PE_ErrorcodeId] = @Original_PE_ErrorcodeId) AND ([PE_PrgErrNr] = @Original_PE_PrgErrNr) AND ([PE_Omschrijving] = @Original_PE_Omschrijving) AND ([PE_Oplossing] = @Original_PE_Oplossing) AND ((@IsNull_PE_Afhandeling = 1 AND [PE_Afhandeling] IS NULL) OR ([PE_Afhandeling] = @Original_PE_Afhandeling)) AND ([PE_Mutatiedatum] = @Original_PE_Mutatiedatum))";
            this._adapter.DeleteCommand.CommandType = global::System.Data.CommandType.Text;
            global::System.Data.SQLite.SQLiteParameter param = new global::System.Data.SQLite.SQLiteParameter();
            param.ParameterName = "@Original_PE_Id";
            param.DbType = global::System.Data.DbType.Int64;
            param.DbType = global::System.Data.DbType.Int64;
            param.SourceColumn = "PE_Id";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::System.Data.SQLite.SQLiteParameter();
            param.ParameterName = "@Original_PE_ProgrammaId";
            param.DbType = global::System.Data.DbType.Int64;
            param.DbType = global::System.Data.DbType.Int64;
            param.SourceColumn = "PE_ProgrammaId";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::System.Data.SQLite.SQLiteParameter();
            param.ParameterName = "@Original_PE_ErrorcodeId";
            param.DbType = global::System.Data.DbType.Int64;
            param.DbType = global::System.Data.DbType.Int64;
            param.SourceColumn = "PE_ErrorcodeId";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::System.Data.SQLite.SQLiteParameter();
            param.ParameterName = "@Original_PE_PrgErrNr";
            param.DbType = global::System.Data.DbType.AnsiString;
            param.DbType = global::System.Data.DbType.AnsiString;
            param.SourceColumn = "PE_PrgErrNr";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::System.Data.SQLite.SQLiteParameter();
            param.ParameterName = "@Original_PE_Omschrijving";
            param.DbType = global::System.Data.DbType.AnsiString;
            param.DbType = global::System.Data.DbType.AnsiString;
            param.SourceColumn = "PE_Omschrijving";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::System.Data.SQLite.SQLiteParameter();
            param.ParameterName = "@Original_PE_Oplossing";
            param.DbType = global::System.Data.DbType.AnsiString;
            param.DbType = global::System.Data.DbType.AnsiString;
            param.SourceColumn = "PE_Oplossing";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::System.Data.SQLite.SQLiteParameter();
            param.ParameterName = "@IsNull_PE_Afhandeling";
            param.DbType = global::System.Data.DbType.Int32;
            param.DbType = global::System.Data.DbType.Int32;
            param.SourceColumn = "PE_Afhandeling";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::System.Data.SQLite.SQLiteParameter();
            param.ParameterName = "@Original_PE_Afhandeling";
            param.DbType = global::System.Data.DbType.Int64;
            param.DbType = global::System.Data.DbType.Int64;
            param.SourceColumn = "PE_Afhandeling";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::System.Data.SQLite.SQLiteParameter();
            param.ParameterName = "@Original_PE_Mutatiedatum";
            param.DbType = global::System.Data.DbType.DateTime;
            param.DbType = global::System.Data.DbType.DateTime;
            param.SourceColumn = "PE_Mutatiedatum";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            this._adapter.InsertCommand = new global::System.Data.SQLite.SQLiteCommand();
            this._adapter.InsertCommand.Connection = this.Connection;
            this._adapter.InsertCommand.CommandText = @"INSERT INTO [main].[sqlite_default_schema].[Programerror] ([PE_ProgrammaId], [PE_ErrorcodeId], [PE_PrgErrNr], [PE_Omschrijving], [PE_Oplossing], [PE_Afhandeling], [PE_Mutatiedatum]) VALUES (@PE_ProgrammaId, @PE_ErrorcodeId, @PE_PrgErrNr, @PE_Omschrijving, @PE_Oplossing, @PE_Afhandeling, @PE_Mutatiedatum)";
            this._adapter.InsertCommand.CommandType = global::System.Data.CommandType.Text;
            param = new global::System.Data.SQLite.SQLiteParameter();
            param.ParameterName = "@PE_ProgrammaId";
            param.DbType = global::System.Data.DbType.Int64;
            param.DbType = global::System.Data.DbType.Int64;
            param.SourceColumn = "PE_ProgrammaId";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::System.Data.SQLite.SQLiteParameter();
            param.ParameterName = "@PE_ErrorcodeId";
            param.DbType = global::System.Data.DbType.Int64;
            param.DbType = global::System.Data.DbType.Int64;
            param.SourceColumn = "PE_ErrorcodeId";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::System.Data.SQLite.SQLiteParameter();
            param.ParameterName = "@PE_PrgErrNr";
            param.DbType = global::System.Data.DbType.AnsiString;
            param.DbType = global::System.Data.DbType.AnsiString;
            param.SourceColumn = "PE_PrgErrNr";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::System.Data.SQLite.SQLiteParameter();
            param.ParameterName = "@PE_Omschrijving";
            param.DbType = global::System.Data.DbType.AnsiString;
            param.DbType = global::System.Data.DbType.AnsiString;
            param.SourceColumn = "PE_Omschrijving";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::System.Data.SQLite.SQLiteParameter();
            param.ParameterName = "@PE_Oplossing";
            param.DbType = global::System.Data.DbType.AnsiString;
            param.DbType = global::System.Data.DbType.AnsiString;
            param.SourceColumn = "PE_Oplossing";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::System.Data.SQLite.SQLiteParameter();
            param.ParameterName = "@PE_Afhandeling";
            param.DbType = global::System.Data.DbType.Int64;
            param.DbType = global::System.Data.DbType.Int64;
            param.SourceColumn = "PE_Afhandeling";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::System.Data.SQLite.SQLiteParameter();
            param.ParameterName = "@PE_Mutatiedatum";
            param.DbType = global::System.Data.DbType.DateTime;
            param.DbType = global::System.Data.DbType.DateTime;
            param.SourceColumn = "PE_Mutatiedatum";
            this._adapter.InsertCommand.Parameters.Add(param);
            this._adapter.UpdateCommand = new global::System.Data.SQLite.SQLiteCommand();
            this._adapter.UpdateCommand.Connection = this.Connection;
            this._adapter.UpdateCommand.CommandText = @"UPDATE [main].[sqlite_default_schema].[Programerror] SET [PE_ProgrammaId] = @PE_ProgrammaId, [PE_ErrorcodeId] = @PE_ErrorcodeId, [PE_PrgErrNr] = @PE_PrgErrNr, [PE_Omschrijving] = @PE_Omschrijving, [PE_Oplossing] = @PE_Oplossing, [PE_Afhandeling] = @PE_Afhandeling, [PE_Mutatiedatum] = @PE_Mutatiedatum WHERE (([PE_Id] = @Original_PE_Id) AND ([PE_ProgrammaId] = @Original_PE_ProgrammaId) AND ([PE_ErrorcodeId] = @Original_PE_ErrorcodeId) AND ([PE_PrgErrNr] = @Original_PE_PrgErrNr) AND ([PE_Omschrijving] = @Original_PE_Omschrijving) AND ([PE_Oplossing] = @Original_PE_Oplossing) AND ((@IsNull_PE_Afhandeling = 1 AND [PE_Afhandeling] IS NULL) OR ([PE_Afhandeling] = @Original_PE_Afhandeling)) AND ([PE_Mutatiedatum] = @Original_PE_Mutatiedatum))";
            this._adapter.UpdateCommand.CommandType = global::System.Data.CommandType.Text;
            param = new global::System.Data.SQLite.SQLiteParameter();
            param.ParameterName = "@PE_ProgrammaId";
            param.DbType = global::System.Data.DbType.Int64;
            param.DbType = global::System.Data.DbType.Int64;
            param.SourceColumn = "PE_ProgrammaId";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::System.Data.SQLite.SQLiteParameter();
            param.ParameterName = "@PE_ErrorcodeId";
            param.DbType = global::System.Data.DbType.Int64;
            param.DbType = global::System.Data.DbType.Int64;
            param.SourceColumn = "PE_ErrorcodeId";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::System.Data.SQLite.SQLiteParameter();
            param.ParameterName = "@PE_PrgErrNr";
            param.DbType = global::System.Data.DbType.AnsiString;
            param.DbType = global::System.Data.DbType.AnsiString;
            param.SourceColumn = "PE_PrgErrNr";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::System.Data.SQLite.SQLiteParameter();
            param.ParameterName = "@PE_Omschrijving";
            param.DbType = global::System.Data.DbType.AnsiString;
            param.DbType = global::System.Data.DbType.AnsiString;
            param.SourceColumn = "PE_Omschrijving";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::System.Data.SQLite.SQLiteParameter();
            param.ParameterName = "@PE_Oplossing";
            param.DbType = global::System.Data.DbType.AnsiString;
            param.DbType = global::System.Data.DbType.AnsiString;
            param.SourceColumn = "PE_Oplossing";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::System.Data.SQLite.SQLiteParameter();
            param.ParameterName = "@PE_Afhandeling";
            param.DbType = global::System.Data.DbType.Int64;
            param.DbType = global::System.Data.DbType.Int64;
            param.SourceColumn = "PE_Afhandeling";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::System.Data.SQLite.SQLiteParameter();
            param.ParameterName = "@PE_Mutatiedatum";
            param.DbType = global::System.Data.DbType.DateTime;
            param.DbType = global::System.Data.DbType.DateTime;
            param.SourceColumn = "PE_Mutatiedatum";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::System.Data.SQLite.SQLiteParameter();
            param.ParameterName = "@Original_PE_Id";
            param.DbType = global::System.Data.DbType.Int64;
            param.DbType = global::System.Data.DbType.Int64;
            param.SourceColumn = "PE_Id";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::System.Data.SQLite.SQLiteParameter();
            param.ParameterName = "@Original_PE_ProgrammaId";
            param.DbType = global::System.Data.DbType.Int64;
            param.DbType = global::System.Data.DbType.Int64;
            param.SourceColumn = "PE_ProgrammaId";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::System.Data.SQLite.SQLiteParameter();
            param.ParameterName = "@Original_PE_ErrorcodeId";
            param.DbType = global::System.Data.DbType.Int64;
            param.DbType = global::System.Data.DbType.Int64;
            param.SourceColumn = "PE_ErrorcodeId";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::System.Data.SQLite.SQLiteParameter();
            param.ParameterName = "@Original_PE_PrgErrNr";
            param.DbType = global::System.Data.DbType.AnsiString;
            param.DbType = global::System.Data.DbType.AnsiString;
            param.SourceColumn = "PE_PrgErrNr";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::System.Data.SQLite.SQLiteParameter();
            param.ParameterName = "@Original_PE_Omschrijving";
            param.DbType = global::System.Data.DbType.AnsiString;
            param.DbType = global::System.Data.DbType.AnsiString;
            param.SourceColumn = "PE_Omschrijving";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::System.Data.SQLite.SQLiteParameter();
            param.ParameterName = "@Original_PE_Oplossing";
            param.DbType = global::System.Data.DbType.AnsiString;
            param.DbType = global::System.Data.DbType.AnsiString;
            param.SourceColumn = "PE_Oplossing";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::System.Data.SQLite.SQLiteParameter();
            param.ParameterName = "@IsNull_PE_Afhandeling";
            param.DbType = global::System.Data.DbType.Int32;
            param.DbType = global::System.Data.DbType.Int32;
            param.SourceColumn = "PE_Afhandeling";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::System.Data.SQLite.SQLiteParameter();
            param.ParameterName = "@Original_PE_Afhandeling";
            param.DbType = global::System.Data.DbType.Int64;
            param.DbType = global::System.Data.DbType.Int64;
            param.SourceColumn = "PE_Afhandeling";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::System.Data.SQLite.SQLiteParameter();
            param.ParameterName = "@Original_PE_Mutatiedatum";
            param.DbType = global::System.Data.DbType.DateTime;
            param.DbType = global::System.Data.DbType.DateTime;
            param.SourceColumn = "PE_Mutatiedatum";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitConnection() {
            this._connection = new global::System.Data.SQLite.SQLiteConnection();
            this._connection.ConnectionString = global::Cmbap.Properties.Settings.Default.Cmbap_dataConnectionString;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitCommandCollection() {
            this._commandCollection = new global::System.Data.SQLite.SQLiteCommand[1];
            this._commandCollection[0] = new global::System.Data.SQLite.SQLiteCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "SELECT [PE_Id], [PE_ProgrammaId], [PE_ErrorcodeId], [PE_PrgErrNr], [PE_Omschrijvi" +
                "ng], [PE_Oplossing], [PE_Afhandeling], [PE_Mutatiedatum] FROM [Programerror]";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(_Cmbap_dataDataSet.ProgramerrorDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual _Cmbap_dataDataSet.ProgramerrorDataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            _Cmbap_dataDataSet.ProgramerrorDataTable dataTable = new _Cmbap_dataDataSet.ProgramerrorDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(_Cmbap_dataDataSet.ProgramerrorDataTable dataTable) {
            return this.Adapter.Update(dataTable);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(_Cmbap_dataDataSet dataSet) {
            return this.Adapter.Update(dataSet, "Programerror");
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow dataRow) {
            return this.Adapter.Update(new global::System.Data.DataRow[] {
                        dataRow});
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow[] dataRows) {
            return this.Adapter.Update(dataRows);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Delete, true)]
        public virtual int Delete(long Original_PE_Id, long Original_PE_ProgrammaId, long Original_PE_ErrorcodeId, string Original_PE_PrgErrNr, string Original_PE_Omschrijving, string Original_PE_Oplossing, global::System.Nullable<long> Original_PE_Afhandeling, System.DateTime Original_PE_Mutatiedatum) {
            this.Adapter.DeleteCommand.Parameters[0].Value = ((long)(Original_PE_Id));
            this.Adapter.DeleteCommand.Parameters[1].Value = ((long)(Original_PE_ProgrammaId));
            this.Adapter.DeleteCommand.Parameters[2].Value = ((long)(Original_PE_ErrorcodeId));
            if ((Original_PE_PrgErrNr == null)) {
                throw new global::System.ArgumentNullException("Original_PE_PrgErrNr");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[3].Value = ((string)(Original_PE_PrgErrNr));
            }
            if ((Original_PE_Omschrijving == null)) {
                throw new global::System.ArgumentNullException("Original_PE_Omschrijving");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[4].Value = ((string)(Original_PE_Omschrijving));
            }
            if ((Original_PE_Oplossing == null)) {
                throw new global::System.ArgumentNullException("Original_PE_Oplossing");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[5].Value = ((string)(Original_PE_Oplossing));
            }
            if ((Original_PE_Afhandeling.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[6].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[7].Value = ((long)(Original_PE_Afhandeling.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[6].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[7].Value = global::System.DBNull.Value;
            }
            this.Adapter.DeleteCommand.Parameters[8].Value = ((System.DateTime)(Original_PE_Mutatiedatum));
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.DeleteCommand.Connection.State;
            if (((this.Adapter.DeleteCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.DeleteCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.DeleteCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.DeleteCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Insert, true)]
        public virtual int Insert(long PE_ProgrammaId, long PE_ErrorcodeId, string PE_PrgErrNr, string PE_Omschrijving, string PE_Oplossing, global::System.Nullable<long> PE_Afhandeling, System.DateTime PE_Mutatiedatum) {
            this.Adapter.InsertCommand.Parameters[0].Value = ((long)(PE_ProgrammaId));
            this.Adapter.InsertCommand.Parameters[1].Value = ((long)(PE_ErrorcodeId));
            if ((PE_PrgErrNr == null)) {
                throw new global::System.ArgumentNullException("PE_PrgErrNr");
            }
            else {
                this.Adapter.InsertCommand.Parameters[2].Value = ((string)(PE_PrgErrNr));
            }
            if ((PE_Omschrijving == null)) {
                throw new global::System.ArgumentNullException("PE_Omschrijving");
            }
            else {
                this.Adapter.InsertCommand.Parameters[3].Value = ((string)(PE_Omschrijving));
            }
            if ((PE_Oplossing == null)) {
                throw new global::System.ArgumentNullException("PE_Oplossing");
            }
            else {
                this.Adapter.InsertCommand.Parameters[4].Value = ((string)(PE_Oplossing));
            }
            if ((PE_Afhandeling.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[5].Value = ((long)(PE_Afhandeling.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[5].Value = global::System.DBNull.Value;
            }
            this.Adapter.InsertCommand.Parameters[6].Value = ((System.DateTime)(PE_Mutatiedatum));
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.InsertCommand.Connection.State;
            if (((this.Adapter.InsertCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.InsertCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.InsertCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.InsertCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(long PE_ProgrammaId, long PE_ErrorcodeId, string PE_PrgErrNr, string PE_Omschrijving, string PE_Oplossing, global::System.Nullable<long> PE_Afhandeling, System.DateTime PE_Mutatiedatum, long Original_PE_Id, long Original_PE_ProgrammaId, long Original_PE_ErrorcodeId, string Original_PE_PrgErrNr, string Original_PE_Omschrijving, string Original_PE_Oplossing, global::System.Nullable<long> Original_PE_Afhandeling, System.DateTime Original_PE_Mutatiedatum) {
            this.Adapter.UpdateCommand.Parameters[0].Value = ((long)(PE_ProgrammaId));
            this.Adapter.UpdateCommand.Parameters[1].Value = ((long)(PE_ErrorcodeId));
            if ((PE_PrgErrNr == null)) {
                throw new global::System.ArgumentNullException("PE_PrgErrNr");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[2].Value = ((string)(PE_PrgErrNr));
            }
            if ((PE_Omschrijving == null)) {
                throw new global::System.ArgumentNullException("PE_Omschrijving");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[3].Value = ((string)(PE_Omschrijving));
            }
            if ((PE_Oplossing == null)) {
                throw new global::System.ArgumentNullException("PE_Oplossing");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[4].Value = ((string)(PE_Oplossing));
            }
            if ((PE_Afhandeling.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[5].Value = ((long)(PE_Afhandeling.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[5].Value = global::System.DBNull.Value;
            }
            this.Adapter.UpdateCommand.Parameters[6].Value = ((System.DateTime)(PE_Mutatiedatum));
            this.Adapter.UpdateCommand.Parameters[7].Value = ((long)(Original_PE_Id));
            this.Adapter.UpdateCommand.Parameters[8].Value = ((long)(Original_PE_ProgrammaId));
            this.Adapter.UpdateCommand.Parameters[9].Value = ((long)(Original_PE_ErrorcodeId));
            if ((Original_PE_PrgErrNr == null)) {
                throw new global::System.ArgumentNullException("Original_PE_PrgErrNr");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[10].Value = ((string)(Original_PE_PrgErrNr));
            }
            if ((Original_PE_Omschrijving == null)) {
                throw new global::System.ArgumentNullException("Original_PE_Omschrijving");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[11].Value = ((string)(Original_PE_Omschrijving));
            }
            if ((Original_PE_Oplossing == null)) {
                throw new global::System.ArgumentNullException("Original_PE_Oplossing");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[12].Value = ((string)(Original_PE_Oplossing));
            }
            if ((Original_PE_Afhandeling.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[13].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[14].Value = ((long)(Original_PE_Afhandeling.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[13].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[14].Value = global::System.DBNull.Value;
            }
            this.Adapter.UpdateCommand.Parameters[15].Value = ((System.DateTime)(Original_PE_Mutatiedatum));
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.UpdateCommand.Connection.State;
            if (((this.Adapter.UpdateCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.UpdateCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.UpdateCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.UpdateCommand.Connection.Close();
                }
            }
        }
    }
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class SaldostandTableAdapter : global::System.ComponentModel.Component {
        
        private global::System.Data.SQLite.SQLiteDataAdapter _adapter;
        
        private global::System.Data.SQLite.SQLiteConnection _connection;
        
        private global::System.Data.SQLite.SQLiteTransaction _transaction;
        
        private global::System.Data.SQLite.SQLiteCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public SaldostandTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected internal global::System.Data.SQLite.SQLiteDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal global::System.Data.SQLite.SQLiteConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::System.Data.SQLite.SQLiteCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal global::System.Data.SQLite.SQLiteTransaction Transaction {
            get {
                return this._transaction;
            }
            set {
                this._transaction = value;
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    this.CommandCollection[i].Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.DeleteCommand != null))) {
                    this.Adapter.DeleteCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.InsertCommand != null))) {
                    this.Adapter.InsertCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.UpdateCommand != null))) {
                    this.Adapter.UpdateCommand.Transaction = this._transaction;
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected global::System.Data.SQLite.SQLiteCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitAdapter() {
            this._adapter = new global::System.Data.SQLite.SQLiteDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "Saldostand";
            tableMapping.ColumnMappings.Add("Saldostand_Id", "Saldostand_Id");
            tableMapping.ColumnMappings.Add("Saldostand_StatusId", "Saldostand_StatusId");
            tableMapping.ColumnMappings.Add("Saldostand_DispStatus", "Saldostand_DispStatus");
            tableMapping.ColumnMappings.Add("Saldostand_JgegId", "Saldostand_JgegId");
            tableMapping.ColumnMappings.Add("Saldostand_BgnrId", "Saldostand_BgnrId");
            tableMapping.ColumnMappings.Add("Saldostand_Datum", "Saldostand_Datum");
            tableMapping.ColumnMappings.Add("Saldostand_Saldo", "Saldostand_Saldo");
            tableMapping.ColumnMappings.Add("Saldostand_Mutatiedatum", "Saldostand_Mutatiedatum");
            tableMapping.ColumnMappings.Add("Saldostand_Opmerking", "Saldostand_Opmerking");
            this._adapter.TableMappings.Add(tableMapping);
            this._adapter.DeleteCommand = new global::System.Data.SQLite.SQLiteCommand();
            this._adapter.DeleteCommand.Connection = this.Connection;
            this._adapter.DeleteCommand.CommandText = @"DELETE FROM [main].[sqlite_default_schema].[Saldostand] WHERE (([Saldostand_Id] = @Original_Saldostand_Id) AND ([Saldostand_StatusId] = @Original_Saldostand_StatusId) AND ((@IsNull_Saldostand_DispStatus = 1 AND [Saldostand_DispStatus] IS NULL) OR ([Saldostand_DispStatus] = @Original_Saldostand_DispStatus)) AND ([Saldostand_JgegId] = @Original_Saldostand_JgegId) AND ([Saldostand_BgnrId] = @Original_Saldostand_BgnrId) AND ([Saldostand_Datum] = @Original_Saldostand_Datum) AND ((@IsNull_Saldostand_Saldo = 1 AND [Saldostand_Saldo] IS NULL) OR ([Saldostand_Saldo] = @Original_Saldostand_Saldo)) AND ([Saldostand_Mutatiedatum] = @Original_Saldostand_Mutatiedatum) AND ((@IsNull_Saldostand_Opmerking = 1 AND [Saldostand_Opmerking] IS NULL) OR ([Saldostand_Opmerking] = @Original_Saldostand_Opmerking)))";
            this._adapter.DeleteCommand.CommandType = global::System.Data.CommandType.Text;
            global::System.Data.SQLite.SQLiteParameter param = new global::System.Data.SQLite.SQLiteParameter();
            param.ParameterName = "@Original_Saldostand_Id";
            param.DbType = global::System.Data.DbType.Int64;
            param.DbType = global::System.Data.DbType.Int64;
            param.SourceColumn = "Saldostand_Id";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::System.Data.SQLite.SQLiteParameter();
            param.ParameterName = "@Original_Saldostand_StatusId";
            param.DbType = global::System.Data.DbType.Int64;
            param.DbType = global::System.Data.DbType.Int64;
            param.SourceColumn = "Saldostand_StatusId";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::System.Data.SQLite.SQLiteParameter();
            param.ParameterName = "@IsNull_Saldostand_DispStatus";
            param.DbType = global::System.Data.DbType.Int32;
            param.DbType = global::System.Data.DbType.Int32;
            param.SourceColumn = "Saldostand_DispStatus";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::System.Data.SQLite.SQLiteParameter();
            param.ParameterName = "@Original_Saldostand_DispStatus";
            param.DbType = global::System.Data.DbType.AnsiString;
            param.DbType = global::System.Data.DbType.AnsiString;
            param.SourceColumn = "Saldostand_DispStatus";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::System.Data.SQLite.SQLiteParameter();
            param.ParameterName = "@Original_Saldostand_JgegId";
            param.DbType = global::System.Data.DbType.Int64;
            param.DbType = global::System.Data.DbType.Int64;
            param.SourceColumn = "Saldostand_JgegId";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::System.Data.SQLite.SQLiteParameter();
            param.ParameterName = "@Original_Saldostand_BgnrId";
            param.DbType = global::System.Data.DbType.Int64;
            param.DbType = global::System.Data.DbType.Int64;
            param.SourceColumn = "Saldostand_BgnrId";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::System.Data.SQLite.SQLiteParameter();
            param.ParameterName = "@Original_Saldostand_Datum";
            param.DbType = global::System.Data.DbType.DateTime;
            param.DbType = global::System.Data.DbType.DateTime;
            param.SourceColumn = "Saldostand_Datum";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::System.Data.SQLite.SQLiteParameter();
            param.ParameterName = "@IsNull_Saldostand_Saldo";
            param.DbType = global::System.Data.DbType.Int32;
            param.DbType = global::System.Data.DbType.Int32;
            param.SourceColumn = "Saldostand_Saldo";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::System.Data.SQLite.SQLiteParameter();
            param.ParameterName = "@Original_Saldostand_Saldo";
            param.DbType = global::System.Data.DbType.Decimal;
            param.DbType = global::System.Data.DbType.Decimal;
            param.SourceColumn = "Saldostand_Saldo";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::System.Data.SQLite.SQLiteParameter();
            param.ParameterName = "@Original_Saldostand_Mutatiedatum";
            param.DbType = global::System.Data.DbType.DateTime;
            param.DbType = global::System.Data.DbType.DateTime;
            param.SourceColumn = "Saldostand_Mutatiedatum";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::System.Data.SQLite.SQLiteParameter();
            param.ParameterName = "@IsNull_Saldostand_Opmerking";
            param.DbType = global::System.Data.DbType.Int32;
            param.DbType = global::System.Data.DbType.Int32;
            param.SourceColumn = "Saldostand_Opmerking";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::System.Data.SQLite.SQLiteParameter();
            param.ParameterName = "@Original_Saldostand_Opmerking";
            param.DbType = global::System.Data.DbType.AnsiString;
            param.DbType = global::System.Data.DbType.AnsiString;
            param.SourceColumn = "Saldostand_Opmerking";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            this._adapter.InsertCommand = new global::System.Data.SQLite.SQLiteCommand();
            this._adapter.InsertCommand.Connection = this.Connection;
            this._adapter.InsertCommand.CommandText = @"INSERT INTO [main].[sqlite_default_schema].[Saldostand] ([Saldostand_StatusId], [Saldostand_DispStatus], [Saldostand_JgegId], [Saldostand_BgnrId], [Saldostand_Datum], [Saldostand_Saldo], [Saldostand_Mutatiedatum], [Saldostand_Opmerking]) VALUES (@Saldostand_StatusId, @Saldostand_DispStatus, @Saldostand_JgegId, @Saldostand_BgnrId, @Saldostand_Datum, @Saldostand_Saldo, @Saldostand_Mutatiedatum, @Saldostand_Opmerking)";
            this._adapter.InsertCommand.CommandType = global::System.Data.CommandType.Text;
            param = new global::System.Data.SQLite.SQLiteParameter();
            param.ParameterName = "@Saldostand_StatusId";
            param.DbType = global::System.Data.DbType.Int64;
            param.DbType = global::System.Data.DbType.Int64;
            param.SourceColumn = "Saldostand_StatusId";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::System.Data.SQLite.SQLiteParameter();
            param.ParameterName = "@Saldostand_DispStatus";
            param.DbType = global::System.Data.DbType.AnsiString;
            param.DbType = global::System.Data.DbType.AnsiString;
            param.SourceColumn = "Saldostand_DispStatus";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::System.Data.SQLite.SQLiteParameter();
            param.ParameterName = "@Saldostand_JgegId";
            param.DbType = global::System.Data.DbType.Int64;
            param.DbType = global::System.Data.DbType.Int64;
            param.SourceColumn = "Saldostand_JgegId";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::System.Data.SQLite.SQLiteParameter();
            param.ParameterName = "@Saldostand_BgnrId";
            param.DbType = global::System.Data.DbType.Int64;
            param.DbType = global::System.Data.DbType.Int64;
            param.SourceColumn = "Saldostand_BgnrId";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::System.Data.SQLite.SQLiteParameter();
            param.ParameterName = "@Saldostand_Datum";
            param.DbType = global::System.Data.DbType.DateTime;
            param.DbType = global::System.Data.DbType.DateTime;
            param.SourceColumn = "Saldostand_Datum";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::System.Data.SQLite.SQLiteParameter();
            param.ParameterName = "@Saldostand_Saldo";
            param.DbType = global::System.Data.DbType.Decimal;
            param.DbType = global::System.Data.DbType.Decimal;
            param.SourceColumn = "Saldostand_Saldo";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::System.Data.SQLite.SQLiteParameter();
            param.ParameterName = "@Saldostand_Mutatiedatum";
            param.DbType = global::System.Data.DbType.DateTime;
            param.DbType = global::System.Data.DbType.DateTime;
            param.SourceColumn = "Saldostand_Mutatiedatum";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::System.Data.SQLite.SQLiteParameter();
            param.ParameterName = "@Saldostand_Opmerking";
            param.DbType = global::System.Data.DbType.AnsiString;
            param.DbType = global::System.Data.DbType.AnsiString;
            param.SourceColumn = "Saldostand_Opmerking";
            this._adapter.InsertCommand.Parameters.Add(param);
            this._adapter.UpdateCommand = new global::System.Data.SQLite.SQLiteCommand();
            this._adapter.UpdateCommand.Connection = this.Connection;
            this._adapter.UpdateCommand.CommandText = @"UPDATE [main].[sqlite_default_schema].[Saldostand] SET [Saldostand_StatusId] = @Saldostand_StatusId, [Saldostand_DispStatus] = @Saldostand_DispStatus, [Saldostand_JgegId] = @Saldostand_JgegId, [Saldostand_BgnrId] = @Saldostand_BgnrId, [Saldostand_Datum] = @Saldostand_Datum, [Saldostand_Saldo] = @Saldostand_Saldo, [Saldostand_Mutatiedatum] = @Saldostand_Mutatiedatum, [Saldostand_Opmerking] = @Saldostand_Opmerking WHERE (([Saldostand_Id] = @Original_Saldostand_Id) AND ([Saldostand_StatusId] = @Original_Saldostand_StatusId) AND ((@IsNull_Saldostand_DispStatus = 1 AND [Saldostand_DispStatus] IS NULL) OR ([Saldostand_DispStatus] = @Original_Saldostand_DispStatus)) AND ([Saldostand_JgegId] = @Original_Saldostand_JgegId) AND ([Saldostand_BgnrId] = @Original_Saldostand_BgnrId) AND ([Saldostand_Datum] = @Original_Saldostand_Datum) AND ((@IsNull_Saldostand_Saldo = 1 AND [Saldostand_Saldo] IS NULL) OR ([Saldostand_Saldo] = @Original_Saldostand_Saldo)) AND ([Saldostand_Mutatiedatum] = @Original_Saldostand_Mutatiedatum) AND ((@IsNull_Saldostand_Opmerking = 1 AND [Saldostand_Opmerking] IS NULL) OR ([Saldostand_Opmerking] = @Original_Saldostand_Opmerking)))";
            this._adapter.UpdateCommand.CommandType = global::System.Data.CommandType.Text;
            param = new global::System.Data.SQLite.SQLiteParameter();
            param.ParameterName = "@Saldostand_StatusId";
            param.DbType = global::System.Data.DbType.Int64;
            param.DbType = global::System.Data.DbType.Int64;
            param.SourceColumn = "Saldostand_StatusId";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::System.Data.SQLite.SQLiteParameter();
            param.ParameterName = "@Saldostand_DispStatus";
            param.DbType = global::System.Data.DbType.AnsiString;
            param.DbType = global::System.Data.DbType.AnsiString;
            param.SourceColumn = "Saldostand_DispStatus";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::System.Data.SQLite.SQLiteParameter();
            param.ParameterName = "@Saldostand_JgegId";
            param.DbType = global::System.Data.DbType.Int64;
            param.DbType = global::System.Data.DbType.Int64;
            param.SourceColumn = "Saldostand_JgegId";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::System.Data.SQLite.SQLiteParameter();
            param.ParameterName = "@Saldostand_BgnrId";
            param.DbType = global::System.Data.DbType.Int64;
            param.DbType = global::System.Data.DbType.Int64;
            param.SourceColumn = "Saldostand_BgnrId";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::System.Data.SQLite.SQLiteParameter();
            param.ParameterName = "@Saldostand_Datum";
            param.DbType = global::System.Data.DbType.DateTime;
            param.DbType = global::System.Data.DbType.DateTime;
            param.SourceColumn = "Saldostand_Datum";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::System.Data.SQLite.SQLiteParameter();
            param.ParameterName = "@Saldostand_Saldo";
            param.DbType = global::System.Data.DbType.Decimal;
            param.DbType = global::System.Data.DbType.Decimal;
            param.SourceColumn = "Saldostand_Saldo";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::System.Data.SQLite.SQLiteParameter();
            param.ParameterName = "@Saldostand_Mutatiedatum";
            param.DbType = global::System.Data.DbType.DateTime;
            param.DbType = global::System.Data.DbType.DateTime;
            param.SourceColumn = "Saldostand_Mutatiedatum";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::System.Data.SQLite.SQLiteParameter();
            param.ParameterName = "@Saldostand_Opmerking";
            param.DbType = global::System.Data.DbType.AnsiString;
            param.DbType = global::System.Data.DbType.AnsiString;
            param.SourceColumn = "Saldostand_Opmerking";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::System.Data.SQLite.SQLiteParameter();
            param.ParameterName = "@Original_Saldostand_Id";
            param.DbType = global::System.Data.DbType.Int64;
            param.DbType = global::System.Data.DbType.Int64;
            param.SourceColumn = "Saldostand_Id";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::System.Data.SQLite.SQLiteParameter();
            param.ParameterName = "@Original_Saldostand_StatusId";
            param.DbType = global::System.Data.DbType.Int64;
            param.DbType = global::System.Data.DbType.Int64;
            param.SourceColumn = "Saldostand_StatusId";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::System.Data.SQLite.SQLiteParameter();
            param.ParameterName = "@IsNull_Saldostand_DispStatus";
            param.DbType = global::System.Data.DbType.Int32;
            param.DbType = global::System.Data.DbType.Int32;
            param.SourceColumn = "Saldostand_DispStatus";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::System.Data.SQLite.SQLiteParameter();
            param.ParameterName = "@Original_Saldostand_DispStatus";
            param.DbType = global::System.Data.DbType.AnsiString;
            param.DbType = global::System.Data.DbType.AnsiString;
            param.SourceColumn = "Saldostand_DispStatus";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::System.Data.SQLite.SQLiteParameter();
            param.ParameterName = "@Original_Saldostand_JgegId";
            param.DbType = global::System.Data.DbType.Int64;
            param.DbType = global::System.Data.DbType.Int64;
            param.SourceColumn = "Saldostand_JgegId";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::System.Data.SQLite.SQLiteParameter();
            param.ParameterName = "@Original_Saldostand_BgnrId";
            param.DbType = global::System.Data.DbType.Int64;
            param.DbType = global::System.Data.DbType.Int64;
            param.SourceColumn = "Saldostand_BgnrId";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::System.Data.SQLite.SQLiteParameter();
            param.ParameterName = "@Original_Saldostand_Datum";
            param.DbType = global::System.Data.DbType.DateTime;
            param.DbType = global::System.Data.DbType.DateTime;
            param.SourceColumn = "Saldostand_Datum";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::System.Data.SQLite.SQLiteParameter();
            param.ParameterName = "@IsNull_Saldostand_Saldo";
            param.DbType = global::System.Data.DbType.Int32;
            param.DbType = global::System.Data.DbType.Int32;
            param.SourceColumn = "Saldostand_Saldo";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::System.Data.SQLite.SQLiteParameter();
            param.ParameterName = "@Original_Saldostand_Saldo";
            param.DbType = global::System.Data.DbType.Decimal;
            param.DbType = global::System.Data.DbType.Decimal;
            param.SourceColumn = "Saldostand_Saldo";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::System.Data.SQLite.SQLiteParameter();
            param.ParameterName = "@Original_Saldostand_Mutatiedatum";
            param.DbType = global::System.Data.DbType.DateTime;
            param.DbType = global::System.Data.DbType.DateTime;
            param.SourceColumn = "Saldostand_Mutatiedatum";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::System.Data.SQLite.SQLiteParameter();
            param.ParameterName = "@IsNull_Saldostand_Opmerking";
            param.DbType = global::System.Data.DbType.Int32;
            param.DbType = global::System.Data.DbType.Int32;
            param.SourceColumn = "Saldostand_Opmerking";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::System.Data.SQLite.SQLiteParameter();
            param.ParameterName = "@Original_Saldostand_Opmerking";
            param.DbType = global::System.Data.DbType.AnsiString;
            param.DbType = global::System.Data.DbType.AnsiString;
            param.SourceColumn = "Saldostand_Opmerking";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitConnection() {
            this._connection = new global::System.Data.SQLite.SQLiteConnection();
            this._connection.ConnectionString = global::Cmbap.Properties.Settings.Default.Cmbap_dataConnectionString;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitCommandCollection() {
            this._commandCollection = new global::System.Data.SQLite.SQLiteCommand[1];
            this._commandCollection[0] = new global::System.Data.SQLite.SQLiteCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "SELECT [Saldostand_Id], [Saldostand_StatusId], [Saldostand_DispStatus], [Saldosta" +
                "nd_JgegId], [Saldostand_BgnrId], [Saldostand_Datum], [Saldostand_Saldo], [Saldos" +
                "tand_Mutatiedatum], [Saldostand_Opmerking] FROM [Saldostand]";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(_Cmbap_dataDataSet.SaldostandDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual _Cmbap_dataDataSet.SaldostandDataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            _Cmbap_dataDataSet.SaldostandDataTable dataTable = new _Cmbap_dataDataSet.SaldostandDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(_Cmbap_dataDataSet.SaldostandDataTable dataTable) {
            return this.Adapter.Update(dataTable);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(_Cmbap_dataDataSet dataSet) {
            return this.Adapter.Update(dataSet, "Saldostand");
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow dataRow) {
            return this.Adapter.Update(new global::System.Data.DataRow[] {
                        dataRow});
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow[] dataRows) {
            return this.Adapter.Update(dataRows);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Delete, true)]
        public virtual int Delete(long Original_Saldostand_Id, long Original_Saldostand_StatusId, string Original_Saldostand_DispStatus, long Original_Saldostand_JgegId, long Original_Saldostand_BgnrId, System.DateTime Original_Saldostand_Datum, global::System.Nullable<decimal> Original_Saldostand_Saldo, System.DateTime Original_Saldostand_Mutatiedatum, string Original_Saldostand_Opmerking) {
            this.Adapter.DeleteCommand.Parameters[0].Value = ((long)(Original_Saldostand_Id));
            this.Adapter.DeleteCommand.Parameters[1].Value = ((long)(Original_Saldostand_StatusId));
            if ((Original_Saldostand_DispStatus == null)) {
                this.Adapter.DeleteCommand.Parameters[2].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[3].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[2].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[3].Value = ((string)(Original_Saldostand_DispStatus));
            }
            this.Adapter.DeleteCommand.Parameters[4].Value = ((long)(Original_Saldostand_JgegId));
            this.Adapter.DeleteCommand.Parameters[5].Value = ((long)(Original_Saldostand_BgnrId));
            this.Adapter.DeleteCommand.Parameters[6].Value = ((System.DateTime)(Original_Saldostand_Datum));
            if ((Original_Saldostand_Saldo.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[7].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[8].Value = ((decimal)(Original_Saldostand_Saldo.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[7].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[8].Value = global::System.DBNull.Value;
            }
            this.Adapter.DeleteCommand.Parameters[9].Value = ((System.DateTime)(Original_Saldostand_Mutatiedatum));
            if ((Original_Saldostand_Opmerking == null)) {
                this.Adapter.DeleteCommand.Parameters[10].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[11].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[10].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[11].Value = ((string)(Original_Saldostand_Opmerking));
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.DeleteCommand.Connection.State;
            if (((this.Adapter.DeleteCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.DeleteCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.DeleteCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.DeleteCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Insert, true)]
        public virtual int Insert(long Saldostand_StatusId, string Saldostand_DispStatus, long Saldostand_JgegId, long Saldostand_BgnrId, System.DateTime Saldostand_Datum, global::System.Nullable<decimal> Saldostand_Saldo, System.DateTime Saldostand_Mutatiedatum, string Saldostand_Opmerking) {
            this.Adapter.InsertCommand.Parameters[0].Value = ((long)(Saldostand_StatusId));
            if ((Saldostand_DispStatus == null)) {
                this.Adapter.InsertCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[1].Value = ((string)(Saldostand_DispStatus));
            }
            this.Adapter.InsertCommand.Parameters[2].Value = ((long)(Saldostand_JgegId));
            this.Adapter.InsertCommand.Parameters[3].Value = ((long)(Saldostand_BgnrId));
            this.Adapter.InsertCommand.Parameters[4].Value = ((System.DateTime)(Saldostand_Datum));
            if ((Saldostand_Saldo.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[5].Value = ((decimal)(Saldostand_Saldo.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[5].Value = global::System.DBNull.Value;
            }
            this.Adapter.InsertCommand.Parameters[6].Value = ((System.DateTime)(Saldostand_Mutatiedatum));
            if ((Saldostand_Opmerking == null)) {
                this.Adapter.InsertCommand.Parameters[7].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[7].Value = ((string)(Saldostand_Opmerking));
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.InsertCommand.Connection.State;
            if (((this.Adapter.InsertCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.InsertCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.InsertCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.InsertCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(
                    long Saldostand_StatusId, 
                    string Saldostand_DispStatus, 
                    long Saldostand_JgegId, 
                    long Saldostand_BgnrId, 
                    System.DateTime Saldostand_Datum, 
                    global::System.Nullable<decimal> Saldostand_Saldo, 
                    System.DateTime Saldostand_Mutatiedatum, 
                    string Saldostand_Opmerking, 
                    long Original_Saldostand_Id, 
                    long Original_Saldostand_StatusId, 
                    string Original_Saldostand_DispStatus, 
                    long Original_Saldostand_JgegId, 
                    long Original_Saldostand_BgnrId, 
                    System.DateTime Original_Saldostand_Datum, 
                    global::System.Nullable<decimal> Original_Saldostand_Saldo, 
                    System.DateTime Original_Saldostand_Mutatiedatum, 
                    string Original_Saldostand_Opmerking) {
            this.Adapter.UpdateCommand.Parameters[0].Value = ((long)(Saldostand_StatusId));
            if ((Saldostand_DispStatus == null)) {
                this.Adapter.UpdateCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[1].Value = ((string)(Saldostand_DispStatus));
            }
            this.Adapter.UpdateCommand.Parameters[2].Value = ((long)(Saldostand_JgegId));
            this.Adapter.UpdateCommand.Parameters[3].Value = ((long)(Saldostand_BgnrId));
            this.Adapter.UpdateCommand.Parameters[4].Value = ((System.DateTime)(Saldostand_Datum));
            if ((Saldostand_Saldo.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[5].Value = ((decimal)(Saldostand_Saldo.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[5].Value = global::System.DBNull.Value;
            }
            this.Adapter.UpdateCommand.Parameters[6].Value = ((System.DateTime)(Saldostand_Mutatiedatum));
            if ((Saldostand_Opmerking == null)) {
                this.Adapter.UpdateCommand.Parameters[7].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[7].Value = ((string)(Saldostand_Opmerking));
            }
            this.Adapter.UpdateCommand.Parameters[8].Value = ((long)(Original_Saldostand_Id));
            this.Adapter.UpdateCommand.Parameters[9].Value = ((long)(Original_Saldostand_StatusId));
            if ((Original_Saldostand_DispStatus == null)) {
                this.Adapter.UpdateCommand.Parameters[10].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[11].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[10].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[11].Value = ((string)(Original_Saldostand_DispStatus));
            }
            this.Adapter.UpdateCommand.Parameters[12].Value = ((long)(Original_Saldostand_JgegId));
            this.Adapter.UpdateCommand.Parameters[13].Value = ((long)(Original_Saldostand_BgnrId));
            this.Adapter.UpdateCommand.Parameters[14].Value = ((System.DateTime)(Original_Saldostand_Datum));
            if ((Original_Saldostand_Saldo.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[15].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[16].Value = ((decimal)(Original_Saldostand_Saldo.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[15].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[16].Value = global::System.DBNull.Value;
            }
            this.Adapter.UpdateCommand.Parameters[17].Value = ((System.DateTime)(Original_Saldostand_Mutatiedatum));
            if ((Original_Saldostand_Opmerking == null)) {
                this.Adapter.UpdateCommand.Parameters[18].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[19].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[18].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[19].Value = ((string)(Original_Saldostand_Opmerking));
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.UpdateCommand.Connection.State;
            if (((this.Adapter.UpdateCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.UpdateCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.UpdateCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.UpdateCommand.Connection.Close();
                }
            }
        }
    }
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class StatusTableAdapter : global::System.ComponentModel.Component {
        
        private global::System.Data.SQLite.SQLiteDataAdapter _adapter;
        
        private global::System.Data.SQLite.SQLiteConnection _connection;
        
        private global::System.Data.SQLite.SQLiteTransaction _transaction;
        
        private global::System.Data.SQLite.SQLiteCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public StatusTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected internal global::System.Data.SQLite.SQLiteDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal global::System.Data.SQLite.SQLiteConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::System.Data.SQLite.SQLiteCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal global::System.Data.SQLite.SQLiteTransaction Transaction {
            get {
                return this._transaction;
            }
            set {
                this._transaction = value;
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    this.CommandCollection[i].Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.DeleteCommand != null))) {
                    this.Adapter.DeleteCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.InsertCommand != null))) {
                    this.Adapter.InsertCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.UpdateCommand != null))) {
                    this.Adapter.UpdateCommand.Transaction = this._transaction;
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected global::System.Data.SQLite.SQLiteCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitAdapter() {
            this._adapter = new global::System.Data.SQLite.SQLiteDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "Status";
            tableMapping.ColumnMappings.Add("StatusId", "StatusId");
            tableMapping.ColumnMappings.Add("Status_HoofdgroepitemJN", "Status_HoofdgroepitemJN");
            tableMapping.ColumnMappings.Add("Status_Groep", "Status_Groep");
            tableMapping.ColumnMappings.Add("Status_Nr", "Status_Nr");
            tableMapping.ColumnMappings.Add("Status_Code", "Status_Code");
            tableMapping.ColumnMappings.Add("Status_Kort", "Status_Kort");
            tableMapping.ColumnMappings.Add("Status_Lang", "Status_Lang");
            tableMapping.ColumnMappings.Add("Status_Mutatiedatum", "Status_Mutatiedatum");
            tableMapping.ColumnMappings.Add("Status_Opmerking", "Status_Opmerking");
            this._adapter.TableMappings.Add(tableMapping);
            this._adapter.InsertCommand = new global::System.Data.SQLite.SQLiteCommand();
            this._adapter.InsertCommand.Connection = this.Connection;
            this._adapter.InsertCommand.CommandText = @"INSERT INTO [main].[sqlite_default_schema].[Status] ([StatusId], [Status_HoofdgroepitemJN], [Status_Groep], [Status_Nr], [Status_Code], [Status_Kort], [Status_Lang], [Status_Mutatiedatum], [Status_Opmerking]) VALUES (@StatusId, @Status_HoofdgroepitemJN, @Status_Groep, @Status_Nr, @Status_Code, @Status_Kort, @Status_Lang, @Status_Mutatiedatum, @Status_Opmerking)";
            this._adapter.InsertCommand.CommandType = global::System.Data.CommandType.Text;
            global::System.Data.SQLite.SQLiteParameter param = new global::System.Data.SQLite.SQLiteParameter();
            param.ParameterName = "@StatusId";
            param.DbType = global::System.Data.DbType.Int64;
            param.DbType = global::System.Data.DbType.Int64;
            param.SourceColumn = "StatusId";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::System.Data.SQLite.SQLiteParameter();
            param.ParameterName = "@Status_HoofdgroepitemJN";
            param.DbType = global::System.Data.DbType.Int64;
            param.DbType = global::System.Data.DbType.Int64;
            param.SourceColumn = "Status_HoofdgroepitemJN";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::System.Data.SQLite.SQLiteParameter();
            param.ParameterName = "@Status_Groep";
            param.DbType = global::System.Data.DbType.Int64;
            param.DbType = global::System.Data.DbType.Int64;
            param.SourceColumn = "Status_Groep";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::System.Data.SQLite.SQLiteParameter();
            param.ParameterName = "@Status_Nr";
            param.DbType = global::System.Data.DbType.Int64;
            param.DbType = global::System.Data.DbType.Int64;
            param.SourceColumn = "Status_Nr";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::System.Data.SQLite.SQLiteParameter();
            param.ParameterName = "@Status_Code";
            param.DbType = global::System.Data.DbType.Int64;
            param.DbType = global::System.Data.DbType.Int64;
            param.SourceColumn = "Status_Code";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::System.Data.SQLite.SQLiteParameter();
            param.ParameterName = "@Status_Kort";
            param.DbType = global::System.Data.DbType.AnsiString;
            param.DbType = global::System.Data.DbType.AnsiString;
            param.SourceColumn = "Status_Kort";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::System.Data.SQLite.SQLiteParameter();
            param.ParameterName = "@Status_Lang";
            param.DbType = global::System.Data.DbType.AnsiString;
            param.DbType = global::System.Data.DbType.AnsiString;
            param.SourceColumn = "Status_Lang";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::System.Data.SQLite.SQLiteParameter();
            param.ParameterName = "@Status_Mutatiedatum";
            param.DbType = global::System.Data.DbType.DateTime;
            param.DbType = global::System.Data.DbType.DateTime;
            param.SourceColumn = "Status_Mutatiedatum";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::System.Data.SQLite.SQLiteParameter();
            param.ParameterName = "@Status_Opmerking";
            param.DbType = global::System.Data.DbType.AnsiString;
            param.DbType = global::System.Data.DbType.AnsiString;
            param.SourceColumn = "Status_Opmerking";
            this._adapter.InsertCommand.Parameters.Add(param);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitConnection() {
            this._connection = new global::System.Data.SQLite.SQLiteConnection();
            this._connection.ConnectionString = global::Cmbap.Properties.Settings.Default.Cmbap_dataConnectionString;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitCommandCollection() {
            this._commandCollection = new global::System.Data.SQLite.SQLiteCommand[1];
            this._commandCollection[0] = new global::System.Data.SQLite.SQLiteCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "SELECT [StatusId], [Status_HoofdgroepitemJN], [Status_Groep], [Status_Nr], [Statu" +
                "s_Code], [Status_Kort], [Status_Lang], [Status_Mutatiedatum], [Status_Opmerking]" +
                " FROM [Status]";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(_Cmbap_dataDataSet.StatusDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual _Cmbap_dataDataSet.StatusDataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            _Cmbap_dataDataSet.StatusDataTable dataTable = new _Cmbap_dataDataSet.StatusDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(_Cmbap_dataDataSet.StatusDataTable dataTable) {
            return this.Adapter.Update(dataTable);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(_Cmbap_dataDataSet dataSet) {
            return this.Adapter.Update(dataSet, "Status");
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow dataRow) {
            return this.Adapter.Update(new global::System.Data.DataRow[] {
                        dataRow});
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow[] dataRows) {
            return this.Adapter.Update(dataRows);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Insert, true)]
        public virtual int Insert(long StatusId, long Status_HoofdgroepitemJN, long Status_Groep, long Status_Nr, long Status_Code, string Status_Kort, string Status_Lang, global::System.Nullable<global::System.DateTime> Status_Mutatiedatum, string Status_Opmerking) {
            this.Adapter.InsertCommand.Parameters[0].Value = ((long)(StatusId));
            this.Adapter.InsertCommand.Parameters[1].Value = ((long)(Status_HoofdgroepitemJN));
            this.Adapter.InsertCommand.Parameters[2].Value = ((long)(Status_Groep));
            this.Adapter.InsertCommand.Parameters[3].Value = ((long)(Status_Nr));
            this.Adapter.InsertCommand.Parameters[4].Value = ((long)(Status_Code));
            if ((Status_Kort == null)) {
                throw new global::System.ArgumentNullException("Status_Kort");
            }
            else {
                this.Adapter.InsertCommand.Parameters[5].Value = ((string)(Status_Kort));
            }
            if ((Status_Lang == null)) {
                throw new global::System.ArgumentNullException("Status_Lang");
            }
            else {
                this.Adapter.InsertCommand.Parameters[6].Value = ((string)(Status_Lang));
            }
            if ((Status_Mutatiedatum.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[7].Value = ((System.DateTime)(Status_Mutatiedatum.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[7].Value = global::System.DBNull.Value;
            }
            if ((Status_Opmerking == null)) {
                this.Adapter.InsertCommand.Parameters[8].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[8].Value = ((string)(Status_Opmerking));
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.InsertCommand.Connection.State;
            if (((this.Adapter.InsertCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.InsertCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.InsertCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.InsertCommand.Connection.Close();
                }
            }
        }
    }
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class SubcategorieTableAdapter : global::System.ComponentModel.Component {
        
        private global::System.Data.SQLite.SQLiteDataAdapter _adapter;
        
        private global::System.Data.SQLite.SQLiteConnection _connection;
        
        private global::System.Data.SQLite.SQLiteTransaction _transaction;
        
        private global::System.Data.SQLite.SQLiteCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public SubcategorieTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected internal global::System.Data.SQLite.SQLiteDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal global::System.Data.SQLite.SQLiteConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::System.Data.SQLite.SQLiteCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal global::System.Data.SQLite.SQLiteTransaction Transaction {
            get {
                return this._transaction;
            }
            set {
                this._transaction = value;
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    this.CommandCollection[i].Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.DeleteCommand != null))) {
                    this.Adapter.DeleteCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.InsertCommand != null))) {
                    this.Adapter.InsertCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.UpdateCommand != null))) {
                    this.Adapter.UpdateCommand.Transaction = this._transaction;
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected global::System.Data.SQLite.SQLiteCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitAdapter() {
            this._adapter = new global::System.Data.SQLite.SQLiteDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "Subcategorie";
            tableMapping.ColumnMappings.Add("Scat_Id", "Scat_Id");
            tableMapping.ColumnMappings.Add("Scat_StatusId", "Scat_StatusId");
            tableMapping.ColumnMappings.Add("Scat_DispStatus", "Scat_DispStatus");
            tableMapping.ColumnMappings.Add("Scat_kort", "Scat_kort");
            tableMapping.ColumnMappings.Add("Scat_lang", "Scat_lang");
            tableMapping.ColumnMappings.Add("Scat_HcatId", "Scat_HcatId");
            tableMapping.ColumnMappings.Add("Scat_DispHcat", "Scat_DispHcat");
            tableMapping.ColumnMappings.Add("Scat_Code", "Scat_Code");
            tableMapping.ColumnMappings.Add("Scat_WijzigentoegestaanJN", "Scat_WijzigentoegestaanJN");
            tableMapping.ColumnMappings.Add("Scat_Mutatiedatum", "Scat_Mutatiedatum");
            tableMapping.ColumnMappings.Add("Scat_Opmerking", "Scat_Opmerking");
            this._adapter.TableMappings.Add(tableMapping);
            this._adapter.DeleteCommand = new global::System.Data.SQLite.SQLiteCommand();
            this._adapter.DeleteCommand.Connection = this.Connection;
            this._adapter.DeleteCommand.CommandText = @"DELETE FROM [main].[sqlite_default_schema].[Subcategorie] WHERE (([Scat_Id] = @Original_Scat_Id) AND ((@IsNull_Scat_StatusId = 1 AND [Scat_StatusId] IS NULL) OR ([Scat_StatusId] = @Original_Scat_StatusId)) AND ((@IsNull_Scat_DispStatus = 1 AND [Scat_DispStatus] IS NULL) OR ([Scat_DispStatus] = @Original_Scat_DispStatus)) AND ([Scat_kort] = @Original_Scat_kort) AND ([Scat_lang] = @Original_Scat_lang) AND ([Scat_HcatId] = @Original_Scat_HcatId) AND ((@IsNull_Scat_DispHcat = 1 AND [Scat_DispHcat] IS NULL) OR ([Scat_DispHcat] = @Original_Scat_DispHcat)) AND ((@IsNull_Scat_Code = 1 AND [Scat_Code] IS NULL) OR ([Scat_Code] = @Original_Scat_Code)) AND ([Scat_WijzigentoegestaanJN] = @Original_Scat_WijzigentoegestaanJN) AND ([Scat_Mutatiedatum] = @Original_Scat_Mutatiedatum) AND ((@IsNull_Scat_Opmerking = 1 AND [Scat_Opmerking] IS NULL) OR ([Scat_Opmerking] = @Original_Scat_Opmerking)))";
            this._adapter.DeleteCommand.CommandType = global::System.Data.CommandType.Text;
            global::System.Data.SQLite.SQLiteParameter param = new global::System.Data.SQLite.SQLiteParameter();
            param.ParameterName = "@Original_Scat_Id";
            param.DbType = global::System.Data.DbType.Int64;
            param.DbType = global::System.Data.DbType.Int64;
            param.SourceColumn = "Scat_Id";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::System.Data.SQLite.SQLiteParameter();
            param.ParameterName = "@IsNull_Scat_StatusId";
            param.DbType = global::System.Data.DbType.Int32;
            param.DbType = global::System.Data.DbType.Int32;
            param.SourceColumn = "Scat_StatusId";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::System.Data.SQLite.SQLiteParameter();
            param.ParameterName = "@Original_Scat_StatusId";
            param.DbType = global::System.Data.DbType.Int64;
            param.DbType = global::System.Data.DbType.Int64;
            param.SourceColumn = "Scat_StatusId";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::System.Data.SQLite.SQLiteParameter();
            param.ParameterName = "@IsNull_Scat_DispStatus";
            param.DbType = global::System.Data.DbType.Int32;
            param.DbType = global::System.Data.DbType.Int32;
            param.SourceColumn = "Scat_DispStatus";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::System.Data.SQLite.SQLiteParameter();
            param.ParameterName = "@Original_Scat_DispStatus";
            param.DbType = global::System.Data.DbType.AnsiString;
            param.DbType = global::System.Data.DbType.AnsiString;
            param.SourceColumn = "Scat_DispStatus";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::System.Data.SQLite.SQLiteParameter();
            param.ParameterName = "@Original_Scat_kort";
            param.DbType = global::System.Data.DbType.AnsiString;
            param.DbType = global::System.Data.DbType.AnsiString;
            param.SourceColumn = "Scat_kort";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::System.Data.SQLite.SQLiteParameter();
            param.ParameterName = "@Original_Scat_lang";
            param.DbType = global::System.Data.DbType.AnsiString;
            param.DbType = global::System.Data.DbType.AnsiString;
            param.SourceColumn = "Scat_lang";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::System.Data.SQLite.SQLiteParameter();
            param.ParameterName = "@Original_Scat_HcatId";
            param.DbType = global::System.Data.DbType.Int64;
            param.DbType = global::System.Data.DbType.Int64;
            param.SourceColumn = "Scat_HcatId";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::System.Data.SQLite.SQLiteParameter();
            param.ParameterName = "@IsNull_Scat_DispHcat";
            param.DbType = global::System.Data.DbType.Int32;
            param.DbType = global::System.Data.DbType.Int32;
            param.SourceColumn = "Scat_DispHcat";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::System.Data.SQLite.SQLiteParameter();
            param.ParameterName = "@Original_Scat_DispHcat";
            param.DbType = global::System.Data.DbType.AnsiString;
            param.DbType = global::System.Data.DbType.AnsiString;
            param.SourceColumn = "Scat_DispHcat";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::System.Data.SQLite.SQLiteParameter();
            param.ParameterName = "@IsNull_Scat_Code";
            param.DbType = global::System.Data.DbType.Int32;
            param.DbType = global::System.Data.DbType.Int32;
            param.SourceColumn = "Scat_Code";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::System.Data.SQLite.SQLiteParameter();
            param.ParameterName = "@Original_Scat_Code";
            param.DbType = global::System.Data.DbType.AnsiString;
            param.DbType = global::System.Data.DbType.AnsiString;
            param.SourceColumn = "Scat_Code";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::System.Data.SQLite.SQLiteParameter();
            param.ParameterName = "@Original_Scat_WijzigentoegestaanJN";
            param.DbType = global::System.Data.DbType.Int64;
            param.DbType = global::System.Data.DbType.Int64;
            param.SourceColumn = "Scat_WijzigentoegestaanJN";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::System.Data.SQLite.SQLiteParameter();
            param.ParameterName = "@Original_Scat_Mutatiedatum";
            param.DbType = global::System.Data.DbType.DateTime;
            param.DbType = global::System.Data.DbType.DateTime;
            param.SourceColumn = "Scat_Mutatiedatum";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::System.Data.SQLite.SQLiteParameter();
            param.ParameterName = "@IsNull_Scat_Opmerking";
            param.DbType = global::System.Data.DbType.Int32;
            param.DbType = global::System.Data.DbType.Int32;
            param.SourceColumn = "Scat_Opmerking";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::System.Data.SQLite.SQLiteParameter();
            param.ParameterName = "@Original_Scat_Opmerking";
            param.DbType = global::System.Data.DbType.AnsiString;
            param.DbType = global::System.Data.DbType.AnsiString;
            param.SourceColumn = "Scat_Opmerking";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            this._adapter.InsertCommand = new global::System.Data.SQLite.SQLiteCommand();
            this._adapter.InsertCommand.Connection = this.Connection;
            this._adapter.InsertCommand.CommandText = @"INSERT INTO [main].[sqlite_default_schema].[Subcategorie] ([Scat_StatusId], [Scat_DispStatus], [Scat_kort], [Scat_lang], [Scat_HcatId], [Scat_DispHcat], [Scat_Code], [Scat_WijzigentoegestaanJN], [Scat_Mutatiedatum], [Scat_Opmerking]) VALUES (@Scat_StatusId, @Scat_DispStatus, @Scat_kort, @Scat_lang, @Scat_HcatId, @Scat_DispHcat, @Scat_Code, @Scat_WijzigentoegestaanJN, @Scat_Mutatiedatum, @Scat_Opmerking)";
            this._adapter.InsertCommand.CommandType = global::System.Data.CommandType.Text;
            param = new global::System.Data.SQLite.SQLiteParameter();
            param.ParameterName = "@Scat_StatusId";
            param.DbType = global::System.Data.DbType.Int64;
            param.DbType = global::System.Data.DbType.Int64;
            param.SourceColumn = "Scat_StatusId";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::System.Data.SQLite.SQLiteParameter();
            param.ParameterName = "@Scat_DispStatus";
            param.DbType = global::System.Data.DbType.AnsiString;
            param.DbType = global::System.Data.DbType.AnsiString;
            param.SourceColumn = "Scat_DispStatus";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::System.Data.SQLite.SQLiteParameter();
            param.ParameterName = "@Scat_kort";
            param.DbType = global::System.Data.DbType.AnsiString;
            param.DbType = global::System.Data.DbType.AnsiString;
            param.SourceColumn = "Scat_kort";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::System.Data.SQLite.SQLiteParameter();
            param.ParameterName = "@Scat_lang";
            param.DbType = global::System.Data.DbType.AnsiString;
            param.DbType = global::System.Data.DbType.AnsiString;
            param.SourceColumn = "Scat_lang";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::System.Data.SQLite.SQLiteParameter();
            param.ParameterName = "@Scat_HcatId";
            param.DbType = global::System.Data.DbType.Int64;
            param.DbType = global::System.Data.DbType.Int64;
            param.SourceColumn = "Scat_HcatId";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::System.Data.SQLite.SQLiteParameter();
            param.ParameterName = "@Scat_DispHcat";
            param.DbType = global::System.Data.DbType.AnsiString;
            param.DbType = global::System.Data.DbType.AnsiString;
            param.SourceColumn = "Scat_DispHcat";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::System.Data.SQLite.SQLiteParameter();
            param.ParameterName = "@Scat_Code";
            param.DbType = global::System.Data.DbType.AnsiString;
            param.DbType = global::System.Data.DbType.AnsiString;
            param.SourceColumn = "Scat_Code";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::System.Data.SQLite.SQLiteParameter();
            param.ParameterName = "@Scat_WijzigentoegestaanJN";
            param.DbType = global::System.Data.DbType.Int64;
            param.DbType = global::System.Data.DbType.Int64;
            param.SourceColumn = "Scat_WijzigentoegestaanJN";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::System.Data.SQLite.SQLiteParameter();
            param.ParameterName = "@Scat_Mutatiedatum";
            param.DbType = global::System.Data.DbType.DateTime;
            param.DbType = global::System.Data.DbType.DateTime;
            param.SourceColumn = "Scat_Mutatiedatum";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::System.Data.SQLite.SQLiteParameter();
            param.ParameterName = "@Scat_Opmerking";
            param.DbType = global::System.Data.DbType.AnsiString;
            param.DbType = global::System.Data.DbType.AnsiString;
            param.SourceColumn = "Scat_Opmerking";
            this._adapter.InsertCommand.Parameters.Add(param);
            this._adapter.UpdateCommand = new global::System.Data.SQLite.SQLiteCommand();
            this._adapter.UpdateCommand.Connection = this.Connection;
            this._adapter.UpdateCommand.CommandText = @"UPDATE [main].[sqlite_default_schema].[Subcategorie] SET [Scat_StatusId] = @Scat_StatusId, [Scat_DispStatus] = @Scat_DispStatus, [Scat_kort] = @Scat_kort, [Scat_lang] = @Scat_lang, [Scat_HcatId] = @Scat_HcatId, [Scat_DispHcat] = @Scat_DispHcat, [Scat_Code] = @Scat_Code, [Scat_WijzigentoegestaanJN] = @Scat_WijzigentoegestaanJN, [Scat_Mutatiedatum] = @Scat_Mutatiedatum, [Scat_Opmerking] = @Scat_Opmerking WHERE (([Scat_Id] = @Original_Scat_Id) AND ((@IsNull_Scat_StatusId = 1 AND [Scat_StatusId] IS NULL) OR ([Scat_StatusId] = @Original_Scat_StatusId)) AND ((@IsNull_Scat_DispStatus = 1 AND [Scat_DispStatus] IS NULL) OR ([Scat_DispStatus] = @Original_Scat_DispStatus)) AND ([Scat_kort] = @Original_Scat_kort) AND ([Scat_lang] = @Original_Scat_lang) AND ([Scat_HcatId] = @Original_Scat_HcatId) AND ((@IsNull_Scat_DispHcat = 1 AND [Scat_DispHcat] IS NULL) OR ([Scat_DispHcat] = @Original_Scat_DispHcat)) AND ((@IsNull_Scat_Code = 1 AND [Scat_Code] IS NULL) OR ([Scat_Code] = @Original_Scat_Code)) AND ([Scat_WijzigentoegestaanJN] = @Original_Scat_WijzigentoegestaanJN) AND ([Scat_Mutatiedatum] = @Original_Scat_Mutatiedatum) AND ((@IsNull_Scat_Opmerking = 1 AND [Scat_Opmerking] IS NULL) OR ([Scat_Opmerking] = @Original_Scat_Opmerking)))";
            this._adapter.UpdateCommand.CommandType = global::System.Data.CommandType.Text;
            param = new global::System.Data.SQLite.SQLiteParameter();
            param.ParameterName = "@Scat_StatusId";
            param.DbType = global::System.Data.DbType.Int64;
            param.DbType = global::System.Data.DbType.Int64;
            param.SourceColumn = "Scat_StatusId";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::System.Data.SQLite.SQLiteParameter();
            param.ParameterName = "@Scat_DispStatus";
            param.DbType = global::System.Data.DbType.AnsiString;
            param.DbType = global::System.Data.DbType.AnsiString;
            param.SourceColumn = "Scat_DispStatus";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::System.Data.SQLite.SQLiteParameter();
            param.ParameterName = "@Scat_kort";
            param.DbType = global::System.Data.DbType.AnsiString;
            param.DbType = global::System.Data.DbType.AnsiString;
            param.SourceColumn = "Scat_kort";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::System.Data.SQLite.SQLiteParameter();
            param.ParameterName = "@Scat_lang";
            param.DbType = global::System.Data.DbType.AnsiString;
            param.DbType = global::System.Data.DbType.AnsiString;
            param.SourceColumn = "Scat_lang";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::System.Data.SQLite.SQLiteParameter();
            param.ParameterName = "@Scat_HcatId";
            param.DbType = global::System.Data.DbType.Int64;
            param.DbType = global::System.Data.DbType.Int64;
            param.SourceColumn = "Scat_HcatId";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::System.Data.SQLite.SQLiteParameter();
            param.ParameterName = "@Scat_DispHcat";
            param.DbType = global::System.Data.DbType.AnsiString;
            param.DbType = global::System.Data.DbType.AnsiString;
            param.SourceColumn = "Scat_DispHcat";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::System.Data.SQLite.SQLiteParameter();
            param.ParameterName = "@Scat_Code";
            param.DbType = global::System.Data.DbType.AnsiString;
            param.DbType = global::System.Data.DbType.AnsiString;
            param.SourceColumn = "Scat_Code";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::System.Data.SQLite.SQLiteParameter();
            param.ParameterName = "@Scat_WijzigentoegestaanJN";
            param.DbType = global::System.Data.DbType.Int64;
            param.DbType = global::System.Data.DbType.Int64;
            param.SourceColumn = "Scat_WijzigentoegestaanJN";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::System.Data.SQLite.SQLiteParameter();
            param.ParameterName = "@Scat_Mutatiedatum";
            param.DbType = global::System.Data.DbType.DateTime;
            param.DbType = global::System.Data.DbType.DateTime;
            param.SourceColumn = "Scat_Mutatiedatum";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::System.Data.SQLite.SQLiteParameter();
            param.ParameterName = "@Scat_Opmerking";
            param.DbType = global::System.Data.DbType.AnsiString;
            param.DbType = global::System.Data.DbType.AnsiString;
            param.SourceColumn = "Scat_Opmerking";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::System.Data.SQLite.SQLiteParameter();
            param.ParameterName = "@Original_Scat_Id";
            param.DbType = global::System.Data.DbType.Int64;
            param.DbType = global::System.Data.DbType.Int64;
            param.SourceColumn = "Scat_Id";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::System.Data.SQLite.SQLiteParameter();
            param.ParameterName = "@IsNull_Scat_StatusId";
            param.DbType = global::System.Data.DbType.Int32;
            param.DbType = global::System.Data.DbType.Int32;
            param.SourceColumn = "Scat_StatusId";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::System.Data.SQLite.SQLiteParameter();
            param.ParameterName = "@Original_Scat_StatusId";
            param.DbType = global::System.Data.DbType.Int64;
            param.DbType = global::System.Data.DbType.Int64;
            param.SourceColumn = "Scat_StatusId";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::System.Data.SQLite.SQLiteParameter();
            param.ParameterName = "@IsNull_Scat_DispStatus";
            param.DbType = global::System.Data.DbType.Int32;
            param.DbType = global::System.Data.DbType.Int32;
            param.SourceColumn = "Scat_DispStatus";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::System.Data.SQLite.SQLiteParameter();
            param.ParameterName = "@Original_Scat_DispStatus";
            param.DbType = global::System.Data.DbType.AnsiString;
            param.DbType = global::System.Data.DbType.AnsiString;
            param.SourceColumn = "Scat_DispStatus";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::System.Data.SQLite.SQLiteParameter();
            param.ParameterName = "@Original_Scat_kort";
            param.DbType = global::System.Data.DbType.AnsiString;
            param.DbType = global::System.Data.DbType.AnsiString;
            param.SourceColumn = "Scat_kort";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::System.Data.SQLite.SQLiteParameter();
            param.ParameterName = "@Original_Scat_lang";
            param.DbType = global::System.Data.DbType.AnsiString;
            param.DbType = global::System.Data.DbType.AnsiString;
            param.SourceColumn = "Scat_lang";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::System.Data.SQLite.SQLiteParameter();
            param.ParameterName = "@Original_Scat_HcatId";
            param.DbType = global::System.Data.DbType.Int64;
            param.DbType = global::System.Data.DbType.Int64;
            param.SourceColumn = "Scat_HcatId";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::System.Data.SQLite.SQLiteParameter();
            param.ParameterName = "@IsNull_Scat_DispHcat";
            param.DbType = global::System.Data.DbType.Int32;
            param.DbType = global::System.Data.DbType.Int32;
            param.SourceColumn = "Scat_DispHcat";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::System.Data.SQLite.SQLiteParameter();
            param.ParameterName = "@Original_Scat_DispHcat";
            param.DbType = global::System.Data.DbType.AnsiString;
            param.DbType = global::System.Data.DbType.AnsiString;
            param.SourceColumn = "Scat_DispHcat";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::System.Data.SQLite.SQLiteParameter();
            param.ParameterName = "@IsNull_Scat_Code";
            param.DbType = global::System.Data.DbType.Int32;
            param.DbType = global::System.Data.DbType.Int32;
            param.SourceColumn = "Scat_Code";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::System.Data.SQLite.SQLiteParameter();
            param.ParameterName = "@Original_Scat_Code";
            param.DbType = global::System.Data.DbType.AnsiString;
            param.DbType = global::System.Data.DbType.AnsiString;
            param.SourceColumn = "Scat_Code";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::System.Data.SQLite.SQLiteParameter();
            param.ParameterName = "@Original_Scat_WijzigentoegestaanJN";
            param.DbType = global::System.Data.DbType.Int64;
            param.DbType = global::System.Data.DbType.Int64;
            param.SourceColumn = "Scat_WijzigentoegestaanJN";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::System.Data.SQLite.SQLiteParameter();
            param.ParameterName = "@Original_Scat_Mutatiedatum";
            param.DbType = global::System.Data.DbType.DateTime;
            param.DbType = global::System.Data.DbType.DateTime;
            param.SourceColumn = "Scat_Mutatiedatum";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::System.Data.SQLite.SQLiteParameter();
            param.ParameterName = "@IsNull_Scat_Opmerking";
            param.DbType = global::System.Data.DbType.Int32;
            param.DbType = global::System.Data.DbType.Int32;
            param.SourceColumn = "Scat_Opmerking";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::System.Data.SQLite.SQLiteParameter();
            param.ParameterName = "@Original_Scat_Opmerking";
            param.DbType = global::System.Data.DbType.AnsiString;
            param.DbType = global::System.Data.DbType.AnsiString;
            param.SourceColumn = "Scat_Opmerking";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitConnection() {
            this._connection = new global::System.Data.SQLite.SQLiteConnection();
            this._connection.ConnectionString = global::Cmbap.Properties.Settings.Default.Cmbap_dataConnectionString;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitCommandCollection() {
            this._commandCollection = new global::System.Data.SQLite.SQLiteCommand[1];
            this._commandCollection[0] = new global::System.Data.SQLite.SQLiteCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "SELECT [Scat_Id], [Scat_StatusId], [Scat_DispStatus], [Scat_kort], [Scat_lang], [" +
                "Scat_HcatId], [Scat_DispHcat], [Scat_Code], [Scat_WijzigentoegestaanJN], [Scat_M" +
                "utatiedatum], [Scat_Opmerking] FROM [Subcategorie]";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(_Cmbap_dataDataSet.SubcategorieDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual _Cmbap_dataDataSet.SubcategorieDataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            _Cmbap_dataDataSet.SubcategorieDataTable dataTable = new _Cmbap_dataDataSet.SubcategorieDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(_Cmbap_dataDataSet.SubcategorieDataTable dataTable) {
            return this.Adapter.Update(dataTable);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(_Cmbap_dataDataSet dataSet) {
            return this.Adapter.Update(dataSet, "Subcategorie");
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow dataRow) {
            return this.Adapter.Update(new global::System.Data.DataRow[] {
                        dataRow});
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow[] dataRows) {
            return this.Adapter.Update(dataRows);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Delete, true)]
        public virtual int Delete(long Original_Scat_Id, global::System.Nullable<long> Original_Scat_StatusId, string Original_Scat_DispStatus, string Original_Scat_kort, string Original_Scat_lang, long Original_Scat_HcatId, string Original_Scat_DispHcat, string Original_Scat_Code, long Original_Scat_WijzigentoegestaanJN, System.DateTime Original_Scat_Mutatiedatum, string Original_Scat_Opmerking) {
            this.Adapter.DeleteCommand.Parameters[0].Value = ((long)(Original_Scat_Id));
            if ((Original_Scat_StatusId.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[1].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[2].Value = ((long)(Original_Scat_StatusId.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[1].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[2].Value = global::System.DBNull.Value;
            }
            if ((Original_Scat_DispStatus == null)) {
                this.Adapter.DeleteCommand.Parameters[3].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[4].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[3].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[4].Value = ((string)(Original_Scat_DispStatus));
            }
            if ((Original_Scat_kort == null)) {
                throw new global::System.ArgumentNullException("Original_Scat_kort");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[5].Value = ((string)(Original_Scat_kort));
            }
            if ((Original_Scat_lang == null)) {
                throw new global::System.ArgumentNullException("Original_Scat_lang");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[6].Value = ((string)(Original_Scat_lang));
            }
            this.Adapter.DeleteCommand.Parameters[7].Value = ((long)(Original_Scat_HcatId));
            if ((Original_Scat_DispHcat == null)) {
                this.Adapter.DeleteCommand.Parameters[8].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[9].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[8].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[9].Value = ((string)(Original_Scat_DispHcat));
            }
            if ((Original_Scat_Code == null)) {
                this.Adapter.DeleteCommand.Parameters[10].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[11].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[10].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[11].Value = ((string)(Original_Scat_Code));
            }
            this.Adapter.DeleteCommand.Parameters[12].Value = ((long)(Original_Scat_WijzigentoegestaanJN));
            this.Adapter.DeleteCommand.Parameters[13].Value = ((System.DateTime)(Original_Scat_Mutatiedatum));
            if ((Original_Scat_Opmerking == null)) {
                this.Adapter.DeleteCommand.Parameters[14].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[15].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[14].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[15].Value = ((string)(Original_Scat_Opmerking));
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.DeleteCommand.Connection.State;
            if (((this.Adapter.DeleteCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.DeleteCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.DeleteCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.DeleteCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Insert, true)]
        public virtual int Insert(global::System.Nullable<long> Scat_StatusId, string Scat_DispStatus, string Scat_kort, string Scat_lang, long Scat_HcatId, string Scat_DispHcat, string Scat_Code, long Scat_WijzigentoegestaanJN, System.DateTime Scat_Mutatiedatum, string Scat_Opmerking) {
            if ((Scat_StatusId.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[0].Value = ((long)(Scat_StatusId.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[0].Value = global::System.DBNull.Value;
            }
            if ((Scat_DispStatus == null)) {
                this.Adapter.InsertCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[1].Value = ((string)(Scat_DispStatus));
            }
            if ((Scat_kort == null)) {
                throw new global::System.ArgumentNullException("Scat_kort");
            }
            else {
                this.Adapter.InsertCommand.Parameters[2].Value = ((string)(Scat_kort));
            }
            if ((Scat_lang == null)) {
                throw new global::System.ArgumentNullException("Scat_lang");
            }
            else {
                this.Adapter.InsertCommand.Parameters[3].Value = ((string)(Scat_lang));
            }
            this.Adapter.InsertCommand.Parameters[4].Value = ((long)(Scat_HcatId));
            if ((Scat_DispHcat == null)) {
                this.Adapter.InsertCommand.Parameters[5].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[5].Value = ((string)(Scat_DispHcat));
            }
            if ((Scat_Code == null)) {
                this.Adapter.InsertCommand.Parameters[6].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[6].Value = ((string)(Scat_Code));
            }
            this.Adapter.InsertCommand.Parameters[7].Value = ((long)(Scat_WijzigentoegestaanJN));
            this.Adapter.InsertCommand.Parameters[8].Value = ((System.DateTime)(Scat_Mutatiedatum));
            if ((Scat_Opmerking == null)) {
                this.Adapter.InsertCommand.Parameters[9].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[9].Value = ((string)(Scat_Opmerking));
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.InsertCommand.Connection.State;
            if (((this.Adapter.InsertCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.InsertCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.InsertCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.InsertCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(
                    global::System.Nullable<long> Scat_StatusId, 
                    string Scat_DispStatus, 
                    string Scat_kort, 
                    string Scat_lang, 
                    long Scat_HcatId, 
                    string Scat_DispHcat, 
                    string Scat_Code, 
                    long Scat_WijzigentoegestaanJN, 
                    System.DateTime Scat_Mutatiedatum, 
                    string Scat_Opmerking, 
                    long Original_Scat_Id, 
                    global::System.Nullable<long> Original_Scat_StatusId, 
                    string Original_Scat_DispStatus, 
                    string Original_Scat_kort, 
                    string Original_Scat_lang, 
                    long Original_Scat_HcatId, 
                    string Original_Scat_DispHcat, 
                    string Original_Scat_Code, 
                    long Original_Scat_WijzigentoegestaanJN, 
                    System.DateTime Original_Scat_Mutatiedatum, 
                    string Original_Scat_Opmerking) {
            if ((Scat_StatusId.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[0].Value = ((long)(Scat_StatusId.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[0].Value = global::System.DBNull.Value;
            }
            if ((Scat_DispStatus == null)) {
                this.Adapter.UpdateCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[1].Value = ((string)(Scat_DispStatus));
            }
            if ((Scat_kort == null)) {
                throw new global::System.ArgumentNullException("Scat_kort");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[2].Value = ((string)(Scat_kort));
            }
            if ((Scat_lang == null)) {
                throw new global::System.ArgumentNullException("Scat_lang");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[3].Value = ((string)(Scat_lang));
            }
            this.Adapter.UpdateCommand.Parameters[4].Value = ((long)(Scat_HcatId));
            if ((Scat_DispHcat == null)) {
                this.Adapter.UpdateCommand.Parameters[5].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[5].Value = ((string)(Scat_DispHcat));
            }
            if ((Scat_Code == null)) {
                this.Adapter.UpdateCommand.Parameters[6].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[6].Value = ((string)(Scat_Code));
            }
            this.Adapter.UpdateCommand.Parameters[7].Value = ((long)(Scat_WijzigentoegestaanJN));
            this.Adapter.UpdateCommand.Parameters[8].Value = ((System.DateTime)(Scat_Mutatiedatum));
            if ((Scat_Opmerking == null)) {
                this.Adapter.UpdateCommand.Parameters[9].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[9].Value = ((string)(Scat_Opmerking));
            }
            this.Adapter.UpdateCommand.Parameters[10].Value = ((long)(Original_Scat_Id));
            if ((Original_Scat_StatusId.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[11].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[12].Value = ((long)(Original_Scat_StatusId.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[11].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[12].Value = global::System.DBNull.Value;
            }
            if ((Original_Scat_DispStatus == null)) {
                this.Adapter.UpdateCommand.Parameters[13].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[14].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[13].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[14].Value = ((string)(Original_Scat_DispStatus));
            }
            if ((Original_Scat_kort == null)) {
                throw new global::System.ArgumentNullException("Original_Scat_kort");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[15].Value = ((string)(Original_Scat_kort));
            }
            if ((Original_Scat_lang == null)) {
                throw new global::System.ArgumentNullException("Original_Scat_lang");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[16].Value = ((string)(Original_Scat_lang));
            }
            this.Adapter.UpdateCommand.Parameters[17].Value = ((long)(Original_Scat_HcatId));
            if ((Original_Scat_DispHcat == null)) {
                this.Adapter.UpdateCommand.Parameters[18].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[19].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[18].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[19].Value = ((string)(Original_Scat_DispHcat));
            }
            if ((Original_Scat_Code == null)) {
                this.Adapter.UpdateCommand.Parameters[20].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[21].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[20].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[21].Value = ((string)(Original_Scat_Code));
            }
            this.Adapter.UpdateCommand.Parameters[22].Value = ((long)(Original_Scat_WijzigentoegestaanJN));
            this.Adapter.UpdateCommand.Parameters[23].Value = ((System.DateTime)(Original_Scat_Mutatiedatum));
            if ((Original_Scat_Opmerking == null)) {
                this.Adapter.UpdateCommand.Parameters[24].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[25].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[24].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[25].Value = ((string)(Original_Scat_Opmerking));
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.UpdateCommand.Connection.State;
            if (((this.Adapter.UpdateCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.UpdateCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.UpdateCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.UpdateCommand.Connection.Close();
                }
            }
        }
    }
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class SubUitgavesoortTableAdapter : global::System.ComponentModel.Component {
        
        private global::System.Data.SQLite.SQLiteDataAdapter _adapter;
        
        private global::System.Data.SQLite.SQLiteConnection _connection;
        
        private global::System.Data.SQLite.SQLiteTransaction _transaction;
        
        private global::System.Data.SQLite.SQLiteCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public SubUitgavesoortTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected internal global::System.Data.SQLite.SQLiteDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal global::System.Data.SQLite.SQLiteConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::System.Data.SQLite.SQLiteCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal global::System.Data.SQLite.SQLiteTransaction Transaction {
            get {
                return this._transaction;
            }
            set {
                this._transaction = value;
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    this.CommandCollection[i].Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.DeleteCommand != null))) {
                    this.Adapter.DeleteCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.InsertCommand != null))) {
                    this.Adapter.InsertCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.UpdateCommand != null))) {
                    this.Adapter.UpdateCommand.Transaction = this._transaction;
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected global::System.Data.SQLite.SQLiteCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitAdapter() {
            this._adapter = new global::System.Data.SQLite.SQLiteDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "SubUitgavesoort";
            tableMapping.ColumnMappings.Add("Sus_Id", "Sus_Id");
            tableMapping.ColumnMappings.Add("Sus_StatusId", "Sus_StatusId");
            tableMapping.ColumnMappings.Add("Sus_DispStatus", "Sus_DispStatus");
            tableMapping.ColumnMappings.Add("Sus_Kort", "Sus_Kort");
            tableMapping.ColumnMappings.Add("Sus_Lang", "Sus_Lang");
            tableMapping.ColumnMappings.Add("Sus_WijzigentoegestaanJN", "Sus_WijzigentoegestaanJN");
            tableMapping.ColumnMappings.Add("Sus_HusId", "Sus_HusId");
            tableMapping.ColumnMappings.Add("Sus_DispHus", "Sus_DispHus");
            tableMapping.ColumnMappings.Add("Sus_Mutatiedatum", "Sus_Mutatiedatum");
            tableMapping.ColumnMappings.Add("Sus_Opmerking", "Sus_Opmerking");
            this._adapter.TableMappings.Add(tableMapping);
            this._adapter.DeleteCommand = new global::System.Data.SQLite.SQLiteCommand();
            this._adapter.DeleteCommand.Connection = this.Connection;
            this._adapter.DeleteCommand.CommandText = @"DELETE FROM [main].[sqlite_default_schema].[SubUitgavesoort] WHERE (([Sus_Id] = @Original_Sus_Id) AND ((@IsNull_Sus_StatusId = 1 AND [Sus_StatusId] IS NULL) OR ([Sus_StatusId] = @Original_Sus_StatusId)) AND ((@IsNull_Sus_DispStatus = 1 AND [Sus_DispStatus] IS NULL) OR ([Sus_DispStatus] = @Original_Sus_DispStatus)) AND ([Sus_Kort] = @Original_Sus_Kort) AND ([Sus_Lang] = @Original_Sus_Lang) AND ((@IsNull_Sus_WijzigentoegestaanJN = 1 AND [Sus_WijzigentoegestaanJN] IS NULL) OR ([Sus_WijzigentoegestaanJN] = @Original_Sus_WijzigentoegestaanJN)) AND ([Sus_HusId] = @Original_Sus_HusId) AND ((@IsNull_Sus_DispHus = 1 AND [Sus_DispHus] IS NULL) OR ([Sus_DispHus] = @Original_Sus_DispHus)) AND ([Sus_Mutatiedatum] = @Original_Sus_Mutatiedatum) AND ((@IsNull_Sus_Opmerking = 1 AND [Sus_Opmerking] IS NULL) OR ([Sus_Opmerking] = @Original_Sus_Opmerking)))";
            this._adapter.DeleteCommand.CommandType = global::System.Data.CommandType.Text;
            global::System.Data.SQLite.SQLiteParameter param = new global::System.Data.SQLite.SQLiteParameter();
            param.ParameterName = "@Original_Sus_Id";
            param.DbType = global::System.Data.DbType.Int64;
            param.DbType = global::System.Data.DbType.Int64;
            param.SourceColumn = "Sus_Id";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::System.Data.SQLite.SQLiteParameter();
            param.ParameterName = "@IsNull_Sus_StatusId";
            param.DbType = global::System.Data.DbType.Int32;
            param.DbType = global::System.Data.DbType.Int32;
            param.SourceColumn = "Sus_StatusId";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::System.Data.SQLite.SQLiteParameter();
            param.ParameterName = "@Original_Sus_StatusId";
            param.DbType = global::System.Data.DbType.Int64;
            param.DbType = global::System.Data.DbType.Int64;
            param.SourceColumn = "Sus_StatusId";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::System.Data.SQLite.SQLiteParameter();
            param.ParameterName = "@IsNull_Sus_DispStatus";
            param.DbType = global::System.Data.DbType.Int32;
            param.DbType = global::System.Data.DbType.Int32;
            param.SourceColumn = "Sus_DispStatus";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::System.Data.SQLite.SQLiteParameter();
            param.ParameterName = "@Original_Sus_DispStatus";
            param.DbType = global::System.Data.DbType.AnsiString;
            param.DbType = global::System.Data.DbType.AnsiString;
            param.SourceColumn = "Sus_DispStatus";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::System.Data.SQLite.SQLiteParameter();
            param.ParameterName = "@Original_Sus_Kort";
            param.DbType = global::System.Data.DbType.AnsiString;
            param.DbType = global::System.Data.DbType.AnsiString;
            param.SourceColumn = "Sus_Kort";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::System.Data.SQLite.SQLiteParameter();
            param.ParameterName = "@Original_Sus_Lang";
            param.DbType = global::System.Data.DbType.AnsiString;
            param.DbType = global::System.Data.DbType.AnsiString;
            param.SourceColumn = "Sus_Lang";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::System.Data.SQLite.SQLiteParameter();
            param.ParameterName = "@IsNull_Sus_WijzigentoegestaanJN";
            param.DbType = global::System.Data.DbType.Int32;
            param.DbType = global::System.Data.DbType.Int32;
            param.SourceColumn = "Sus_WijzigentoegestaanJN";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::System.Data.SQLite.SQLiteParameter();
            param.ParameterName = "@Original_Sus_WijzigentoegestaanJN";
            param.DbType = global::System.Data.DbType.Int64;
            param.DbType = global::System.Data.DbType.Int64;
            param.SourceColumn = "Sus_WijzigentoegestaanJN";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::System.Data.SQLite.SQLiteParameter();
            param.ParameterName = "@Original_Sus_HusId";
            param.DbType = global::System.Data.DbType.Int64;
            param.DbType = global::System.Data.DbType.Int64;
            param.SourceColumn = "Sus_HusId";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::System.Data.SQLite.SQLiteParameter();
            param.ParameterName = "@IsNull_Sus_DispHus";
            param.DbType = global::System.Data.DbType.Int32;
            param.DbType = global::System.Data.DbType.Int32;
            param.SourceColumn = "Sus_DispHus";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::System.Data.SQLite.SQLiteParameter();
            param.ParameterName = "@Original_Sus_DispHus";
            param.DbType = global::System.Data.DbType.AnsiString;
            param.DbType = global::System.Data.DbType.AnsiString;
            param.SourceColumn = "Sus_DispHus";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::System.Data.SQLite.SQLiteParameter();
            param.ParameterName = "@Original_Sus_Mutatiedatum";
            param.DbType = global::System.Data.DbType.DateTime;
            param.DbType = global::System.Data.DbType.DateTime;
            param.SourceColumn = "Sus_Mutatiedatum";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::System.Data.SQLite.SQLiteParameter();
            param.ParameterName = "@IsNull_Sus_Opmerking";
            param.DbType = global::System.Data.DbType.Int32;
            param.DbType = global::System.Data.DbType.Int32;
            param.SourceColumn = "Sus_Opmerking";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::System.Data.SQLite.SQLiteParameter();
            param.ParameterName = "@Original_Sus_Opmerking";
            param.DbType = global::System.Data.DbType.AnsiString;
            param.DbType = global::System.Data.DbType.AnsiString;
            param.SourceColumn = "Sus_Opmerking";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            this._adapter.InsertCommand = new global::System.Data.SQLite.SQLiteCommand();
            this._adapter.InsertCommand.Connection = this.Connection;
            this._adapter.InsertCommand.CommandText = @"INSERT INTO [main].[sqlite_default_schema].[SubUitgavesoort] ([Sus_StatusId], [Sus_DispStatus], [Sus_Kort], [Sus_Lang], [Sus_WijzigentoegestaanJN], [Sus_HusId], [Sus_DispHus], [Sus_Mutatiedatum], [Sus_Opmerking]) VALUES (@Sus_StatusId, @Sus_DispStatus, @Sus_Kort, @Sus_Lang, @Sus_WijzigentoegestaanJN, @Sus_HusId, @Sus_DispHus, @Sus_Mutatiedatum, @Sus_Opmerking)";
            this._adapter.InsertCommand.CommandType = global::System.Data.CommandType.Text;
            param = new global::System.Data.SQLite.SQLiteParameter();
            param.ParameterName = "@Sus_StatusId";
            param.DbType = global::System.Data.DbType.Int64;
            param.DbType = global::System.Data.DbType.Int64;
            param.SourceColumn = "Sus_StatusId";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::System.Data.SQLite.SQLiteParameter();
            param.ParameterName = "@Sus_DispStatus";
            param.DbType = global::System.Data.DbType.AnsiString;
            param.DbType = global::System.Data.DbType.AnsiString;
            param.SourceColumn = "Sus_DispStatus";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::System.Data.SQLite.SQLiteParameter();
            param.ParameterName = "@Sus_Kort";
            param.DbType = global::System.Data.DbType.AnsiString;
            param.DbType = global::System.Data.DbType.AnsiString;
            param.SourceColumn = "Sus_Kort";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::System.Data.SQLite.SQLiteParameter();
            param.ParameterName = "@Sus_Lang";
            param.DbType = global::System.Data.DbType.AnsiString;
            param.DbType = global::System.Data.DbType.AnsiString;
            param.SourceColumn = "Sus_Lang";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::System.Data.SQLite.SQLiteParameter();
            param.ParameterName = "@Sus_WijzigentoegestaanJN";
            param.DbType = global::System.Data.DbType.Int64;
            param.DbType = global::System.Data.DbType.Int64;
            param.SourceColumn = "Sus_WijzigentoegestaanJN";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::System.Data.SQLite.SQLiteParameter();
            param.ParameterName = "@Sus_HusId";
            param.DbType = global::System.Data.DbType.Int64;
            param.DbType = global::System.Data.DbType.Int64;
            param.SourceColumn = "Sus_HusId";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::System.Data.SQLite.SQLiteParameter();
            param.ParameterName = "@Sus_DispHus";
            param.DbType = global::System.Data.DbType.AnsiString;
            param.DbType = global::System.Data.DbType.AnsiString;
            param.SourceColumn = "Sus_DispHus";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::System.Data.SQLite.SQLiteParameter();
            param.ParameterName = "@Sus_Mutatiedatum";
            param.DbType = global::System.Data.DbType.DateTime;
            param.DbType = global::System.Data.DbType.DateTime;
            param.SourceColumn = "Sus_Mutatiedatum";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::System.Data.SQLite.SQLiteParameter();
            param.ParameterName = "@Sus_Opmerking";
            param.DbType = global::System.Data.DbType.AnsiString;
            param.DbType = global::System.Data.DbType.AnsiString;
            param.SourceColumn = "Sus_Opmerking";
            this._adapter.InsertCommand.Parameters.Add(param);
            this._adapter.UpdateCommand = new global::System.Data.SQLite.SQLiteCommand();
            this._adapter.UpdateCommand.Connection = this.Connection;
            this._adapter.UpdateCommand.CommandText = @"UPDATE [main].[sqlite_default_schema].[SubUitgavesoort] SET [Sus_StatusId] = @Sus_StatusId, [Sus_DispStatus] = @Sus_DispStatus, [Sus_Kort] = @Sus_Kort, [Sus_Lang] = @Sus_Lang, [Sus_WijzigentoegestaanJN] = @Sus_WijzigentoegestaanJN, [Sus_HusId] = @Sus_HusId, [Sus_DispHus] = @Sus_DispHus, [Sus_Mutatiedatum] = @Sus_Mutatiedatum, [Sus_Opmerking] = @Sus_Opmerking WHERE (([Sus_Id] = @Original_Sus_Id) AND ((@IsNull_Sus_StatusId = 1 AND [Sus_StatusId] IS NULL) OR ([Sus_StatusId] = @Original_Sus_StatusId)) AND ((@IsNull_Sus_DispStatus = 1 AND [Sus_DispStatus] IS NULL) OR ([Sus_DispStatus] = @Original_Sus_DispStatus)) AND ([Sus_Kort] = @Original_Sus_Kort) AND ([Sus_Lang] = @Original_Sus_Lang) AND ((@IsNull_Sus_WijzigentoegestaanJN = 1 AND [Sus_WijzigentoegestaanJN] IS NULL) OR ([Sus_WijzigentoegestaanJN] = @Original_Sus_WijzigentoegestaanJN)) AND ([Sus_HusId] = @Original_Sus_HusId) AND ((@IsNull_Sus_DispHus = 1 AND [Sus_DispHus] IS NULL) OR ([Sus_DispHus] = @Original_Sus_DispHus)) AND ([Sus_Mutatiedatum] = @Original_Sus_Mutatiedatum) AND ((@IsNull_Sus_Opmerking = 1 AND [Sus_Opmerking] IS NULL) OR ([Sus_Opmerking] = @Original_Sus_Opmerking)))";
            this._adapter.UpdateCommand.CommandType = global::System.Data.CommandType.Text;
            param = new global::System.Data.SQLite.SQLiteParameter();
            param.ParameterName = "@Sus_StatusId";
            param.DbType = global::System.Data.DbType.Int64;
            param.DbType = global::System.Data.DbType.Int64;
            param.SourceColumn = "Sus_StatusId";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::System.Data.SQLite.SQLiteParameter();
            param.ParameterName = "@Sus_DispStatus";
            param.DbType = global::System.Data.DbType.AnsiString;
            param.DbType = global::System.Data.DbType.AnsiString;
            param.SourceColumn = "Sus_DispStatus";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::System.Data.SQLite.SQLiteParameter();
            param.ParameterName = "@Sus_Kort";
            param.DbType = global::System.Data.DbType.AnsiString;
            param.DbType = global::System.Data.DbType.AnsiString;
            param.SourceColumn = "Sus_Kort";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::System.Data.SQLite.SQLiteParameter();
            param.ParameterName = "@Sus_Lang";
            param.DbType = global::System.Data.DbType.AnsiString;
            param.DbType = global::System.Data.DbType.AnsiString;
            param.SourceColumn = "Sus_Lang";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::System.Data.SQLite.SQLiteParameter();
            param.ParameterName = "@Sus_WijzigentoegestaanJN";
            param.DbType = global::System.Data.DbType.Int64;
            param.DbType = global::System.Data.DbType.Int64;
            param.SourceColumn = "Sus_WijzigentoegestaanJN";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::System.Data.SQLite.SQLiteParameter();
            param.ParameterName = "@Sus_HusId";
            param.DbType = global::System.Data.DbType.Int64;
            param.DbType = global::System.Data.DbType.Int64;
            param.SourceColumn = "Sus_HusId";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::System.Data.SQLite.SQLiteParameter();
            param.ParameterName = "@Sus_DispHus";
            param.DbType = global::System.Data.DbType.AnsiString;
            param.DbType = global::System.Data.DbType.AnsiString;
            param.SourceColumn = "Sus_DispHus";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::System.Data.SQLite.SQLiteParameter();
            param.ParameterName = "@Sus_Mutatiedatum";
            param.DbType = global::System.Data.DbType.DateTime;
            param.DbType = global::System.Data.DbType.DateTime;
            param.SourceColumn = "Sus_Mutatiedatum";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::System.Data.SQLite.SQLiteParameter();
            param.ParameterName = "@Sus_Opmerking";
            param.DbType = global::System.Data.DbType.AnsiString;
            param.DbType = global::System.Data.DbType.AnsiString;
            param.SourceColumn = "Sus_Opmerking";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::System.Data.SQLite.SQLiteParameter();
            param.ParameterName = "@Original_Sus_Id";
            param.DbType = global::System.Data.DbType.Int64;
            param.DbType = global::System.Data.DbType.Int64;
            param.SourceColumn = "Sus_Id";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::System.Data.SQLite.SQLiteParameter();
            param.ParameterName = "@IsNull_Sus_StatusId";
            param.DbType = global::System.Data.DbType.Int32;
            param.DbType = global::System.Data.DbType.Int32;
            param.SourceColumn = "Sus_StatusId";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::System.Data.SQLite.SQLiteParameter();
            param.ParameterName = "@Original_Sus_StatusId";
            param.DbType = global::System.Data.DbType.Int64;
            param.DbType = global::System.Data.DbType.Int64;
            param.SourceColumn = "Sus_StatusId";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::System.Data.SQLite.SQLiteParameter();
            param.ParameterName = "@IsNull_Sus_DispStatus";
            param.DbType = global::System.Data.DbType.Int32;
            param.DbType = global::System.Data.DbType.Int32;
            param.SourceColumn = "Sus_DispStatus";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::System.Data.SQLite.SQLiteParameter();
            param.ParameterName = "@Original_Sus_DispStatus";
            param.DbType = global::System.Data.DbType.AnsiString;
            param.DbType = global::System.Data.DbType.AnsiString;
            param.SourceColumn = "Sus_DispStatus";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::System.Data.SQLite.SQLiteParameter();
            param.ParameterName = "@Original_Sus_Kort";
            param.DbType = global::System.Data.DbType.AnsiString;
            param.DbType = global::System.Data.DbType.AnsiString;
            param.SourceColumn = "Sus_Kort";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::System.Data.SQLite.SQLiteParameter();
            param.ParameterName = "@Original_Sus_Lang";
            param.DbType = global::System.Data.DbType.AnsiString;
            param.DbType = global::System.Data.DbType.AnsiString;
            param.SourceColumn = "Sus_Lang";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::System.Data.SQLite.SQLiteParameter();
            param.ParameterName = "@IsNull_Sus_WijzigentoegestaanJN";
            param.DbType = global::System.Data.DbType.Int32;
            param.DbType = global::System.Data.DbType.Int32;
            param.SourceColumn = "Sus_WijzigentoegestaanJN";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::System.Data.SQLite.SQLiteParameter();
            param.ParameterName = "@Original_Sus_WijzigentoegestaanJN";
            param.DbType = global::System.Data.DbType.Int64;
            param.DbType = global::System.Data.DbType.Int64;
            param.SourceColumn = "Sus_WijzigentoegestaanJN";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::System.Data.SQLite.SQLiteParameter();
            param.ParameterName = "@Original_Sus_HusId";
            param.DbType = global::System.Data.DbType.Int64;
            param.DbType = global::System.Data.DbType.Int64;
            param.SourceColumn = "Sus_HusId";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::System.Data.SQLite.SQLiteParameter();
            param.ParameterName = "@IsNull_Sus_DispHus";
            param.DbType = global::System.Data.DbType.Int32;
            param.DbType = global::System.Data.DbType.Int32;
            param.SourceColumn = "Sus_DispHus";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::System.Data.SQLite.SQLiteParameter();
            param.ParameterName = "@Original_Sus_DispHus";
            param.DbType = global::System.Data.DbType.AnsiString;
            param.DbType = global::System.Data.DbType.AnsiString;
            param.SourceColumn = "Sus_DispHus";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::System.Data.SQLite.SQLiteParameter();
            param.ParameterName = "@Original_Sus_Mutatiedatum";
            param.DbType = global::System.Data.DbType.DateTime;
            param.DbType = global::System.Data.DbType.DateTime;
            param.SourceColumn = "Sus_Mutatiedatum";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::System.Data.SQLite.SQLiteParameter();
            param.ParameterName = "@IsNull_Sus_Opmerking";
            param.DbType = global::System.Data.DbType.Int32;
            param.DbType = global::System.Data.DbType.Int32;
            param.SourceColumn = "Sus_Opmerking";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::System.Data.SQLite.SQLiteParameter();
            param.ParameterName = "@Original_Sus_Opmerking";
            param.DbType = global::System.Data.DbType.AnsiString;
            param.DbType = global::System.Data.DbType.AnsiString;
            param.SourceColumn = "Sus_Opmerking";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitConnection() {
            this._connection = new global::System.Data.SQLite.SQLiteConnection();
            this._connection.ConnectionString = global::Cmbap.Properties.Settings.Default.Cmbap_dataConnectionString;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitCommandCollection() {
            this._commandCollection = new global::System.Data.SQLite.SQLiteCommand[1];
            this._commandCollection[0] = new global::System.Data.SQLite.SQLiteCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "SELECT [Sus_Id], [Sus_StatusId], [Sus_DispStatus], [Sus_Kort], [Sus_Lang], [Sus_W" +
                "ijzigentoegestaanJN], [Sus_HusId], [Sus_DispHus], [Sus_Mutatiedatum], [Sus_Opmer" +
                "king] FROM [SubUitgavesoort]";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(_Cmbap_dataDataSet.SubUitgavesoortDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual _Cmbap_dataDataSet.SubUitgavesoortDataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            _Cmbap_dataDataSet.SubUitgavesoortDataTable dataTable = new _Cmbap_dataDataSet.SubUitgavesoortDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(_Cmbap_dataDataSet.SubUitgavesoortDataTable dataTable) {
            return this.Adapter.Update(dataTable);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(_Cmbap_dataDataSet dataSet) {
            return this.Adapter.Update(dataSet, "SubUitgavesoort");
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow dataRow) {
            return this.Adapter.Update(new global::System.Data.DataRow[] {
                        dataRow});
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow[] dataRows) {
            return this.Adapter.Update(dataRows);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Delete, true)]
        public virtual int Delete(long Original_Sus_Id, global::System.Nullable<long> Original_Sus_StatusId, string Original_Sus_DispStatus, string Original_Sus_Kort, string Original_Sus_Lang, global::System.Nullable<long> Original_Sus_WijzigentoegestaanJN, long Original_Sus_HusId, string Original_Sus_DispHus, System.DateTime Original_Sus_Mutatiedatum, string Original_Sus_Opmerking) {
            this.Adapter.DeleteCommand.Parameters[0].Value = ((long)(Original_Sus_Id));
            if ((Original_Sus_StatusId.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[1].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[2].Value = ((long)(Original_Sus_StatusId.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[1].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[2].Value = global::System.DBNull.Value;
            }
            if ((Original_Sus_DispStatus == null)) {
                this.Adapter.DeleteCommand.Parameters[3].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[4].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[3].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[4].Value = ((string)(Original_Sus_DispStatus));
            }
            if ((Original_Sus_Kort == null)) {
                throw new global::System.ArgumentNullException("Original_Sus_Kort");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[5].Value = ((string)(Original_Sus_Kort));
            }
            if ((Original_Sus_Lang == null)) {
                throw new global::System.ArgumentNullException("Original_Sus_Lang");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[6].Value = ((string)(Original_Sus_Lang));
            }
            if ((Original_Sus_WijzigentoegestaanJN.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[7].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[8].Value = ((long)(Original_Sus_WijzigentoegestaanJN.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[7].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[8].Value = global::System.DBNull.Value;
            }
            this.Adapter.DeleteCommand.Parameters[9].Value = ((long)(Original_Sus_HusId));
            if ((Original_Sus_DispHus == null)) {
                this.Adapter.DeleteCommand.Parameters[10].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[11].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[10].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[11].Value = ((string)(Original_Sus_DispHus));
            }
            this.Adapter.DeleteCommand.Parameters[12].Value = ((System.DateTime)(Original_Sus_Mutatiedatum));
            if ((Original_Sus_Opmerking == null)) {
                this.Adapter.DeleteCommand.Parameters[13].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[14].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[13].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[14].Value = ((string)(Original_Sus_Opmerking));
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.DeleteCommand.Connection.State;
            if (((this.Adapter.DeleteCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.DeleteCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.DeleteCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.DeleteCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Insert, true)]
        public virtual int Insert(global::System.Nullable<long> Sus_StatusId, string Sus_DispStatus, string Sus_Kort, string Sus_Lang, global::System.Nullable<long> Sus_WijzigentoegestaanJN, long Sus_HusId, string Sus_DispHus, System.DateTime Sus_Mutatiedatum, string Sus_Opmerking) {
            if ((Sus_StatusId.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[0].Value = ((long)(Sus_StatusId.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[0].Value = global::System.DBNull.Value;
            }
            if ((Sus_DispStatus == null)) {
                this.Adapter.InsertCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[1].Value = ((string)(Sus_DispStatus));
            }
            if ((Sus_Kort == null)) {
                throw new global::System.ArgumentNullException("Sus_Kort");
            }
            else {
                this.Adapter.InsertCommand.Parameters[2].Value = ((string)(Sus_Kort));
            }
            if ((Sus_Lang == null)) {
                throw new global::System.ArgumentNullException("Sus_Lang");
            }
            else {
                this.Adapter.InsertCommand.Parameters[3].Value = ((string)(Sus_Lang));
            }
            if ((Sus_WijzigentoegestaanJN.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[4].Value = ((long)(Sus_WijzigentoegestaanJN.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[4].Value = global::System.DBNull.Value;
            }
            this.Adapter.InsertCommand.Parameters[5].Value = ((long)(Sus_HusId));
            if ((Sus_DispHus == null)) {
                this.Adapter.InsertCommand.Parameters[6].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[6].Value = ((string)(Sus_DispHus));
            }
            this.Adapter.InsertCommand.Parameters[7].Value = ((System.DateTime)(Sus_Mutatiedatum));
            if ((Sus_Opmerking == null)) {
                this.Adapter.InsertCommand.Parameters[8].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[8].Value = ((string)(Sus_Opmerking));
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.InsertCommand.Connection.State;
            if (((this.Adapter.InsertCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.InsertCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.InsertCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.InsertCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(
                    global::System.Nullable<long> Sus_StatusId, 
                    string Sus_DispStatus, 
                    string Sus_Kort, 
                    string Sus_Lang, 
                    global::System.Nullable<long> Sus_WijzigentoegestaanJN, 
                    long Sus_HusId, 
                    string Sus_DispHus, 
                    System.DateTime Sus_Mutatiedatum, 
                    string Sus_Opmerking, 
                    long Original_Sus_Id, 
                    global::System.Nullable<long> Original_Sus_StatusId, 
                    string Original_Sus_DispStatus, 
                    string Original_Sus_Kort, 
                    string Original_Sus_Lang, 
                    global::System.Nullable<long> Original_Sus_WijzigentoegestaanJN, 
                    long Original_Sus_HusId, 
                    string Original_Sus_DispHus, 
                    System.DateTime Original_Sus_Mutatiedatum, 
                    string Original_Sus_Opmerking) {
            if ((Sus_StatusId.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[0].Value = ((long)(Sus_StatusId.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[0].Value = global::System.DBNull.Value;
            }
            if ((Sus_DispStatus == null)) {
                this.Adapter.UpdateCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[1].Value = ((string)(Sus_DispStatus));
            }
            if ((Sus_Kort == null)) {
                throw new global::System.ArgumentNullException("Sus_Kort");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[2].Value = ((string)(Sus_Kort));
            }
            if ((Sus_Lang == null)) {
                throw new global::System.ArgumentNullException("Sus_Lang");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[3].Value = ((string)(Sus_Lang));
            }
            if ((Sus_WijzigentoegestaanJN.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[4].Value = ((long)(Sus_WijzigentoegestaanJN.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[4].Value = global::System.DBNull.Value;
            }
            this.Adapter.UpdateCommand.Parameters[5].Value = ((long)(Sus_HusId));
            if ((Sus_DispHus == null)) {
                this.Adapter.UpdateCommand.Parameters[6].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[6].Value = ((string)(Sus_DispHus));
            }
            this.Adapter.UpdateCommand.Parameters[7].Value = ((System.DateTime)(Sus_Mutatiedatum));
            if ((Sus_Opmerking == null)) {
                this.Adapter.UpdateCommand.Parameters[8].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[8].Value = ((string)(Sus_Opmerking));
            }
            this.Adapter.UpdateCommand.Parameters[9].Value = ((long)(Original_Sus_Id));
            if ((Original_Sus_StatusId.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[10].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[11].Value = ((long)(Original_Sus_StatusId.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[10].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[11].Value = global::System.DBNull.Value;
            }
            if ((Original_Sus_DispStatus == null)) {
                this.Adapter.UpdateCommand.Parameters[12].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[13].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[12].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[13].Value = ((string)(Original_Sus_DispStatus));
            }
            if ((Original_Sus_Kort == null)) {
                throw new global::System.ArgumentNullException("Original_Sus_Kort");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[14].Value = ((string)(Original_Sus_Kort));
            }
            if ((Original_Sus_Lang == null)) {
                throw new global::System.ArgumentNullException("Original_Sus_Lang");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[15].Value = ((string)(Original_Sus_Lang));
            }
            if ((Original_Sus_WijzigentoegestaanJN.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[16].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[17].Value = ((long)(Original_Sus_WijzigentoegestaanJN.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[16].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[17].Value = global::System.DBNull.Value;
            }
            this.Adapter.UpdateCommand.Parameters[18].Value = ((long)(Original_Sus_HusId));
            if ((Original_Sus_DispHus == null)) {
                this.Adapter.UpdateCommand.Parameters[19].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[20].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[19].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[20].Value = ((string)(Original_Sus_DispHus));
            }
            this.Adapter.UpdateCommand.Parameters[21].Value = ((System.DateTime)(Original_Sus_Mutatiedatum));
            if ((Original_Sus_Opmerking == null)) {
                this.Adapter.UpdateCommand.Parameters[22].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[23].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[22].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[23].Value = ((string)(Original_Sus_Opmerking));
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.UpdateCommand.Connection.State;
            if (((this.Adapter.UpdateCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.UpdateCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.UpdateCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.UpdateCommand.Connection.Close();
                }
            }
        }
    }
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class TelefoonnrTableAdapter : global::System.ComponentModel.Component {
        
        private global::System.Data.SQLite.SQLiteDataAdapter _adapter;
        
        private global::System.Data.SQLite.SQLiteConnection _connection;
        
        private global::System.Data.SQLite.SQLiteTransaction _transaction;
        
        private global::System.Data.SQLite.SQLiteCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public TelefoonnrTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected internal global::System.Data.SQLite.SQLiteDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal global::System.Data.SQLite.SQLiteConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::System.Data.SQLite.SQLiteCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal global::System.Data.SQLite.SQLiteTransaction Transaction {
            get {
                return this._transaction;
            }
            set {
                this._transaction = value;
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    this.CommandCollection[i].Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.DeleteCommand != null))) {
                    this.Adapter.DeleteCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.InsertCommand != null))) {
                    this.Adapter.InsertCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.UpdateCommand != null))) {
                    this.Adapter.UpdateCommand.Transaction = this._transaction;
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected global::System.Data.SQLite.SQLiteCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitAdapter() {
            this._adapter = new global::System.Data.SQLite.SQLiteDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "Telefoonnr";
            tableMapping.ColumnMappings.Add("Tlf_Id", "Tlf_Id");
            tableMapping.ColumnMappings.Add("Tlf_StatusId", "Tlf_StatusId");
            tableMapping.ColumnMappings.Add("Tlf_DispStatus", "Tlf_DispStatus");
            tableMapping.ColumnMappings.Add("Tlf_KlBgId", "Tlf_KlBgId");
            tableMapping.ColumnMappings.Add("Tlf_DispKlBg", "Tlf_DispKlBg");
            tableMapping.ColumnMappings.Add("Tlf_Telefoonnr", "Tlf_Telefoonnr");
            tableMapping.ColumnMappings.Add("Tlf_Mutatiedatum", "Tlf_Mutatiedatum");
            tableMapping.ColumnMappings.Add("Tlf_Opmerking", "Tlf_Opmerking");
            this._adapter.TableMappings.Add(tableMapping);
            this._adapter.DeleteCommand = new global::System.Data.SQLite.SQLiteCommand();
            this._adapter.DeleteCommand.Connection = this.Connection;
            this._adapter.DeleteCommand.CommandText = @"DELETE FROM [main].[sqlite_default_schema].[Telefoonnr] WHERE (([Tlf_Id] = @Original_Tlf_Id) AND ((@IsNull_Tlf_StatusId = 1 AND [Tlf_StatusId] IS NULL) OR ([Tlf_StatusId] = @Original_Tlf_StatusId)) AND ((@IsNull_Tlf_DispStatus = 1 AND [Tlf_DispStatus] IS NULL) OR ([Tlf_DispStatus] = @Original_Tlf_DispStatus)) AND ([Tlf_KlBgId] = @Original_Tlf_KlBgId) AND ((@IsNull_Tlf_DispKlBg = 1 AND [Tlf_DispKlBg] IS NULL) OR ([Tlf_DispKlBg] = @Original_Tlf_DispKlBg)) AND ((@IsNull_Tlf_Telefoonnr = 1 AND [Tlf_Telefoonnr] IS NULL) OR ([Tlf_Telefoonnr] = @Original_Tlf_Telefoonnr)) AND ([Tlf_Mutatiedatum] = @Original_Tlf_Mutatiedatum) AND ((@IsNull_Tlf_Opmerking = 1 AND [Tlf_Opmerking] IS NULL) OR ([Tlf_Opmerking] = @Original_Tlf_Opmerking)))";
            this._adapter.DeleteCommand.CommandType = global::System.Data.CommandType.Text;
            global::System.Data.SQLite.SQLiteParameter param = new global::System.Data.SQLite.SQLiteParameter();
            param.ParameterName = "@Original_Tlf_Id";
            param.DbType = global::System.Data.DbType.Int64;
            param.DbType = global::System.Data.DbType.Int64;
            param.SourceColumn = "Tlf_Id";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::System.Data.SQLite.SQLiteParameter();
            param.ParameterName = "@IsNull_Tlf_StatusId";
            param.DbType = global::System.Data.DbType.Int32;
            param.DbType = global::System.Data.DbType.Int32;
            param.SourceColumn = "Tlf_StatusId";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::System.Data.SQLite.SQLiteParameter();
            param.ParameterName = "@Original_Tlf_StatusId";
            param.DbType = global::System.Data.DbType.Int64;
            param.DbType = global::System.Data.DbType.Int64;
            param.SourceColumn = "Tlf_StatusId";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::System.Data.SQLite.SQLiteParameter();
            param.ParameterName = "@IsNull_Tlf_DispStatus";
            param.DbType = global::System.Data.DbType.Int32;
            param.DbType = global::System.Data.DbType.Int32;
            param.SourceColumn = "Tlf_DispStatus";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::System.Data.SQLite.SQLiteParameter();
            param.ParameterName = "@Original_Tlf_DispStatus";
            param.DbType = global::System.Data.DbType.AnsiString;
            param.DbType = global::System.Data.DbType.AnsiString;
            param.SourceColumn = "Tlf_DispStatus";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::System.Data.SQLite.SQLiteParameter();
            param.ParameterName = "@Original_Tlf_KlBgId";
            param.DbType = global::System.Data.DbType.Int64;
            param.DbType = global::System.Data.DbType.Int64;
            param.SourceColumn = "Tlf_KlBgId";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::System.Data.SQLite.SQLiteParameter();
            param.ParameterName = "@IsNull_Tlf_DispKlBg";
            param.DbType = global::System.Data.DbType.Int32;
            param.DbType = global::System.Data.DbType.Int32;
            param.SourceColumn = "Tlf_DispKlBg";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::System.Data.SQLite.SQLiteParameter();
            param.ParameterName = "@Original_Tlf_DispKlBg";
            param.DbType = global::System.Data.DbType.AnsiString;
            param.DbType = global::System.Data.DbType.AnsiString;
            param.SourceColumn = "Tlf_DispKlBg";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::System.Data.SQLite.SQLiteParameter();
            param.ParameterName = "@IsNull_Tlf_Telefoonnr";
            param.DbType = global::System.Data.DbType.Int32;
            param.DbType = global::System.Data.DbType.Int32;
            param.SourceColumn = "Tlf_Telefoonnr";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::System.Data.SQLite.SQLiteParameter();
            param.ParameterName = "@Original_Tlf_Telefoonnr";
            param.DbType = global::System.Data.DbType.AnsiString;
            param.DbType = global::System.Data.DbType.AnsiString;
            param.SourceColumn = "Tlf_Telefoonnr";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::System.Data.SQLite.SQLiteParameter();
            param.ParameterName = "@Original_Tlf_Mutatiedatum";
            param.DbType = global::System.Data.DbType.DateTime;
            param.DbType = global::System.Data.DbType.DateTime;
            param.SourceColumn = "Tlf_Mutatiedatum";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::System.Data.SQLite.SQLiteParameter();
            param.ParameterName = "@IsNull_Tlf_Opmerking";
            param.DbType = global::System.Data.DbType.Int32;
            param.DbType = global::System.Data.DbType.Int32;
            param.SourceColumn = "Tlf_Opmerking";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::System.Data.SQLite.SQLiteParameter();
            param.ParameterName = "@Original_Tlf_Opmerking";
            param.DbType = global::System.Data.DbType.AnsiString;
            param.DbType = global::System.Data.DbType.AnsiString;
            param.SourceColumn = "Tlf_Opmerking";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            this._adapter.InsertCommand = new global::System.Data.SQLite.SQLiteCommand();
            this._adapter.InsertCommand.Connection = this.Connection;
            this._adapter.InsertCommand.CommandText = @"INSERT INTO [main].[sqlite_default_schema].[Telefoonnr] ([Tlf_StatusId], [Tlf_DispStatus], [Tlf_KlBgId], [Tlf_DispKlBg], [Tlf_Telefoonnr], [Tlf_Mutatiedatum], [Tlf_Opmerking]) VALUES (@Tlf_StatusId, @Tlf_DispStatus, @Tlf_KlBgId, @Tlf_DispKlBg, @Tlf_Telefoonnr, @Tlf_Mutatiedatum, @Tlf_Opmerking)";
            this._adapter.InsertCommand.CommandType = global::System.Data.CommandType.Text;
            param = new global::System.Data.SQLite.SQLiteParameter();
            param.ParameterName = "@Tlf_StatusId";
            param.DbType = global::System.Data.DbType.Int64;
            param.DbType = global::System.Data.DbType.Int64;
            param.SourceColumn = "Tlf_StatusId";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::System.Data.SQLite.SQLiteParameter();
            param.ParameterName = "@Tlf_DispStatus";
            param.DbType = global::System.Data.DbType.AnsiString;
            param.DbType = global::System.Data.DbType.AnsiString;
            param.SourceColumn = "Tlf_DispStatus";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::System.Data.SQLite.SQLiteParameter();
            param.ParameterName = "@Tlf_KlBgId";
            param.DbType = global::System.Data.DbType.Int64;
            param.DbType = global::System.Data.DbType.Int64;
            param.SourceColumn = "Tlf_KlBgId";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::System.Data.SQLite.SQLiteParameter();
            param.ParameterName = "@Tlf_DispKlBg";
            param.DbType = global::System.Data.DbType.AnsiString;
            param.DbType = global::System.Data.DbType.AnsiString;
            param.SourceColumn = "Tlf_DispKlBg";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::System.Data.SQLite.SQLiteParameter();
            param.ParameterName = "@Tlf_Telefoonnr";
            param.DbType = global::System.Data.DbType.AnsiString;
            param.DbType = global::System.Data.DbType.AnsiString;
            param.SourceColumn = "Tlf_Telefoonnr";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::System.Data.SQLite.SQLiteParameter();
            param.ParameterName = "@Tlf_Mutatiedatum";
            param.DbType = global::System.Data.DbType.DateTime;
            param.DbType = global::System.Data.DbType.DateTime;
            param.SourceColumn = "Tlf_Mutatiedatum";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::System.Data.SQLite.SQLiteParameter();
            param.ParameterName = "@Tlf_Opmerking";
            param.DbType = global::System.Data.DbType.AnsiString;
            param.DbType = global::System.Data.DbType.AnsiString;
            param.SourceColumn = "Tlf_Opmerking";
            this._adapter.InsertCommand.Parameters.Add(param);
            this._adapter.UpdateCommand = new global::System.Data.SQLite.SQLiteCommand();
            this._adapter.UpdateCommand.Connection = this.Connection;
            this._adapter.UpdateCommand.CommandText = @"UPDATE [main].[sqlite_default_schema].[Telefoonnr] SET [Tlf_StatusId] = @Tlf_StatusId, [Tlf_DispStatus] = @Tlf_DispStatus, [Tlf_KlBgId] = @Tlf_KlBgId, [Tlf_DispKlBg] = @Tlf_DispKlBg, [Tlf_Telefoonnr] = @Tlf_Telefoonnr, [Tlf_Mutatiedatum] = @Tlf_Mutatiedatum, [Tlf_Opmerking] = @Tlf_Opmerking WHERE (([Tlf_Id] = @Original_Tlf_Id) AND ((@IsNull_Tlf_StatusId = 1 AND [Tlf_StatusId] IS NULL) OR ([Tlf_StatusId] = @Original_Tlf_StatusId)) AND ((@IsNull_Tlf_DispStatus = 1 AND [Tlf_DispStatus] IS NULL) OR ([Tlf_DispStatus] = @Original_Tlf_DispStatus)) AND ([Tlf_KlBgId] = @Original_Tlf_KlBgId) AND ((@IsNull_Tlf_DispKlBg = 1 AND [Tlf_DispKlBg] IS NULL) OR ([Tlf_DispKlBg] = @Original_Tlf_DispKlBg)) AND ((@IsNull_Tlf_Telefoonnr = 1 AND [Tlf_Telefoonnr] IS NULL) OR ([Tlf_Telefoonnr] = @Original_Tlf_Telefoonnr)) AND ([Tlf_Mutatiedatum] = @Original_Tlf_Mutatiedatum) AND ((@IsNull_Tlf_Opmerking = 1 AND [Tlf_Opmerking] IS NULL) OR ([Tlf_Opmerking] = @Original_Tlf_Opmerking)))";
            this._adapter.UpdateCommand.CommandType = global::System.Data.CommandType.Text;
            param = new global::System.Data.SQLite.SQLiteParameter();
            param.ParameterName = "@Tlf_StatusId";
            param.DbType = global::System.Data.DbType.Int64;
            param.DbType = global::System.Data.DbType.Int64;
            param.SourceColumn = "Tlf_StatusId";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::System.Data.SQLite.SQLiteParameter();
            param.ParameterName = "@Tlf_DispStatus";
            param.DbType = global::System.Data.DbType.AnsiString;
            param.DbType = global::System.Data.DbType.AnsiString;
            param.SourceColumn = "Tlf_DispStatus";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::System.Data.SQLite.SQLiteParameter();
            param.ParameterName = "@Tlf_KlBgId";
            param.DbType = global::System.Data.DbType.Int64;
            param.DbType = global::System.Data.DbType.Int64;
            param.SourceColumn = "Tlf_KlBgId";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::System.Data.SQLite.SQLiteParameter();
            param.ParameterName = "@Tlf_DispKlBg";
            param.DbType = global::System.Data.DbType.AnsiString;
            param.DbType = global::System.Data.DbType.AnsiString;
            param.SourceColumn = "Tlf_DispKlBg";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::System.Data.SQLite.SQLiteParameter();
            param.ParameterName = "@Tlf_Telefoonnr";
            param.DbType = global::System.Data.DbType.AnsiString;
            param.DbType = global::System.Data.DbType.AnsiString;
            param.SourceColumn = "Tlf_Telefoonnr";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::System.Data.SQLite.SQLiteParameter();
            param.ParameterName = "@Tlf_Mutatiedatum";
            param.DbType = global::System.Data.DbType.DateTime;
            param.DbType = global::System.Data.DbType.DateTime;
            param.SourceColumn = "Tlf_Mutatiedatum";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::System.Data.SQLite.SQLiteParameter();
            param.ParameterName = "@Tlf_Opmerking";
            param.DbType = global::System.Data.DbType.AnsiString;
            param.DbType = global::System.Data.DbType.AnsiString;
            param.SourceColumn = "Tlf_Opmerking";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::System.Data.SQLite.SQLiteParameter();
            param.ParameterName = "@Original_Tlf_Id";
            param.DbType = global::System.Data.DbType.Int64;
            param.DbType = global::System.Data.DbType.Int64;
            param.SourceColumn = "Tlf_Id";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::System.Data.SQLite.SQLiteParameter();
            param.ParameterName = "@IsNull_Tlf_StatusId";
            param.DbType = global::System.Data.DbType.Int32;
            param.DbType = global::System.Data.DbType.Int32;
            param.SourceColumn = "Tlf_StatusId";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::System.Data.SQLite.SQLiteParameter();
            param.ParameterName = "@Original_Tlf_StatusId";
            param.DbType = global::System.Data.DbType.Int64;
            param.DbType = global::System.Data.DbType.Int64;
            param.SourceColumn = "Tlf_StatusId";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::System.Data.SQLite.SQLiteParameter();
            param.ParameterName = "@IsNull_Tlf_DispStatus";
            param.DbType = global::System.Data.DbType.Int32;
            param.DbType = global::System.Data.DbType.Int32;
            param.SourceColumn = "Tlf_DispStatus";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::System.Data.SQLite.SQLiteParameter();
            param.ParameterName = "@Original_Tlf_DispStatus";
            param.DbType = global::System.Data.DbType.AnsiString;
            param.DbType = global::System.Data.DbType.AnsiString;
            param.SourceColumn = "Tlf_DispStatus";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::System.Data.SQLite.SQLiteParameter();
            param.ParameterName = "@Original_Tlf_KlBgId";
            param.DbType = global::System.Data.DbType.Int64;
            param.DbType = global::System.Data.DbType.Int64;
            param.SourceColumn = "Tlf_KlBgId";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::System.Data.SQLite.SQLiteParameter();
            param.ParameterName = "@IsNull_Tlf_DispKlBg";
            param.DbType = global::System.Data.DbType.Int32;
            param.DbType = global::System.Data.DbType.Int32;
            param.SourceColumn = "Tlf_DispKlBg";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::System.Data.SQLite.SQLiteParameter();
            param.ParameterName = "@Original_Tlf_DispKlBg";
            param.DbType = global::System.Data.DbType.AnsiString;
            param.DbType = global::System.Data.DbType.AnsiString;
            param.SourceColumn = "Tlf_DispKlBg";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::System.Data.SQLite.SQLiteParameter();
            param.ParameterName = "@IsNull_Tlf_Telefoonnr";
            param.DbType = global::System.Data.DbType.Int32;
            param.DbType = global::System.Data.DbType.Int32;
            param.SourceColumn = "Tlf_Telefoonnr";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::System.Data.SQLite.SQLiteParameter();
            param.ParameterName = "@Original_Tlf_Telefoonnr";
            param.DbType = global::System.Data.DbType.AnsiString;
            param.DbType = global::System.Data.DbType.AnsiString;
            param.SourceColumn = "Tlf_Telefoonnr";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::System.Data.SQLite.SQLiteParameter();
            param.ParameterName = "@Original_Tlf_Mutatiedatum";
            param.DbType = global::System.Data.DbType.DateTime;
            param.DbType = global::System.Data.DbType.DateTime;
            param.SourceColumn = "Tlf_Mutatiedatum";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::System.Data.SQLite.SQLiteParameter();
            param.ParameterName = "@IsNull_Tlf_Opmerking";
            param.DbType = global::System.Data.DbType.Int32;
            param.DbType = global::System.Data.DbType.Int32;
            param.SourceColumn = "Tlf_Opmerking";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::System.Data.SQLite.SQLiteParameter();
            param.ParameterName = "@Original_Tlf_Opmerking";
            param.DbType = global::System.Data.DbType.AnsiString;
            param.DbType = global::System.Data.DbType.AnsiString;
            param.SourceColumn = "Tlf_Opmerking";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitConnection() {
            this._connection = new global::System.Data.SQLite.SQLiteConnection();
            this._connection.ConnectionString = global::Cmbap.Properties.Settings.Default.Cmbap_dataConnectionString;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitCommandCollection() {
            this._commandCollection = new global::System.Data.SQLite.SQLiteCommand[1];
            this._commandCollection[0] = new global::System.Data.SQLite.SQLiteCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "SELECT [Tlf_Id], [Tlf_StatusId], [Tlf_DispStatus], [Tlf_KlBgId], [Tlf_DispKlBg], " +
                "[Tlf_Telefoonnr], [Tlf_Mutatiedatum], [Tlf_Opmerking] FROM [Telefoonnr]";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(_Cmbap_dataDataSet.TelefoonnrDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual _Cmbap_dataDataSet.TelefoonnrDataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            _Cmbap_dataDataSet.TelefoonnrDataTable dataTable = new _Cmbap_dataDataSet.TelefoonnrDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(_Cmbap_dataDataSet.TelefoonnrDataTable dataTable) {
            return this.Adapter.Update(dataTable);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(_Cmbap_dataDataSet dataSet) {
            return this.Adapter.Update(dataSet, "Telefoonnr");
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow dataRow) {
            return this.Adapter.Update(new global::System.Data.DataRow[] {
                        dataRow});
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow[] dataRows) {
            return this.Adapter.Update(dataRows);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Delete, true)]
        public virtual int Delete(long Original_Tlf_Id, global::System.Nullable<long> Original_Tlf_StatusId, string Original_Tlf_DispStatus, long Original_Tlf_KlBgId, string Original_Tlf_DispKlBg, string Original_Tlf_Telefoonnr, System.DateTime Original_Tlf_Mutatiedatum, string Original_Tlf_Opmerking) {
            this.Adapter.DeleteCommand.Parameters[0].Value = ((long)(Original_Tlf_Id));
            if ((Original_Tlf_StatusId.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[1].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[2].Value = ((long)(Original_Tlf_StatusId.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[1].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[2].Value = global::System.DBNull.Value;
            }
            if ((Original_Tlf_DispStatus == null)) {
                this.Adapter.DeleteCommand.Parameters[3].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[4].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[3].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[4].Value = ((string)(Original_Tlf_DispStatus));
            }
            this.Adapter.DeleteCommand.Parameters[5].Value = ((long)(Original_Tlf_KlBgId));
            if ((Original_Tlf_DispKlBg == null)) {
                this.Adapter.DeleteCommand.Parameters[6].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[7].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[6].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[7].Value = ((string)(Original_Tlf_DispKlBg));
            }
            if ((Original_Tlf_Telefoonnr == null)) {
                this.Adapter.DeleteCommand.Parameters[8].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[9].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[8].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[9].Value = ((string)(Original_Tlf_Telefoonnr));
            }
            this.Adapter.DeleteCommand.Parameters[10].Value = ((System.DateTime)(Original_Tlf_Mutatiedatum));
            if ((Original_Tlf_Opmerking == null)) {
                this.Adapter.DeleteCommand.Parameters[11].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[12].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[11].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[12].Value = ((string)(Original_Tlf_Opmerking));
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.DeleteCommand.Connection.State;
            if (((this.Adapter.DeleteCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.DeleteCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.DeleteCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.DeleteCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Insert, true)]
        public virtual int Insert(global::System.Nullable<long> Tlf_StatusId, string Tlf_DispStatus, long Tlf_KlBgId, string Tlf_DispKlBg, string Tlf_Telefoonnr, System.DateTime Tlf_Mutatiedatum, string Tlf_Opmerking) {
            if ((Tlf_StatusId.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[0].Value = ((long)(Tlf_StatusId.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[0].Value = global::System.DBNull.Value;
            }
            if ((Tlf_DispStatus == null)) {
                this.Adapter.InsertCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[1].Value = ((string)(Tlf_DispStatus));
            }
            this.Adapter.InsertCommand.Parameters[2].Value = ((long)(Tlf_KlBgId));
            if ((Tlf_DispKlBg == null)) {
                this.Adapter.InsertCommand.Parameters[3].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[3].Value = ((string)(Tlf_DispKlBg));
            }
            if ((Tlf_Telefoonnr == null)) {
                this.Adapter.InsertCommand.Parameters[4].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[4].Value = ((string)(Tlf_Telefoonnr));
            }
            this.Adapter.InsertCommand.Parameters[5].Value = ((System.DateTime)(Tlf_Mutatiedatum));
            if ((Tlf_Opmerking == null)) {
                this.Adapter.InsertCommand.Parameters[6].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[6].Value = ((string)(Tlf_Opmerking));
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.InsertCommand.Connection.State;
            if (((this.Adapter.InsertCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.InsertCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.InsertCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.InsertCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(global::System.Nullable<long> Tlf_StatusId, string Tlf_DispStatus, long Tlf_KlBgId, string Tlf_DispKlBg, string Tlf_Telefoonnr, System.DateTime Tlf_Mutatiedatum, string Tlf_Opmerking, long Original_Tlf_Id, global::System.Nullable<long> Original_Tlf_StatusId, string Original_Tlf_DispStatus, long Original_Tlf_KlBgId, string Original_Tlf_DispKlBg, string Original_Tlf_Telefoonnr, System.DateTime Original_Tlf_Mutatiedatum, string Original_Tlf_Opmerking) {
            if ((Tlf_StatusId.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[0].Value = ((long)(Tlf_StatusId.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[0].Value = global::System.DBNull.Value;
            }
            if ((Tlf_DispStatus == null)) {
                this.Adapter.UpdateCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[1].Value = ((string)(Tlf_DispStatus));
            }
            this.Adapter.UpdateCommand.Parameters[2].Value = ((long)(Tlf_KlBgId));
            if ((Tlf_DispKlBg == null)) {
                this.Adapter.UpdateCommand.Parameters[3].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[3].Value = ((string)(Tlf_DispKlBg));
            }
            if ((Tlf_Telefoonnr == null)) {
                this.Adapter.UpdateCommand.Parameters[4].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[4].Value = ((string)(Tlf_Telefoonnr));
            }
            this.Adapter.UpdateCommand.Parameters[5].Value = ((System.DateTime)(Tlf_Mutatiedatum));
            if ((Tlf_Opmerking == null)) {
                this.Adapter.UpdateCommand.Parameters[6].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[6].Value = ((string)(Tlf_Opmerking));
            }
            this.Adapter.UpdateCommand.Parameters[7].Value = ((long)(Original_Tlf_Id));
            if ((Original_Tlf_StatusId.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[8].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[9].Value = ((long)(Original_Tlf_StatusId.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[8].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[9].Value = global::System.DBNull.Value;
            }
            if ((Original_Tlf_DispStatus == null)) {
                this.Adapter.UpdateCommand.Parameters[10].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[11].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[10].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[11].Value = ((string)(Original_Tlf_DispStatus));
            }
            this.Adapter.UpdateCommand.Parameters[12].Value = ((long)(Original_Tlf_KlBgId));
            if ((Original_Tlf_DispKlBg == null)) {
                this.Adapter.UpdateCommand.Parameters[13].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[14].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[13].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[14].Value = ((string)(Original_Tlf_DispKlBg));
            }
            if ((Original_Tlf_Telefoonnr == null)) {
                this.Adapter.UpdateCommand.Parameters[15].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[16].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[15].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[16].Value = ((string)(Original_Tlf_Telefoonnr));
            }
            this.Adapter.UpdateCommand.Parameters[17].Value = ((System.DateTime)(Original_Tlf_Mutatiedatum));
            if ((Original_Tlf_Opmerking == null)) {
                this.Adapter.UpdateCommand.Parameters[18].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[19].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[18].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[19].Value = ((string)(Original_Tlf_Opmerking));
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.UpdateCommand.Connection.State;
            if (((this.Adapter.UpdateCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.UpdateCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.UpdateCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.UpdateCommand.Connection.Close();
                }
            }
        }
    }
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class UitgavenTableAdapter : global::System.ComponentModel.Component {
        
        private global::System.Data.SQLite.SQLiteDataAdapter _adapter;
        
        private global::System.Data.SQLite.SQLiteConnection _connection;
        
        private global::System.Data.SQLite.SQLiteTransaction _transaction;
        
        private global::System.Data.SQLite.SQLiteCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public UitgavenTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected internal global::System.Data.SQLite.SQLiteDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal global::System.Data.SQLite.SQLiteConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::System.Data.SQLite.SQLiteCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal global::System.Data.SQLite.SQLiteTransaction Transaction {
            get {
                return this._transaction;
            }
            set {
                this._transaction = value;
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    this.CommandCollection[i].Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.DeleteCommand != null))) {
                    this.Adapter.DeleteCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.InsertCommand != null))) {
                    this.Adapter.InsertCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.UpdateCommand != null))) {
                    this.Adapter.UpdateCommand.Transaction = this._transaction;
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected global::System.Data.SQLite.SQLiteCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitAdapter() {
            this._adapter = new global::System.Data.SQLite.SQLiteDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "Uitgaven";
            tableMapping.ColumnMappings.Add("Ugv_Id", "Ugv_Id");
            tableMapping.ColumnMappings.Add("Ugv_Datum", "Ugv_Datum");
            tableMapping.ColumnMappings.Add("Ugv_StatusId", "Ugv_StatusId");
            tableMapping.ColumnMappings.Add("Ugv_DispStatus", "Ugv_DispStatus");
            tableMapping.ColumnMappings.Add("Ugv_KlBgId", "Ugv_KlBgId");
            tableMapping.ColumnMappings.Add("Ugv_DispKlBg", "Ugv_DispKlBg");
            tableMapping.ColumnMappings.Add("Ugv_HusId", "Ugv_HusId");
            tableMapping.ColumnMappings.Add("Ugv_DispHus", "Ugv_DispHus");
            tableMapping.ColumnMappings.Add("Ugv_SusId", "Ugv_SusId");
            tableMapping.ColumnMappings.Add("Ugv_DispSus", "Ugv_DispSus");
            tableMapping.ColumnMappings.Add("Ugv_Kasbewijsnr", "Ugv_Kasbewijsnr");
            tableMapping.ColumnMappings.Add("Ugv_Bedrag", "Ugv_Bedrag");
            tableMapping.ColumnMappings.Add("Ugv_Mutatiedatum", "Ugv_Mutatiedatum");
            tableMapping.ColumnMappings.Add("Ugv_Opmerking", "Ugv_Opmerking");
            this._adapter.TableMappings.Add(tableMapping);
            this._adapter.DeleteCommand = new global::System.Data.SQLite.SQLiteCommand();
            this._adapter.DeleteCommand.Connection = this.Connection;
            this._adapter.DeleteCommand.CommandText = @"DELETE FROM [main].[sqlite_default_schema].[Uitgaven] WHERE (([Ugv_Id] = @Original_Ugv_Id) AND ([Ugv_Datum] = @Original_Ugv_Datum) AND ([Ugv_StatusId] = @Original_Ugv_StatusId) AND ((@IsNull_Ugv_DispStatus = 1 AND [Ugv_DispStatus] IS NULL) OR ([Ugv_DispStatus] = @Original_Ugv_DispStatus)) AND ([Ugv_KlBgId] = @Original_Ugv_KlBgId) AND ((@IsNull_Ugv_DispKlBg = 1 AND [Ugv_DispKlBg] IS NULL) OR ([Ugv_DispKlBg] = @Original_Ugv_DispKlBg)) AND ([Ugv_HusId] = @Original_Ugv_HusId) AND ((@IsNull_Ugv_DispHus = 1 AND [Ugv_DispHus] IS NULL) OR ([Ugv_DispHus] = @Original_Ugv_DispHus)) AND ([Ugv_SusId] = @Original_Ugv_SusId) AND ((@IsNull_Ugv_DispSus = 1 AND [Ugv_DispSus] IS NULL) OR ([Ugv_DispSus] = @Original_Ugv_DispSus)) AND ([Ugv_Kasbewijsnr] = @Original_Ugv_Kasbewijsnr) AND ((@IsNull_Ugv_Bedrag = 1 AND [Ugv_Bedrag] IS NULL) OR ([Ugv_Bedrag] = @Original_Ugv_Bedrag)) AND ([Ugv_Mutatiedatum] = @Original_Ugv_Mutatiedatum) AND ((@IsNull_Ugv_Opmerking = 1 AND [Ugv_Opmerking] IS NULL) OR ([Ugv_Opmerking] = @Original_Ugv_Opmerking)))";
            this._adapter.DeleteCommand.CommandType = global::System.Data.CommandType.Text;
            global::System.Data.SQLite.SQLiteParameter param = new global::System.Data.SQLite.SQLiteParameter();
            param.ParameterName = "@Original_Ugv_Id";
            param.DbType = global::System.Data.DbType.Int64;
            param.DbType = global::System.Data.DbType.Int64;
            param.SourceColumn = "Ugv_Id";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::System.Data.SQLite.SQLiteParameter();
            param.ParameterName = "@Original_Ugv_Datum";
            param.DbType = global::System.Data.DbType.DateTime;
            param.DbType = global::System.Data.DbType.DateTime;
            param.SourceColumn = "Ugv_Datum";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::System.Data.SQLite.SQLiteParameter();
            param.ParameterName = "@Original_Ugv_StatusId";
            param.DbType = global::System.Data.DbType.Int64;
            param.DbType = global::System.Data.DbType.Int64;
            param.SourceColumn = "Ugv_StatusId";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::System.Data.SQLite.SQLiteParameter();
            param.ParameterName = "@IsNull_Ugv_DispStatus";
            param.DbType = global::System.Data.DbType.Int32;
            param.DbType = global::System.Data.DbType.Int32;
            param.SourceColumn = "Ugv_DispStatus";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::System.Data.SQLite.SQLiteParameter();
            param.ParameterName = "@Original_Ugv_DispStatus";
            param.DbType = global::System.Data.DbType.AnsiString;
            param.DbType = global::System.Data.DbType.AnsiString;
            param.SourceColumn = "Ugv_DispStatus";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::System.Data.SQLite.SQLiteParameter();
            param.ParameterName = "@Original_Ugv_KlBgId";
            param.DbType = global::System.Data.DbType.Int64;
            param.DbType = global::System.Data.DbType.Int64;
            param.SourceColumn = "Ugv_KlBgId";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::System.Data.SQLite.SQLiteParameter();
            param.ParameterName = "@IsNull_Ugv_DispKlBg";
            param.DbType = global::System.Data.DbType.Int32;
            param.DbType = global::System.Data.DbType.Int32;
            param.SourceColumn = "Ugv_DispKlBg";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::System.Data.SQLite.SQLiteParameter();
            param.ParameterName = "@Original_Ugv_DispKlBg";
            param.DbType = global::System.Data.DbType.AnsiString;
            param.DbType = global::System.Data.DbType.AnsiString;
            param.SourceColumn = "Ugv_DispKlBg";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::System.Data.SQLite.SQLiteParameter();
            param.ParameterName = "@Original_Ugv_HusId";
            param.DbType = global::System.Data.DbType.Int64;
            param.DbType = global::System.Data.DbType.Int64;
            param.SourceColumn = "Ugv_HusId";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::System.Data.SQLite.SQLiteParameter();
            param.ParameterName = "@IsNull_Ugv_DispHus";
            param.DbType = global::System.Data.DbType.Int32;
            param.DbType = global::System.Data.DbType.Int32;
            param.SourceColumn = "Ugv_DispHus";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::System.Data.SQLite.SQLiteParameter();
            param.ParameterName = "@Original_Ugv_DispHus";
            param.DbType = global::System.Data.DbType.AnsiString;
            param.DbType = global::System.Data.DbType.AnsiString;
            param.SourceColumn = "Ugv_DispHus";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::System.Data.SQLite.SQLiteParameter();
            param.ParameterName = "@Original_Ugv_SusId";
            param.DbType = global::System.Data.DbType.Int64;
            param.DbType = global::System.Data.DbType.Int64;
            param.SourceColumn = "Ugv_SusId";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::System.Data.SQLite.SQLiteParameter();
            param.ParameterName = "@IsNull_Ugv_DispSus";
            param.DbType = global::System.Data.DbType.Int32;
            param.DbType = global::System.Data.DbType.Int32;
            param.SourceColumn = "Ugv_DispSus";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::System.Data.SQLite.SQLiteParameter();
            param.ParameterName = "@Original_Ugv_DispSus";
            param.DbType = global::System.Data.DbType.AnsiString;
            param.DbType = global::System.Data.DbType.AnsiString;
            param.SourceColumn = "Ugv_DispSus";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::System.Data.SQLite.SQLiteParameter();
            param.ParameterName = "@Original_Ugv_Kasbewijsnr";
            param.DbType = global::System.Data.DbType.AnsiString;
            param.DbType = global::System.Data.DbType.AnsiString;
            param.SourceColumn = "Ugv_Kasbewijsnr";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::System.Data.SQLite.SQLiteParameter();
            param.ParameterName = "@IsNull_Ugv_Bedrag";
            param.DbType = global::System.Data.DbType.Int32;
            param.DbType = global::System.Data.DbType.Int32;
            param.SourceColumn = "Ugv_Bedrag";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::System.Data.SQLite.SQLiteParameter();
            param.ParameterName = "@Original_Ugv_Bedrag";
            param.DbType = global::System.Data.DbType.Decimal;
            param.DbType = global::System.Data.DbType.Decimal;
            param.SourceColumn = "Ugv_Bedrag";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::System.Data.SQLite.SQLiteParameter();
            param.ParameterName = "@Original_Ugv_Mutatiedatum";
            param.DbType = global::System.Data.DbType.DateTime;
            param.DbType = global::System.Data.DbType.DateTime;
            param.SourceColumn = "Ugv_Mutatiedatum";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::System.Data.SQLite.SQLiteParameter();
            param.ParameterName = "@IsNull_Ugv_Opmerking";
            param.DbType = global::System.Data.DbType.Int32;
            param.DbType = global::System.Data.DbType.Int32;
            param.SourceColumn = "Ugv_Opmerking";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::System.Data.SQLite.SQLiteParameter();
            param.ParameterName = "@Original_Ugv_Opmerking";
            param.DbType = global::System.Data.DbType.AnsiString;
            param.DbType = global::System.Data.DbType.AnsiString;
            param.SourceColumn = "Ugv_Opmerking";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            this._adapter.InsertCommand = new global::System.Data.SQLite.SQLiteCommand();
            this._adapter.InsertCommand.Connection = this.Connection;
            this._adapter.InsertCommand.CommandText = @"INSERT INTO [main].[sqlite_default_schema].[Uitgaven] ([Ugv_Datum], [Ugv_StatusId], [Ugv_DispStatus], [Ugv_KlBgId], [Ugv_DispKlBg], [Ugv_HusId], [Ugv_DispHus], [Ugv_SusId], [Ugv_DispSus], [Ugv_Kasbewijsnr], [Ugv_Bedrag], [Ugv_Mutatiedatum], [Ugv_Opmerking]) VALUES (@Ugv_Datum, @Ugv_StatusId, @Ugv_DispStatus, @Ugv_KlBgId, @Ugv_DispKlBg, @Ugv_HusId, @Ugv_DispHus, @Ugv_SusId, @Ugv_DispSus, @Ugv_Kasbewijsnr, @Ugv_Bedrag, @Ugv_Mutatiedatum, @Ugv_Opmerking)";
            this._adapter.InsertCommand.CommandType = global::System.Data.CommandType.Text;
            param = new global::System.Data.SQLite.SQLiteParameter();
            param.ParameterName = "@Ugv_Datum";
            param.DbType = global::System.Data.DbType.DateTime;
            param.DbType = global::System.Data.DbType.DateTime;
            param.SourceColumn = "Ugv_Datum";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::System.Data.SQLite.SQLiteParameter();
            param.ParameterName = "@Ugv_StatusId";
            param.DbType = global::System.Data.DbType.Int64;
            param.DbType = global::System.Data.DbType.Int64;
            param.SourceColumn = "Ugv_StatusId";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::System.Data.SQLite.SQLiteParameter();
            param.ParameterName = "@Ugv_DispStatus";
            param.DbType = global::System.Data.DbType.AnsiString;
            param.DbType = global::System.Data.DbType.AnsiString;
            param.SourceColumn = "Ugv_DispStatus";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::System.Data.SQLite.SQLiteParameter();
            param.ParameterName = "@Ugv_KlBgId";
            param.DbType = global::System.Data.DbType.Int64;
            param.DbType = global::System.Data.DbType.Int64;
            param.SourceColumn = "Ugv_KlBgId";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::System.Data.SQLite.SQLiteParameter();
            param.ParameterName = "@Ugv_DispKlBg";
            param.DbType = global::System.Data.DbType.AnsiString;
            param.DbType = global::System.Data.DbType.AnsiString;
            param.SourceColumn = "Ugv_DispKlBg";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::System.Data.SQLite.SQLiteParameter();
            param.ParameterName = "@Ugv_HusId";
            param.DbType = global::System.Data.DbType.Int64;
            param.DbType = global::System.Data.DbType.Int64;
            param.SourceColumn = "Ugv_HusId";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::System.Data.SQLite.SQLiteParameter();
            param.ParameterName = "@Ugv_DispHus";
            param.DbType = global::System.Data.DbType.AnsiString;
            param.DbType = global::System.Data.DbType.AnsiString;
            param.SourceColumn = "Ugv_DispHus";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::System.Data.SQLite.SQLiteParameter();
            param.ParameterName = "@Ugv_SusId";
            param.DbType = global::System.Data.DbType.Int64;
            param.DbType = global::System.Data.DbType.Int64;
            param.SourceColumn = "Ugv_SusId";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::System.Data.SQLite.SQLiteParameter();
            param.ParameterName = "@Ugv_DispSus";
            param.DbType = global::System.Data.DbType.AnsiString;
            param.DbType = global::System.Data.DbType.AnsiString;
            param.SourceColumn = "Ugv_DispSus";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::System.Data.SQLite.SQLiteParameter();
            param.ParameterName = "@Ugv_Kasbewijsnr";
            param.DbType = global::System.Data.DbType.AnsiString;
            param.DbType = global::System.Data.DbType.AnsiString;
            param.SourceColumn = "Ugv_Kasbewijsnr";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::System.Data.SQLite.SQLiteParameter();
            param.ParameterName = "@Ugv_Bedrag";
            param.DbType = global::System.Data.DbType.Decimal;
            param.DbType = global::System.Data.DbType.Decimal;
            param.SourceColumn = "Ugv_Bedrag";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::System.Data.SQLite.SQLiteParameter();
            param.ParameterName = "@Ugv_Mutatiedatum";
            param.DbType = global::System.Data.DbType.DateTime;
            param.DbType = global::System.Data.DbType.DateTime;
            param.SourceColumn = "Ugv_Mutatiedatum";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::System.Data.SQLite.SQLiteParameter();
            param.ParameterName = "@Ugv_Opmerking";
            param.DbType = global::System.Data.DbType.AnsiString;
            param.DbType = global::System.Data.DbType.AnsiString;
            param.SourceColumn = "Ugv_Opmerking";
            this._adapter.InsertCommand.Parameters.Add(param);
            this._adapter.UpdateCommand = new global::System.Data.SQLite.SQLiteCommand();
            this._adapter.UpdateCommand.Connection = this.Connection;
            this._adapter.UpdateCommand.CommandText = @"UPDATE [main].[sqlite_default_schema].[Uitgaven] SET [Ugv_Datum] = @Ugv_Datum, [Ugv_StatusId] = @Ugv_StatusId, [Ugv_DispStatus] = @Ugv_DispStatus, [Ugv_KlBgId] = @Ugv_KlBgId, [Ugv_DispKlBg] = @Ugv_DispKlBg, [Ugv_HusId] = @Ugv_HusId, [Ugv_DispHus] = @Ugv_DispHus, [Ugv_SusId] = @Ugv_SusId, [Ugv_DispSus] = @Ugv_DispSus, [Ugv_Kasbewijsnr] = @Ugv_Kasbewijsnr, [Ugv_Bedrag] = @Ugv_Bedrag, [Ugv_Mutatiedatum] = @Ugv_Mutatiedatum, [Ugv_Opmerking] = @Ugv_Opmerking WHERE (([Ugv_Id] = @Original_Ugv_Id) AND ([Ugv_Datum] = @Original_Ugv_Datum) AND ([Ugv_StatusId] = @Original_Ugv_StatusId) AND ((@IsNull_Ugv_DispStatus = 1 AND [Ugv_DispStatus] IS NULL) OR ([Ugv_DispStatus] = @Original_Ugv_DispStatus)) AND ([Ugv_KlBgId] = @Original_Ugv_KlBgId) AND ((@IsNull_Ugv_DispKlBg = 1 AND [Ugv_DispKlBg] IS NULL) OR ([Ugv_DispKlBg] = @Original_Ugv_DispKlBg)) AND ([Ugv_HusId] = @Original_Ugv_HusId) AND ((@IsNull_Ugv_DispHus = 1 AND [Ugv_DispHus] IS NULL) OR ([Ugv_DispHus] = @Original_Ugv_DispHus)) AND ([Ugv_SusId] = @Original_Ugv_SusId) AND ((@IsNull_Ugv_DispSus = 1 AND [Ugv_DispSus] IS NULL) OR ([Ugv_DispSus] = @Original_Ugv_DispSus)) AND ([Ugv_Kasbewijsnr] = @Original_Ugv_Kasbewijsnr) AND ((@IsNull_Ugv_Bedrag = 1 AND [Ugv_Bedrag] IS NULL) OR ([Ugv_Bedrag] = @Original_Ugv_Bedrag)) AND ([Ugv_Mutatiedatum] = @Original_Ugv_Mutatiedatum) AND ((@IsNull_Ugv_Opmerking = 1 AND [Ugv_Opmerking] IS NULL) OR ([Ugv_Opmerking] = @Original_Ugv_Opmerking)))";
            this._adapter.UpdateCommand.CommandType = global::System.Data.CommandType.Text;
            param = new global::System.Data.SQLite.SQLiteParameter();
            param.ParameterName = "@Ugv_Datum";
            param.DbType = global::System.Data.DbType.DateTime;
            param.DbType = global::System.Data.DbType.DateTime;
            param.SourceColumn = "Ugv_Datum";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::System.Data.SQLite.SQLiteParameter();
            param.ParameterName = "@Ugv_StatusId";
            param.DbType = global::System.Data.DbType.Int64;
            param.DbType = global::System.Data.DbType.Int64;
            param.SourceColumn = "Ugv_StatusId";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::System.Data.SQLite.SQLiteParameter();
            param.ParameterName = "@Ugv_DispStatus";
            param.DbType = global::System.Data.DbType.AnsiString;
            param.DbType = global::System.Data.DbType.AnsiString;
            param.SourceColumn = "Ugv_DispStatus";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::System.Data.SQLite.SQLiteParameter();
            param.ParameterName = "@Ugv_KlBgId";
            param.DbType = global::System.Data.DbType.Int64;
            param.DbType = global::System.Data.DbType.Int64;
            param.SourceColumn = "Ugv_KlBgId";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::System.Data.SQLite.SQLiteParameter();
            param.ParameterName = "@Ugv_DispKlBg";
            param.DbType = global::System.Data.DbType.AnsiString;
            param.DbType = global::System.Data.DbType.AnsiString;
            param.SourceColumn = "Ugv_DispKlBg";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::System.Data.SQLite.SQLiteParameter();
            param.ParameterName = "@Ugv_HusId";
            param.DbType = global::System.Data.DbType.Int64;
            param.DbType = global::System.Data.DbType.Int64;
            param.SourceColumn = "Ugv_HusId";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::System.Data.SQLite.SQLiteParameter();
            param.ParameterName = "@Ugv_DispHus";
            param.DbType = global::System.Data.DbType.AnsiString;
            param.DbType = global::System.Data.DbType.AnsiString;
            param.SourceColumn = "Ugv_DispHus";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::System.Data.SQLite.SQLiteParameter();
            param.ParameterName = "@Ugv_SusId";
            param.DbType = global::System.Data.DbType.Int64;
            param.DbType = global::System.Data.DbType.Int64;
            param.SourceColumn = "Ugv_SusId";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::System.Data.SQLite.SQLiteParameter();
            param.ParameterName = "@Ugv_DispSus";
            param.DbType = global::System.Data.DbType.AnsiString;
            param.DbType = global::System.Data.DbType.AnsiString;
            param.SourceColumn = "Ugv_DispSus";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::System.Data.SQLite.SQLiteParameter();
            param.ParameterName = "@Ugv_Kasbewijsnr";
            param.DbType = global::System.Data.DbType.AnsiString;
            param.DbType = global::System.Data.DbType.AnsiString;
            param.SourceColumn = "Ugv_Kasbewijsnr";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::System.Data.SQLite.SQLiteParameter();
            param.ParameterName = "@Ugv_Bedrag";
            param.DbType = global::System.Data.DbType.Decimal;
            param.DbType = global::System.Data.DbType.Decimal;
            param.SourceColumn = "Ugv_Bedrag";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::System.Data.SQLite.SQLiteParameter();
            param.ParameterName = "@Ugv_Mutatiedatum";
            param.DbType = global::System.Data.DbType.DateTime;
            param.DbType = global::System.Data.DbType.DateTime;
            param.SourceColumn = "Ugv_Mutatiedatum";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::System.Data.SQLite.SQLiteParameter();
            param.ParameterName = "@Ugv_Opmerking";
            param.DbType = global::System.Data.DbType.AnsiString;
            param.DbType = global::System.Data.DbType.AnsiString;
            param.SourceColumn = "Ugv_Opmerking";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::System.Data.SQLite.SQLiteParameter();
            param.ParameterName = "@Original_Ugv_Id";
            param.DbType = global::System.Data.DbType.Int64;
            param.DbType = global::System.Data.DbType.Int64;
            param.SourceColumn = "Ugv_Id";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::System.Data.SQLite.SQLiteParameter();
            param.ParameterName = "@Original_Ugv_Datum";
            param.DbType = global::System.Data.DbType.DateTime;
            param.DbType = global::System.Data.DbType.DateTime;
            param.SourceColumn = "Ugv_Datum";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::System.Data.SQLite.SQLiteParameter();
            param.ParameterName = "@Original_Ugv_StatusId";
            param.DbType = global::System.Data.DbType.Int64;
            param.DbType = global::System.Data.DbType.Int64;
            param.SourceColumn = "Ugv_StatusId";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::System.Data.SQLite.SQLiteParameter();
            param.ParameterName = "@IsNull_Ugv_DispStatus";
            param.DbType = global::System.Data.DbType.Int32;
            param.DbType = global::System.Data.DbType.Int32;
            param.SourceColumn = "Ugv_DispStatus";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::System.Data.SQLite.SQLiteParameter();
            param.ParameterName = "@Original_Ugv_DispStatus";
            param.DbType = global::System.Data.DbType.AnsiString;
            param.DbType = global::System.Data.DbType.AnsiString;
            param.SourceColumn = "Ugv_DispStatus";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::System.Data.SQLite.SQLiteParameter();
            param.ParameterName = "@Original_Ugv_KlBgId";
            param.DbType = global::System.Data.DbType.Int64;
            param.DbType = global::System.Data.DbType.Int64;
            param.SourceColumn = "Ugv_KlBgId";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::System.Data.SQLite.SQLiteParameter();
            param.ParameterName = "@IsNull_Ugv_DispKlBg";
            param.DbType = global::System.Data.DbType.Int32;
            param.DbType = global::System.Data.DbType.Int32;
            param.SourceColumn = "Ugv_DispKlBg";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::System.Data.SQLite.SQLiteParameter();
            param.ParameterName = "@Original_Ugv_DispKlBg";
            param.DbType = global::System.Data.DbType.AnsiString;
            param.DbType = global::System.Data.DbType.AnsiString;
            param.SourceColumn = "Ugv_DispKlBg";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::System.Data.SQLite.SQLiteParameter();
            param.ParameterName = "@Original_Ugv_HusId";
            param.DbType = global::System.Data.DbType.Int64;
            param.DbType = global::System.Data.DbType.Int64;
            param.SourceColumn = "Ugv_HusId";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::System.Data.SQLite.SQLiteParameter();
            param.ParameterName = "@IsNull_Ugv_DispHus";
            param.DbType = global::System.Data.DbType.Int32;
            param.DbType = global::System.Data.DbType.Int32;
            param.SourceColumn = "Ugv_DispHus";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::System.Data.SQLite.SQLiteParameter();
            param.ParameterName = "@Original_Ugv_DispHus";
            param.DbType = global::System.Data.DbType.AnsiString;
            param.DbType = global::System.Data.DbType.AnsiString;
            param.SourceColumn = "Ugv_DispHus";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::System.Data.SQLite.SQLiteParameter();
            param.ParameterName = "@Original_Ugv_SusId";
            param.DbType = global::System.Data.DbType.Int64;
            param.DbType = global::System.Data.DbType.Int64;
            param.SourceColumn = "Ugv_SusId";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::System.Data.SQLite.SQLiteParameter();
            param.ParameterName = "@IsNull_Ugv_DispSus";
            param.DbType = global::System.Data.DbType.Int32;
            param.DbType = global::System.Data.DbType.Int32;
            param.SourceColumn = "Ugv_DispSus";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::System.Data.SQLite.SQLiteParameter();
            param.ParameterName = "@Original_Ugv_DispSus";
            param.DbType = global::System.Data.DbType.AnsiString;
            param.DbType = global::System.Data.DbType.AnsiString;
            param.SourceColumn = "Ugv_DispSus";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::System.Data.SQLite.SQLiteParameter();
            param.ParameterName = "@Original_Ugv_Kasbewijsnr";
            param.DbType = global::System.Data.DbType.AnsiString;
            param.DbType = global::System.Data.DbType.AnsiString;
            param.SourceColumn = "Ugv_Kasbewijsnr";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::System.Data.SQLite.SQLiteParameter();
            param.ParameterName = "@IsNull_Ugv_Bedrag";
            param.DbType = global::System.Data.DbType.Int32;
            param.DbType = global::System.Data.DbType.Int32;
            param.SourceColumn = "Ugv_Bedrag";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::System.Data.SQLite.SQLiteParameter();
            param.ParameterName = "@Original_Ugv_Bedrag";
            param.DbType = global::System.Data.DbType.Decimal;
            param.DbType = global::System.Data.DbType.Decimal;
            param.SourceColumn = "Ugv_Bedrag";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::System.Data.SQLite.SQLiteParameter();
            param.ParameterName = "@Original_Ugv_Mutatiedatum";
            param.DbType = global::System.Data.DbType.DateTime;
            param.DbType = global::System.Data.DbType.DateTime;
            param.SourceColumn = "Ugv_Mutatiedatum";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::System.Data.SQLite.SQLiteParameter();
            param.ParameterName = "@IsNull_Ugv_Opmerking";
            param.DbType = global::System.Data.DbType.Int32;
            param.DbType = global::System.Data.DbType.Int32;
            param.SourceColumn = "Ugv_Opmerking";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::System.Data.SQLite.SQLiteParameter();
            param.ParameterName = "@Original_Ugv_Opmerking";
            param.DbType = global::System.Data.DbType.AnsiString;
            param.DbType = global::System.Data.DbType.AnsiString;
            param.SourceColumn = "Ugv_Opmerking";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitConnection() {
            this._connection = new global::System.Data.SQLite.SQLiteConnection();
            this._connection.ConnectionString = global::Cmbap.Properties.Settings.Default.Cmbap_dataConnectionString;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitCommandCollection() {
            this._commandCollection = new global::System.Data.SQLite.SQLiteCommand[1];
            this._commandCollection[0] = new global::System.Data.SQLite.SQLiteCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "SELECT [Ugv_Id], [Ugv_Datum], [Ugv_StatusId], [Ugv_DispStatus], [Ugv_KlBgId], [Ug" +
                "v_DispKlBg], [Ugv_HusId], [Ugv_DispHus], [Ugv_SusId], [Ugv_DispSus], [Ugv_Kasbew" +
                "ijsnr], [Ugv_Bedrag], [Ugv_Mutatiedatum], [Ugv_Opmerking] FROM [Uitgaven]";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(_Cmbap_dataDataSet.UitgavenDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual _Cmbap_dataDataSet.UitgavenDataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            _Cmbap_dataDataSet.UitgavenDataTable dataTable = new _Cmbap_dataDataSet.UitgavenDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(_Cmbap_dataDataSet.UitgavenDataTable dataTable) {
            return this.Adapter.Update(dataTable);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(_Cmbap_dataDataSet dataSet) {
            return this.Adapter.Update(dataSet, "Uitgaven");
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow dataRow) {
            return this.Adapter.Update(new global::System.Data.DataRow[] {
                        dataRow});
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow[] dataRows) {
            return this.Adapter.Update(dataRows);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Delete, true)]
        public virtual int Delete(long Original_Ugv_Id, System.DateTime Original_Ugv_Datum, long Original_Ugv_StatusId, string Original_Ugv_DispStatus, long Original_Ugv_KlBgId, string Original_Ugv_DispKlBg, long Original_Ugv_HusId, string Original_Ugv_DispHus, long Original_Ugv_SusId, string Original_Ugv_DispSus, string Original_Ugv_Kasbewijsnr, global::System.Nullable<decimal> Original_Ugv_Bedrag, System.DateTime Original_Ugv_Mutatiedatum, string Original_Ugv_Opmerking) {
            this.Adapter.DeleteCommand.Parameters[0].Value = ((long)(Original_Ugv_Id));
            this.Adapter.DeleteCommand.Parameters[1].Value = ((System.DateTime)(Original_Ugv_Datum));
            this.Adapter.DeleteCommand.Parameters[2].Value = ((long)(Original_Ugv_StatusId));
            if ((Original_Ugv_DispStatus == null)) {
                this.Adapter.DeleteCommand.Parameters[3].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[4].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[3].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[4].Value = ((string)(Original_Ugv_DispStatus));
            }
            this.Adapter.DeleteCommand.Parameters[5].Value = ((long)(Original_Ugv_KlBgId));
            if ((Original_Ugv_DispKlBg == null)) {
                this.Adapter.DeleteCommand.Parameters[6].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[7].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[6].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[7].Value = ((string)(Original_Ugv_DispKlBg));
            }
            this.Adapter.DeleteCommand.Parameters[8].Value = ((long)(Original_Ugv_HusId));
            if ((Original_Ugv_DispHus == null)) {
                this.Adapter.DeleteCommand.Parameters[9].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[10].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[9].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[10].Value = ((string)(Original_Ugv_DispHus));
            }
            this.Adapter.DeleteCommand.Parameters[11].Value = ((long)(Original_Ugv_SusId));
            if ((Original_Ugv_DispSus == null)) {
                this.Adapter.DeleteCommand.Parameters[12].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[13].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[12].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[13].Value = ((string)(Original_Ugv_DispSus));
            }
            if ((Original_Ugv_Kasbewijsnr == null)) {
                throw new global::System.ArgumentNullException("Original_Ugv_Kasbewijsnr");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[14].Value = ((string)(Original_Ugv_Kasbewijsnr));
            }
            if ((Original_Ugv_Bedrag.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[15].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[16].Value = ((decimal)(Original_Ugv_Bedrag.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[15].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[16].Value = global::System.DBNull.Value;
            }
            this.Adapter.DeleteCommand.Parameters[17].Value = ((System.DateTime)(Original_Ugv_Mutatiedatum));
            if ((Original_Ugv_Opmerking == null)) {
                this.Adapter.DeleteCommand.Parameters[18].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[19].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[18].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[19].Value = ((string)(Original_Ugv_Opmerking));
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.DeleteCommand.Connection.State;
            if (((this.Adapter.DeleteCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.DeleteCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.DeleteCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.DeleteCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Insert, true)]
        public virtual int Insert(System.DateTime Ugv_Datum, long Ugv_StatusId, string Ugv_DispStatus, long Ugv_KlBgId, string Ugv_DispKlBg, long Ugv_HusId, string Ugv_DispHus, long Ugv_SusId, string Ugv_DispSus, string Ugv_Kasbewijsnr, global::System.Nullable<decimal> Ugv_Bedrag, System.DateTime Ugv_Mutatiedatum, string Ugv_Opmerking) {
            this.Adapter.InsertCommand.Parameters[0].Value = ((System.DateTime)(Ugv_Datum));
            this.Adapter.InsertCommand.Parameters[1].Value = ((long)(Ugv_StatusId));
            if ((Ugv_DispStatus == null)) {
                this.Adapter.InsertCommand.Parameters[2].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[2].Value = ((string)(Ugv_DispStatus));
            }
            this.Adapter.InsertCommand.Parameters[3].Value = ((long)(Ugv_KlBgId));
            if ((Ugv_DispKlBg == null)) {
                this.Adapter.InsertCommand.Parameters[4].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[4].Value = ((string)(Ugv_DispKlBg));
            }
            this.Adapter.InsertCommand.Parameters[5].Value = ((long)(Ugv_HusId));
            if ((Ugv_DispHus == null)) {
                this.Adapter.InsertCommand.Parameters[6].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[6].Value = ((string)(Ugv_DispHus));
            }
            this.Adapter.InsertCommand.Parameters[7].Value = ((long)(Ugv_SusId));
            if ((Ugv_DispSus == null)) {
                this.Adapter.InsertCommand.Parameters[8].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[8].Value = ((string)(Ugv_DispSus));
            }
            if ((Ugv_Kasbewijsnr == null)) {
                throw new global::System.ArgumentNullException("Ugv_Kasbewijsnr");
            }
            else {
                this.Adapter.InsertCommand.Parameters[9].Value = ((string)(Ugv_Kasbewijsnr));
            }
            if ((Ugv_Bedrag.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[10].Value = ((decimal)(Ugv_Bedrag.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[10].Value = global::System.DBNull.Value;
            }
            this.Adapter.InsertCommand.Parameters[11].Value = ((System.DateTime)(Ugv_Mutatiedatum));
            if ((Ugv_Opmerking == null)) {
                this.Adapter.InsertCommand.Parameters[12].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[12].Value = ((string)(Ugv_Opmerking));
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.InsertCommand.Connection.State;
            if (((this.Adapter.InsertCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.InsertCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.InsertCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.InsertCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(
                    System.DateTime Ugv_Datum, 
                    long Ugv_StatusId, 
                    string Ugv_DispStatus, 
                    long Ugv_KlBgId, 
                    string Ugv_DispKlBg, 
                    long Ugv_HusId, 
                    string Ugv_DispHus, 
                    long Ugv_SusId, 
                    string Ugv_DispSus, 
                    string Ugv_Kasbewijsnr, 
                    global::System.Nullable<decimal> Ugv_Bedrag, 
                    System.DateTime Ugv_Mutatiedatum, 
                    string Ugv_Opmerking, 
                    long Original_Ugv_Id, 
                    System.DateTime Original_Ugv_Datum, 
                    long Original_Ugv_StatusId, 
                    string Original_Ugv_DispStatus, 
                    long Original_Ugv_KlBgId, 
                    string Original_Ugv_DispKlBg, 
                    long Original_Ugv_HusId, 
                    string Original_Ugv_DispHus, 
                    long Original_Ugv_SusId, 
                    string Original_Ugv_DispSus, 
                    string Original_Ugv_Kasbewijsnr, 
                    global::System.Nullable<decimal> Original_Ugv_Bedrag, 
                    System.DateTime Original_Ugv_Mutatiedatum, 
                    string Original_Ugv_Opmerking) {
            this.Adapter.UpdateCommand.Parameters[0].Value = ((System.DateTime)(Ugv_Datum));
            this.Adapter.UpdateCommand.Parameters[1].Value = ((long)(Ugv_StatusId));
            if ((Ugv_DispStatus == null)) {
                this.Adapter.UpdateCommand.Parameters[2].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[2].Value = ((string)(Ugv_DispStatus));
            }
            this.Adapter.UpdateCommand.Parameters[3].Value = ((long)(Ugv_KlBgId));
            if ((Ugv_DispKlBg == null)) {
                this.Adapter.UpdateCommand.Parameters[4].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[4].Value = ((string)(Ugv_DispKlBg));
            }
            this.Adapter.UpdateCommand.Parameters[5].Value = ((long)(Ugv_HusId));
            if ((Ugv_DispHus == null)) {
                this.Adapter.UpdateCommand.Parameters[6].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[6].Value = ((string)(Ugv_DispHus));
            }
            this.Adapter.UpdateCommand.Parameters[7].Value = ((long)(Ugv_SusId));
            if ((Ugv_DispSus == null)) {
                this.Adapter.UpdateCommand.Parameters[8].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[8].Value = ((string)(Ugv_DispSus));
            }
            if ((Ugv_Kasbewijsnr == null)) {
                throw new global::System.ArgumentNullException("Ugv_Kasbewijsnr");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[9].Value = ((string)(Ugv_Kasbewijsnr));
            }
            if ((Ugv_Bedrag.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[10].Value = ((decimal)(Ugv_Bedrag.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[10].Value = global::System.DBNull.Value;
            }
            this.Adapter.UpdateCommand.Parameters[11].Value = ((System.DateTime)(Ugv_Mutatiedatum));
            if ((Ugv_Opmerking == null)) {
                this.Adapter.UpdateCommand.Parameters[12].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[12].Value = ((string)(Ugv_Opmerking));
            }
            this.Adapter.UpdateCommand.Parameters[13].Value = ((long)(Original_Ugv_Id));
            this.Adapter.UpdateCommand.Parameters[14].Value = ((System.DateTime)(Original_Ugv_Datum));
            this.Adapter.UpdateCommand.Parameters[15].Value = ((long)(Original_Ugv_StatusId));
            if ((Original_Ugv_DispStatus == null)) {
                this.Adapter.UpdateCommand.Parameters[16].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[17].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[16].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[17].Value = ((string)(Original_Ugv_DispStatus));
            }
            this.Adapter.UpdateCommand.Parameters[18].Value = ((long)(Original_Ugv_KlBgId));
            if ((Original_Ugv_DispKlBg == null)) {
                this.Adapter.UpdateCommand.Parameters[19].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[20].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[19].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[20].Value = ((string)(Original_Ugv_DispKlBg));
            }
            this.Adapter.UpdateCommand.Parameters[21].Value = ((long)(Original_Ugv_HusId));
            if ((Original_Ugv_DispHus == null)) {
                this.Adapter.UpdateCommand.Parameters[22].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[23].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[22].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[23].Value = ((string)(Original_Ugv_DispHus));
            }
            this.Adapter.UpdateCommand.Parameters[24].Value = ((long)(Original_Ugv_SusId));
            if ((Original_Ugv_DispSus == null)) {
                this.Adapter.UpdateCommand.Parameters[25].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[26].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[25].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[26].Value = ((string)(Original_Ugv_DispSus));
            }
            if ((Original_Ugv_Kasbewijsnr == null)) {
                throw new global::System.ArgumentNullException("Original_Ugv_Kasbewijsnr");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[27].Value = ((string)(Original_Ugv_Kasbewijsnr));
            }
            if ((Original_Ugv_Bedrag.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[28].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[29].Value = ((decimal)(Original_Ugv_Bedrag.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[28].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[29].Value = global::System.DBNull.Value;
            }
            this.Adapter.UpdateCommand.Parameters[30].Value = ((System.DateTime)(Original_Ugv_Mutatiedatum));
            if ((Original_Ugv_Opmerking == null)) {
                this.Adapter.UpdateCommand.Parameters[31].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[32].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[31].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[32].Value = ((string)(Original_Ugv_Opmerking));
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.UpdateCommand.Connection.State;
            if (((this.Adapter.UpdateCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.UpdateCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.UpdateCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.UpdateCommand.Connection.Close();
                }
            }
        }
    }
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class VerwerkperiodeTableAdapter : global::System.ComponentModel.Component {
        
        private global::System.Data.SQLite.SQLiteDataAdapter _adapter;
        
        private global::System.Data.SQLite.SQLiteConnection _connection;
        
        private global::System.Data.SQLite.SQLiteTransaction _transaction;
        
        private global::System.Data.SQLite.SQLiteCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public VerwerkperiodeTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected internal global::System.Data.SQLite.SQLiteDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal global::System.Data.SQLite.SQLiteConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::System.Data.SQLite.SQLiteCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal global::System.Data.SQLite.SQLiteTransaction Transaction {
            get {
                return this._transaction;
            }
            set {
                this._transaction = value;
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    this.CommandCollection[i].Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.DeleteCommand != null))) {
                    this.Adapter.DeleteCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.InsertCommand != null))) {
                    this.Adapter.InsertCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.UpdateCommand != null))) {
                    this.Adapter.UpdateCommand.Transaction = this._transaction;
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected global::System.Data.SQLite.SQLiteCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitAdapter() {
            this._adapter = new global::System.Data.SQLite.SQLiteDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "Verwerkperiode";
            tableMapping.ColumnMappings.Add("Vwp_Id", "Vwp_Id");
            tableMapping.ColumnMappings.Add("Vwp_StatusId", "Vwp_StatusId");
            tableMapping.ColumnMappings.Add("Vwp_Dispstatus", "Vwp_Dispstatus");
            tableMapping.ColumnMappings.Add("Vwp_Begindatum", "Vwp_Begindatum");
            tableMapping.ColumnMappings.Add("Vwp_Einddatum", "Vwp_Einddatum");
            tableMapping.ColumnMappings.Add("Vwp_Beginsaldo", "Vwp_Beginsaldo");
            tableMapping.ColumnMappings.Add("Vwp_Eindsaldo", "Vwp_Eindsaldo");
            tableMapping.ColumnMappings.Add("Vwp_Mutatiedatum", "Vwp_Mutatiedatum");
            tableMapping.ColumnMappings.Add("Vwp_Opmerking", "Vwp_Opmerking");
            this._adapter.TableMappings.Add(tableMapping);
            this._adapter.DeleteCommand = new global::System.Data.SQLite.SQLiteCommand();
            this._adapter.DeleteCommand.Connection = this.Connection;
            this._adapter.DeleteCommand.CommandText = @"DELETE FROM [main].[sqlite_default_schema].[Verwerkperiode] WHERE (([Vwp_Id] = @Original_Vwp_Id) AND ((@IsNull_Vwp_StatusId = 1 AND [Vwp_StatusId] IS NULL) OR ([Vwp_StatusId] = @Original_Vwp_StatusId)) AND ((@IsNull_Vwp_Dispstatus = 1 AND [Vwp_Dispstatus] IS NULL) OR ([Vwp_Dispstatus] = @Original_Vwp_Dispstatus)) AND ([Vwp_Begindatum] = @Original_Vwp_Begindatum) AND ([Vwp_Einddatum] = @Original_Vwp_Einddatum) AND ((@IsNull_Vwp_Beginsaldo = 1 AND [Vwp_Beginsaldo] IS NULL) OR ([Vwp_Beginsaldo] = @Original_Vwp_Beginsaldo)) AND ((@IsNull_Vwp_Eindsaldo = 1 AND [Vwp_Eindsaldo] IS NULL) OR ([Vwp_Eindsaldo] = @Original_Vwp_Eindsaldo)) AND ([Vwp_Mutatiedatum] = @Original_Vwp_Mutatiedatum) AND ((@IsNull_Vwp_Opmerking = 1 AND [Vwp_Opmerking] IS NULL) OR ([Vwp_Opmerking] = @Original_Vwp_Opmerking)))";
            this._adapter.DeleteCommand.CommandType = global::System.Data.CommandType.Text;
            global::System.Data.SQLite.SQLiteParameter param = new global::System.Data.SQLite.SQLiteParameter();
            param.ParameterName = "@Original_Vwp_Id";
            param.DbType = global::System.Data.DbType.Int64;
            param.DbType = global::System.Data.DbType.Int64;
            param.SourceColumn = "Vwp_Id";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::System.Data.SQLite.SQLiteParameter();
            param.ParameterName = "@IsNull_Vwp_StatusId";
            param.DbType = global::System.Data.DbType.Int32;
            param.DbType = global::System.Data.DbType.Int32;
            param.SourceColumn = "Vwp_StatusId";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::System.Data.SQLite.SQLiteParameter();
            param.ParameterName = "@Original_Vwp_StatusId";
            param.DbType = global::System.Data.DbType.Int64;
            param.DbType = global::System.Data.DbType.Int64;
            param.SourceColumn = "Vwp_StatusId";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::System.Data.SQLite.SQLiteParameter();
            param.ParameterName = "@IsNull_Vwp_Dispstatus";
            param.DbType = global::System.Data.DbType.Int32;
            param.DbType = global::System.Data.DbType.Int32;
            param.SourceColumn = "Vwp_Dispstatus";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::System.Data.SQLite.SQLiteParameter();
            param.ParameterName = "@Original_Vwp_Dispstatus";
            param.DbType = global::System.Data.DbType.AnsiString;
            param.DbType = global::System.Data.DbType.AnsiString;
            param.SourceColumn = "Vwp_Dispstatus";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::System.Data.SQLite.SQLiteParameter();
            param.ParameterName = "@Original_Vwp_Begindatum";
            param.DbType = global::System.Data.DbType.DateTime;
            param.DbType = global::System.Data.DbType.DateTime;
            param.SourceColumn = "Vwp_Begindatum";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::System.Data.SQLite.SQLiteParameter();
            param.ParameterName = "@Original_Vwp_Einddatum";
            param.DbType = global::System.Data.DbType.DateTime;
            param.DbType = global::System.Data.DbType.DateTime;
            param.SourceColumn = "Vwp_Einddatum";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::System.Data.SQLite.SQLiteParameter();
            param.ParameterName = "@IsNull_Vwp_Beginsaldo";
            param.DbType = global::System.Data.DbType.Int32;
            param.DbType = global::System.Data.DbType.Int32;
            param.SourceColumn = "Vwp_Beginsaldo";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::System.Data.SQLite.SQLiteParameter();
            param.ParameterName = "@Original_Vwp_Beginsaldo";
            param.DbType = global::System.Data.DbType.Decimal;
            param.DbType = global::System.Data.DbType.Decimal;
            param.SourceColumn = "Vwp_Beginsaldo";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::System.Data.SQLite.SQLiteParameter();
            param.ParameterName = "@IsNull_Vwp_Eindsaldo";
            param.DbType = global::System.Data.DbType.Int32;
            param.DbType = global::System.Data.DbType.Int32;
            param.SourceColumn = "Vwp_Eindsaldo";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::System.Data.SQLite.SQLiteParameter();
            param.ParameterName = "@Original_Vwp_Eindsaldo";
            param.DbType = global::System.Data.DbType.Decimal;
            param.DbType = global::System.Data.DbType.Decimal;
            param.SourceColumn = "Vwp_Eindsaldo";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::System.Data.SQLite.SQLiteParameter();
            param.ParameterName = "@Original_Vwp_Mutatiedatum";
            param.DbType = global::System.Data.DbType.DateTime;
            param.DbType = global::System.Data.DbType.DateTime;
            param.SourceColumn = "Vwp_Mutatiedatum";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::System.Data.SQLite.SQLiteParameter();
            param.ParameterName = "@IsNull_Vwp_Opmerking";
            param.DbType = global::System.Data.DbType.Int32;
            param.DbType = global::System.Data.DbType.Int32;
            param.SourceColumn = "Vwp_Opmerking";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::System.Data.SQLite.SQLiteParameter();
            param.ParameterName = "@Original_Vwp_Opmerking";
            param.DbType = global::System.Data.DbType.AnsiString;
            param.DbType = global::System.Data.DbType.AnsiString;
            param.SourceColumn = "Vwp_Opmerking";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            this._adapter.InsertCommand = new global::System.Data.SQLite.SQLiteCommand();
            this._adapter.InsertCommand.Connection = this.Connection;
            this._adapter.InsertCommand.CommandText = @"INSERT INTO [main].[sqlite_default_schema].[Verwerkperiode] ([Vwp_StatusId], [Vwp_Dispstatus], [Vwp_Begindatum], [Vwp_Einddatum], [Vwp_Beginsaldo], [Vwp_Eindsaldo], [Vwp_Mutatiedatum], [Vwp_Opmerking]) VALUES (@Vwp_StatusId, @Vwp_Dispstatus, @Vwp_Begindatum, @Vwp_Einddatum, @Vwp_Beginsaldo, @Vwp_Eindsaldo, @Vwp_Mutatiedatum, @Vwp_Opmerking)";
            this._adapter.InsertCommand.CommandType = global::System.Data.CommandType.Text;
            param = new global::System.Data.SQLite.SQLiteParameter();
            param.ParameterName = "@Vwp_StatusId";
            param.DbType = global::System.Data.DbType.Int64;
            param.DbType = global::System.Data.DbType.Int64;
            param.SourceColumn = "Vwp_StatusId";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::System.Data.SQLite.SQLiteParameter();
            param.ParameterName = "@Vwp_Dispstatus";
            param.DbType = global::System.Data.DbType.AnsiString;
            param.DbType = global::System.Data.DbType.AnsiString;
            param.SourceColumn = "Vwp_Dispstatus";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::System.Data.SQLite.SQLiteParameter();
            param.ParameterName = "@Vwp_Begindatum";
            param.DbType = global::System.Data.DbType.DateTime;
            param.DbType = global::System.Data.DbType.DateTime;
            param.SourceColumn = "Vwp_Begindatum";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::System.Data.SQLite.SQLiteParameter();
            param.ParameterName = "@Vwp_Einddatum";
            param.DbType = global::System.Data.DbType.DateTime;
            param.DbType = global::System.Data.DbType.DateTime;
            param.SourceColumn = "Vwp_Einddatum";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::System.Data.SQLite.SQLiteParameter();
            param.ParameterName = "@Vwp_Beginsaldo";
            param.DbType = global::System.Data.DbType.Decimal;
            param.DbType = global::System.Data.DbType.Decimal;
            param.SourceColumn = "Vwp_Beginsaldo";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::System.Data.SQLite.SQLiteParameter();
            param.ParameterName = "@Vwp_Eindsaldo";
            param.DbType = global::System.Data.DbType.Decimal;
            param.DbType = global::System.Data.DbType.Decimal;
            param.SourceColumn = "Vwp_Eindsaldo";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::System.Data.SQLite.SQLiteParameter();
            param.ParameterName = "@Vwp_Mutatiedatum";
            param.DbType = global::System.Data.DbType.DateTime;
            param.DbType = global::System.Data.DbType.DateTime;
            param.SourceColumn = "Vwp_Mutatiedatum";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::System.Data.SQLite.SQLiteParameter();
            param.ParameterName = "@Vwp_Opmerking";
            param.DbType = global::System.Data.DbType.AnsiString;
            param.DbType = global::System.Data.DbType.AnsiString;
            param.SourceColumn = "Vwp_Opmerking";
            this._adapter.InsertCommand.Parameters.Add(param);
            this._adapter.UpdateCommand = new global::System.Data.SQLite.SQLiteCommand();
            this._adapter.UpdateCommand.Connection = this.Connection;
            this._adapter.UpdateCommand.CommandText = @"UPDATE [main].[sqlite_default_schema].[Verwerkperiode] SET [Vwp_StatusId] = @Vwp_StatusId, [Vwp_Dispstatus] = @Vwp_Dispstatus, [Vwp_Begindatum] = @Vwp_Begindatum, [Vwp_Einddatum] = @Vwp_Einddatum, [Vwp_Beginsaldo] = @Vwp_Beginsaldo, [Vwp_Eindsaldo] = @Vwp_Eindsaldo, [Vwp_Mutatiedatum] = @Vwp_Mutatiedatum, [Vwp_Opmerking] = @Vwp_Opmerking WHERE (([Vwp_Id] = @Original_Vwp_Id) AND ((@IsNull_Vwp_StatusId = 1 AND [Vwp_StatusId] IS NULL) OR ([Vwp_StatusId] = @Original_Vwp_StatusId)) AND ((@IsNull_Vwp_Dispstatus = 1 AND [Vwp_Dispstatus] IS NULL) OR ([Vwp_Dispstatus] = @Original_Vwp_Dispstatus)) AND ([Vwp_Begindatum] = @Original_Vwp_Begindatum) AND ([Vwp_Einddatum] = @Original_Vwp_Einddatum) AND ((@IsNull_Vwp_Beginsaldo = 1 AND [Vwp_Beginsaldo] IS NULL) OR ([Vwp_Beginsaldo] = @Original_Vwp_Beginsaldo)) AND ((@IsNull_Vwp_Eindsaldo = 1 AND [Vwp_Eindsaldo] IS NULL) OR ([Vwp_Eindsaldo] = @Original_Vwp_Eindsaldo)) AND ([Vwp_Mutatiedatum] = @Original_Vwp_Mutatiedatum) AND ((@IsNull_Vwp_Opmerking = 1 AND [Vwp_Opmerking] IS NULL) OR ([Vwp_Opmerking] = @Original_Vwp_Opmerking)))";
            this._adapter.UpdateCommand.CommandType = global::System.Data.CommandType.Text;
            param = new global::System.Data.SQLite.SQLiteParameter();
            param.ParameterName = "@Vwp_StatusId";
            param.DbType = global::System.Data.DbType.Int64;
            param.DbType = global::System.Data.DbType.Int64;
            param.SourceColumn = "Vwp_StatusId";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::System.Data.SQLite.SQLiteParameter();
            param.ParameterName = "@Vwp_Dispstatus";
            param.DbType = global::System.Data.DbType.AnsiString;
            param.DbType = global::System.Data.DbType.AnsiString;
            param.SourceColumn = "Vwp_Dispstatus";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::System.Data.SQLite.SQLiteParameter();
            param.ParameterName = "@Vwp_Begindatum";
            param.DbType = global::System.Data.DbType.DateTime;
            param.DbType = global::System.Data.DbType.DateTime;
            param.SourceColumn = "Vwp_Begindatum";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::System.Data.SQLite.SQLiteParameter();
            param.ParameterName = "@Vwp_Einddatum";
            param.DbType = global::System.Data.DbType.DateTime;
            param.DbType = global::System.Data.DbType.DateTime;
            param.SourceColumn = "Vwp_Einddatum";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::System.Data.SQLite.SQLiteParameter();
            param.ParameterName = "@Vwp_Beginsaldo";
            param.DbType = global::System.Data.DbType.Decimal;
            param.DbType = global::System.Data.DbType.Decimal;
            param.SourceColumn = "Vwp_Beginsaldo";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::System.Data.SQLite.SQLiteParameter();
            param.ParameterName = "@Vwp_Eindsaldo";
            param.DbType = global::System.Data.DbType.Decimal;
            param.DbType = global::System.Data.DbType.Decimal;
            param.SourceColumn = "Vwp_Eindsaldo";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::System.Data.SQLite.SQLiteParameter();
            param.ParameterName = "@Vwp_Mutatiedatum";
            param.DbType = global::System.Data.DbType.DateTime;
            param.DbType = global::System.Data.DbType.DateTime;
            param.SourceColumn = "Vwp_Mutatiedatum";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::System.Data.SQLite.SQLiteParameter();
            param.ParameterName = "@Vwp_Opmerking";
            param.DbType = global::System.Data.DbType.AnsiString;
            param.DbType = global::System.Data.DbType.AnsiString;
            param.SourceColumn = "Vwp_Opmerking";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::System.Data.SQLite.SQLiteParameter();
            param.ParameterName = "@Original_Vwp_Id";
            param.DbType = global::System.Data.DbType.Int64;
            param.DbType = global::System.Data.DbType.Int64;
            param.SourceColumn = "Vwp_Id";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::System.Data.SQLite.SQLiteParameter();
            param.ParameterName = "@IsNull_Vwp_StatusId";
            param.DbType = global::System.Data.DbType.Int32;
            param.DbType = global::System.Data.DbType.Int32;
            param.SourceColumn = "Vwp_StatusId";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::System.Data.SQLite.SQLiteParameter();
            param.ParameterName = "@Original_Vwp_StatusId";
            param.DbType = global::System.Data.DbType.Int64;
            param.DbType = global::System.Data.DbType.Int64;
            param.SourceColumn = "Vwp_StatusId";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::System.Data.SQLite.SQLiteParameter();
            param.ParameterName = "@IsNull_Vwp_Dispstatus";
            param.DbType = global::System.Data.DbType.Int32;
            param.DbType = global::System.Data.DbType.Int32;
            param.SourceColumn = "Vwp_Dispstatus";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::System.Data.SQLite.SQLiteParameter();
            param.ParameterName = "@Original_Vwp_Dispstatus";
            param.DbType = global::System.Data.DbType.AnsiString;
            param.DbType = global::System.Data.DbType.AnsiString;
            param.SourceColumn = "Vwp_Dispstatus";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::System.Data.SQLite.SQLiteParameter();
            param.ParameterName = "@Original_Vwp_Begindatum";
            param.DbType = global::System.Data.DbType.DateTime;
            param.DbType = global::System.Data.DbType.DateTime;
            param.SourceColumn = "Vwp_Begindatum";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::System.Data.SQLite.SQLiteParameter();
            param.ParameterName = "@Original_Vwp_Einddatum";
            param.DbType = global::System.Data.DbType.DateTime;
            param.DbType = global::System.Data.DbType.DateTime;
            param.SourceColumn = "Vwp_Einddatum";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::System.Data.SQLite.SQLiteParameter();
            param.ParameterName = "@IsNull_Vwp_Beginsaldo";
            param.DbType = global::System.Data.DbType.Int32;
            param.DbType = global::System.Data.DbType.Int32;
            param.SourceColumn = "Vwp_Beginsaldo";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::System.Data.SQLite.SQLiteParameter();
            param.ParameterName = "@Original_Vwp_Beginsaldo";
            param.DbType = global::System.Data.DbType.Decimal;
            param.DbType = global::System.Data.DbType.Decimal;
            param.SourceColumn = "Vwp_Beginsaldo";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::System.Data.SQLite.SQLiteParameter();
            param.ParameterName = "@IsNull_Vwp_Eindsaldo";
            param.DbType = global::System.Data.DbType.Int32;
            param.DbType = global::System.Data.DbType.Int32;
            param.SourceColumn = "Vwp_Eindsaldo";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::System.Data.SQLite.SQLiteParameter();
            param.ParameterName = "@Original_Vwp_Eindsaldo";
            param.DbType = global::System.Data.DbType.Decimal;
            param.DbType = global::System.Data.DbType.Decimal;
            param.SourceColumn = "Vwp_Eindsaldo";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::System.Data.SQLite.SQLiteParameter();
            param.ParameterName = "@Original_Vwp_Mutatiedatum";
            param.DbType = global::System.Data.DbType.DateTime;
            param.DbType = global::System.Data.DbType.DateTime;
            param.SourceColumn = "Vwp_Mutatiedatum";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::System.Data.SQLite.SQLiteParameter();
            param.ParameterName = "@IsNull_Vwp_Opmerking";
            param.DbType = global::System.Data.DbType.Int32;
            param.DbType = global::System.Data.DbType.Int32;
            param.SourceColumn = "Vwp_Opmerking";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::System.Data.SQLite.SQLiteParameter();
            param.ParameterName = "@Original_Vwp_Opmerking";
            param.DbType = global::System.Data.DbType.AnsiString;
            param.DbType = global::System.Data.DbType.AnsiString;
            param.SourceColumn = "Vwp_Opmerking";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitConnection() {
            this._connection = new global::System.Data.SQLite.SQLiteConnection();
            this._connection.ConnectionString = global::Cmbap.Properties.Settings.Default.Cmbap_dataConnectionString;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitCommandCollection() {
            this._commandCollection = new global::System.Data.SQLite.SQLiteCommand[1];
            this._commandCollection[0] = new global::System.Data.SQLite.SQLiteCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "SELECT [Vwp_Id], [Vwp_StatusId], [Vwp_Dispstatus], [Vwp_Begindatum], [Vwp_Einddat" +
                "um], [Vwp_Beginsaldo], [Vwp_Eindsaldo], [Vwp_Mutatiedatum], [Vwp_Opmerking] FROM" +
                " [Verwerkperiode]";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(_Cmbap_dataDataSet.VerwerkperiodeDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual _Cmbap_dataDataSet.VerwerkperiodeDataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            _Cmbap_dataDataSet.VerwerkperiodeDataTable dataTable = new _Cmbap_dataDataSet.VerwerkperiodeDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(_Cmbap_dataDataSet.VerwerkperiodeDataTable dataTable) {
            return this.Adapter.Update(dataTable);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(_Cmbap_dataDataSet dataSet) {
            return this.Adapter.Update(dataSet, "Verwerkperiode");
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow dataRow) {
            return this.Adapter.Update(new global::System.Data.DataRow[] {
                        dataRow});
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow[] dataRows) {
            return this.Adapter.Update(dataRows);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Delete, true)]
        public virtual int Delete(long Original_Vwp_Id, global::System.Nullable<long> Original_Vwp_StatusId, string Original_Vwp_Dispstatus, System.DateTime Original_Vwp_Begindatum, System.DateTime Original_Vwp_Einddatum, global::System.Nullable<decimal> Original_Vwp_Beginsaldo, global::System.Nullable<decimal> Original_Vwp_Eindsaldo, System.DateTime Original_Vwp_Mutatiedatum, string Original_Vwp_Opmerking) {
            this.Adapter.DeleteCommand.Parameters[0].Value = ((long)(Original_Vwp_Id));
            if ((Original_Vwp_StatusId.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[1].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[2].Value = ((long)(Original_Vwp_StatusId.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[1].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[2].Value = global::System.DBNull.Value;
            }
            if ((Original_Vwp_Dispstatus == null)) {
                this.Adapter.DeleteCommand.Parameters[3].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[4].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[3].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[4].Value = ((string)(Original_Vwp_Dispstatus));
            }
            this.Adapter.DeleteCommand.Parameters[5].Value = ((System.DateTime)(Original_Vwp_Begindatum));
            this.Adapter.DeleteCommand.Parameters[6].Value = ((System.DateTime)(Original_Vwp_Einddatum));
            if ((Original_Vwp_Beginsaldo.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[7].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[8].Value = ((decimal)(Original_Vwp_Beginsaldo.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[7].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[8].Value = global::System.DBNull.Value;
            }
            if ((Original_Vwp_Eindsaldo.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[9].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[10].Value = ((decimal)(Original_Vwp_Eindsaldo.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[9].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[10].Value = global::System.DBNull.Value;
            }
            this.Adapter.DeleteCommand.Parameters[11].Value = ((System.DateTime)(Original_Vwp_Mutatiedatum));
            if ((Original_Vwp_Opmerking == null)) {
                this.Adapter.DeleteCommand.Parameters[12].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[13].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[12].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[13].Value = ((string)(Original_Vwp_Opmerking));
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.DeleteCommand.Connection.State;
            if (((this.Adapter.DeleteCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.DeleteCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.DeleteCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.DeleteCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Insert, true)]
        public virtual int Insert(global::System.Nullable<long> Vwp_StatusId, string Vwp_Dispstatus, System.DateTime Vwp_Begindatum, System.DateTime Vwp_Einddatum, global::System.Nullable<decimal> Vwp_Beginsaldo, global::System.Nullable<decimal> Vwp_Eindsaldo, System.DateTime Vwp_Mutatiedatum, string Vwp_Opmerking) {
            if ((Vwp_StatusId.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[0].Value = ((long)(Vwp_StatusId.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[0].Value = global::System.DBNull.Value;
            }
            if ((Vwp_Dispstatus == null)) {
                this.Adapter.InsertCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[1].Value = ((string)(Vwp_Dispstatus));
            }
            this.Adapter.InsertCommand.Parameters[2].Value = ((System.DateTime)(Vwp_Begindatum));
            this.Adapter.InsertCommand.Parameters[3].Value = ((System.DateTime)(Vwp_Einddatum));
            if ((Vwp_Beginsaldo.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[4].Value = ((decimal)(Vwp_Beginsaldo.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[4].Value = global::System.DBNull.Value;
            }
            if ((Vwp_Eindsaldo.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[5].Value = ((decimal)(Vwp_Eindsaldo.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[5].Value = global::System.DBNull.Value;
            }
            this.Adapter.InsertCommand.Parameters[6].Value = ((System.DateTime)(Vwp_Mutatiedatum));
            if ((Vwp_Opmerking == null)) {
                this.Adapter.InsertCommand.Parameters[7].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[7].Value = ((string)(Vwp_Opmerking));
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.InsertCommand.Connection.State;
            if (((this.Adapter.InsertCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.InsertCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.InsertCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.InsertCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(
                    global::System.Nullable<long> Vwp_StatusId, 
                    string Vwp_Dispstatus, 
                    System.DateTime Vwp_Begindatum, 
                    System.DateTime Vwp_Einddatum, 
                    global::System.Nullable<decimal> Vwp_Beginsaldo, 
                    global::System.Nullable<decimal> Vwp_Eindsaldo, 
                    System.DateTime Vwp_Mutatiedatum, 
                    string Vwp_Opmerking, 
                    long Original_Vwp_Id, 
                    global::System.Nullable<long> Original_Vwp_StatusId, 
                    string Original_Vwp_Dispstatus, 
                    System.DateTime Original_Vwp_Begindatum, 
                    System.DateTime Original_Vwp_Einddatum, 
                    global::System.Nullable<decimal> Original_Vwp_Beginsaldo, 
                    global::System.Nullable<decimal> Original_Vwp_Eindsaldo, 
                    System.DateTime Original_Vwp_Mutatiedatum, 
                    string Original_Vwp_Opmerking) {
            if ((Vwp_StatusId.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[0].Value = ((long)(Vwp_StatusId.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[0].Value = global::System.DBNull.Value;
            }
            if ((Vwp_Dispstatus == null)) {
                this.Adapter.UpdateCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[1].Value = ((string)(Vwp_Dispstatus));
            }
            this.Adapter.UpdateCommand.Parameters[2].Value = ((System.DateTime)(Vwp_Begindatum));
            this.Adapter.UpdateCommand.Parameters[3].Value = ((System.DateTime)(Vwp_Einddatum));
            if ((Vwp_Beginsaldo.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[4].Value = ((decimal)(Vwp_Beginsaldo.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[4].Value = global::System.DBNull.Value;
            }
            if ((Vwp_Eindsaldo.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[5].Value = ((decimal)(Vwp_Eindsaldo.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[5].Value = global::System.DBNull.Value;
            }
            this.Adapter.UpdateCommand.Parameters[6].Value = ((System.DateTime)(Vwp_Mutatiedatum));
            if ((Vwp_Opmerking == null)) {
                this.Adapter.UpdateCommand.Parameters[7].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[7].Value = ((string)(Vwp_Opmerking));
            }
            this.Adapter.UpdateCommand.Parameters[8].Value = ((long)(Original_Vwp_Id));
            if ((Original_Vwp_StatusId.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[9].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[10].Value = ((long)(Original_Vwp_StatusId.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[9].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[10].Value = global::System.DBNull.Value;
            }
            if ((Original_Vwp_Dispstatus == null)) {
                this.Adapter.UpdateCommand.Parameters[11].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[12].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[11].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[12].Value = ((string)(Original_Vwp_Dispstatus));
            }
            this.Adapter.UpdateCommand.Parameters[13].Value = ((System.DateTime)(Original_Vwp_Begindatum));
            this.Adapter.UpdateCommand.Parameters[14].Value = ((System.DateTime)(Original_Vwp_Einddatum));
            if ((Original_Vwp_Beginsaldo.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[15].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[16].Value = ((decimal)(Original_Vwp_Beginsaldo.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[15].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[16].Value = global::System.DBNull.Value;
            }
            if ((Original_Vwp_Eindsaldo.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[17].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[18].Value = ((decimal)(Original_Vwp_Eindsaldo.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[17].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[18].Value = global::System.DBNull.Value;
            }
            this.Adapter.UpdateCommand.Parameters[19].Value = ((System.DateTime)(Original_Vwp_Mutatiedatum));
            if ((Original_Vwp_Opmerking == null)) {
                this.Adapter.UpdateCommand.Parameters[20].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[21].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[20].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[21].Value = ((string)(Original_Vwp_Opmerking));
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.UpdateCommand.Connection.State;
            if (((this.Adapter.UpdateCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.UpdateCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.UpdateCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.UpdateCommand.Connection.Close();
                }
            }
        }
    }
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class VoorraadTableAdapter : global::System.ComponentModel.Component {
        
        private global::System.Data.SQLite.SQLiteDataAdapter _adapter;
        
        private global::System.Data.SQLite.SQLiteConnection _connection;
        
        private global::System.Data.SQLite.SQLiteTransaction _transaction;
        
        private global::System.Data.SQLite.SQLiteCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public VoorraadTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected internal global::System.Data.SQLite.SQLiteDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal global::System.Data.SQLite.SQLiteConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::System.Data.SQLite.SQLiteCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal global::System.Data.SQLite.SQLiteTransaction Transaction {
            get {
                return this._transaction;
            }
            set {
                this._transaction = value;
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    this.CommandCollection[i].Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.DeleteCommand != null))) {
                    this.Adapter.DeleteCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.InsertCommand != null))) {
                    this.Adapter.InsertCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.UpdateCommand != null))) {
                    this.Adapter.UpdateCommand.Transaction = this._transaction;
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected global::System.Data.SQLite.SQLiteCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitAdapter() {
            this._adapter = new global::System.Data.SQLite.SQLiteDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "Voorraad";
            tableMapping.ColumnMappings.Add("Vrrd_Id", "Vrrd_Id");
            tableMapping.ColumnMappings.Add("Vrrd_JgegId", "Vrrd_JgegId");
            tableMapping.ColumnMappings.Add("Vrrd_DispJgeg", "Vrrd_DispJgeg");
            tableMapping.ColumnMappings.Add("Vrrd_StatusId", "Vrrd_StatusId");
            tableMapping.ColumnMappings.Add("Vrrd_Dispstatus", "Vrrd_Dispstatus");
            tableMapping.ColumnMappings.Add("Vrrd_ProdId", "Vrrd_ProdId");
            tableMapping.ColumnMappings.Add("Vrrd_DispProduct", "Vrrd_DispProduct");
            tableMapping.ColumnMappings.Add("Vrrd_Inventarisatiedatum", "Vrrd_Inventarisatiedatum");
            tableMapping.ColumnMappings.Add("Vrrd_Aantal", "Vrrd_Aantal");
            tableMapping.ColumnMappings.Add("Vrrd_Laagste_productnr", "Vrrd_Laagste_productnr");
            tableMapping.ColumnMappings.Add("Vrrd_Hoogste_productnr", "Vrrd_Hoogste_productnr");
            tableMapping.ColumnMappings.Add("Vrrd_Mutatiedatum", "Vrrd_Mutatiedatum");
            tableMapping.ColumnMappings.Add("Vrrd_Opmerking", "Vrrd_Opmerking");
            this._adapter.TableMappings.Add(tableMapping);
            this._adapter.DeleteCommand = new global::System.Data.SQLite.SQLiteCommand();
            this._adapter.DeleteCommand.Connection = this.Connection;
            this._adapter.DeleteCommand.CommandText = @"DELETE FROM [main].[sqlite_default_schema].[Voorraad] WHERE (([Vrrd_Id] = @Original_Vrrd_Id) AND ((@IsNull_Vrrd_JgegId = 1 AND [Vrrd_JgegId] IS NULL) OR ([Vrrd_JgegId] = @Original_Vrrd_JgegId)) AND ((@IsNull_Vrrd_DispJgeg = 1 AND [Vrrd_DispJgeg] IS NULL) OR ([Vrrd_DispJgeg] = @Original_Vrrd_DispJgeg)) AND ((@IsNull_Vrrd_StatusId = 1 AND [Vrrd_StatusId] IS NULL) OR ([Vrrd_StatusId] = @Original_Vrrd_StatusId)) AND ((@IsNull_Vrrd_Dispstatus = 1 AND [Vrrd_Dispstatus] IS NULL) OR ([Vrrd_Dispstatus] = @Original_Vrrd_Dispstatus)) AND ((@IsNull_Vrrd_ProdId = 1 AND [Vrrd_ProdId] IS NULL) OR ([Vrrd_ProdId] = @Original_Vrrd_ProdId)) AND ((@IsNull_Vrrd_DispProduct = 1 AND [Vrrd_DispProduct] IS NULL) OR ([Vrrd_DispProduct] = @Original_Vrrd_DispProduct)) AND ((@IsNull_Vrrd_Inventarisatiedatum = 1 AND [Vrrd_Inventarisatiedatum] IS NULL) OR ([Vrrd_Inventarisatiedatum] = @Original_Vrrd_Inventarisatiedatum)) AND ((@IsNull_Vrrd_Aantal = 1 AND [Vrrd_Aantal] IS NULL) OR ([Vrrd_Aantal] = @Original_Vrrd_Aantal)) AND ((@IsNull_Vrrd_Laagste_productnr = 1 AND [Vrrd_Laagste_productnr] IS NULL) OR ([Vrrd_Laagste_productnr] = @Original_Vrrd_Laagste_productnr)) AND ((@IsNull_Vrrd_Hoogste_productnr = 1 AND [Vrrd_Hoogste_productnr] IS NULL) OR ([Vrrd_Hoogste_productnr] = @Original_Vrrd_Hoogste_productnr)) AND ([Vrrd_Mutatiedatum] = @Original_Vrrd_Mutatiedatum) AND ((@IsNull_Vrrd_Opmerking = 1 AND [Vrrd_Opmerking] IS NULL) OR ([Vrrd_Opmerking] = @Original_Vrrd_Opmerking)))";
            this._adapter.DeleteCommand.CommandType = global::System.Data.CommandType.Text;
            global::System.Data.SQLite.SQLiteParameter param = new global::System.Data.SQLite.SQLiteParameter();
            param.ParameterName = "@Original_Vrrd_Id";
            param.DbType = global::System.Data.DbType.Int64;
            param.DbType = global::System.Data.DbType.Int64;
            param.SourceColumn = "Vrrd_Id";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::System.Data.SQLite.SQLiteParameter();
            param.ParameterName = "@IsNull_Vrrd_JgegId";
            param.DbType = global::System.Data.DbType.Int32;
            param.DbType = global::System.Data.DbType.Int32;
            param.SourceColumn = "Vrrd_JgegId";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::System.Data.SQLite.SQLiteParameter();
            param.ParameterName = "@Original_Vrrd_JgegId";
            param.DbType = global::System.Data.DbType.Int64;
            param.DbType = global::System.Data.DbType.Int64;
            param.SourceColumn = "Vrrd_JgegId";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::System.Data.SQLite.SQLiteParameter();
            param.ParameterName = "@IsNull_Vrrd_DispJgeg";
            param.DbType = global::System.Data.DbType.Int32;
            param.DbType = global::System.Data.DbType.Int32;
            param.SourceColumn = "Vrrd_DispJgeg";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::System.Data.SQLite.SQLiteParameter();
            param.ParameterName = "@Original_Vrrd_DispJgeg";
            param.DbType = global::System.Data.DbType.AnsiString;
            param.DbType = global::System.Data.DbType.AnsiString;
            param.SourceColumn = "Vrrd_DispJgeg";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::System.Data.SQLite.SQLiteParameter();
            param.ParameterName = "@IsNull_Vrrd_StatusId";
            param.DbType = global::System.Data.DbType.Int32;
            param.DbType = global::System.Data.DbType.Int32;
            param.SourceColumn = "Vrrd_StatusId";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::System.Data.SQLite.SQLiteParameter();
            param.ParameterName = "@Original_Vrrd_StatusId";
            param.DbType = global::System.Data.DbType.Int64;
            param.DbType = global::System.Data.DbType.Int64;
            param.SourceColumn = "Vrrd_StatusId";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::System.Data.SQLite.SQLiteParameter();
            param.ParameterName = "@IsNull_Vrrd_Dispstatus";
            param.DbType = global::System.Data.DbType.Int32;
            param.DbType = global::System.Data.DbType.Int32;
            param.SourceColumn = "Vrrd_Dispstatus";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::System.Data.SQLite.SQLiteParameter();
            param.ParameterName = "@Original_Vrrd_Dispstatus";
            param.DbType = global::System.Data.DbType.AnsiString;
            param.DbType = global::System.Data.DbType.AnsiString;
            param.SourceColumn = "Vrrd_Dispstatus";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::System.Data.SQLite.SQLiteParameter();
            param.ParameterName = "@IsNull_Vrrd_ProdId";
            param.DbType = global::System.Data.DbType.Int32;
            param.DbType = global::System.Data.DbType.Int32;
            param.SourceColumn = "Vrrd_ProdId";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::System.Data.SQLite.SQLiteParameter();
            param.ParameterName = "@Original_Vrrd_ProdId";
            param.DbType = global::System.Data.DbType.Int64;
            param.DbType = global::System.Data.DbType.Int64;
            param.SourceColumn = "Vrrd_ProdId";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::System.Data.SQLite.SQLiteParameter();
            param.ParameterName = "@IsNull_Vrrd_DispProduct";
            param.DbType = global::System.Data.DbType.Int32;
            param.DbType = global::System.Data.DbType.Int32;
            param.SourceColumn = "Vrrd_DispProduct";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::System.Data.SQLite.SQLiteParameter();
            param.ParameterName = "@Original_Vrrd_DispProduct";
            param.DbType = global::System.Data.DbType.AnsiString;
            param.DbType = global::System.Data.DbType.AnsiString;
            param.SourceColumn = "Vrrd_DispProduct";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::System.Data.SQLite.SQLiteParameter();
            param.ParameterName = "@IsNull_Vrrd_Inventarisatiedatum";
            param.DbType = global::System.Data.DbType.Int32;
            param.DbType = global::System.Data.DbType.Int32;
            param.SourceColumn = "Vrrd_Inventarisatiedatum";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::System.Data.SQLite.SQLiteParameter();
            param.ParameterName = "@Original_Vrrd_Inventarisatiedatum";
            param.DbType = global::System.Data.DbType.DateTime;
            param.DbType = global::System.Data.DbType.DateTime;
            param.SourceColumn = "Vrrd_Inventarisatiedatum";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::System.Data.SQLite.SQLiteParameter();
            param.ParameterName = "@IsNull_Vrrd_Aantal";
            param.DbType = global::System.Data.DbType.Int32;
            param.DbType = global::System.Data.DbType.Int32;
            param.SourceColumn = "Vrrd_Aantal";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::System.Data.SQLite.SQLiteParameter();
            param.ParameterName = "@Original_Vrrd_Aantal";
            param.DbType = global::System.Data.DbType.Int64;
            param.DbType = global::System.Data.DbType.Int64;
            param.SourceColumn = "Vrrd_Aantal";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::System.Data.SQLite.SQLiteParameter();
            param.ParameterName = "@IsNull_Vrrd_Laagste_productnr";
            param.DbType = global::System.Data.DbType.Int32;
            param.DbType = global::System.Data.DbType.Int32;
            param.SourceColumn = "Vrrd_Laagste_productnr";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::System.Data.SQLite.SQLiteParameter();
            param.ParameterName = "@Original_Vrrd_Laagste_productnr";
            param.DbType = global::System.Data.DbType.Int64;
            param.DbType = global::System.Data.DbType.Int64;
            param.SourceColumn = "Vrrd_Laagste_productnr";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::System.Data.SQLite.SQLiteParameter();
            param.ParameterName = "@IsNull_Vrrd_Hoogste_productnr";
            param.DbType = global::System.Data.DbType.Int32;
            param.DbType = global::System.Data.DbType.Int32;
            param.SourceColumn = "Vrrd_Hoogste_productnr";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::System.Data.SQLite.SQLiteParameter();
            param.ParameterName = "@Original_Vrrd_Hoogste_productnr";
            param.DbType = global::System.Data.DbType.Int64;
            param.DbType = global::System.Data.DbType.Int64;
            param.SourceColumn = "Vrrd_Hoogste_productnr";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::System.Data.SQLite.SQLiteParameter();
            param.ParameterName = "@Original_Vrrd_Mutatiedatum";
            param.DbType = global::System.Data.DbType.DateTime;
            param.DbType = global::System.Data.DbType.DateTime;
            param.SourceColumn = "Vrrd_Mutatiedatum";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::System.Data.SQLite.SQLiteParameter();
            param.ParameterName = "@IsNull_Vrrd_Opmerking";
            param.DbType = global::System.Data.DbType.Int32;
            param.DbType = global::System.Data.DbType.Int32;
            param.SourceColumn = "Vrrd_Opmerking";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::System.Data.SQLite.SQLiteParameter();
            param.ParameterName = "@Original_Vrrd_Opmerking";
            param.DbType = global::System.Data.DbType.AnsiString;
            param.DbType = global::System.Data.DbType.AnsiString;
            param.SourceColumn = "Vrrd_Opmerking";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            this._adapter.InsertCommand = new global::System.Data.SQLite.SQLiteCommand();
            this._adapter.InsertCommand.Connection = this.Connection;
            this._adapter.InsertCommand.CommandText = @"INSERT INTO [main].[sqlite_default_schema].[Voorraad] ([Vrrd_JgegId], [Vrrd_DispJgeg], [Vrrd_StatusId], [Vrrd_Dispstatus], [Vrrd_ProdId], [Vrrd_DispProduct], [Vrrd_Inventarisatiedatum], [Vrrd_Aantal], [Vrrd_Laagste_productnr], [Vrrd_Hoogste_productnr], [Vrrd_Mutatiedatum], [Vrrd_Opmerking]) VALUES (@Vrrd_JgegId, @Vrrd_DispJgeg, @Vrrd_StatusId, @Vrrd_Dispstatus, @Vrrd_ProdId, @Vrrd_DispProduct, @Vrrd_Inventarisatiedatum, @Vrrd_Aantal, @Vrrd_Laagste_productnr, @Vrrd_Hoogste_productnr, @Vrrd_Mutatiedatum, @Vrrd_Opmerking)";
            this._adapter.InsertCommand.CommandType = global::System.Data.CommandType.Text;
            param = new global::System.Data.SQLite.SQLiteParameter();
            param.ParameterName = "@Vrrd_JgegId";
            param.DbType = global::System.Data.DbType.Int64;
            param.DbType = global::System.Data.DbType.Int64;
            param.SourceColumn = "Vrrd_JgegId";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::System.Data.SQLite.SQLiteParameter();
            param.ParameterName = "@Vrrd_DispJgeg";
            param.DbType = global::System.Data.DbType.AnsiString;
            param.DbType = global::System.Data.DbType.AnsiString;
            param.SourceColumn = "Vrrd_DispJgeg";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::System.Data.SQLite.SQLiteParameter();
            param.ParameterName = "@Vrrd_StatusId";
            param.DbType = global::System.Data.DbType.Int64;
            param.DbType = global::System.Data.DbType.Int64;
            param.SourceColumn = "Vrrd_StatusId";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::System.Data.SQLite.SQLiteParameter();
            param.ParameterName = "@Vrrd_Dispstatus";
            param.DbType = global::System.Data.DbType.AnsiString;
            param.DbType = global::System.Data.DbType.AnsiString;
            param.SourceColumn = "Vrrd_Dispstatus";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::System.Data.SQLite.SQLiteParameter();
            param.ParameterName = "@Vrrd_ProdId";
            param.DbType = global::System.Data.DbType.Int64;
            param.DbType = global::System.Data.DbType.Int64;
            param.SourceColumn = "Vrrd_ProdId";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::System.Data.SQLite.SQLiteParameter();
            param.ParameterName = "@Vrrd_DispProduct";
            param.DbType = global::System.Data.DbType.AnsiString;
            param.DbType = global::System.Data.DbType.AnsiString;
            param.SourceColumn = "Vrrd_DispProduct";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::System.Data.SQLite.SQLiteParameter();
            param.ParameterName = "@Vrrd_Inventarisatiedatum";
            param.DbType = global::System.Data.DbType.DateTime;
            param.DbType = global::System.Data.DbType.DateTime;
            param.SourceColumn = "Vrrd_Inventarisatiedatum";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::System.Data.SQLite.SQLiteParameter();
            param.ParameterName = "@Vrrd_Aantal";
            param.DbType = global::System.Data.DbType.Int64;
            param.DbType = global::System.Data.DbType.Int64;
            param.SourceColumn = "Vrrd_Aantal";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::System.Data.SQLite.SQLiteParameter();
            param.ParameterName = "@Vrrd_Laagste_productnr";
            param.DbType = global::System.Data.DbType.Int64;
            param.DbType = global::System.Data.DbType.Int64;
            param.SourceColumn = "Vrrd_Laagste_productnr";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::System.Data.SQLite.SQLiteParameter();
            param.ParameterName = "@Vrrd_Hoogste_productnr";
            param.DbType = global::System.Data.DbType.Int64;
            param.DbType = global::System.Data.DbType.Int64;
            param.SourceColumn = "Vrrd_Hoogste_productnr";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::System.Data.SQLite.SQLiteParameter();
            param.ParameterName = "@Vrrd_Mutatiedatum";
            param.DbType = global::System.Data.DbType.DateTime;
            param.DbType = global::System.Data.DbType.DateTime;
            param.SourceColumn = "Vrrd_Mutatiedatum";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::System.Data.SQLite.SQLiteParameter();
            param.ParameterName = "@Vrrd_Opmerking";
            param.DbType = global::System.Data.DbType.AnsiString;
            param.DbType = global::System.Data.DbType.AnsiString;
            param.SourceColumn = "Vrrd_Opmerking";
            this._adapter.InsertCommand.Parameters.Add(param);
            this._adapter.UpdateCommand = new global::System.Data.SQLite.SQLiteCommand();
            this._adapter.UpdateCommand.Connection = this.Connection;
            this._adapter.UpdateCommand.CommandText = "UPDATE [main].[sqlite_default_schema].[Voorraad] SET [Vrrd_JgegId] = @Vrrd_JgegId" +
                ", [Vrrd_DispJgeg] = @Vrrd_DispJgeg, [Vrrd_StatusId] = @Vrrd_StatusId, [Vrrd_Disp" +
                "status] = @Vrrd_Dispstatus, [Vrrd_ProdId] = @Vrrd_ProdId, [Vrrd_DispProduct] = @" +
                "Vrrd_DispProduct, [Vrrd_Inventarisatiedatum] = @Vrrd_Inventarisatiedatum, [Vrrd_" +
                "Aantal] = @Vrrd_Aantal, [Vrrd_Laagste_productnr] = @Vrrd_Laagste_productnr, [Vrr" +
                "d_Hoogste_productnr] = @Vrrd_Hoogste_productnr, [Vrrd_Mutatiedatum] = @Vrrd_Muta" +
                "tiedatum, [Vrrd_Opmerking] = @Vrrd_Opmerking WHERE (([Vrrd_Id] = @Original_Vrrd_" +
                "Id) AND ((@IsNull_Vrrd_JgegId = 1 AND [Vrrd_JgegId] IS NULL) OR ([Vrrd_JgegId] =" +
                " @Original_Vrrd_JgegId)) AND ((@IsNull_Vrrd_DispJgeg = 1 AND [Vrrd_DispJgeg] IS " +
                "NULL) OR ([Vrrd_DispJgeg] = @Original_Vrrd_DispJgeg)) AND ((@IsNull_Vrrd_StatusI" +
                "d = 1 AND [Vrrd_StatusId] IS NULL) OR ([Vrrd_StatusId] = @Original_Vrrd_StatusId" +
                ")) AND ((@IsNull_Vrrd_Dispstatus = 1 AND [Vrrd_Dispstatus] IS NULL) OR ([Vrrd_Di" +
                "spstatus] = @Original_Vrrd_Dispstatus)) AND ((@IsNull_Vrrd_ProdId = 1 AND [Vrrd_" +
                "ProdId] IS NULL) OR ([Vrrd_ProdId] = @Original_Vrrd_ProdId)) AND ((@IsNull_Vrrd_" +
                "DispProduct = 1 AND [Vrrd_DispProduct] IS NULL) OR ([Vrrd_DispProduct] = @Origin" +
                "al_Vrrd_DispProduct)) AND ((@IsNull_Vrrd_Inventarisatiedatum = 1 AND [Vrrd_Inven" +
                "tarisatiedatum] IS NULL) OR ([Vrrd_Inventarisatiedatum] = @Original_Vrrd_Inventa" +
                "risatiedatum)) AND ((@IsNull_Vrrd_Aantal = 1 AND [Vrrd_Aantal] IS NULL) OR ([Vrr" +
                "d_Aantal] = @Original_Vrrd_Aantal)) AND ((@IsNull_Vrrd_Laagste_productnr = 1 AND" +
                " [Vrrd_Laagste_productnr] IS NULL) OR ([Vrrd_Laagste_productnr] = @Original_Vrrd" +
                "_Laagste_productnr)) AND ((@IsNull_Vrrd_Hoogste_productnr = 1 AND [Vrrd_Hoogste_" +
                "productnr] IS NULL) OR ([Vrrd_Hoogste_productnr] = @Original_Vrrd_Hoogste_produc" +
                "tnr)) AND ([Vrrd_Mutatiedatum] = @Original_Vrrd_Mutatiedatum) AND ((@IsNull_Vrrd" +
                "_Opmerking = 1 AND [Vrrd_Opmerking] IS NULL) OR ([Vrrd_Opmerking] = @Original_Vr" +
                "rd_Opmerking)))";
            this._adapter.UpdateCommand.CommandType = global::System.Data.CommandType.Text;
            param = new global::System.Data.SQLite.SQLiteParameter();
            param.ParameterName = "@Vrrd_JgegId";
            param.DbType = global::System.Data.DbType.Int64;
            param.DbType = global::System.Data.DbType.Int64;
            param.SourceColumn = "Vrrd_JgegId";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::System.Data.SQLite.SQLiteParameter();
            param.ParameterName = "@Vrrd_DispJgeg";
            param.DbType = global::System.Data.DbType.AnsiString;
            param.DbType = global::System.Data.DbType.AnsiString;
            param.SourceColumn = "Vrrd_DispJgeg";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::System.Data.SQLite.SQLiteParameter();
            param.ParameterName = "@Vrrd_StatusId";
            param.DbType = global::System.Data.DbType.Int64;
            param.DbType = global::System.Data.DbType.Int64;
            param.SourceColumn = "Vrrd_StatusId";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::System.Data.SQLite.SQLiteParameter();
            param.ParameterName = "@Vrrd_Dispstatus";
            param.DbType = global::System.Data.DbType.AnsiString;
            param.DbType = global::System.Data.DbType.AnsiString;
            param.SourceColumn = "Vrrd_Dispstatus";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::System.Data.SQLite.SQLiteParameter();
            param.ParameterName = "@Vrrd_ProdId";
            param.DbType = global::System.Data.DbType.Int64;
            param.DbType = global::System.Data.DbType.Int64;
            param.SourceColumn = "Vrrd_ProdId";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::System.Data.SQLite.SQLiteParameter();
            param.ParameterName = "@Vrrd_DispProduct";
            param.DbType = global::System.Data.DbType.AnsiString;
            param.DbType = global::System.Data.DbType.AnsiString;
            param.SourceColumn = "Vrrd_DispProduct";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::System.Data.SQLite.SQLiteParameter();
            param.ParameterName = "@Vrrd_Inventarisatiedatum";
            param.DbType = global::System.Data.DbType.DateTime;
            param.DbType = global::System.Data.DbType.DateTime;
            param.SourceColumn = "Vrrd_Inventarisatiedatum";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::System.Data.SQLite.SQLiteParameter();
            param.ParameterName = "@Vrrd_Aantal";
            param.DbType = global::System.Data.DbType.Int64;
            param.DbType = global::System.Data.DbType.Int64;
            param.SourceColumn = "Vrrd_Aantal";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::System.Data.SQLite.SQLiteParameter();
            param.ParameterName = "@Vrrd_Laagste_productnr";
            param.DbType = global::System.Data.DbType.Int64;
            param.DbType = global::System.Data.DbType.Int64;
            param.SourceColumn = "Vrrd_Laagste_productnr";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::System.Data.SQLite.SQLiteParameter();
            param.ParameterName = "@Vrrd_Hoogste_productnr";
            param.DbType = global::System.Data.DbType.Int64;
            param.DbType = global::System.Data.DbType.Int64;
            param.SourceColumn = "Vrrd_Hoogste_productnr";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::System.Data.SQLite.SQLiteParameter();
            param.ParameterName = "@Vrrd_Mutatiedatum";
            param.DbType = global::System.Data.DbType.DateTime;
            param.DbType = global::System.Data.DbType.DateTime;
            param.SourceColumn = "Vrrd_Mutatiedatum";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::System.Data.SQLite.SQLiteParameter();
            param.ParameterName = "@Vrrd_Opmerking";
            param.DbType = global::System.Data.DbType.AnsiString;
            param.DbType = global::System.Data.DbType.AnsiString;
            param.SourceColumn = "Vrrd_Opmerking";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::System.Data.SQLite.SQLiteParameter();
            param.ParameterName = "@Original_Vrrd_Id";
            param.DbType = global::System.Data.DbType.Int64;
            param.DbType = global::System.Data.DbType.Int64;
            param.SourceColumn = "Vrrd_Id";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::System.Data.SQLite.SQLiteParameter();
            param.ParameterName = "@IsNull_Vrrd_JgegId";
            param.DbType = global::System.Data.DbType.Int32;
            param.DbType = global::System.Data.DbType.Int32;
            param.SourceColumn = "Vrrd_JgegId";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::System.Data.SQLite.SQLiteParameter();
            param.ParameterName = "@Original_Vrrd_JgegId";
            param.DbType = global::System.Data.DbType.Int64;
            param.DbType = global::System.Data.DbType.Int64;
            param.SourceColumn = "Vrrd_JgegId";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::System.Data.SQLite.SQLiteParameter();
            param.ParameterName = "@IsNull_Vrrd_DispJgeg";
            param.DbType = global::System.Data.DbType.Int32;
            param.DbType = global::System.Data.DbType.Int32;
            param.SourceColumn = "Vrrd_DispJgeg";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::System.Data.SQLite.SQLiteParameter();
            param.ParameterName = "@Original_Vrrd_DispJgeg";
            param.DbType = global::System.Data.DbType.AnsiString;
            param.DbType = global::System.Data.DbType.AnsiString;
            param.SourceColumn = "Vrrd_DispJgeg";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::System.Data.SQLite.SQLiteParameter();
            param.ParameterName = "@IsNull_Vrrd_StatusId";
            param.DbType = global::System.Data.DbType.Int32;
            param.DbType = global::System.Data.DbType.Int32;
            param.SourceColumn = "Vrrd_StatusId";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::System.Data.SQLite.SQLiteParameter();
            param.ParameterName = "@Original_Vrrd_StatusId";
            param.DbType = global::System.Data.DbType.Int64;
            param.DbType = global::System.Data.DbType.Int64;
            param.SourceColumn = "Vrrd_StatusId";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::System.Data.SQLite.SQLiteParameter();
            param.ParameterName = "@IsNull_Vrrd_Dispstatus";
            param.DbType = global::System.Data.DbType.Int32;
            param.DbType = global::System.Data.DbType.Int32;
            param.SourceColumn = "Vrrd_Dispstatus";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::System.Data.SQLite.SQLiteParameter();
            param.ParameterName = "@Original_Vrrd_Dispstatus";
            param.DbType = global::System.Data.DbType.AnsiString;
            param.DbType = global::System.Data.DbType.AnsiString;
            param.SourceColumn = "Vrrd_Dispstatus";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::System.Data.SQLite.SQLiteParameter();
            param.ParameterName = "@IsNull_Vrrd_ProdId";
            param.DbType = global::System.Data.DbType.Int32;
            param.DbType = global::System.Data.DbType.Int32;
            param.SourceColumn = "Vrrd_ProdId";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::System.Data.SQLite.SQLiteParameter();
            param.ParameterName = "@Original_Vrrd_ProdId";
            param.DbType = global::System.Data.DbType.Int64;
            param.DbType = global::System.Data.DbType.Int64;
            param.SourceColumn = "Vrrd_ProdId";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::System.Data.SQLite.SQLiteParameter();
            param.ParameterName = "@IsNull_Vrrd_DispProduct";
            param.DbType = global::System.Data.DbType.Int32;
            param.DbType = global::System.Data.DbType.Int32;
            param.SourceColumn = "Vrrd_DispProduct";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::System.Data.SQLite.SQLiteParameter();
            param.ParameterName = "@Original_Vrrd_DispProduct";
            param.DbType = global::System.Data.DbType.AnsiString;
            param.DbType = global::System.Data.DbType.AnsiString;
            param.SourceColumn = "Vrrd_DispProduct";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::System.Data.SQLite.SQLiteParameter();
            param.ParameterName = "@IsNull_Vrrd_Inventarisatiedatum";
            param.DbType = global::System.Data.DbType.Int32;
            param.DbType = global::System.Data.DbType.Int32;
            param.SourceColumn = "Vrrd_Inventarisatiedatum";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::System.Data.SQLite.SQLiteParameter();
            param.ParameterName = "@Original_Vrrd_Inventarisatiedatum";
            param.DbType = global::System.Data.DbType.DateTime;
            param.DbType = global::System.Data.DbType.DateTime;
            param.SourceColumn = "Vrrd_Inventarisatiedatum";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::System.Data.SQLite.SQLiteParameter();
            param.ParameterName = "@IsNull_Vrrd_Aantal";
            param.DbType = global::System.Data.DbType.Int32;
            param.DbType = global::System.Data.DbType.Int32;
            param.SourceColumn = "Vrrd_Aantal";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::System.Data.SQLite.SQLiteParameter();
            param.ParameterName = "@Original_Vrrd_Aantal";
            param.DbType = global::System.Data.DbType.Int64;
            param.DbType = global::System.Data.DbType.Int64;
            param.SourceColumn = "Vrrd_Aantal";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::System.Data.SQLite.SQLiteParameter();
            param.ParameterName = "@IsNull_Vrrd_Laagste_productnr";
            param.DbType = global::System.Data.DbType.Int32;
            param.DbType = global::System.Data.DbType.Int32;
            param.SourceColumn = "Vrrd_Laagste_productnr";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::System.Data.SQLite.SQLiteParameter();
            param.ParameterName = "@Original_Vrrd_Laagste_productnr";
            param.DbType = global::System.Data.DbType.Int64;
            param.DbType = global::System.Data.DbType.Int64;
            param.SourceColumn = "Vrrd_Laagste_productnr";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::System.Data.SQLite.SQLiteParameter();
            param.ParameterName = "@IsNull_Vrrd_Hoogste_productnr";
            param.DbType = global::System.Data.DbType.Int32;
            param.DbType = global::System.Data.DbType.Int32;
            param.SourceColumn = "Vrrd_Hoogste_productnr";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::System.Data.SQLite.SQLiteParameter();
            param.ParameterName = "@Original_Vrrd_Hoogste_productnr";
            param.DbType = global::System.Data.DbType.Int64;
            param.DbType = global::System.Data.DbType.Int64;
            param.SourceColumn = "Vrrd_Hoogste_productnr";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::System.Data.SQLite.SQLiteParameter();
            param.ParameterName = "@Original_Vrrd_Mutatiedatum";
            param.DbType = global::System.Data.DbType.DateTime;
            param.DbType = global::System.Data.DbType.DateTime;
            param.SourceColumn = "Vrrd_Mutatiedatum";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::System.Data.SQLite.SQLiteParameter();
            param.ParameterName = "@IsNull_Vrrd_Opmerking";
            param.DbType = global::System.Data.DbType.Int32;
            param.DbType = global::System.Data.DbType.Int32;
            param.SourceColumn = "Vrrd_Opmerking";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::System.Data.SQLite.SQLiteParameter();
            param.ParameterName = "@Original_Vrrd_Opmerking";
            param.DbType = global::System.Data.DbType.AnsiString;
            param.DbType = global::System.Data.DbType.AnsiString;
            param.SourceColumn = "Vrrd_Opmerking";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitConnection() {
            this._connection = new global::System.Data.SQLite.SQLiteConnection();
            this._connection.ConnectionString = global::Cmbap.Properties.Settings.Default.Cmbap_dataConnectionString;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitCommandCollection() {
            this._commandCollection = new global::System.Data.SQLite.SQLiteCommand[1];
            this._commandCollection[0] = new global::System.Data.SQLite.SQLiteCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = @"SELECT [Vrrd_Id], [Vrrd_JgegId], [Vrrd_DispJgeg], [Vrrd_StatusId], [Vrrd_Dispstatus], [Vrrd_ProdId], [Vrrd_DispProduct], [Vrrd_Inventarisatiedatum], [Vrrd_Aantal], [Vrrd_Laagste_productnr], [Vrrd_Hoogste_productnr], [Vrrd_Mutatiedatum], [Vrrd_Opmerking] FROM [Voorraad]";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(_Cmbap_dataDataSet.VoorraadDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual _Cmbap_dataDataSet.VoorraadDataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            _Cmbap_dataDataSet.VoorraadDataTable dataTable = new _Cmbap_dataDataSet.VoorraadDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(_Cmbap_dataDataSet.VoorraadDataTable dataTable) {
            return this.Adapter.Update(dataTable);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(_Cmbap_dataDataSet dataSet) {
            return this.Adapter.Update(dataSet, "Voorraad");
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow dataRow) {
            return this.Adapter.Update(new global::System.Data.DataRow[] {
                        dataRow});
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow[] dataRows) {
            return this.Adapter.Update(dataRows);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Delete, true)]
        public virtual int Delete(long Original_Vrrd_Id, global::System.Nullable<long> Original_Vrrd_JgegId, string Original_Vrrd_DispJgeg, global::System.Nullable<long> Original_Vrrd_StatusId, string Original_Vrrd_Dispstatus, global::System.Nullable<long> Original_Vrrd_ProdId, string Original_Vrrd_DispProduct, global::System.Nullable<global::System.DateTime> Original_Vrrd_Inventarisatiedatum, global::System.Nullable<long> Original_Vrrd_Aantal, global::System.Nullable<long> Original_Vrrd_Laagste_productnr, global::System.Nullable<long> Original_Vrrd_Hoogste_productnr, System.DateTime Original_Vrrd_Mutatiedatum, string Original_Vrrd_Opmerking) {
            this.Adapter.DeleteCommand.Parameters[0].Value = ((long)(Original_Vrrd_Id));
            if ((Original_Vrrd_JgegId.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[1].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[2].Value = ((long)(Original_Vrrd_JgegId.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[1].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[2].Value = global::System.DBNull.Value;
            }
            if ((Original_Vrrd_DispJgeg == null)) {
                this.Adapter.DeleteCommand.Parameters[3].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[4].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[3].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[4].Value = ((string)(Original_Vrrd_DispJgeg));
            }
            if ((Original_Vrrd_StatusId.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[5].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[6].Value = ((long)(Original_Vrrd_StatusId.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[5].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[6].Value = global::System.DBNull.Value;
            }
            if ((Original_Vrrd_Dispstatus == null)) {
                this.Adapter.DeleteCommand.Parameters[7].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[8].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[7].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[8].Value = ((string)(Original_Vrrd_Dispstatus));
            }
            if ((Original_Vrrd_ProdId.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[9].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[10].Value = ((long)(Original_Vrrd_ProdId.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[9].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[10].Value = global::System.DBNull.Value;
            }
            if ((Original_Vrrd_DispProduct == null)) {
                this.Adapter.DeleteCommand.Parameters[11].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[12].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[11].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[12].Value = ((string)(Original_Vrrd_DispProduct));
            }
            if ((Original_Vrrd_Inventarisatiedatum.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[13].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[14].Value = ((System.DateTime)(Original_Vrrd_Inventarisatiedatum.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[13].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[14].Value = global::System.DBNull.Value;
            }
            if ((Original_Vrrd_Aantal.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[15].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[16].Value = ((long)(Original_Vrrd_Aantal.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[15].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[16].Value = global::System.DBNull.Value;
            }
            if ((Original_Vrrd_Laagste_productnr.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[17].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[18].Value = ((long)(Original_Vrrd_Laagste_productnr.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[17].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[18].Value = global::System.DBNull.Value;
            }
            if ((Original_Vrrd_Hoogste_productnr.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[19].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[20].Value = ((long)(Original_Vrrd_Hoogste_productnr.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[19].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[20].Value = global::System.DBNull.Value;
            }
            this.Adapter.DeleteCommand.Parameters[21].Value = ((System.DateTime)(Original_Vrrd_Mutatiedatum));
            if ((Original_Vrrd_Opmerking == null)) {
                this.Adapter.DeleteCommand.Parameters[22].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[23].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[22].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[23].Value = ((string)(Original_Vrrd_Opmerking));
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.DeleteCommand.Connection.State;
            if (((this.Adapter.DeleteCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.DeleteCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.DeleteCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.DeleteCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Insert, true)]
        public virtual int Insert(global::System.Nullable<long> Vrrd_JgegId, string Vrrd_DispJgeg, global::System.Nullable<long> Vrrd_StatusId, string Vrrd_Dispstatus, global::System.Nullable<long> Vrrd_ProdId, string Vrrd_DispProduct, global::System.Nullable<global::System.DateTime> Vrrd_Inventarisatiedatum, global::System.Nullable<long> Vrrd_Aantal, global::System.Nullable<long> Vrrd_Laagste_productnr, global::System.Nullable<long> Vrrd_Hoogste_productnr, System.DateTime Vrrd_Mutatiedatum, string Vrrd_Opmerking) {
            if ((Vrrd_JgegId.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[0].Value = ((long)(Vrrd_JgegId.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[0].Value = global::System.DBNull.Value;
            }
            if ((Vrrd_DispJgeg == null)) {
                this.Adapter.InsertCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[1].Value = ((string)(Vrrd_DispJgeg));
            }
            if ((Vrrd_StatusId.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[2].Value = ((long)(Vrrd_StatusId.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[2].Value = global::System.DBNull.Value;
            }
            if ((Vrrd_Dispstatus == null)) {
                this.Adapter.InsertCommand.Parameters[3].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[3].Value = ((string)(Vrrd_Dispstatus));
            }
            if ((Vrrd_ProdId.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[4].Value = ((long)(Vrrd_ProdId.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[4].Value = global::System.DBNull.Value;
            }
            if ((Vrrd_DispProduct == null)) {
                this.Adapter.InsertCommand.Parameters[5].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[5].Value = ((string)(Vrrd_DispProduct));
            }
            if ((Vrrd_Inventarisatiedatum.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[6].Value = ((System.DateTime)(Vrrd_Inventarisatiedatum.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[6].Value = global::System.DBNull.Value;
            }
            if ((Vrrd_Aantal.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[7].Value = ((long)(Vrrd_Aantal.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[7].Value = global::System.DBNull.Value;
            }
            if ((Vrrd_Laagste_productnr.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[8].Value = ((long)(Vrrd_Laagste_productnr.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[8].Value = global::System.DBNull.Value;
            }
            if ((Vrrd_Hoogste_productnr.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[9].Value = ((long)(Vrrd_Hoogste_productnr.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[9].Value = global::System.DBNull.Value;
            }
            this.Adapter.InsertCommand.Parameters[10].Value = ((System.DateTime)(Vrrd_Mutatiedatum));
            if ((Vrrd_Opmerking == null)) {
                this.Adapter.InsertCommand.Parameters[11].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[11].Value = ((string)(Vrrd_Opmerking));
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.InsertCommand.Connection.State;
            if (((this.Adapter.InsertCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.InsertCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.InsertCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.InsertCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(
                    global::System.Nullable<long> Vrrd_JgegId, 
                    string Vrrd_DispJgeg, 
                    global::System.Nullable<long> Vrrd_StatusId, 
                    string Vrrd_Dispstatus, 
                    global::System.Nullable<long> Vrrd_ProdId, 
                    string Vrrd_DispProduct, 
                    global::System.Nullable<global::System.DateTime> Vrrd_Inventarisatiedatum, 
                    global::System.Nullable<long> Vrrd_Aantal, 
                    global::System.Nullable<long> Vrrd_Laagste_productnr, 
                    global::System.Nullable<long> Vrrd_Hoogste_productnr, 
                    System.DateTime Vrrd_Mutatiedatum, 
                    string Vrrd_Opmerking, 
                    long Original_Vrrd_Id, 
                    global::System.Nullable<long> Original_Vrrd_JgegId, 
                    string Original_Vrrd_DispJgeg, 
                    global::System.Nullable<long> Original_Vrrd_StatusId, 
                    string Original_Vrrd_Dispstatus, 
                    global::System.Nullable<long> Original_Vrrd_ProdId, 
                    string Original_Vrrd_DispProduct, 
                    global::System.Nullable<global::System.DateTime> Original_Vrrd_Inventarisatiedatum, 
                    global::System.Nullable<long> Original_Vrrd_Aantal, 
                    global::System.Nullable<long> Original_Vrrd_Laagste_productnr, 
                    global::System.Nullable<long> Original_Vrrd_Hoogste_productnr, 
                    System.DateTime Original_Vrrd_Mutatiedatum, 
                    string Original_Vrrd_Opmerking) {
            if ((Vrrd_JgegId.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[0].Value = ((long)(Vrrd_JgegId.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[0].Value = global::System.DBNull.Value;
            }
            if ((Vrrd_DispJgeg == null)) {
                this.Adapter.UpdateCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[1].Value = ((string)(Vrrd_DispJgeg));
            }
            if ((Vrrd_StatusId.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[2].Value = ((long)(Vrrd_StatusId.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[2].Value = global::System.DBNull.Value;
            }
            if ((Vrrd_Dispstatus == null)) {
                this.Adapter.UpdateCommand.Parameters[3].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[3].Value = ((string)(Vrrd_Dispstatus));
            }
            if ((Vrrd_ProdId.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[4].Value = ((long)(Vrrd_ProdId.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[4].Value = global::System.DBNull.Value;
            }
            if ((Vrrd_DispProduct == null)) {
                this.Adapter.UpdateCommand.Parameters[5].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[5].Value = ((string)(Vrrd_DispProduct));
            }
            if ((Vrrd_Inventarisatiedatum.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[6].Value = ((System.DateTime)(Vrrd_Inventarisatiedatum.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[6].Value = global::System.DBNull.Value;
            }
            if ((Vrrd_Aantal.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[7].Value = ((long)(Vrrd_Aantal.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[7].Value = global::System.DBNull.Value;
            }
            if ((Vrrd_Laagste_productnr.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[8].Value = ((long)(Vrrd_Laagste_productnr.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[8].Value = global::System.DBNull.Value;
            }
            if ((Vrrd_Hoogste_productnr.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[9].Value = ((long)(Vrrd_Hoogste_productnr.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[9].Value = global::System.DBNull.Value;
            }
            this.Adapter.UpdateCommand.Parameters[10].Value = ((System.DateTime)(Vrrd_Mutatiedatum));
            if ((Vrrd_Opmerking == null)) {
                this.Adapter.UpdateCommand.Parameters[11].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[11].Value = ((string)(Vrrd_Opmerking));
            }
            this.Adapter.UpdateCommand.Parameters[12].Value = ((long)(Original_Vrrd_Id));
            if ((Original_Vrrd_JgegId.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[13].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[14].Value = ((long)(Original_Vrrd_JgegId.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[13].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[14].Value = global::System.DBNull.Value;
            }
            if ((Original_Vrrd_DispJgeg == null)) {
                this.Adapter.UpdateCommand.Parameters[15].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[16].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[15].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[16].Value = ((string)(Original_Vrrd_DispJgeg));
            }
            if ((Original_Vrrd_StatusId.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[17].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[18].Value = ((long)(Original_Vrrd_StatusId.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[17].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[18].Value = global::System.DBNull.Value;
            }
            if ((Original_Vrrd_Dispstatus == null)) {
                this.Adapter.UpdateCommand.Parameters[19].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[20].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[19].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[20].Value = ((string)(Original_Vrrd_Dispstatus));
            }
            if ((Original_Vrrd_ProdId.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[21].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[22].Value = ((long)(Original_Vrrd_ProdId.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[21].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[22].Value = global::System.DBNull.Value;
            }
            if ((Original_Vrrd_DispProduct == null)) {
                this.Adapter.UpdateCommand.Parameters[23].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[24].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[23].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[24].Value = ((string)(Original_Vrrd_DispProduct));
            }
            if ((Original_Vrrd_Inventarisatiedatum.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[25].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[26].Value = ((System.DateTime)(Original_Vrrd_Inventarisatiedatum.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[25].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[26].Value = global::System.DBNull.Value;
            }
            if ((Original_Vrrd_Aantal.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[27].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[28].Value = ((long)(Original_Vrrd_Aantal.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[27].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[28].Value = global::System.DBNull.Value;
            }
            if ((Original_Vrrd_Laagste_productnr.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[29].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[30].Value = ((long)(Original_Vrrd_Laagste_productnr.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[29].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[30].Value = global::System.DBNull.Value;
            }
            if ((Original_Vrrd_Hoogste_productnr.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[31].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[32].Value = ((long)(Original_Vrrd_Hoogste_productnr.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[31].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[32].Value = global::System.DBNull.Value;
            }
            this.Adapter.UpdateCommand.Parameters[33].Value = ((System.DateTime)(Original_Vrrd_Mutatiedatum));
            if ((Original_Vrrd_Opmerking == null)) {
                this.Adapter.UpdateCommand.Parameters[34].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[35].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[34].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[35].Value = ((string)(Original_Vrrd_Opmerking));
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.UpdateCommand.Connection.State;
            if (((this.Adapter.UpdateCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.UpdateCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.UpdateCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.UpdateCommand.Connection.Close();
                }
            }
        }
    }
    
    /// <summary>
    ///TableAdapterManager is used to coordinate TableAdapters in the dataset to enable Hierarchical Update scenarios
    ///</summary>
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerDesigner, Microsoft.VSD" +
        "esigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapterManager")]
    public partial class TableAdapterManager : global::System.ComponentModel.Component {
        
        private UpdateOrderOption _updateOrder;
        
        private AdresgegevensTableAdapter _adresgegevensTableAdapter;
        
        private BankgironrTableAdapter _bankgironrTableAdapter;
        
        private BankregelTableAdapter _bankregelTableAdapter;
        
        private BestellingTableAdapter _bestellingTableAdapter;
        
        private BestelregelTableAdapter _bestelregelTableAdapter;
        
        private Component_tekstTableAdapter _component_tekstTableAdapter;
        
        private DbFilesTableAdapter _dbFilesTableAdapter;
        
        private EmailTableAdapter _emailTableAdapter;
        
        private EmailadresTableAdapter _emailadresTableAdapter;
        
        private GebruikerTableAdapter _gebruikerTableAdapter;
        
        private HoofdcategorieTableAdapter _hoofdcategorieTableAdapter;
        
        private HoofdUitgavesoortTableAdapter _hoofdUitgavesoortTableAdapter;
        
        private InstellingenTableAdapter _instellingenTableAdapter;
        
        private JaargegevensTableAdapter _jaargegevensTableAdapter;
        
        private JaarsaldoTableAdapter _jaarsaldoTableAdapter;
        
        private Klant_BegunstigdeTableAdapter _klant_BegunstigdeTableAdapter;
        
        private Licentie_controleTableAdapter _licentie_controleTableAdapter;
        
        private LogTableAdapter _logTableAdapter;
        
        private ProductTableAdapter _productTableAdapter;
        
        private ProgramerrorTableAdapter _programerrorTableAdapter;
        
        private SaldostandTableAdapter _saldostandTableAdapter;
        
        private StatusTableAdapter _statusTableAdapter;
        
        private SubcategorieTableAdapter _subcategorieTableAdapter;
        
        private SubUitgavesoortTableAdapter _subUitgavesoortTableAdapter;
        
        private TelefoonnrTableAdapter _telefoonnrTableAdapter;
        
        private UitgavenTableAdapter _uitgavenTableAdapter;
        
        private VerwerkperiodeTableAdapter _verwerkperiodeTableAdapter;
        
        private VoorraadTableAdapter _voorraadTableAdapter;
        
        private bool _backupDataSetBeforeUpdate;
        
        private global::System.Data.IDbConnection _connection;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public UpdateOrderOption UpdateOrder {
            get {
                return this._updateOrder;
            }
            set {
                this._updateOrder = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.EditorAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerPropertyEditor, Microso" +
            "ft.VSDesigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3" +
            "a", "System.Drawing.Design.UITypeEditor")]
        public AdresgegevensTableAdapter AdresgegevensTableAdapter {
            get {
                return this._adresgegevensTableAdapter;
            }
            set {
                this._adresgegevensTableAdapter = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.EditorAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerPropertyEditor, Microso" +
            "ft.VSDesigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3" +
            "a", "System.Drawing.Design.UITypeEditor")]
        public BankgironrTableAdapter BankgironrTableAdapter {
            get {
                return this._bankgironrTableAdapter;
            }
            set {
                this._bankgironrTableAdapter = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.EditorAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerPropertyEditor, Microso" +
            "ft.VSDesigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3" +
            "a", "System.Drawing.Design.UITypeEditor")]
        public BankregelTableAdapter BankregelTableAdapter {
            get {
                return this._bankregelTableAdapter;
            }
            set {
                this._bankregelTableAdapter = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.EditorAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerPropertyEditor, Microso" +
            "ft.VSDesigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3" +
            "a", "System.Drawing.Design.UITypeEditor")]
        public BestellingTableAdapter BestellingTableAdapter {
            get {
                return this._bestellingTableAdapter;
            }
            set {
                this._bestellingTableAdapter = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.EditorAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerPropertyEditor, Microso" +
            "ft.VSDesigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3" +
            "a", "System.Drawing.Design.UITypeEditor")]
        public BestelregelTableAdapter BestelregelTableAdapter {
            get {
                return this._bestelregelTableAdapter;
            }
            set {
                this._bestelregelTableAdapter = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.EditorAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerPropertyEditor, Microso" +
            "ft.VSDesigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3" +
            "a", "System.Drawing.Design.UITypeEditor")]
        public Component_tekstTableAdapter Component_tekstTableAdapter {
            get {
                return this._component_tekstTableAdapter;
            }
            set {
                this._component_tekstTableAdapter = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.EditorAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerPropertyEditor, Microso" +
            "ft.VSDesigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3" +
            "a", "System.Drawing.Design.UITypeEditor")]
        public DbFilesTableAdapter DbFilesTableAdapter {
            get {
                return this._dbFilesTableAdapter;
            }
            set {
                this._dbFilesTableAdapter = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.EditorAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerPropertyEditor, Microso" +
            "ft.VSDesigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3" +
            "a", "System.Drawing.Design.UITypeEditor")]
        public EmailTableAdapter EmailTableAdapter {
            get {
                return this._emailTableAdapter;
            }
            set {
                this._emailTableAdapter = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.EditorAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerPropertyEditor, Microso" +
            "ft.VSDesigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3" +
            "a", "System.Drawing.Design.UITypeEditor")]
        public EmailadresTableAdapter EmailadresTableAdapter {
            get {
                return this._emailadresTableAdapter;
            }
            set {
                this._emailadresTableAdapter = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.EditorAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerPropertyEditor, Microso" +
            "ft.VSDesigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3" +
            "a", "System.Drawing.Design.UITypeEditor")]
        public GebruikerTableAdapter GebruikerTableAdapter {
            get {
                return this._gebruikerTableAdapter;
            }
            set {
                this._gebruikerTableAdapter = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.EditorAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerPropertyEditor, Microso" +
            "ft.VSDesigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3" +
            "a", "System.Drawing.Design.UITypeEditor")]
        public HoofdcategorieTableAdapter HoofdcategorieTableAdapter {
            get {
                return this._hoofdcategorieTableAdapter;
            }
            set {
                this._hoofdcategorieTableAdapter = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.EditorAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerPropertyEditor, Microso" +
            "ft.VSDesigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3" +
            "a", "System.Drawing.Design.UITypeEditor")]
        public HoofdUitgavesoortTableAdapter HoofdUitgavesoortTableAdapter {
            get {
                return this._hoofdUitgavesoortTableAdapter;
            }
            set {
                this._hoofdUitgavesoortTableAdapter = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.EditorAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerPropertyEditor, Microso" +
            "ft.VSDesigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3" +
            "a", "System.Drawing.Design.UITypeEditor")]
        public InstellingenTableAdapter InstellingenTableAdapter {
            get {
                return this._instellingenTableAdapter;
            }
            set {
                this._instellingenTableAdapter = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.EditorAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerPropertyEditor, Microso" +
            "ft.VSDesigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3" +
            "a", "System.Drawing.Design.UITypeEditor")]
        public JaargegevensTableAdapter JaargegevensTableAdapter {
            get {
                return this._jaargegevensTableAdapter;
            }
            set {
                this._jaargegevensTableAdapter = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.EditorAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerPropertyEditor, Microso" +
            "ft.VSDesigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3" +
            "a", "System.Drawing.Design.UITypeEditor")]
        public JaarsaldoTableAdapter JaarsaldoTableAdapter {
            get {
                return this._jaarsaldoTableAdapter;
            }
            set {
                this._jaarsaldoTableAdapter = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.EditorAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerPropertyEditor, Microso" +
            "ft.VSDesigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3" +
            "a", "System.Drawing.Design.UITypeEditor")]
        public Klant_BegunstigdeTableAdapter Klant_BegunstigdeTableAdapter {
            get {
                return this._klant_BegunstigdeTableAdapter;
            }
            set {
                this._klant_BegunstigdeTableAdapter = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.EditorAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerPropertyEditor, Microso" +
            "ft.VSDesigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3" +
            "a", "System.Drawing.Design.UITypeEditor")]
        public Licentie_controleTableAdapter Licentie_controleTableAdapter {
            get {
                return this._licentie_controleTableAdapter;
            }
            set {
                this._licentie_controleTableAdapter = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.EditorAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerPropertyEditor, Microso" +
            "ft.VSDesigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3" +
            "a", "System.Drawing.Design.UITypeEditor")]
        public LogTableAdapter LogTableAdapter {
            get {
                return this._logTableAdapter;
            }
            set {
                this._logTableAdapter = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.EditorAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerPropertyEditor, Microso" +
            "ft.VSDesigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3" +
            "a", "System.Drawing.Design.UITypeEditor")]
        public ProductTableAdapter ProductTableAdapter {
            get {
                return this._productTableAdapter;
            }
            set {
                this._productTableAdapter = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.EditorAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerPropertyEditor, Microso" +
            "ft.VSDesigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3" +
            "a", "System.Drawing.Design.UITypeEditor")]
        public ProgramerrorTableAdapter ProgramerrorTableAdapter {
            get {
                return this._programerrorTableAdapter;
            }
            set {
                this._programerrorTableAdapter = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.EditorAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerPropertyEditor, Microso" +
            "ft.VSDesigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3" +
            "a", "System.Drawing.Design.UITypeEditor")]
        public SaldostandTableAdapter SaldostandTableAdapter {
            get {
                return this._saldostandTableAdapter;
            }
            set {
                this._saldostandTableAdapter = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.EditorAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerPropertyEditor, Microso" +
            "ft.VSDesigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3" +
            "a", "System.Drawing.Design.UITypeEditor")]
        public StatusTableAdapter StatusTableAdapter {
            get {
                return this._statusTableAdapter;
            }
            set {
                this._statusTableAdapter = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.EditorAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerPropertyEditor, Microso" +
            "ft.VSDesigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3" +
            "a", "System.Drawing.Design.UITypeEditor")]
        public SubcategorieTableAdapter SubcategorieTableAdapter {
            get {
                return this._subcategorieTableAdapter;
            }
            set {
                this._subcategorieTableAdapter = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.EditorAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerPropertyEditor, Microso" +
            "ft.VSDesigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3" +
            "a", "System.Drawing.Design.UITypeEditor")]
        public SubUitgavesoortTableAdapter SubUitgavesoortTableAdapter {
            get {
                return this._subUitgavesoortTableAdapter;
            }
            set {
                this._subUitgavesoortTableAdapter = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.EditorAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerPropertyEditor, Microso" +
            "ft.VSDesigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3" +
            "a", "System.Drawing.Design.UITypeEditor")]
        public TelefoonnrTableAdapter TelefoonnrTableAdapter {
            get {
                return this._telefoonnrTableAdapter;
            }
            set {
                this._telefoonnrTableAdapter = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.EditorAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerPropertyEditor, Microso" +
            "ft.VSDesigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3" +
            "a", "System.Drawing.Design.UITypeEditor")]
        public UitgavenTableAdapter UitgavenTableAdapter {
            get {
                return this._uitgavenTableAdapter;
            }
            set {
                this._uitgavenTableAdapter = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.EditorAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerPropertyEditor, Microso" +
            "ft.VSDesigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3" +
            "a", "System.Drawing.Design.UITypeEditor")]
        public VerwerkperiodeTableAdapter VerwerkperiodeTableAdapter {
            get {
                return this._verwerkperiodeTableAdapter;
            }
            set {
                this._verwerkperiodeTableAdapter = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.EditorAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerPropertyEditor, Microso" +
            "ft.VSDesigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3" +
            "a", "System.Drawing.Design.UITypeEditor")]
        public VoorraadTableAdapter VoorraadTableAdapter {
            get {
                return this._voorraadTableAdapter;
            }
            set {
                this._voorraadTableAdapter = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public bool BackupDataSetBeforeUpdate {
            get {
                return this._backupDataSetBeforeUpdate;
            }
            set {
                this._backupDataSetBeforeUpdate = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        public global::System.Data.IDbConnection Connection {
            get {
                if ((this._connection != null)) {
                    return this._connection;
                }
                if (((this._adresgegevensTableAdapter != null) 
                            && (this._adresgegevensTableAdapter.Connection != null))) {
                    return this._adresgegevensTableAdapter.Connection;
                }
                if (((this._bankgironrTableAdapter != null) 
                            && (this._bankgironrTableAdapter.Connection != null))) {
                    return this._bankgironrTableAdapter.Connection;
                }
                if (((this._bankregelTableAdapter != null) 
                            && (this._bankregelTableAdapter.Connection != null))) {
                    return this._bankregelTableAdapter.Connection;
                }
                if (((this._bestellingTableAdapter != null) 
                            && (this._bestellingTableAdapter.Connection != null))) {
                    return this._bestellingTableAdapter.Connection;
                }
                if (((this._bestelregelTableAdapter != null) 
                            && (this._bestelregelTableAdapter.Connection != null))) {
                    return this._bestelregelTableAdapter.Connection;
                }
                if (((this._component_tekstTableAdapter != null) 
                            && (this._component_tekstTableAdapter.Connection != null))) {
                    return this._component_tekstTableAdapter.Connection;
                }
                if (((this._dbFilesTableAdapter != null) 
                            && (this._dbFilesTableAdapter.Connection != null))) {
                    return this._dbFilesTableAdapter.Connection;
                }
                if (((this._emailTableAdapter != null) 
                            && (this._emailTableAdapter.Connection != null))) {
                    return this._emailTableAdapter.Connection;
                }
                if (((this._emailadresTableAdapter != null) 
                            && (this._emailadresTableAdapter.Connection != null))) {
                    return this._emailadresTableAdapter.Connection;
                }
                if (((this._gebruikerTableAdapter != null) 
                            && (this._gebruikerTableAdapter.Connection != null))) {
                    return this._gebruikerTableAdapter.Connection;
                }
                if (((this._hoofdcategorieTableAdapter != null) 
                            && (this._hoofdcategorieTableAdapter.Connection != null))) {
                    return this._hoofdcategorieTableAdapter.Connection;
                }
                if (((this._hoofdUitgavesoortTableAdapter != null) 
                            && (this._hoofdUitgavesoortTableAdapter.Connection != null))) {
                    return this._hoofdUitgavesoortTableAdapter.Connection;
                }
                if (((this._instellingenTableAdapter != null) 
                            && (this._instellingenTableAdapter.Connection != null))) {
                    return this._instellingenTableAdapter.Connection;
                }
                if (((this._jaargegevensTableAdapter != null) 
                            && (this._jaargegevensTableAdapter.Connection != null))) {
                    return this._jaargegevensTableAdapter.Connection;
                }
                if (((this._jaarsaldoTableAdapter != null) 
                            && (this._jaarsaldoTableAdapter.Connection != null))) {
                    return this._jaarsaldoTableAdapter.Connection;
                }
                if (((this._klant_BegunstigdeTableAdapter != null) 
                            && (this._klant_BegunstigdeTableAdapter.Connection != null))) {
                    return this._klant_BegunstigdeTableAdapter.Connection;
                }
                if (((this._licentie_controleTableAdapter != null) 
                            && (this._licentie_controleTableAdapter.Connection != null))) {
                    return this._licentie_controleTableAdapter.Connection;
                }
                if (((this._logTableAdapter != null) 
                            && (this._logTableAdapter.Connection != null))) {
                    return this._logTableAdapter.Connection;
                }
                if (((this._productTableAdapter != null) 
                            && (this._productTableAdapter.Connection != null))) {
                    return this._productTableAdapter.Connection;
                }
                if (((this._programerrorTableAdapter != null) 
                            && (this._programerrorTableAdapter.Connection != null))) {
                    return this._programerrorTableAdapter.Connection;
                }
                if (((this._saldostandTableAdapter != null) 
                            && (this._saldostandTableAdapter.Connection != null))) {
                    return this._saldostandTableAdapter.Connection;
                }
                if (((this._statusTableAdapter != null) 
                            && (this._statusTableAdapter.Connection != null))) {
                    return this._statusTableAdapter.Connection;
                }
                if (((this._subcategorieTableAdapter != null) 
                            && (this._subcategorieTableAdapter.Connection != null))) {
                    return this._subcategorieTableAdapter.Connection;
                }
                if (((this._subUitgavesoortTableAdapter != null) 
                            && (this._subUitgavesoortTableAdapter.Connection != null))) {
                    return this._subUitgavesoortTableAdapter.Connection;
                }
                if (((this._telefoonnrTableAdapter != null) 
                            && (this._telefoonnrTableAdapter.Connection != null))) {
                    return this._telefoonnrTableAdapter.Connection;
                }
                if (((this._uitgavenTableAdapter != null) 
                            && (this._uitgavenTableAdapter.Connection != null))) {
                    return this._uitgavenTableAdapter.Connection;
                }
                if (((this._verwerkperiodeTableAdapter != null) 
                            && (this._verwerkperiodeTableAdapter.Connection != null))) {
                    return this._verwerkperiodeTableAdapter.Connection;
                }
                if (((this._voorraadTableAdapter != null) 
                            && (this._voorraadTableAdapter.Connection != null))) {
                    return this._voorraadTableAdapter.Connection;
                }
                return null;
            }
            set {
                this._connection = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        public int TableAdapterInstanceCount {
            get {
                int count = 0;
                if ((this._adresgegevensTableAdapter != null)) {
                    count = (count + 1);
                }
                if ((this._bankgironrTableAdapter != null)) {
                    count = (count + 1);
                }
                if ((this._bankregelTableAdapter != null)) {
                    count = (count + 1);
                }
                if ((this._bestellingTableAdapter != null)) {
                    count = (count + 1);
                }
                if ((this._bestelregelTableAdapter != null)) {
                    count = (count + 1);
                }
                if ((this._component_tekstTableAdapter != null)) {
                    count = (count + 1);
                }
                if ((this._dbFilesTableAdapter != null)) {
                    count = (count + 1);
                }
                if ((this._emailTableAdapter != null)) {
                    count = (count + 1);
                }
                if ((this._emailadresTableAdapter != null)) {
                    count = (count + 1);
                }
                if ((this._gebruikerTableAdapter != null)) {
                    count = (count + 1);
                }
                if ((this._hoofdcategorieTableAdapter != null)) {
                    count = (count + 1);
                }
                if ((this._hoofdUitgavesoortTableAdapter != null)) {
                    count = (count + 1);
                }
                if ((this._instellingenTableAdapter != null)) {
                    count = (count + 1);
                }
                if ((this._jaargegevensTableAdapter != null)) {
                    count = (count + 1);
                }
                if ((this._jaarsaldoTableAdapter != null)) {
                    count = (count + 1);
                }
                if ((this._klant_BegunstigdeTableAdapter != null)) {
                    count = (count + 1);
                }
                if ((this._licentie_controleTableAdapter != null)) {
                    count = (count + 1);
                }
                if ((this._logTableAdapter != null)) {
                    count = (count + 1);
                }
                if ((this._productTableAdapter != null)) {
                    count = (count + 1);
                }
                if ((this._programerrorTableAdapter != null)) {
                    count = (count + 1);
                }
                if ((this._saldostandTableAdapter != null)) {
                    count = (count + 1);
                }
                if ((this._statusTableAdapter != null)) {
                    count = (count + 1);
                }
                if ((this._subcategorieTableAdapter != null)) {
                    count = (count + 1);
                }
                if ((this._subUitgavesoortTableAdapter != null)) {
                    count = (count + 1);
                }
                if ((this._telefoonnrTableAdapter != null)) {
                    count = (count + 1);
                }
                if ((this._uitgavenTableAdapter != null)) {
                    count = (count + 1);
                }
                if ((this._verwerkperiodeTableAdapter != null)) {
                    count = (count + 1);
                }
                if ((this._voorraadTableAdapter != null)) {
                    count = (count + 1);
                }
                return count;
            }
        }
        
        /// <summary>
        ///Update rows in top-down order.
        ///</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private int UpdateUpdatedRows(_Cmbap_dataDataSet dataSet, global::System.Collections.Generic.List<global::System.Data.DataRow> allChangedRows, global::System.Collections.Generic.List<global::System.Data.DataRow> allAddedRows) {
            int result = 0;
            if ((this._adresgegevensTableAdapter != null)) {
                global::System.Data.DataRow[] updatedRows = dataSet.Adresgegevens.Select(null, null, global::System.Data.DataViewRowState.ModifiedCurrent);
                updatedRows = this.GetRealUpdatedRows(updatedRows, allAddedRows);
                if (((updatedRows != null) 
                            && (0 < updatedRows.Length))) {
                    result = (result + this._adresgegevensTableAdapter.Update(updatedRows));
                    allChangedRows.AddRange(updatedRows);
                }
            }
            if ((this._uitgavenTableAdapter != null)) {
                global::System.Data.DataRow[] updatedRows = dataSet.Uitgaven.Select(null, null, global::System.Data.DataViewRowState.ModifiedCurrent);
                updatedRows = this.GetRealUpdatedRows(updatedRows, allAddedRows);
                if (((updatedRows != null) 
                            && (0 < updatedRows.Length))) {
                    result = (result + this._uitgavenTableAdapter.Update(updatedRows));
                    allChangedRows.AddRange(updatedRows);
                }
            }
            if ((this._telefoonnrTableAdapter != null)) {
                global::System.Data.DataRow[] updatedRows = dataSet.Telefoonnr.Select(null, null, global::System.Data.DataViewRowState.ModifiedCurrent);
                updatedRows = this.GetRealUpdatedRows(updatedRows, allAddedRows);
                if (((updatedRows != null) 
                            && (0 < updatedRows.Length))) {
                    result = (result + this._telefoonnrTableAdapter.Update(updatedRows));
                    allChangedRows.AddRange(updatedRows);
                }
            }
            if ((this._subUitgavesoortTableAdapter != null)) {
                global::System.Data.DataRow[] updatedRows = dataSet.SubUitgavesoort.Select(null, null, global::System.Data.DataViewRowState.ModifiedCurrent);
                updatedRows = this.GetRealUpdatedRows(updatedRows, allAddedRows);
                if (((updatedRows != null) 
                            && (0 < updatedRows.Length))) {
                    result = (result + this._subUitgavesoortTableAdapter.Update(updatedRows));
                    allChangedRows.AddRange(updatedRows);
                }
            }
            if ((this._subcategorieTableAdapter != null)) {
                global::System.Data.DataRow[] updatedRows = dataSet.Subcategorie.Select(null, null, global::System.Data.DataViewRowState.ModifiedCurrent);
                updatedRows = this.GetRealUpdatedRows(updatedRows, allAddedRows);
                if (((updatedRows != null) 
                            && (0 < updatedRows.Length))) {
                    result = (result + this._subcategorieTableAdapter.Update(updatedRows));
                    allChangedRows.AddRange(updatedRows);
                }
            }
            if ((this._statusTableAdapter != null)) {
                global::System.Data.DataRow[] updatedRows = dataSet.Status.Select(null, null, global::System.Data.DataViewRowState.ModifiedCurrent);
                updatedRows = this.GetRealUpdatedRows(updatedRows, allAddedRows);
                if (((updatedRows != null) 
                            && (0 < updatedRows.Length))) {
                    result = (result + this._statusTableAdapter.Update(updatedRows));
                    allChangedRows.AddRange(updatedRows);
                }
            }
            if ((this._saldostandTableAdapter != null)) {
                global::System.Data.DataRow[] updatedRows = dataSet.Saldostand.Select(null, null, global::System.Data.DataViewRowState.ModifiedCurrent);
                updatedRows = this.GetRealUpdatedRows(updatedRows, allAddedRows);
                if (((updatedRows != null) 
                            && (0 < updatedRows.Length))) {
                    result = (result + this._saldostandTableAdapter.Update(updatedRows));
                    allChangedRows.AddRange(updatedRows);
                }
            }
            if ((this._programerrorTableAdapter != null)) {
                global::System.Data.DataRow[] updatedRows = dataSet.Programerror.Select(null, null, global::System.Data.DataViewRowState.ModifiedCurrent);
                updatedRows = this.GetRealUpdatedRows(updatedRows, allAddedRows);
                if (((updatedRows != null) 
                            && (0 < updatedRows.Length))) {
                    result = (result + this._programerrorTableAdapter.Update(updatedRows));
                    allChangedRows.AddRange(updatedRows);
                }
            }
            if ((this._productTableAdapter != null)) {
                global::System.Data.DataRow[] updatedRows = dataSet.Product.Select(null, null, global::System.Data.DataViewRowState.ModifiedCurrent);
                updatedRows = this.GetRealUpdatedRows(updatedRows, allAddedRows);
                if (((updatedRows != null) 
                            && (0 < updatedRows.Length))) {
                    result = (result + this._productTableAdapter.Update(updatedRows));
                    allChangedRows.AddRange(updatedRows);
                }
            }
            if ((this._logTableAdapter != null)) {
                global::System.Data.DataRow[] updatedRows = dataSet.Log.Select(null, null, global::System.Data.DataViewRowState.ModifiedCurrent);
                updatedRows = this.GetRealUpdatedRows(updatedRows, allAddedRows);
                if (((updatedRows != null) 
                            && (0 < updatedRows.Length))) {
                    result = (result + this._logTableAdapter.Update(updatedRows));
                    allChangedRows.AddRange(updatedRows);
                }
            }
            if ((this._licentie_controleTableAdapter != null)) {
                global::System.Data.DataRow[] updatedRows = dataSet.Licentie_controle.Select(null, null, global::System.Data.DataViewRowState.ModifiedCurrent);
                updatedRows = this.GetRealUpdatedRows(updatedRows, allAddedRows);
                if (((updatedRows != null) 
                            && (0 < updatedRows.Length))) {
                    result = (result + this._licentie_controleTableAdapter.Update(updatedRows));
                    allChangedRows.AddRange(updatedRows);
                }
            }
            if ((this._klant_BegunstigdeTableAdapter != null)) {
                global::System.Data.DataRow[] updatedRows = dataSet.Klant_Begunstigde.Select(null, null, global::System.Data.DataViewRowState.ModifiedCurrent);
                updatedRows = this.GetRealUpdatedRows(updatedRows, allAddedRows);
                if (((updatedRows != null) 
                            && (0 < updatedRows.Length))) {
                    result = (result + this._klant_BegunstigdeTableAdapter.Update(updatedRows));
                    allChangedRows.AddRange(updatedRows);
                }
            }
            if ((this._jaarsaldoTableAdapter != null)) {
                global::System.Data.DataRow[] updatedRows = dataSet.Jaarsaldo.Select(null, null, global::System.Data.DataViewRowState.ModifiedCurrent);
                updatedRows = this.GetRealUpdatedRows(updatedRows, allAddedRows);
                if (((updatedRows != null) 
                            && (0 < updatedRows.Length))) {
                    result = (result + this._jaarsaldoTableAdapter.Update(updatedRows));
                    allChangedRows.AddRange(updatedRows);
                }
            }
            if ((this._jaargegevensTableAdapter != null)) {
                global::System.Data.DataRow[] updatedRows = dataSet.Jaargegevens.Select(null, null, global::System.Data.DataViewRowState.ModifiedCurrent);
                updatedRows = this.GetRealUpdatedRows(updatedRows, allAddedRows);
                if (((updatedRows != null) 
                            && (0 < updatedRows.Length))) {
                    result = (result + this._jaargegevensTableAdapter.Update(updatedRows));
                    allChangedRows.AddRange(updatedRows);
                }
            }
            if ((this._instellingenTableAdapter != null)) {
                global::System.Data.DataRow[] updatedRows = dataSet.Instellingen.Select(null, null, global::System.Data.DataViewRowState.ModifiedCurrent);
                updatedRows = this.GetRealUpdatedRows(updatedRows, allAddedRows);
                if (((updatedRows != null) 
                            && (0 < updatedRows.Length))) {
                    result = (result + this._instellingenTableAdapter.Update(updatedRows));
                    allChangedRows.AddRange(updatedRows);
                }
            }
            if ((this._hoofdUitgavesoortTableAdapter != null)) {
                global::System.Data.DataRow[] updatedRows = dataSet.HoofdUitgavesoort.Select(null, null, global::System.Data.DataViewRowState.ModifiedCurrent);
                updatedRows = this.GetRealUpdatedRows(updatedRows, allAddedRows);
                if (((updatedRows != null) 
                            && (0 < updatedRows.Length))) {
                    result = (result + this._hoofdUitgavesoortTableAdapter.Update(updatedRows));
                    allChangedRows.AddRange(updatedRows);
                }
            }
            if ((this._hoofdcategorieTableAdapter != null)) {
                global::System.Data.DataRow[] updatedRows = dataSet.Hoofdcategorie.Select(null, null, global::System.Data.DataViewRowState.ModifiedCurrent);
                updatedRows = this.GetRealUpdatedRows(updatedRows, allAddedRows);
                if (((updatedRows != null) 
                            && (0 < updatedRows.Length))) {
                    result = (result + this._hoofdcategorieTableAdapter.Update(updatedRows));
                    allChangedRows.AddRange(updatedRows);
                }
            }
            if ((this._gebruikerTableAdapter != null)) {
                global::System.Data.DataRow[] updatedRows = dataSet.Gebruiker.Select(null, null, global::System.Data.DataViewRowState.ModifiedCurrent);
                updatedRows = this.GetRealUpdatedRows(updatedRows, allAddedRows);
                if (((updatedRows != null) 
                            && (0 < updatedRows.Length))) {
                    result = (result + this._gebruikerTableAdapter.Update(updatedRows));
                    allChangedRows.AddRange(updatedRows);
                }
            }
            if ((this._emailadresTableAdapter != null)) {
                global::System.Data.DataRow[] updatedRows = dataSet.Emailadres.Select(null, null, global::System.Data.DataViewRowState.ModifiedCurrent);
                updatedRows = this.GetRealUpdatedRows(updatedRows, allAddedRows);
                if (((updatedRows != null) 
                            && (0 < updatedRows.Length))) {
                    result = (result + this._emailadresTableAdapter.Update(updatedRows));
                    allChangedRows.AddRange(updatedRows);
                }
            }
            if ((this._emailTableAdapter != null)) {
                global::System.Data.DataRow[] updatedRows = dataSet.Email.Select(null, null, global::System.Data.DataViewRowState.ModifiedCurrent);
                updatedRows = this.GetRealUpdatedRows(updatedRows, allAddedRows);
                if (((updatedRows != null) 
                            && (0 < updatedRows.Length))) {
                    result = (result + this._emailTableAdapter.Update(updatedRows));
                    allChangedRows.AddRange(updatedRows);
                }
            }
            if ((this._dbFilesTableAdapter != null)) {
                global::System.Data.DataRow[] updatedRows = dataSet.DbFiles.Select(null, null, global::System.Data.DataViewRowState.ModifiedCurrent);
                updatedRows = this.GetRealUpdatedRows(updatedRows, allAddedRows);
                if (((updatedRows != null) 
                            && (0 < updatedRows.Length))) {
                    result = (result + this._dbFilesTableAdapter.Update(updatedRows));
                    allChangedRows.AddRange(updatedRows);
                }
            }
            if ((this._component_tekstTableAdapter != null)) {
                global::System.Data.DataRow[] updatedRows = dataSet.Component_tekst.Select(null, null, global::System.Data.DataViewRowState.ModifiedCurrent);
                updatedRows = this.GetRealUpdatedRows(updatedRows, allAddedRows);
                if (((updatedRows != null) 
                            && (0 < updatedRows.Length))) {
                    result = (result + this._component_tekstTableAdapter.Update(updatedRows));
                    allChangedRows.AddRange(updatedRows);
                }
            }
            if ((this._bestelregelTableAdapter != null)) {
                global::System.Data.DataRow[] updatedRows = dataSet.Bestelregel.Select(null, null, global::System.Data.DataViewRowState.ModifiedCurrent);
                updatedRows = this.GetRealUpdatedRows(updatedRows, allAddedRows);
                if (((updatedRows != null) 
                            && (0 < updatedRows.Length))) {
                    result = (result + this._bestelregelTableAdapter.Update(updatedRows));
                    allChangedRows.AddRange(updatedRows);
                }
            }
            if ((this._bestellingTableAdapter != null)) {
                global::System.Data.DataRow[] updatedRows = dataSet.Bestelling.Select(null, null, global::System.Data.DataViewRowState.ModifiedCurrent);
                updatedRows = this.GetRealUpdatedRows(updatedRows, allAddedRows);
                if (((updatedRows != null) 
                            && (0 < updatedRows.Length))) {
                    result = (result + this._bestellingTableAdapter.Update(updatedRows));
                    allChangedRows.AddRange(updatedRows);
                }
            }
            if ((this._bankregelTableAdapter != null)) {
                global::System.Data.DataRow[] updatedRows = dataSet.Bankregel.Select(null, null, global::System.Data.DataViewRowState.ModifiedCurrent);
                updatedRows = this.GetRealUpdatedRows(updatedRows, allAddedRows);
                if (((updatedRows != null) 
                            && (0 < updatedRows.Length))) {
                    result = (result + this._bankregelTableAdapter.Update(updatedRows));
                    allChangedRows.AddRange(updatedRows);
                }
            }
            if ((this._bankgironrTableAdapter != null)) {
                global::System.Data.DataRow[] updatedRows = dataSet.Bankgironr.Select(null, null, global::System.Data.DataViewRowState.ModifiedCurrent);
                updatedRows = this.GetRealUpdatedRows(updatedRows, allAddedRows);
                if (((updatedRows != null) 
                            && (0 < updatedRows.Length))) {
                    result = (result + this._bankgironrTableAdapter.Update(updatedRows));
                    allChangedRows.AddRange(updatedRows);
                }
            }
            if ((this._verwerkperiodeTableAdapter != null)) {
                global::System.Data.DataRow[] updatedRows = dataSet.Verwerkperiode.Select(null, null, global::System.Data.DataViewRowState.ModifiedCurrent);
                updatedRows = this.GetRealUpdatedRows(updatedRows, allAddedRows);
                if (((updatedRows != null) 
                            && (0 < updatedRows.Length))) {
                    result = (result + this._verwerkperiodeTableAdapter.Update(updatedRows));
                    allChangedRows.AddRange(updatedRows);
                }
            }
            if ((this._voorraadTableAdapter != null)) {
                global::System.Data.DataRow[] updatedRows = dataSet.Voorraad.Select(null, null, global::System.Data.DataViewRowState.ModifiedCurrent);
                updatedRows = this.GetRealUpdatedRows(updatedRows, allAddedRows);
                if (((updatedRows != null) 
                            && (0 < updatedRows.Length))) {
                    result = (result + this._voorraadTableAdapter.Update(updatedRows));
                    allChangedRows.AddRange(updatedRows);
                }
            }
            return result;
        }
        
        /// <summary>
        ///Insert rows in top-down order.
        ///</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private int UpdateInsertedRows(_Cmbap_dataDataSet dataSet, global::System.Collections.Generic.List<global::System.Data.DataRow> allAddedRows) {
            int result = 0;
            if ((this._adresgegevensTableAdapter != null)) {
                global::System.Data.DataRow[] addedRows = dataSet.Adresgegevens.Select(null, null, global::System.Data.DataViewRowState.Added);
                if (((addedRows != null) 
                            && (0 < addedRows.Length))) {
                    result = (result + this._adresgegevensTableAdapter.Update(addedRows));
                    allAddedRows.AddRange(addedRows);
                }
            }
            if ((this._uitgavenTableAdapter != null)) {
                global::System.Data.DataRow[] addedRows = dataSet.Uitgaven.Select(null, null, global::System.Data.DataViewRowState.Added);
                if (((addedRows != null) 
                            && (0 < addedRows.Length))) {
                    result = (result + this._uitgavenTableAdapter.Update(addedRows));
                    allAddedRows.AddRange(addedRows);
                }
            }
            if ((this._telefoonnrTableAdapter != null)) {
                global::System.Data.DataRow[] addedRows = dataSet.Telefoonnr.Select(null, null, global::System.Data.DataViewRowState.Added);
                if (((addedRows != null) 
                            && (0 < addedRows.Length))) {
                    result = (result + this._telefoonnrTableAdapter.Update(addedRows));
                    allAddedRows.AddRange(addedRows);
                }
            }
            if ((this._subUitgavesoortTableAdapter != null)) {
                global::System.Data.DataRow[] addedRows = dataSet.SubUitgavesoort.Select(null, null, global::System.Data.DataViewRowState.Added);
                if (((addedRows != null) 
                            && (0 < addedRows.Length))) {
                    result = (result + this._subUitgavesoortTableAdapter.Update(addedRows));
                    allAddedRows.AddRange(addedRows);
                }
            }
            if ((this._subcategorieTableAdapter != null)) {
                global::System.Data.DataRow[] addedRows = dataSet.Subcategorie.Select(null, null, global::System.Data.DataViewRowState.Added);
                if (((addedRows != null) 
                            && (0 < addedRows.Length))) {
                    result = (result + this._subcategorieTableAdapter.Update(addedRows));
                    allAddedRows.AddRange(addedRows);
                }
            }
            if ((this._statusTableAdapter != null)) {
                global::System.Data.DataRow[] addedRows = dataSet.Status.Select(null, null, global::System.Data.DataViewRowState.Added);
                if (((addedRows != null) 
                            && (0 < addedRows.Length))) {
                    result = (result + this._statusTableAdapter.Update(addedRows));
                    allAddedRows.AddRange(addedRows);
                }
            }
            if ((this._saldostandTableAdapter != null)) {
                global::System.Data.DataRow[] addedRows = dataSet.Saldostand.Select(null, null, global::System.Data.DataViewRowState.Added);
                if (((addedRows != null) 
                            && (0 < addedRows.Length))) {
                    result = (result + this._saldostandTableAdapter.Update(addedRows));
                    allAddedRows.AddRange(addedRows);
                }
            }
            if ((this._programerrorTableAdapter != null)) {
                global::System.Data.DataRow[] addedRows = dataSet.Programerror.Select(null, null, global::System.Data.DataViewRowState.Added);
                if (((addedRows != null) 
                            && (0 < addedRows.Length))) {
                    result = (result + this._programerrorTableAdapter.Update(addedRows));
                    allAddedRows.AddRange(addedRows);
                }
            }
            if ((this._productTableAdapter != null)) {
                global::System.Data.DataRow[] addedRows = dataSet.Product.Select(null, null, global::System.Data.DataViewRowState.Added);
                if (((addedRows != null) 
                            && (0 < addedRows.Length))) {
                    result = (result + this._productTableAdapter.Update(addedRows));
                    allAddedRows.AddRange(addedRows);
                }
            }
            if ((this._logTableAdapter != null)) {
                global::System.Data.DataRow[] addedRows = dataSet.Log.Select(null, null, global::System.Data.DataViewRowState.Added);
                if (((addedRows != null) 
                            && (0 < addedRows.Length))) {
                    result = (result + this._logTableAdapter.Update(addedRows));
                    allAddedRows.AddRange(addedRows);
                }
            }
            if ((this._licentie_controleTableAdapter != null)) {
                global::System.Data.DataRow[] addedRows = dataSet.Licentie_controle.Select(null, null, global::System.Data.DataViewRowState.Added);
                if (((addedRows != null) 
                            && (0 < addedRows.Length))) {
                    result = (result + this._licentie_controleTableAdapter.Update(addedRows));
                    allAddedRows.AddRange(addedRows);
                }
            }
            if ((this._klant_BegunstigdeTableAdapter != null)) {
                global::System.Data.DataRow[] addedRows = dataSet.Klant_Begunstigde.Select(null, null, global::System.Data.DataViewRowState.Added);
                if (((addedRows != null) 
                            && (0 < addedRows.Length))) {
                    result = (result + this._klant_BegunstigdeTableAdapter.Update(addedRows));
                    allAddedRows.AddRange(addedRows);
                }
            }
            if ((this._jaarsaldoTableAdapter != null)) {
                global::System.Data.DataRow[] addedRows = dataSet.Jaarsaldo.Select(null, null, global::System.Data.DataViewRowState.Added);
                if (((addedRows != null) 
                            && (0 < addedRows.Length))) {
                    result = (result + this._jaarsaldoTableAdapter.Update(addedRows));
                    allAddedRows.AddRange(addedRows);
                }
            }
            if ((this._jaargegevensTableAdapter != null)) {
                global::System.Data.DataRow[] addedRows = dataSet.Jaargegevens.Select(null, null, global::System.Data.DataViewRowState.Added);
                if (((addedRows != null) 
                            && (0 < addedRows.Length))) {
                    result = (result + this._jaargegevensTableAdapter.Update(addedRows));
                    allAddedRows.AddRange(addedRows);
                }
            }
            if ((this._instellingenTableAdapter != null)) {
                global::System.Data.DataRow[] addedRows = dataSet.Instellingen.Select(null, null, global::System.Data.DataViewRowState.Added);
                if (((addedRows != null) 
                            && (0 < addedRows.Length))) {
                    result = (result + this._instellingenTableAdapter.Update(addedRows));
                    allAddedRows.AddRange(addedRows);
                }
            }
            if ((this._hoofdUitgavesoortTableAdapter != null)) {
                global::System.Data.DataRow[] addedRows = dataSet.HoofdUitgavesoort.Select(null, null, global::System.Data.DataViewRowState.Added);
                if (((addedRows != null) 
                            && (0 < addedRows.Length))) {
                    result = (result + this._hoofdUitgavesoortTableAdapter.Update(addedRows));
                    allAddedRows.AddRange(addedRows);
                }
            }
            if ((this._hoofdcategorieTableAdapter != null)) {
                global::System.Data.DataRow[] addedRows = dataSet.Hoofdcategorie.Select(null, null, global::System.Data.DataViewRowState.Added);
                if (((addedRows != null) 
                            && (0 < addedRows.Length))) {
                    result = (result + this._hoofdcategorieTableAdapter.Update(addedRows));
                    allAddedRows.AddRange(addedRows);
                }
            }
            if ((this._gebruikerTableAdapter != null)) {
                global::System.Data.DataRow[] addedRows = dataSet.Gebruiker.Select(null, null, global::System.Data.DataViewRowState.Added);
                if (((addedRows != null) 
                            && (0 < addedRows.Length))) {
                    result = (result + this._gebruikerTableAdapter.Update(addedRows));
                    allAddedRows.AddRange(addedRows);
                }
            }
            if ((this._emailadresTableAdapter != null)) {
                global::System.Data.DataRow[] addedRows = dataSet.Emailadres.Select(null, null, global::System.Data.DataViewRowState.Added);
                if (((addedRows != null) 
                            && (0 < addedRows.Length))) {
                    result = (result + this._emailadresTableAdapter.Update(addedRows));
                    allAddedRows.AddRange(addedRows);
                }
            }
            if ((this._emailTableAdapter != null)) {
                global::System.Data.DataRow[] addedRows = dataSet.Email.Select(null, null, global::System.Data.DataViewRowState.Added);
                if (((addedRows != null) 
                            && (0 < addedRows.Length))) {
                    result = (result + this._emailTableAdapter.Update(addedRows));
                    allAddedRows.AddRange(addedRows);
                }
            }
            if ((this._dbFilesTableAdapter != null)) {
                global::System.Data.DataRow[] addedRows = dataSet.DbFiles.Select(null, null, global::System.Data.DataViewRowState.Added);
                if (((addedRows != null) 
                            && (0 < addedRows.Length))) {
                    result = (result + this._dbFilesTableAdapter.Update(addedRows));
                    allAddedRows.AddRange(addedRows);
                }
            }
            if ((this._component_tekstTableAdapter != null)) {
                global::System.Data.DataRow[] addedRows = dataSet.Component_tekst.Select(null, null, global::System.Data.DataViewRowState.Added);
                if (((addedRows != null) 
                            && (0 < addedRows.Length))) {
                    result = (result + this._component_tekstTableAdapter.Update(addedRows));
                    allAddedRows.AddRange(addedRows);
                }
            }
            if ((this._bestelregelTableAdapter != null)) {
                global::System.Data.DataRow[] addedRows = dataSet.Bestelregel.Select(null, null, global::System.Data.DataViewRowState.Added);
                if (((addedRows != null) 
                            && (0 < addedRows.Length))) {
                    result = (result + this._bestelregelTableAdapter.Update(addedRows));
                    allAddedRows.AddRange(addedRows);
                }
            }
            if ((this._bestellingTableAdapter != null)) {
                global::System.Data.DataRow[] addedRows = dataSet.Bestelling.Select(null, null, global::System.Data.DataViewRowState.Added);
                if (((addedRows != null) 
                            && (0 < addedRows.Length))) {
                    result = (result + this._bestellingTableAdapter.Update(addedRows));
                    allAddedRows.AddRange(addedRows);
                }
            }
            if ((this._bankregelTableAdapter != null)) {
                global::System.Data.DataRow[] addedRows = dataSet.Bankregel.Select(null, null, global::System.Data.DataViewRowState.Added);
                if (((addedRows != null) 
                            && (0 < addedRows.Length))) {
                    result = (result + this._bankregelTableAdapter.Update(addedRows));
                    allAddedRows.AddRange(addedRows);
                }
            }
            if ((this._bankgironrTableAdapter != null)) {
                global::System.Data.DataRow[] addedRows = dataSet.Bankgironr.Select(null, null, global::System.Data.DataViewRowState.Added);
                if (((addedRows != null) 
                            && (0 < addedRows.Length))) {
                    result = (result + this._bankgironrTableAdapter.Update(addedRows));
                    allAddedRows.AddRange(addedRows);
                }
            }
            if ((this._verwerkperiodeTableAdapter != null)) {
                global::System.Data.DataRow[] addedRows = dataSet.Verwerkperiode.Select(null, null, global::System.Data.DataViewRowState.Added);
                if (((addedRows != null) 
                            && (0 < addedRows.Length))) {
                    result = (result + this._verwerkperiodeTableAdapter.Update(addedRows));
                    allAddedRows.AddRange(addedRows);
                }
            }
            if ((this._voorraadTableAdapter != null)) {
                global::System.Data.DataRow[] addedRows = dataSet.Voorraad.Select(null, null, global::System.Data.DataViewRowState.Added);
                if (((addedRows != null) 
                            && (0 < addedRows.Length))) {
                    result = (result + this._voorraadTableAdapter.Update(addedRows));
                    allAddedRows.AddRange(addedRows);
                }
            }
            return result;
        }
        
        /// <summary>
        ///Delete rows in bottom-up order.
        ///</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private int UpdateDeletedRows(_Cmbap_dataDataSet dataSet, global::System.Collections.Generic.List<global::System.Data.DataRow> allChangedRows) {
            int result = 0;
            if ((this._voorraadTableAdapter != null)) {
                global::System.Data.DataRow[] deletedRows = dataSet.Voorraad.Select(null, null, global::System.Data.DataViewRowState.Deleted);
                if (((deletedRows != null) 
                            && (0 < deletedRows.Length))) {
                    result = (result + this._voorraadTableAdapter.Update(deletedRows));
                    allChangedRows.AddRange(deletedRows);
                }
            }
            if ((this._verwerkperiodeTableAdapter != null)) {
                global::System.Data.DataRow[] deletedRows = dataSet.Verwerkperiode.Select(null, null, global::System.Data.DataViewRowState.Deleted);
                if (((deletedRows != null) 
                            && (0 < deletedRows.Length))) {
                    result = (result + this._verwerkperiodeTableAdapter.Update(deletedRows));
                    allChangedRows.AddRange(deletedRows);
                }
            }
            if ((this._bankgironrTableAdapter != null)) {
                global::System.Data.DataRow[] deletedRows = dataSet.Bankgironr.Select(null, null, global::System.Data.DataViewRowState.Deleted);
                if (((deletedRows != null) 
                            && (0 < deletedRows.Length))) {
                    result = (result + this._bankgironrTableAdapter.Update(deletedRows));
                    allChangedRows.AddRange(deletedRows);
                }
            }
            if ((this._bankregelTableAdapter != null)) {
                global::System.Data.DataRow[] deletedRows = dataSet.Bankregel.Select(null, null, global::System.Data.DataViewRowState.Deleted);
                if (((deletedRows != null) 
                            && (0 < deletedRows.Length))) {
                    result = (result + this._bankregelTableAdapter.Update(deletedRows));
                    allChangedRows.AddRange(deletedRows);
                }
            }
            if ((this._bestellingTableAdapter != null)) {
                global::System.Data.DataRow[] deletedRows = dataSet.Bestelling.Select(null, null, global::System.Data.DataViewRowState.Deleted);
                if (((deletedRows != null) 
                            && (0 < deletedRows.Length))) {
                    result = (result + this._bestellingTableAdapter.Update(deletedRows));
                    allChangedRows.AddRange(deletedRows);
                }
            }
            if ((this._bestelregelTableAdapter != null)) {
                global::System.Data.DataRow[] deletedRows = dataSet.Bestelregel.Select(null, null, global::System.Data.DataViewRowState.Deleted);
                if (((deletedRows != null) 
                            && (0 < deletedRows.Length))) {
                    result = (result + this._bestelregelTableAdapter.Update(deletedRows));
                    allChangedRows.AddRange(deletedRows);
                }
            }
            if ((this._component_tekstTableAdapter != null)) {
                global::System.Data.DataRow[] deletedRows = dataSet.Component_tekst.Select(null, null, global::System.Data.DataViewRowState.Deleted);
                if (((deletedRows != null) 
                            && (0 < deletedRows.Length))) {
                    result = (result + this._component_tekstTableAdapter.Update(deletedRows));
                    allChangedRows.AddRange(deletedRows);
                }
            }
            if ((this._dbFilesTableAdapter != null)) {
                global::System.Data.DataRow[] deletedRows = dataSet.DbFiles.Select(null, null, global::System.Data.DataViewRowState.Deleted);
                if (((deletedRows != null) 
                            && (0 < deletedRows.Length))) {
                    result = (result + this._dbFilesTableAdapter.Update(deletedRows));
                    allChangedRows.AddRange(deletedRows);
                }
            }
            if ((this._emailTableAdapter != null)) {
                global::System.Data.DataRow[] deletedRows = dataSet.Email.Select(null, null, global::System.Data.DataViewRowState.Deleted);
                if (((deletedRows != null) 
                            && (0 < deletedRows.Length))) {
                    result = (result + this._emailTableAdapter.Update(deletedRows));
                    allChangedRows.AddRange(deletedRows);
                }
            }
            if ((this._emailadresTableAdapter != null)) {
                global::System.Data.DataRow[] deletedRows = dataSet.Emailadres.Select(null, null, global::System.Data.DataViewRowState.Deleted);
                if (((deletedRows != null) 
                            && (0 < deletedRows.Length))) {
                    result = (result + this._emailadresTableAdapter.Update(deletedRows));
                    allChangedRows.AddRange(deletedRows);
                }
            }
            if ((this._gebruikerTableAdapter != null)) {
                global::System.Data.DataRow[] deletedRows = dataSet.Gebruiker.Select(null, null, global::System.Data.DataViewRowState.Deleted);
                if (((deletedRows != null) 
                            && (0 < deletedRows.Length))) {
                    result = (result + this._gebruikerTableAdapter.Update(deletedRows));
                    allChangedRows.AddRange(deletedRows);
                }
            }
            if ((this._hoofdcategorieTableAdapter != null)) {
                global::System.Data.DataRow[] deletedRows = dataSet.Hoofdcategorie.Select(null, null, global::System.Data.DataViewRowState.Deleted);
                if (((deletedRows != null) 
                            && (0 < deletedRows.Length))) {
                    result = (result + this._hoofdcategorieTableAdapter.Update(deletedRows));
                    allChangedRows.AddRange(deletedRows);
                }
            }
            if ((this._hoofdUitgavesoortTableAdapter != null)) {
                global::System.Data.DataRow[] deletedRows = dataSet.HoofdUitgavesoort.Select(null, null, global::System.Data.DataViewRowState.Deleted);
                if (((deletedRows != null) 
                            && (0 < deletedRows.Length))) {
                    result = (result + this._hoofdUitgavesoortTableAdapter.Update(deletedRows));
                    allChangedRows.AddRange(deletedRows);
                }
            }
            if ((this._instellingenTableAdapter != null)) {
                global::System.Data.DataRow[] deletedRows = dataSet.Instellingen.Select(null, null, global::System.Data.DataViewRowState.Deleted);
                if (((deletedRows != null) 
                            && (0 < deletedRows.Length))) {
                    result = (result + this._instellingenTableAdapter.Update(deletedRows));
                    allChangedRows.AddRange(deletedRows);
                }
            }
            if ((this._jaargegevensTableAdapter != null)) {
                global::System.Data.DataRow[] deletedRows = dataSet.Jaargegevens.Select(null, null, global::System.Data.DataViewRowState.Deleted);
                if (((deletedRows != null) 
                            && (0 < deletedRows.Length))) {
                    result = (result + this._jaargegevensTableAdapter.Update(deletedRows));
                    allChangedRows.AddRange(deletedRows);
                }
            }
            if ((this._jaarsaldoTableAdapter != null)) {
                global::System.Data.DataRow[] deletedRows = dataSet.Jaarsaldo.Select(null, null, global::System.Data.DataViewRowState.Deleted);
                if (((deletedRows != null) 
                            && (0 < deletedRows.Length))) {
                    result = (result + this._jaarsaldoTableAdapter.Update(deletedRows));
                    allChangedRows.AddRange(deletedRows);
                }
            }
            if ((this._klant_BegunstigdeTableAdapter != null)) {
                global::System.Data.DataRow[] deletedRows = dataSet.Klant_Begunstigde.Select(null, null, global::System.Data.DataViewRowState.Deleted);
                if (((deletedRows != null) 
                            && (0 < deletedRows.Length))) {
                    result = (result + this._klant_BegunstigdeTableAdapter.Update(deletedRows));
                    allChangedRows.AddRange(deletedRows);
                }
            }
            if ((this._licentie_controleTableAdapter != null)) {
                global::System.Data.DataRow[] deletedRows = dataSet.Licentie_controle.Select(null, null, global::System.Data.DataViewRowState.Deleted);
                if (((deletedRows != null) 
                            && (0 < deletedRows.Length))) {
                    result = (result + this._licentie_controleTableAdapter.Update(deletedRows));
                    allChangedRows.AddRange(deletedRows);
                }
            }
            if ((this._logTableAdapter != null)) {
                global::System.Data.DataRow[] deletedRows = dataSet.Log.Select(null, null, global::System.Data.DataViewRowState.Deleted);
                if (((deletedRows != null) 
                            && (0 < deletedRows.Length))) {
                    result = (result + this._logTableAdapter.Update(deletedRows));
                    allChangedRows.AddRange(deletedRows);
                }
            }
            if ((this._productTableAdapter != null)) {
                global::System.Data.DataRow[] deletedRows = dataSet.Product.Select(null, null, global::System.Data.DataViewRowState.Deleted);
                if (((deletedRows != null) 
                            && (0 < deletedRows.Length))) {
                    result = (result + this._productTableAdapter.Update(deletedRows));
                    allChangedRows.AddRange(deletedRows);
                }
            }
            if ((this._programerrorTableAdapter != null)) {
                global::System.Data.DataRow[] deletedRows = dataSet.Programerror.Select(null, null, global::System.Data.DataViewRowState.Deleted);
                if (((deletedRows != null) 
                            && (0 < deletedRows.Length))) {
                    result = (result + this._programerrorTableAdapter.Update(deletedRows));
                    allChangedRows.AddRange(deletedRows);
                }
            }
            if ((this._saldostandTableAdapter != null)) {
                global::System.Data.DataRow[] deletedRows = dataSet.Saldostand.Select(null, null, global::System.Data.DataViewRowState.Deleted);
                if (((deletedRows != null) 
                            && (0 < deletedRows.Length))) {
                    result = (result + this._saldostandTableAdapter.Update(deletedRows));
                    allChangedRows.AddRange(deletedRows);
                }
            }
            if ((this._statusTableAdapter != null)) {
                global::System.Data.DataRow[] deletedRows = dataSet.Status.Select(null, null, global::System.Data.DataViewRowState.Deleted);
                if (((deletedRows != null) 
                            && (0 < deletedRows.Length))) {
                    result = (result + this._statusTableAdapter.Update(deletedRows));
                    allChangedRows.AddRange(deletedRows);
                }
            }
            if ((this._subcategorieTableAdapter != null)) {
                global::System.Data.DataRow[] deletedRows = dataSet.Subcategorie.Select(null, null, global::System.Data.DataViewRowState.Deleted);
                if (((deletedRows != null) 
                            && (0 < deletedRows.Length))) {
                    result = (result + this._subcategorieTableAdapter.Update(deletedRows));
                    allChangedRows.AddRange(deletedRows);
                }
            }
            if ((this._subUitgavesoortTableAdapter != null)) {
                global::System.Data.DataRow[] deletedRows = dataSet.SubUitgavesoort.Select(null, null, global::System.Data.DataViewRowState.Deleted);
                if (((deletedRows != null) 
                            && (0 < deletedRows.Length))) {
                    result = (result + this._subUitgavesoortTableAdapter.Update(deletedRows));
                    allChangedRows.AddRange(deletedRows);
                }
            }
            if ((this._telefoonnrTableAdapter != null)) {
                global::System.Data.DataRow[] deletedRows = dataSet.Telefoonnr.Select(null, null, global::System.Data.DataViewRowState.Deleted);
                if (((deletedRows != null) 
                            && (0 < deletedRows.Length))) {
                    result = (result + this._telefoonnrTableAdapter.Update(deletedRows));
                    allChangedRows.AddRange(deletedRows);
                }
            }
            if ((this._uitgavenTableAdapter != null)) {
                global::System.Data.DataRow[] deletedRows = dataSet.Uitgaven.Select(null, null, global::System.Data.DataViewRowState.Deleted);
                if (((deletedRows != null) 
                            && (0 < deletedRows.Length))) {
                    result = (result + this._uitgavenTableAdapter.Update(deletedRows));
                    allChangedRows.AddRange(deletedRows);
                }
            }
            if ((this._adresgegevensTableAdapter != null)) {
                global::System.Data.DataRow[] deletedRows = dataSet.Adresgegevens.Select(null, null, global::System.Data.DataViewRowState.Deleted);
                if (((deletedRows != null) 
                            && (0 < deletedRows.Length))) {
                    result = (result + this._adresgegevensTableAdapter.Update(deletedRows));
                    allChangedRows.AddRange(deletedRows);
                }
            }
            return result;
        }
        
        /// <summary>
        ///Remove inserted rows that become updated rows after calling TableAdapter.Update(inserted rows) first
        ///</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private global::System.Data.DataRow[] GetRealUpdatedRows(global::System.Data.DataRow[] updatedRows, global::System.Collections.Generic.List<global::System.Data.DataRow> allAddedRows) {
            if (((updatedRows == null) 
                        || (updatedRows.Length < 1))) {
                return updatedRows;
            }
            if (((allAddedRows == null) 
                        || (allAddedRows.Count < 1))) {
                return updatedRows;
            }
            global::System.Collections.Generic.List<global::System.Data.DataRow> realUpdatedRows = new global::System.Collections.Generic.List<global::System.Data.DataRow>();
            for (int i = 0; (i < updatedRows.Length); i = (i + 1)) {
                global::System.Data.DataRow row = updatedRows[i];
                if ((allAddedRows.Contains(row) == false)) {
                    realUpdatedRows.Add(row);
                }
            }
            return realUpdatedRows.ToArray();
        }
        
        /// <summary>
        ///Update all changes to the dataset.
        ///</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public virtual int UpdateAll(_Cmbap_dataDataSet dataSet) {
            if ((dataSet == null)) {
                throw new global::System.ArgumentNullException("dataSet");
            }
            if ((dataSet.HasChanges() == false)) {
                return 0;
            }
            if (((this._adresgegevensTableAdapter != null) 
                        && (this.MatchTableAdapterConnection(this._adresgegevensTableAdapter.Connection) == false))) {
                throw new global::System.ArgumentException("All TableAdapters managed by a TableAdapterManager must use the same connection s" +
                        "tring.");
            }
            if (((this._bankgironrTableAdapter != null) 
                        && (this.MatchTableAdapterConnection(this._bankgironrTableAdapter.Connection) == false))) {
                throw new global::System.ArgumentException("All TableAdapters managed by a TableAdapterManager must use the same connection s" +
                        "tring.");
            }
            if (((this._bankregelTableAdapter != null) 
                        && (this.MatchTableAdapterConnection(this._bankregelTableAdapter.Connection) == false))) {
                throw new global::System.ArgumentException("All TableAdapters managed by a TableAdapterManager must use the same connection s" +
                        "tring.");
            }
            if (((this._bestellingTableAdapter != null) 
                        && (this.MatchTableAdapterConnection(this._bestellingTableAdapter.Connection) == false))) {
                throw new global::System.ArgumentException("All TableAdapters managed by a TableAdapterManager must use the same connection s" +
                        "tring.");
            }
            if (((this._bestelregelTableAdapter != null) 
                        && (this.MatchTableAdapterConnection(this._bestelregelTableAdapter.Connection) == false))) {
                throw new global::System.ArgumentException("All TableAdapters managed by a TableAdapterManager must use the same connection s" +
                        "tring.");
            }
            if (((this._component_tekstTableAdapter != null) 
                        && (this.MatchTableAdapterConnection(this._component_tekstTableAdapter.Connection) == false))) {
                throw new global::System.ArgumentException("All TableAdapters managed by a TableAdapterManager must use the same connection s" +
                        "tring.");
            }
            if (((this._dbFilesTableAdapter != null) 
                        && (this.MatchTableAdapterConnection(this._dbFilesTableAdapter.Connection) == false))) {
                throw new global::System.ArgumentException("All TableAdapters managed by a TableAdapterManager must use the same connection s" +
                        "tring.");
            }
            if (((this._emailTableAdapter != null) 
                        && (this.MatchTableAdapterConnection(this._emailTableAdapter.Connection) == false))) {
                throw new global::System.ArgumentException("All TableAdapters managed by a TableAdapterManager must use the same connection s" +
                        "tring.");
            }
            if (((this._emailadresTableAdapter != null) 
                        && (this.MatchTableAdapterConnection(this._emailadresTableAdapter.Connection) == false))) {
                throw new global::System.ArgumentException("All TableAdapters managed by a TableAdapterManager must use the same connection s" +
                        "tring.");
            }
            if (((this._gebruikerTableAdapter != null) 
                        && (this.MatchTableAdapterConnection(this._gebruikerTableAdapter.Connection) == false))) {
                throw new global::System.ArgumentException("All TableAdapters managed by a TableAdapterManager must use the same connection s" +
                        "tring.");
            }
            if (((this._hoofdcategorieTableAdapter != null) 
                        && (this.MatchTableAdapterConnection(this._hoofdcategorieTableAdapter.Connection) == false))) {
                throw new global::System.ArgumentException("All TableAdapters managed by a TableAdapterManager must use the same connection s" +
                        "tring.");
            }
            if (((this._hoofdUitgavesoortTableAdapter != null) 
                        && (this.MatchTableAdapterConnection(this._hoofdUitgavesoortTableAdapter.Connection) == false))) {
                throw new global::System.ArgumentException("All TableAdapters managed by a TableAdapterManager must use the same connection s" +
                        "tring.");
            }
            if (((this._instellingenTableAdapter != null) 
                        && (this.MatchTableAdapterConnection(this._instellingenTableAdapter.Connection) == false))) {
                throw new global::System.ArgumentException("All TableAdapters managed by a TableAdapterManager must use the same connection s" +
                        "tring.");
            }
            if (((this._jaargegevensTableAdapter != null) 
                        && (this.MatchTableAdapterConnection(this._jaargegevensTableAdapter.Connection) == false))) {
                throw new global::System.ArgumentException("All TableAdapters managed by a TableAdapterManager must use the same connection s" +
                        "tring.");
            }
            if (((this._jaarsaldoTableAdapter != null) 
                        && (this.MatchTableAdapterConnection(this._jaarsaldoTableAdapter.Connection) == false))) {
                throw new global::System.ArgumentException("All TableAdapters managed by a TableAdapterManager must use the same connection s" +
                        "tring.");
            }
            if (((this._klant_BegunstigdeTableAdapter != null) 
                        && (this.MatchTableAdapterConnection(this._klant_BegunstigdeTableAdapter.Connection) == false))) {
                throw new global::System.ArgumentException("All TableAdapters managed by a TableAdapterManager must use the same connection s" +
                        "tring.");
            }
            if (((this._licentie_controleTableAdapter != null) 
                        && (this.MatchTableAdapterConnection(this._licentie_controleTableAdapter.Connection) == false))) {
                throw new global::System.ArgumentException("All TableAdapters managed by a TableAdapterManager must use the same connection s" +
                        "tring.");
            }
            if (((this._logTableAdapter != null) 
                        && (this.MatchTableAdapterConnection(this._logTableAdapter.Connection) == false))) {
                throw new global::System.ArgumentException("All TableAdapters managed by a TableAdapterManager must use the same connection s" +
                        "tring.");
            }
            if (((this._productTableAdapter != null) 
                        && (this.MatchTableAdapterConnection(this._productTableAdapter.Connection) == false))) {
                throw new global::System.ArgumentException("All TableAdapters managed by a TableAdapterManager must use the same connection s" +
                        "tring.");
            }
            if (((this._programerrorTableAdapter != null) 
                        && (this.MatchTableAdapterConnection(this._programerrorTableAdapter.Connection) == false))) {
                throw new global::System.ArgumentException("All TableAdapters managed by a TableAdapterManager must use the same connection s" +
                        "tring.");
            }
            if (((this._saldostandTableAdapter != null) 
                        && (this.MatchTableAdapterConnection(this._saldostandTableAdapter.Connection) == false))) {
                throw new global::System.ArgumentException("All TableAdapters managed by a TableAdapterManager must use the same connection s" +
                        "tring.");
            }
            if (((this._statusTableAdapter != null) 
                        && (this.MatchTableAdapterConnection(this._statusTableAdapter.Connection) == false))) {
                throw new global::System.ArgumentException("All TableAdapters managed by a TableAdapterManager must use the same connection s" +
                        "tring.");
            }
            if (((this._subcategorieTableAdapter != null) 
                        && (this.MatchTableAdapterConnection(this._subcategorieTableAdapter.Connection) == false))) {
                throw new global::System.ArgumentException("All TableAdapters managed by a TableAdapterManager must use the same connection s" +
                        "tring.");
            }
            if (((this._subUitgavesoortTableAdapter != null) 
                        && (this.MatchTableAdapterConnection(this._subUitgavesoortTableAdapter.Connection) == false))) {
                throw new global::System.ArgumentException("All TableAdapters managed by a TableAdapterManager must use the same connection s" +
                        "tring.");
            }
            if (((this._telefoonnrTableAdapter != null) 
                        && (this.MatchTableAdapterConnection(this._telefoonnrTableAdapter.Connection) == false))) {
                throw new global::System.ArgumentException("All TableAdapters managed by a TableAdapterManager must use the same connection s" +
                        "tring.");
            }
            if (((this._uitgavenTableAdapter != null) 
                        && (this.MatchTableAdapterConnection(this._uitgavenTableAdapter.Connection) == false))) {
                throw new global::System.ArgumentException("All TableAdapters managed by a TableAdapterManager must use the same connection s" +
                        "tring.");
            }
            if (((this._verwerkperiodeTableAdapter != null) 
                        && (this.MatchTableAdapterConnection(this._verwerkperiodeTableAdapter.Connection) == false))) {
                throw new global::System.ArgumentException("All TableAdapters managed by a TableAdapterManager must use the same connection s" +
                        "tring.");
            }
            if (((this._voorraadTableAdapter != null) 
                        && (this.MatchTableAdapterConnection(this._voorraadTableAdapter.Connection) == false))) {
                throw new global::System.ArgumentException("All TableAdapters managed by a TableAdapterManager must use the same connection s" +
                        "tring.");
            }
            global::System.Data.IDbConnection workConnection = this.Connection;
            if ((workConnection == null)) {
                throw new global::System.ApplicationException("TableAdapterManager contains no connection information. Set each TableAdapterMana" +
                        "ger TableAdapter property to a valid TableAdapter instance.");
            }
            bool workConnOpened = false;
            if (((workConnection.State & global::System.Data.ConnectionState.Broken) 
                        == global::System.Data.ConnectionState.Broken)) {
                workConnection.Close();
            }
            if ((workConnection.State == global::System.Data.ConnectionState.Closed)) {
                workConnection.Open();
                workConnOpened = true;
            }
            global::System.Data.IDbTransaction workTransaction = workConnection.BeginTransaction();
            if ((workTransaction == null)) {
                throw new global::System.ApplicationException("The transaction cannot begin. The current data connection does not support transa" +
                        "ctions or the current state is not allowing the transaction to begin.");
            }
            global::System.Collections.Generic.List<global::System.Data.DataRow> allChangedRows = new global::System.Collections.Generic.List<global::System.Data.DataRow>();
            global::System.Collections.Generic.List<global::System.Data.DataRow> allAddedRows = new global::System.Collections.Generic.List<global::System.Data.DataRow>();
            global::System.Collections.Generic.List<global::System.Data.Common.DataAdapter> adaptersWithAcceptChangesDuringUpdate = new global::System.Collections.Generic.List<global::System.Data.Common.DataAdapter>();
            global::System.Collections.Generic.Dictionary<object, global::System.Data.IDbConnection> revertConnections = new global::System.Collections.Generic.Dictionary<object, global::System.Data.IDbConnection>();
            int result = 0;
            global::System.Data.DataSet backupDataSet = null;
            if (this.BackupDataSetBeforeUpdate) {
                backupDataSet = new global::System.Data.DataSet();
                backupDataSet.Merge(dataSet);
            }
            try {
                // ---- Prepare for update -----------
                //
                if ((this._adresgegevensTableAdapter != null)) {
                    revertConnections.Add(this._adresgegevensTableAdapter, this._adresgegevensTableAdapter.Connection);
                    this._adresgegevensTableAdapter.Connection = ((global::System.Data.SQLite.SQLiteConnection)(workConnection));
                    this._adresgegevensTableAdapter.Transaction = ((global::System.Data.SQLite.SQLiteTransaction)(workTransaction));
                    if (this._adresgegevensTableAdapter.Adapter.AcceptChangesDuringUpdate) {
                        this._adresgegevensTableAdapter.Adapter.AcceptChangesDuringUpdate = false;
                        adaptersWithAcceptChangesDuringUpdate.Add(this._adresgegevensTableAdapter.Adapter);
                    }
                }
                if ((this._bankgironrTableAdapter != null)) {
                    revertConnections.Add(this._bankgironrTableAdapter, this._bankgironrTableAdapter.Connection);
                    this._bankgironrTableAdapter.Connection = ((global::System.Data.SQLite.SQLiteConnection)(workConnection));
                    this._bankgironrTableAdapter.Transaction = ((global::System.Data.SQLite.SQLiteTransaction)(workTransaction));
                    if (this._bankgironrTableAdapter.Adapter.AcceptChangesDuringUpdate) {
                        this._bankgironrTableAdapter.Adapter.AcceptChangesDuringUpdate = false;
                        adaptersWithAcceptChangesDuringUpdate.Add(this._bankgironrTableAdapter.Adapter);
                    }
                }
                if ((this._bankregelTableAdapter != null)) {
                    revertConnections.Add(this._bankregelTableAdapter, this._bankregelTableAdapter.Connection);
                    this._bankregelTableAdapter.Connection = ((global::System.Data.SQLite.SQLiteConnection)(workConnection));
                    this._bankregelTableAdapter.Transaction = ((global::System.Data.SQLite.SQLiteTransaction)(workTransaction));
                    if (this._bankregelTableAdapter.Adapter.AcceptChangesDuringUpdate) {
                        this._bankregelTableAdapter.Adapter.AcceptChangesDuringUpdate = false;
                        adaptersWithAcceptChangesDuringUpdate.Add(this._bankregelTableAdapter.Adapter);
                    }
                }
                if ((this._bestellingTableAdapter != null)) {
                    revertConnections.Add(this._bestellingTableAdapter, this._bestellingTableAdapter.Connection);
                    this._bestellingTableAdapter.Connection = ((global::System.Data.SQLite.SQLiteConnection)(workConnection));
                    this._bestellingTableAdapter.Transaction = ((global::System.Data.SQLite.SQLiteTransaction)(workTransaction));
                    if (this._bestellingTableAdapter.Adapter.AcceptChangesDuringUpdate) {
                        this._bestellingTableAdapter.Adapter.AcceptChangesDuringUpdate = false;
                        adaptersWithAcceptChangesDuringUpdate.Add(this._bestellingTableAdapter.Adapter);
                    }
                }
                if ((this._bestelregelTableAdapter != null)) {
                    revertConnections.Add(this._bestelregelTableAdapter, this._bestelregelTableAdapter.Connection);
                    this._bestelregelTableAdapter.Connection = ((global::System.Data.SQLite.SQLiteConnection)(workConnection));
                    this._bestelregelTableAdapter.Transaction = ((global::System.Data.SQLite.SQLiteTransaction)(workTransaction));
                    if (this._bestelregelTableAdapter.Adapter.AcceptChangesDuringUpdate) {
                        this._bestelregelTableAdapter.Adapter.AcceptChangesDuringUpdate = false;
                        adaptersWithAcceptChangesDuringUpdate.Add(this._bestelregelTableAdapter.Adapter);
                    }
                }
                if ((this._component_tekstTableAdapter != null)) {
                    revertConnections.Add(this._component_tekstTableAdapter, this._component_tekstTableAdapter.Connection);
                    this._component_tekstTableAdapter.Connection = ((global::System.Data.SQLite.SQLiteConnection)(workConnection));
                    this._component_tekstTableAdapter.Transaction = ((global::System.Data.SQLite.SQLiteTransaction)(workTransaction));
                    if (this._component_tekstTableAdapter.Adapter.AcceptChangesDuringUpdate) {
                        this._component_tekstTableAdapter.Adapter.AcceptChangesDuringUpdate = false;
                        adaptersWithAcceptChangesDuringUpdate.Add(this._component_tekstTableAdapter.Adapter);
                    }
                }
                if ((this._dbFilesTableAdapter != null)) {
                    revertConnections.Add(this._dbFilesTableAdapter, this._dbFilesTableAdapter.Connection);
                    this._dbFilesTableAdapter.Connection = ((global::System.Data.SQLite.SQLiteConnection)(workConnection));
                    this._dbFilesTableAdapter.Transaction = ((global::System.Data.SQLite.SQLiteTransaction)(workTransaction));
                    if (this._dbFilesTableAdapter.Adapter.AcceptChangesDuringUpdate) {
                        this._dbFilesTableAdapter.Adapter.AcceptChangesDuringUpdate = false;
                        adaptersWithAcceptChangesDuringUpdate.Add(this._dbFilesTableAdapter.Adapter);
                    }
                }
                if ((this._emailTableAdapter != null)) {
                    revertConnections.Add(this._emailTableAdapter, this._emailTableAdapter.Connection);
                    this._emailTableAdapter.Connection = ((global::System.Data.SQLite.SQLiteConnection)(workConnection));
                    this._emailTableAdapter.Transaction = ((global::System.Data.SQLite.SQLiteTransaction)(workTransaction));
                    if (this._emailTableAdapter.Adapter.AcceptChangesDuringUpdate) {
                        this._emailTableAdapter.Adapter.AcceptChangesDuringUpdate = false;
                        adaptersWithAcceptChangesDuringUpdate.Add(this._emailTableAdapter.Adapter);
                    }
                }
                if ((this._emailadresTableAdapter != null)) {
                    revertConnections.Add(this._emailadresTableAdapter, this._emailadresTableAdapter.Connection);
                    this._emailadresTableAdapter.Connection = ((global::System.Data.SQLite.SQLiteConnection)(workConnection));
                    this._emailadresTableAdapter.Transaction = ((global::System.Data.SQLite.SQLiteTransaction)(workTransaction));
                    if (this._emailadresTableAdapter.Adapter.AcceptChangesDuringUpdate) {
                        this._emailadresTableAdapter.Adapter.AcceptChangesDuringUpdate = false;
                        adaptersWithAcceptChangesDuringUpdate.Add(this._emailadresTableAdapter.Adapter);
                    }
                }
                if ((this._gebruikerTableAdapter != null)) {
                    revertConnections.Add(this._gebruikerTableAdapter, this._gebruikerTableAdapter.Connection);
                    this._gebruikerTableAdapter.Connection = ((global::System.Data.SQLite.SQLiteConnection)(workConnection));
                    this._gebruikerTableAdapter.Transaction = ((global::System.Data.SQLite.SQLiteTransaction)(workTransaction));
                    if (this._gebruikerTableAdapter.Adapter.AcceptChangesDuringUpdate) {
                        this._gebruikerTableAdapter.Adapter.AcceptChangesDuringUpdate = false;
                        adaptersWithAcceptChangesDuringUpdate.Add(this._gebruikerTableAdapter.Adapter);
                    }
                }
                if ((this._hoofdcategorieTableAdapter != null)) {
                    revertConnections.Add(this._hoofdcategorieTableAdapter, this._hoofdcategorieTableAdapter.Connection);
                    this._hoofdcategorieTableAdapter.Connection = ((global::System.Data.SQLite.SQLiteConnection)(workConnection));
                    this._hoofdcategorieTableAdapter.Transaction = ((global::System.Data.SQLite.SQLiteTransaction)(workTransaction));
                    if (this._hoofdcategorieTableAdapter.Adapter.AcceptChangesDuringUpdate) {
                        this._hoofdcategorieTableAdapter.Adapter.AcceptChangesDuringUpdate = false;
                        adaptersWithAcceptChangesDuringUpdate.Add(this._hoofdcategorieTableAdapter.Adapter);
                    }
                }
                if ((this._hoofdUitgavesoortTableAdapter != null)) {
                    revertConnections.Add(this._hoofdUitgavesoortTableAdapter, this._hoofdUitgavesoortTableAdapter.Connection);
                    this._hoofdUitgavesoortTableAdapter.Connection = ((global::System.Data.SQLite.SQLiteConnection)(workConnection));
                    this._hoofdUitgavesoortTableAdapter.Transaction = ((global::System.Data.SQLite.SQLiteTransaction)(workTransaction));
                    if (this._hoofdUitgavesoortTableAdapter.Adapter.AcceptChangesDuringUpdate) {
                        this._hoofdUitgavesoortTableAdapter.Adapter.AcceptChangesDuringUpdate = false;
                        adaptersWithAcceptChangesDuringUpdate.Add(this._hoofdUitgavesoortTableAdapter.Adapter);
                    }
                }
                if ((this._instellingenTableAdapter != null)) {
                    revertConnections.Add(this._instellingenTableAdapter, this._instellingenTableAdapter.Connection);
                    this._instellingenTableAdapter.Connection = ((global::System.Data.SQLite.SQLiteConnection)(workConnection));
                    this._instellingenTableAdapter.Transaction = ((global::System.Data.SQLite.SQLiteTransaction)(workTransaction));
                    if (this._instellingenTableAdapter.Adapter.AcceptChangesDuringUpdate) {
                        this._instellingenTableAdapter.Adapter.AcceptChangesDuringUpdate = false;
                        adaptersWithAcceptChangesDuringUpdate.Add(this._instellingenTableAdapter.Adapter);
                    }
                }
                if ((this._jaargegevensTableAdapter != null)) {
                    revertConnections.Add(this._jaargegevensTableAdapter, this._jaargegevensTableAdapter.Connection);
                    this._jaargegevensTableAdapter.Connection = ((global::System.Data.SQLite.SQLiteConnection)(workConnection));
                    this._jaargegevensTableAdapter.Transaction = ((global::System.Data.SQLite.SQLiteTransaction)(workTransaction));
                    if (this._jaargegevensTableAdapter.Adapter.AcceptChangesDuringUpdate) {
                        this._jaargegevensTableAdapter.Adapter.AcceptChangesDuringUpdate = false;
                        adaptersWithAcceptChangesDuringUpdate.Add(this._jaargegevensTableAdapter.Adapter);
                    }
                }
                if ((this._jaarsaldoTableAdapter != null)) {
                    revertConnections.Add(this._jaarsaldoTableAdapter, this._jaarsaldoTableAdapter.Connection);
                    this._jaarsaldoTableAdapter.Connection = ((global::System.Data.SQLite.SQLiteConnection)(workConnection));
                    this._jaarsaldoTableAdapter.Transaction = ((global::System.Data.SQLite.SQLiteTransaction)(workTransaction));
                    if (this._jaarsaldoTableAdapter.Adapter.AcceptChangesDuringUpdate) {
                        this._jaarsaldoTableAdapter.Adapter.AcceptChangesDuringUpdate = false;
                        adaptersWithAcceptChangesDuringUpdate.Add(this._jaarsaldoTableAdapter.Adapter);
                    }
                }
                if ((this._klant_BegunstigdeTableAdapter != null)) {
                    revertConnections.Add(this._klant_BegunstigdeTableAdapter, this._klant_BegunstigdeTableAdapter.Connection);
                    this._klant_BegunstigdeTableAdapter.Connection = ((global::System.Data.SQLite.SQLiteConnection)(workConnection));
                    this._klant_BegunstigdeTableAdapter.Transaction = ((global::System.Data.SQLite.SQLiteTransaction)(workTransaction));
                    if (this._klant_BegunstigdeTableAdapter.Adapter.AcceptChangesDuringUpdate) {
                        this._klant_BegunstigdeTableAdapter.Adapter.AcceptChangesDuringUpdate = false;
                        adaptersWithAcceptChangesDuringUpdate.Add(this._klant_BegunstigdeTableAdapter.Adapter);
                    }
                }
                if ((this._licentie_controleTableAdapter != null)) {
                    revertConnections.Add(this._licentie_controleTableAdapter, this._licentie_controleTableAdapter.Connection);
                    this._licentie_controleTableAdapter.Connection = ((global::System.Data.SQLite.SQLiteConnection)(workConnection));
                    this._licentie_controleTableAdapter.Transaction = ((global::System.Data.SQLite.SQLiteTransaction)(workTransaction));
                    if (this._licentie_controleTableAdapter.Adapter.AcceptChangesDuringUpdate) {
                        this._licentie_controleTableAdapter.Adapter.AcceptChangesDuringUpdate = false;
                        adaptersWithAcceptChangesDuringUpdate.Add(this._licentie_controleTableAdapter.Adapter);
                    }
                }
                if ((this._logTableAdapter != null)) {
                    revertConnections.Add(this._logTableAdapter, this._logTableAdapter.Connection);
                    this._logTableAdapter.Connection = ((global::System.Data.SQLite.SQLiteConnection)(workConnection));
                    this._logTableAdapter.Transaction = ((global::System.Data.SQLite.SQLiteTransaction)(workTransaction));
                    if (this._logTableAdapter.Adapter.AcceptChangesDuringUpdate) {
                        this._logTableAdapter.Adapter.AcceptChangesDuringUpdate = false;
                        adaptersWithAcceptChangesDuringUpdate.Add(this._logTableAdapter.Adapter);
                    }
                }
                if ((this._productTableAdapter != null)) {
                    revertConnections.Add(this._productTableAdapter, this._productTableAdapter.Connection);
                    this._productTableAdapter.Connection = ((global::System.Data.SQLite.SQLiteConnection)(workConnection));
                    this._productTableAdapter.Transaction = ((global::System.Data.SQLite.SQLiteTransaction)(workTransaction));
                    if (this._productTableAdapter.Adapter.AcceptChangesDuringUpdate) {
                        this._productTableAdapter.Adapter.AcceptChangesDuringUpdate = false;
                        adaptersWithAcceptChangesDuringUpdate.Add(this._productTableAdapter.Adapter);
                    }
                }
                if ((this._programerrorTableAdapter != null)) {
                    revertConnections.Add(this._programerrorTableAdapter, this._programerrorTableAdapter.Connection);
                    this._programerrorTableAdapter.Connection = ((global::System.Data.SQLite.SQLiteConnection)(workConnection));
                    this._programerrorTableAdapter.Transaction = ((global::System.Data.SQLite.SQLiteTransaction)(workTransaction));
                    if (this._programerrorTableAdapter.Adapter.AcceptChangesDuringUpdate) {
                        this._programerrorTableAdapter.Adapter.AcceptChangesDuringUpdate = false;
                        adaptersWithAcceptChangesDuringUpdate.Add(this._programerrorTableAdapter.Adapter);
                    }
                }
                if ((this._saldostandTableAdapter != null)) {
                    revertConnections.Add(this._saldostandTableAdapter, this._saldostandTableAdapter.Connection);
                    this._saldostandTableAdapter.Connection = ((global::System.Data.SQLite.SQLiteConnection)(workConnection));
                    this._saldostandTableAdapter.Transaction = ((global::System.Data.SQLite.SQLiteTransaction)(workTransaction));
                    if (this._saldostandTableAdapter.Adapter.AcceptChangesDuringUpdate) {
                        this._saldostandTableAdapter.Adapter.AcceptChangesDuringUpdate = false;
                        adaptersWithAcceptChangesDuringUpdate.Add(this._saldostandTableAdapter.Adapter);
                    }
                }
                if ((this._statusTableAdapter != null)) {
                    revertConnections.Add(this._statusTableAdapter, this._statusTableAdapter.Connection);
                    this._statusTableAdapter.Connection = ((global::System.Data.SQLite.SQLiteConnection)(workConnection));
                    this._statusTableAdapter.Transaction = ((global::System.Data.SQLite.SQLiteTransaction)(workTransaction));
                    if (this._statusTableAdapter.Adapter.AcceptChangesDuringUpdate) {
                        this._statusTableAdapter.Adapter.AcceptChangesDuringUpdate = false;
                        adaptersWithAcceptChangesDuringUpdate.Add(this._statusTableAdapter.Adapter);
                    }
                }
                if ((this._subcategorieTableAdapter != null)) {
                    revertConnections.Add(this._subcategorieTableAdapter, this._subcategorieTableAdapter.Connection);
                    this._subcategorieTableAdapter.Connection = ((global::System.Data.SQLite.SQLiteConnection)(workConnection));
                    this._subcategorieTableAdapter.Transaction = ((global::System.Data.SQLite.SQLiteTransaction)(workTransaction));
                    if (this._subcategorieTableAdapter.Adapter.AcceptChangesDuringUpdate) {
                        this._subcategorieTableAdapter.Adapter.AcceptChangesDuringUpdate = false;
                        adaptersWithAcceptChangesDuringUpdate.Add(this._subcategorieTableAdapter.Adapter);
                    }
                }
                if ((this._subUitgavesoortTableAdapter != null)) {
                    revertConnections.Add(this._subUitgavesoortTableAdapter, this._subUitgavesoortTableAdapter.Connection);
                    this._subUitgavesoortTableAdapter.Connection = ((global::System.Data.SQLite.SQLiteConnection)(workConnection));
                    this._subUitgavesoortTableAdapter.Transaction = ((global::System.Data.SQLite.SQLiteTransaction)(workTransaction));
                    if (this._subUitgavesoortTableAdapter.Adapter.AcceptChangesDuringUpdate) {
                        this._subUitgavesoortTableAdapter.Adapter.AcceptChangesDuringUpdate = false;
                        adaptersWithAcceptChangesDuringUpdate.Add(this._subUitgavesoortTableAdapter.Adapter);
                    }
                }
                if ((this._telefoonnrTableAdapter != null)) {
                    revertConnections.Add(this._telefoonnrTableAdapter, this._telefoonnrTableAdapter.Connection);
                    this._telefoonnrTableAdapter.Connection = ((global::System.Data.SQLite.SQLiteConnection)(workConnection));
                    this._telefoonnrTableAdapter.Transaction = ((global::System.Data.SQLite.SQLiteTransaction)(workTransaction));
                    if (this._telefoonnrTableAdapter.Adapter.AcceptChangesDuringUpdate) {
                        this._telefoonnrTableAdapter.Adapter.AcceptChangesDuringUpdate = false;
                        adaptersWithAcceptChangesDuringUpdate.Add(this._telefoonnrTableAdapter.Adapter);
                    }
                }
                if ((this._uitgavenTableAdapter != null)) {
                    revertConnections.Add(this._uitgavenTableAdapter, this._uitgavenTableAdapter.Connection);
                    this._uitgavenTableAdapter.Connection = ((global::System.Data.SQLite.SQLiteConnection)(workConnection));
                    this._uitgavenTableAdapter.Transaction = ((global::System.Data.SQLite.SQLiteTransaction)(workTransaction));
                    if (this._uitgavenTableAdapter.Adapter.AcceptChangesDuringUpdate) {
                        this._uitgavenTableAdapter.Adapter.AcceptChangesDuringUpdate = false;
                        adaptersWithAcceptChangesDuringUpdate.Add(this._uitgavenTableAdapter.Adapter);
                    }
                }
                if ((this._verwerkperiodeTableAdapter != null)) {
                    revertConnections.Add(this._verwerkperiodeTableAdapter, this._verwerkperiodeTableAdapter.Connection);
                    this._verwerkperiodeTableAdapter.Connection = ((global::System.Data.SQLite.SQLiteConnection)(workConnection));
                    this._verwerkperiodeTableAdapter.Transaction = ((global::System.Data.SQLite.SQLiteTransaction)(workTransaction));
                    if (this._verwerkperiodeTableAdapter.Adapter.AcceptChangesDuringUpdate) {
                        this._verwerkperiodeTableAdapter.Adapter.AcceptChangesDuringUpdate = false;
                        adaptersWithAcceptChangesDuringUpdate.Add(this._verwerkperiodeTableAdapter.Adapter);
                    }
                }
                if ((this._voorraadTableAdapter != null)) {
                    revertConnections.Add(this._voorraadTableAdapter, this._voorraadTableAdapter.Connection);
                    this._voorraadTableAdapter.Connection = ((global::System.Data.SQLite.SQLiteConnection)(workConnection));
                    this._voorraadTableAdapter.Transaction = ((global::System.Data.SQLite.SQLiteTransaction)(workTransaction));
                    if (this._voorraadTableAdapter.Adapter.AcceptChangesDuringUpdate) {
                        this._voorraadTableAdapter.Adapter.AcceptChangesDuringUpdate = false;
                        adaptersWithAcceptChangesDuringUpdate.Add(this._voorraadTableAdapter.Adapter);
                    }
                }
                // 
                //---- Perform updates -----------
                //
                if ((this.UpdateOrder == UpdateOrderOption.UpdateInsertDelete)) {
                    result = (result + this.UpdateUpdatedRows(dataSet, allChangedRows, allAddedRows));
                    result = (result + this.UpdateInsertedRows(dataSet, allAddedRows));
                }
                else {
                    result = (result + this.UpdateInsertedRows(dataSet, allAddedRows));
                    result = (result + this.UpdateUpdatedRows(dataSet, allChangedRows, allAddedRows));
                }
                result = (result + this.UpdateDeletedRows(dataSet, allChangedRows));
                // 
                //---- Commit updates -----------
                //
                workTransaction.Commit();
                if ((0 < allAddedRows.Count)) {
                    global::System.Data.DataRow[] rows = new System.Data.DataRow[allAddedRows.Count];
                    allAddedRows.CopyTo(rows);
                    for (int i = 0; (i < rows.Length); i = (i + 1)) {
                        global::System.Data.DataRow row = rows[i];
                        row.AcceptChanges();
                    }
                }
                if ((0 < allChangedRows.Count)) {
                    global::System.Data.DataRow[] rows = new System.Data.DataRow[allChangedRows.Count];
                    allChangedRows.CopyTo(rows);
                    for (int i = 0; (i < rows.Length); i = (i + 1)) {
                        global::System.Data.DataRow row = rows[i];
                        row.AcceptChanges();
                    }
                }
            }
            catch (global::System.Exception ex) {
                workTransaction.Rollback();
                // ---- Restore the dataset -----------
                if (this.BackupDataSetBeforeUpdate) {
                    global::System.Diagnostics.Debug.Assert((backupDataSet != null));
                    dataSet.Clear();
                    dataSet.Merge(backupDataSet);
                }
                else {
                    if ((0 < allAddedRows.Count)) {
                        global::System.Data.DataRow[] rows = new System.Data.DataRow[allAddedRows.Count];
                        allAddedRows.CopyTo(rows);
                        for (int i = 0; (i < rows.Length); i = (i + 1)) {
                            global::System.Data.DataRow row = rows[i];
                            row.AcceptChanges();
                            row.SetAdded();
                        }
                    }
                }
                throw ex;
            }
            finally {
                if (workConnOpened) {
                    workConnection.Close();
                }
                if ((this._adresgegevensTableAdapter != null)) {
                    this._adresgegevensTableAdapter.Connection = ((global::System.Data.SQLite.SQLiteConnection)(revertConnections[this._adresgegevensTableAdapter]));
                    this._adresgegevensTableAdapter.Transaction = null;
                }
                if ((this._bankgironrTableAdapter != null)) {
                    this._bankgironrTableAdapter.Connection = ((global::System.Data.SQLite.SQLiteConnection)(revertConnections[this._bankgironrTableAdapter]));
                    this._bankgironrTableAdapter.Transaction = null;
                }
                if ((this._bankregelTableAdapter != null)) {
                    this._bankregelTableAdapter.Connection = ((global::System.Data.SQLite.SQLiteConnection)(revertConnections[this._bankregelTableAdapter]));
                    this._bankregelTableAdapter.Transaction = null;
                }
                if ((this._bestellingTableAdapter != null)) {
                    this._bestellingTableAdapter.Connection = ((global::System.Data.SQLite.SQLiteConnection)(revertConnections[this._bestellingTableAdapter]));
                    this._bestellingTableAdapter.Transaction = null;
                }
                if ((this._bestelregelTableAdapter != null)) {
                    this._bestelregelTableAdapter.Connection = ((global::System.Data.SQLite.SQLiteConnection)(revertConnections[this._bestelregelTableAdapter]));
                    this._bestelregelTableAdapter.Transaction = null;
                }
                if ((this._component_tekstTableAdapter != null)) {
                    this._component_tekstTableAdapter.Connection = ((global::System.Data.SQLite.SQLiteConnection)(revertConnections[this._component_tekstTableAdapter]));
                    this._component_tekstTableAdapter.Transaction = null;
                }
                if ((this._dbFilesTableAdapter != null)) {
                    this._dbFilesTableAdapter.Connection = ((global::System.Data.SQLite.SQLiteConnection)(revertConnections[this._dbFilesTableAdapter]));
                    this._dbFilesTableAdapter.Transaction = null;
                }
                if ((this._emailTableAdapter != null)) {
                    this._emailTableAdapter.Connection = ((global::System.Data.SQLite.SQLiteConnection)(revertConnections[this._emailTableAdapter]));
                    this._emailTableAdapter.Transaction = null;
                }
                if ((this._emailadresTableAdapter != null)) {
                    this._emailadresTableAdapter.Connection = ((global::System.Data.SQLite.SQLiteConnection)(revertConnections[this._emailadresTableAdapter]));
                    this._emailadresTableAdapter.Transaction = null;
                }
                if ((this._gebruikerTableAdapter != null)) {
                    this._gebruikerTableAdapter.Connection = ((global::System.Data.SQLite.SQLiteConnection)(revertConnections[this._gebruikerTableAdapter]));
                    this._gebruikerTableAdapter.Transaction = null;
                }
                if ((this._hoofdcategorieTableAdapter != null)) {
                    this._hoofdcategorieTableAdapter.Connection = ((global::System.Data.SQLite.SQLiteConnection)(revertConnections[this._hoofdcategorieTableAdapter]));
                    this._hoofdcategorieTableAdapter.Transaction = null;
                }
                if ((this._hoofdUitgavesoortTableAdapter != null)) {
                    this._hoofdUitgavesoortTableAdapter.Connection = ((global::System.Data.SQLite.SQLiteConnection)(revertConnections[this._hoofdUitgavesoortTableAdapter]));
                    this._hoofdUitgavesoortTableAdapter.Transaction = null;
                }
                if ((this._instellingenTableAdapter != null)) {
                    this._instellingenTableAdapter.Connection = ((global::System.Data.SQLite.SQLiteConnection)(revertConnections[this._instellingenTableAdapter]));
                    this._instellingenTableAdapter.Transaction = null;
                }
                if ((this._jaargegevensTableAdapter != null)) {
                    this._jaargegevensTableAdapter.Connection = ((global::System.Data.SQLite.SQLiteConnection)(revertConnections[this._jaargegevensTableAdapter]));
                    this._jaargegevensTableAdapter.Transaction = null;
                }
                if ((this._jaarsaldoTableAdapter != null)) {
                    this._jaarsaldoTableAdapter.Connection = ((global::System.Data.SQLite.SQLiteConnection)(revertConnections[this._jaarsaldoTableAdapter]));
                    this._jaarsaldoTableAdapter.Transaction = null;
                }
                if ((this._klant_BegunstigdeTableAdapter != null)) {
                    this._klant_BegunstigdeTableAdapter.Connection = ((global::System.Data.SQLite.SQLiteConnection)(revertConnections[this._klant_BegunstigdeTableAdapter]));
                    this._klant_BegunstigdeTableAdapter.Transaction = null;
                }
                if ((this._licentie_controleTableAdapter != null)) {
                    this._licentie_controleTableAdapter.Connection = ((global::System.Data.SQLite.SQLiteConnection)(revertConnections[this._licentie_controleTableAdapter]));
                    this._licentie_controleTableAdapter.Transaction = null;
                }
                if ((this._logTableAdapter != null)) {
                    this._logTableAdapter.Connection = ((global::System.Data.SQLite.SQLiteConnection)(revertConnections[this._logTableAdapter]));
                    this._logTableAdapter.Transaction = null;
                }
                if ((this._productTableAdapter != null)) {
                    this._productTableAdapter.Connection = ((global::System.Data.SQLite.SQLiteConnection)(revertConnections[this._productTableAdapter]));
                    this._productTableAdapter.Transaction = null;
                }
                if ((this._programerrorTableAdapter != null)) {
                    this._programerrorTableAdapter.Connection = ((global::System.Data.SQLite.SQLiteConnection)(revertConnections[this._programerrorTableAdapter]));
                    this._programerrorTableAdapter.Transaction = null;
                }
                if ((this._saldostandTableAdapter != null)) {
                    this._saldostandTableAdapter.Connection = ((global::System.Data.SQLite.SQLiteConnection)(revertConnections[this._saldostandTableAdapter]));
                    this._saldostandTableAdapter.Transaction = null;
                }
                if ((this._statusTableAdapter != null)) {
                    this._statusTableAdapter.Connection = ((global::System.Data.SQLite.SQLiteConnection)(revertConnections[this._statusTableAdapter]));
                    this._statusTableAdapter.Transaction = null;
                }
                if ((this._subcategorieTableAdapter != null)) {
                    this._subcategorieTableAdapter.Connection = ((global::System.Data.SQLite.SQLiteConnection)(revertConnections[this._subcategorieTableAdapter]));
                    this._subcategorieTableAdapter.Transaction = null;
                }
                if ((this._subUitgavesoortTableAdapter != null)) {
                    this._subUitgavesoortTableAdapter.Connection = ((global::System.Data.SQLite.SQLiteConnection)(revertConnections[this._subUitgavesoortTableAdapter]));
                    this._subUitgavesoortTableAdapter.Transaction = null;
                }
                if ((this._telefoonnrTableAdapter != null)) {
                    this._telefoonnrTableAdapter.Connection = ((global::System.Data.SQLite.SQLiteConnection)(revertConnections[this._telefoonnrTableAdapter]));
                    this._telefoonnrTableAdapter.Transaction = null;
                }
                if ((this._uitgavenTableAdapter != null)) {
                    this._uitgavenTableAdapter.Connection = ((global::System.Data.SQLite.SQLiteConnection)(revertConnections[this._uitgavenTableAdapter]));
                    this._uitgavenTableAdapter.Transaction = null;
                }
                if ((this._verwerkperiodeTableAdapter != null)) {
                    this._verwerkperiodeTableAdapter.Connection = ((global::System.Data.SQLite.SQLiteConnection)(revertConnections[this._verwerkperiodeTableAdapter]));
                    this._verwerkperiodeTableAdapter.Transaction = null;
                }
                if ((this._voorraadTableAdapter != null)) {
                    this._voorraadTableAdapter.Connection = ((global::System.Data.SQLite.SQLiteConnection)(revertConnections[this._voorraadTableAdapter]));
                    this._voorraadTableAdapter.Transaction = null;
                }
                if ((0 < adaptersWithAcceptChangesDuringUpdate.Count)) {
                    global::System.Data.Common.DataAdapter[] adapters = new System.Data.Common.DataAdapter[adaptersWithAcceptChangesDuringUpdate.Count];
                    adaptersWithAcceptChangesDuringUpdate.CopyTo(adapters);
                    for (int i = 0; (i < adapters.Length); i = (i + 1)) {
                        global::System.Data.Common.DataAdapter adapter = adapters[i];
                        adapter.AcceptChangesDuringUpdate = true;
                    }
                }
            }
            return result;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected virtual void SortSelfReferenceRows(global::System.Data.DataRow[] rows, global::System.Data.DataRelation relation, bool childFirst) {
            global::System.Array.Sort<global::System.Data.DataRow>(rows, new SelfReferenceComparer(relation, childFirst));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected virtual bool MatchTableAdapterConnection(global::System.Data.IDbConnection inputConnection) {
            if ((this._connection != null)) {
                return true;
            }
            if (((this.Connection == null) 
                        || (inputConnection == null))) {
                return true;
            }
            if (string.Equals(this.Connection.ConnectionString, inputConnection.ConnectionString, global::System.StringComparison.Ordinal)) {
                return true;
            }
            return false;
        }
        
        /// <summary>
        ///Update Order Option
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public enum UpdateOrderOption {
            
            InsertUpdateDelete = 0,
            
            UpdateInsertDelete = 1,
        }
        
        /// <summary>
        ///Used to sort self-referenced table's rows
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private class SelfReferenceComparer : object, global::System.Collections.Generic.IComparer<global::System.Data.DataRow> {
            
            private global::System.Data.DataRelation _relation;
            
            private int _childFirst;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal SelfReferenceComparer(global::System.Data.DataRelation relation, bool childFirst) {
                this._relation = relation;
                if (childFirst) {
                    this._childFirst = -1;
                }
                else {
                    this._childFirst = 1;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            private global::System.Data.DataRow GetRoot(global::System.Data.DataRow row, out int distance) {
                global::System.Diagnostics.Debug.Assert((row != null));
                global::System.Data.DataRow root = row;
                distance = 0;

                global::System.Collections.Generic.IDictionary<global::System.Data.DataRow, global::System.Data.DataRow> traversedRows = new global::System.Collections.Generic.Dictionary<global::System.Data.DataRow, global::System.Data.DataRow>();
                traversedRows[row] = row;

                global::System.Data.DataRow parent = row.GetParentRow(this._relation, global::System.Data.DataRowVersion.Default);
                for (
                ; ((parent != null) 
                            && (traversedRows.ContainsKey(parent) == false)); 
                ) {
                    distance = (distance + 1);
                    root = parent;
                    traversedRows[parent] = parent;
                    parent = parent.GetParentRow(this._relation, global::System.Data.DataRowVersion.Default);
                }

                if ((distance == 0)) {
                    traversedRows.Clear();
                    traversedRows[row] = row;
                    parent = row.GetParentRow(this._relation, global::System.Data.DataRowVersion.Original);
                    for (
                    ; ((parent != null) 
                                && (traversedRows.ContainsKey(parent) == false)); 
                    ) {
                        distance = (distance + 1);
                        root = parent;
                        traversedRows[parent] = parent;
                        parent = parent.GetParentRow(this._relation, global::System.Data.DataRowVersion.Original);
                    }
                }

                return root;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int Compare(global::System.Data.DataRow row1, global::System.Data.DataRow row2) {
                if (object.ReferenceEquals(row1, row2)) {
                    return 0;
                }
                if ((row1 == null)) {
                    return -1;
                }
                if ((row2 == null)) {
                    return 1;
                }

                int distance1 = 0;
                global::System.Data.DataRow root1 = this.GetRoot(row1, out distance1);

                int distance2 = 0;
                global::System.Data.DataRow root2 = this.GetRoot(row2, out distance2);

                if (object.ReferenceEquals(root1, root2)) {
                    return (this._childFirst * distance1.CompareTo(distance2));
                }
                else {
                    global::System.Diagnostics.Debug.Assert(((root1.Table != null) 
                                    && (root2.Table != null)));
                    if ((root1.Table.Rows.IndexOf(root1) < root2.Table.Rows.IndexOf(root2))) {
                        return -1;
                    }
                    else {
                        return 1;
                    }
                }
            }
        }
    }
}

#pragma warning restore 1591